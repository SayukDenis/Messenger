{"version":3,"names":["NativeReanimatedModule","shouldBeUseWeb","makeShareableCloneOnUIRecursive","makeShareableCloneRecursive","registerShareableMapping","runOnUI","valueSetter","SHOULD_BE_USE_WEB","makeUIMutable","initial","syncDataHolder","listeners","Map","value","self","newValue","_value","_updateDataSynchronously","forEach","listener","modify","modifier","forceUpdate","arguments","length","undefined","addListener","id","set","removeListener","delete","_animation","_isReanimatedSharedValue","makeMutable","oneWayReadsOnly","makeSynchronizedDataHolder","handle","__init","mutable","getDataSynchronously","Error","makeRemote"],"sources":["mutables.ts"],"sourcesContent":["'use strict';\nimport NativeReanimatedModule from './NativeReanimated';\nimport { shouldBeUseWeb } from './PlatformChecker';\nimport type { SharedValue, ShareableSyncDataHolderRef } from './commonTypes';\nimport {\n  makeShareableCloneOnUIRecursive,\n  makeShareableCloneRecursive,\n  registerShareableMapping,\n} from './shareables';\nimport { runOnUI } from './threads';\nimport { valueSetter } from './valueSetter';\n\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\n\nexport function makeUIMutable<T>(\n  initial: T,\n  syncDataHolder?: ShareableSyncDataHolderRef<T>\n) {\n  'worklet';\n\n  const listeners = new Map();\n  let value = initial;\n\n  const self = {\n    set value(newValue) {\n      valueSetter(self, newValue);\n    },\n    get value() {\n      return value;\n    },\n    /**\n     * _value prop should only be accessed by the valueSetter implementation\n     * which may make the decision about updating the mutable value depending\n     * on the provided new value. All other places should only attempt to modify\n     * the mutable by assigning to value prop directly.\n     */\n    set _value(newValue: T) {\n      value = newValue;\n      if (syncDataHolder) {\n        _updateDataSynchronously(\n          syncDataHolder,\n          makeShareableCloneOnUIRecursive(newValue)\n        );\n      }\n      listeners.forEach((listener) => {\n        listener(newValue);\n      });\n    },\n    get _value(): T {\n      return value;\n    },\n    modify: (modifier?: (value: T) => T, forceUpdate = true) => {\n      valueSetter(\n        self,\n        modifier !== undefined ? modifier(value) : value,\n        forceUpdate\n      );\n    },\n    addListener: (id: number, listener: (newValue: T) => void) => {\n      listeners.set(id, listener);\n    },\n    removeListener: (id: number) => {\n      listeners.delete(id);\n    },\n    _animation: null,\n    _isReanimatedSharedValue: true,\n  };\n  return self;\n}\n\nexport function makeMutable<T>(\n  initial: T,\n  oneWayReadsOnly = false\n): SharedValue<T> {\n  let value: T = initial;\n  let syncDataHolder: ShareableSyncDataHolderRef<T> | undefined;\n  if (!oneWayReadsOnly && !SHOULD_BE_USE_WEB) {\n    // updates are always synchronous when running on web or in Jest environment\n    syncDataHolder = NativeReanimatedModule.makeSynchronizedDataHolder(\n      makeShareableCloneRecursive(value)\n    );\n    registerShareableMapping(syncDataHolder);\n  }\n  const handle = makeShareableCloneRecursive({\n    __init: () => {\n      'worklet';\n      return makeUIMutable(initial, syncDataHolder);\n    },\n  });\n  // listeners can only work on JS thread on Web and jest environments\n  const listeners = SHOULD_BE_USE_WEB ? new Map() : undefined;\n  const mutable = {\n    set value(newValue) {\n      if (SHOULD_BE_USE_WEB) {\n        valueSetter(mutable, newValue);\n      } else {\n        runOnUI(() => {\n          mutable.value = newValue;\n        })();\n      }\n    },\n    get value() {\n      if (syncDataHolder) {\n        return NativeReanimatedModule.getDataSynchronously(syncDataHolder);\n      }\n      return value;\n    },\n    set _value(newValue: T) {\n      if (!SHOULD_BE_USE_WEB) {\n        throw new Error(\n          '[Reanimated] Setting `_value` directly is only possible on the UI runtime.'\n        );\n      }\n      value = newValue;\n      listeners!.forEach((listener) => {\n        listener(newValue);\n      });\n    },\n    get _value(): T {\n      if (!SHOULD_BE_USE_WEB) {\n        throw new Error(\n          '[Reanimated] Reading from `_value` directly is only possible on the UI runtime.'\n        );\n      }\n      return value;\n    },\n    modify: (modifier?: (value: T) => T, forceUpdate = true) => {\n      if (!SHOULD_BE_USE_WEB) {\n        runOnUI(() => {\n          mutable.modify(modifier, forceUpdate);\n        })();\n      } else {\n        valueSetter(\n          mutable,\n          modifier !== undefined ? modifier(mutable.value) : mutable.value,\n          forceUpdate\n        );\n      }\n    },\n    addListener: (id: number, listener: (value: T) => void) => {\n      if (!SHOULD_BE_USE_WEB) {\n        throw new Error(\n          '[Reanimated] Adding listeners is only possible on the UI runtime.'\n        );\n      }\n      listeners!.set(id, listener);\n    },\n    removeListener: (id: number) => {\n      if (!SHOULD_BE_USE_WEB) {\n        throw new Error(\n          '[Reanimated] Removing listeners is only possible on the UI runtime.'\n        );\n      }\n      listeners!.delete(id);\n    },\n    _isReanimatedSharedValue: true,\n  };\n  registerShareableMapping(mutable, handle);\n  return mutable;\n}\n\nexport function makeRemote<T extends object>(initial: T = {} as T): T {\n  const handle = makeShareableCloneRecursive({\n    __init: () => {\n      'worklet';\n      return initial;\n    },\n  });\n  registerShareableMapping(initial, handle);\n  return initial;\n}\n"],"mappings":"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"}