{"version":3,"names":["defineAnimation","getReduceMotionForAnimation","initialCalculations","calculateNewMassToMatchDuration","underDampedSpringCalculations","criticallyDampedSpringCalculations","isAnimationTerminatingCalculation","checkIfConfigIsValid","withSpring","toValue","userConfig","callback","defaultConfig","damping","mass","stiffness","overshootClamping","restDisplacementThreshold","restSpeedThreshold","velocity","duration","dampingRatio","reduceMotion","undefined","config","useDuration","skipAnimation","springOnFrame","animation","now","startTimestamp","current","timeFromStart","lastTimestamp","deltaTime","Math","min","t","v0","x0","zeta","omega0","omega1","position","newPosition","newVelocity","isOvershooting","isVelocity","isDisplacement","springIsNotInMove","isTriggeredTwice","previousAnimation","onStart","value","startValue","triggeredTwice","Number","actualDuration","onFrame"],"sources":["spring.ts"],"sourcesContent":["'use strict';\nimport { defineAnimation, getReduceMotionForAnimation } from './util';\nimport type {\n  Animation,\n  AnimationCallback,\n  AnimatableValue,\n  Timestamp,\n} from '../commonTypes';\nimport type {\n  SpringConfig,\n  SpringAnimation,\n  InnerSpringAnimation,\n  SpringConfigInner,\n  DefaultSpringConfig,\n} from './springUtils';\nimport {\n  initialCalculations,\n  calculateNewMassToMatchDuration,\n  underDampedSpringCalculations,\n  criticallyDampedSpringCalculations,\n  isAnimationTerminatingCalculation,\n  checkIfConfigIsValid,\n} from './springUtils';\n\n// TODO TYPESCRIPT This is a temporary type to get rid of .d.ts file.\ntype withSpringType = <T extends AnimatableValue>(\n  toValue: T,\n  userConfig?: SpringConfig,\n  callback?: AnimationCallback\n) => T;\n\n/**\n * Lets you create spring-based animations.\n *\n * @param toValue - the value at which the animation will come to rest - {@link AnimatableValue}\n * @param config - the spring animation configuration - {@link SpringConfig}\n * @param callback - a function called on animation complete - {@link AnimationCallback}\n * @returns an [animation object](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animation-object) which holds the current state of the animation\n * @see https://docs.swmansion.com/react-native-reanimated/docs/animations/withSpring\n */\nexport const withSpring = ((\n  toValue: AnimatableValue,\n  userConfig?: SpringConfig,\n  callback?: AnimationCallback\n): Animation<SpringAnimation> => {\n  'worklet';\n\n  return defineAnimation<SpringAnimation>(toValue, () => {\n    'worklet';\n    const defaultConfig: DefaultSpringConfig = {\n      damping: 10,\n      mass: 1,\n      stiffness: 100,\n      overshootClamping: false,\n      restDisplacementThreshold: 0.01,\n      restSpeedThreshold: 2,\n      velocity: 0,\n      duration: 2000,\n      dampingRatio: 0.5,\n      reduceMotion: undefined,\n    } as const;\n\n    const config: DefaultSpringConfig & SpringConfigInner = {\n      ...defaultConfig,\n      ...userConfig,\n      useDuration: !!(userConfig?.duration || userConfig?.dampingRatio),\n      skipAnimation: false,\n    };\n\n    config.skipAnimation = !checkIfConfigIsValid(config);\n\n    if (config.duration === 0) {\n      config.skipAnimation = true;\n    }\n\n    function springOnFrame(\n      animation: InnerSpringAnimation,\n      now: Timestamp\n    ): boolean {\n      const { toValue, startTimestamp, current } = animation;\n\n      const timeFromStart = now - startTimestamp;\n\n      if (config.useDuration && timeFromStart >= config.duration) {\n        animation.current = toValue;\n        // clear lastTimestamp to avoid using stale value by the next spring animation that starts after this one\n        animation.lastTimestamp = 0;\n        return true;\n      }\n\n      if (config.skipAnimation) {\n        animation.current = toValue;\n        animation.lastTimestamp = 0;\n        return true;\n      }\n      const { lastTimestamp, velocity } = animation;\n\n      const deltaTime = Math.min(now - lastTimestamp, 64);\n      animation.lastTimestamp = now;\n\n      const t = deltaTime / 1000;\n      const v0 = -velocity;\n      const x0 = toValue - current;\n\n      const { zeta, omega0, omega1 } = animation;\n\n      const { position: newPosition, velocity: newVelocity } =\n        zeta < 1\n          ? underDampedSpringCalculations(animation, {\n              zeta,\n              v0,\n              x0,\n              omega0,\n              omega1,\n              t,\n            })\n          : criticallyDampedSpringCalculations(animation, {\n              v0,\n              x0,\n              omega0,\n              t,\n            });\n\n      animation.current = newPosition;\n      animation.velocity = newVelocity;\n\n      const { isOvershooting, isVelocity, isDisplacement } =\n        isAnimationTerminatingCalculation(animation, config);\n\n      const springIsNotInMove =\n        isOvershooting || (isVelocity && isDisplacement);\n\n      if (!config.useDuration && springIsNotInMove) {\n        animation.velocity = 0;\n        animation.current = toValue;\n        // clear lastTimestamp to avoid using stale value by the next spring animation that starts after this one\n        animation.lastTimestamp = 0;\n        return true;\n      }\n\n      return false;\n    }\n\n    function isTriggeredTwice(\n      previousAnimation: SpringAnimation | undefined,\n      animation: SpringAnimation\n    ) {\n      return (\n        previousAnimation?.lastTimestamp &&\n        previousAnimation?.startTimestamp &&\n        previousAnimation?.toValue === animation.toValue &&\n        previousAnimation?.duration === animation.duration &&\n        previousAnimation?.dampingRatio === animation.dampingRatio\n      );\n    }\n\n    function onStart(\n      animation: SpringAnimation,\n      value: number,\n      now: Timestamp,\n      previousAnimation: SpringAnimation | undefined\n    ): void {\n      animation.current = value;\n      animation.startValue = value;\n\n      let mass = config.mass;\n      const triggeredTwice = isTriggeredTwice(previousAnimation, animation);\n\n      const duration = config.duration;\n\n      const x0 = triggeredTwice\n        ? // If animation is triggered twice we want to continue the previous animation\n          // form the previous starting point\n          previousAnimation?.startValue\n        : Number(animation.toValue) - value;\n\n      if (previousAnimation) {\n        animation.velocity =\n          (triggeredTwice\n            ? previousAnimation?.velocity\n            : previousAnimation?.velocity + config.velocity) || 0;\n      } else {\n        animation.velocity = config.velocity || 0;\n      }\n\n      if (triggeredTwice) {\n        animation.zeta = previousAnimation?.zeta || 0;\n        animation.omega0 = previousAnimation?.omega0 || 0;\n        animation.omega1 = previousAnimation?.omega1 || 0;\n      } else {\n        if (config.useDuration) {\n          const actualDuration = triggeredTwice\n            ? // If animation is triggered twice we want to continue the previous animation\n              // so we need to include the time that already elapsed\n              duration -\n              ((previousAnimation?.lastTimestamp || 0) -\n                (previousAnimation?.startTimestamp || 0))\n            : duration;\n\n          config.duration = actualDuration;\n          mass = calculateNewMassToMatchDuration(\n            x0 as number,\n            config,\n            animation.velocity\n          );\n        }\n\n        const { zeta, omega0, omega1 } = initialCalculations(mass, config);\n        animation.zeta = zeta;\n        animation.omega0 = omega0;\n        animation.omega1 = omega1;\n      }\n\n      animation.lastTimestamp = previousAnimation?.lastTimestamp || now;\n\n      animation.startTimestamp = triggeredTwice\n        ? previousAnimation?.startTimestamp || now\n        : now;\n    }\n\n    return {\n      onFrame: springOnFrame,\n      onStart,\n      toValue,\n      velocity: config.velocity || 0,\n      current: toValue,\n      startValue: 0,\n      callback,\n      lastTimestamp: 0,\n      startTimestamp: 0,\n      zeta: 0,\n      omega0: 0,\n      omega1: 0,\n      reduceMotion: getReduceMotionForAnimation(config.reduceMotion),\n    } as SpringAnimation;\n  });\n}) as withSpringType;\n"],"mappings":"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"}