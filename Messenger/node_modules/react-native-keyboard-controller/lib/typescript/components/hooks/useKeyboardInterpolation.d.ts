type KeyboardInterpolationOutput = [number, number];
/**
 * Hook that can be used for interpolation keyboard movement. The main concern is the thing
 * when keyboard is opened and gets resized on Android. Let's say we are interpolating from
 * closed to open [0, 200] and we want to interpolate it to [0, 230] (to achieve nice parallax effect).
 * Then let's say keyboard changes its height to 220 (and we want to interpolate the value to 250, +30
 * to keyboard height). If we interpolate based on `progress` value, then we will have a jump on first frame:
 * the last interpolated position was 230, now we will interpolate to 250, but first frame will be calculated
 * as 200 / 220 * 250 = 227 (and last interpolated position was 230) so we will have a jump.
 *
 * This hook handles it, and when keyboard changes its size it does an interpolation as:
 * [200, 220] -> [230, 250], i. e. we preserve last interpolated value and use it as initial value for interpolation
 * and because of that we will not have a jump and animation will start from the last frame and will be smooth.
 *
 * @see https://github.com/kirillzyusko/react-native-keyboard-controller/issues/315
 */
declare const useKeyboardInterpolation: () => {
    interpolate: (keyboardPosition: number, output: KeyboardInterpolationOutput) => number;
};
export default useKeyboardInterpolation;
