{"version":3,"names":["NativeAndroidManager","_interopRequireWildcard","require","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","DefaultNativeAndroidManager","getConstants","RCTStatusBarManagerCompat","applyMonkeyPatch","setColor","color","animated","setTranslucent","translucent","setStyle","statusBarStyle","setHidden","hidden","exports","revertMonkeyPatch"],"sources":["monkey-patch.android.ts"],"sourcesContent":["// @ts-expect-error because there is no corresponding type definition\nimport * as NativeAndroidManager from \"react-native/Libraries/Components/StatusBar/NativeStatusBarManagerAndroid\";\n\nconst DefaultNativeAndroidManager = NativeAndroidManager.default;\nconst getConstants = NativeAndroidManager.default.getConstants;\nconst RCTStatusBarManagerCompat =\n  require(\"./specs/NativeStatusBarManagerCompat\").default;\n\n// On Android < 11 RN uses legacy API which breaks EdgeToEdge mode in RN, so\n// in order to use library on all available platforms we have to monkey patch\n// default RN implementation and use modern `WindowInsetsControllerCompat`.\nexport const applyMonkeyPatch = () => {\n  NativeAndroidManager.default = {\n    getConstants,\n    setColor(color: number, animated: boolean): void {\n      RCTStatusBarManagerCompat.setColor(color, animated);\n    },\n\n    setTranslucent(translucent: boolean): void {\n      RCTStatusBarManagerCompat.setTranslucent(translucent);\n    },\n\n    /**\n     *  - statusBarStyles can be:\n     *    - 'default'\n     *    - 'dark-content'\n     */\n    setStyle(statusBarStyle?: string): void {\n      RCTStatusBarManagerCompat.setStyle(statusBarStyle);\n    },\n\n    setHidden(hidden: boolean): void {\n      RCTStatusBarManagerCompat.setHidden(hidden);\n    },\n  };\n};\nexport const revertMonkeyPatch = () => {\n  NativeAndroidManager.default = DefaultNativeAndroidManager;\n};\n"],"mappings":";;;;;;AACA,IAAAA,oBAAA,GAAAC,uBAAA,CAAAC,OAAA;AAAkH,SAAAC,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,CAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAH,wBAAAO,GAAA,EAAAJ,WAAA,SAAAA,WAAA,IAAAI,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,oBAAAA,GAAA,wBAAAA,GAAA,4BAAAE,OAAA,EAAAF,GAAA,UAAAG,KAAA,GAAAR,wBAAA,CAAAC,WAAA,OAAAO,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAJ,GAAA,YAAAG,KAAA,CAAAE,GAAA,CAAAL,GAAA,SAAAM,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAX,GAAA,QAAAW,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAd,GAAA,EAAAW,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAV,GAAA,EAAAW,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAX,GAAA,CAAAW,GAAA,SAAAL,MAAA,CAAAJ,OAAA,GAAAF,GAAA,MAAAG,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAAhB,GAAA,EAAAM,MAAA,YAAAA,MAAA;AADlH;;AAGA,MAAMW,2BAA2B,GAAGzB,oBAAoB,CAACU,OAAO;AAChE,MAAMgB,YAAY,GAAG1B,oBAAoB,CAACU,OAAO,CAACgB,YAAY;AAC9D,MAAMC,yBAAyB,GAC7BzB,OAAO,CAAC,sCAAsC,CAAC,CAACQ,OAAO;;AAEzD;AACA;AACA;AACO,MAAMkB,gBAAgB,GAAGA,CAAA,KAAM;EACpC5B,oBAAoB,CAACU,OAAO,GAAG;IAC7BgB,YAAY;IACZG,QAAQA,CAACC,KAAa,EAAEC,QAAiB,EAAQ;MAC/CJ,yBAAyB,CAACE,QAAQ,CAACC,KAAK,EAAEC,QAAQ,CAAC;IACrD,CAAC;IAEDC,cAAcA,CAACC,WAAoB,EAAQ;MACzCN,yBAAyB,CAACK,cAAc,CAACC,WAAW,CAAC;IACvD,CAAC;IAED;AACJ;AACA;AACA;AACA;IACIC,QAAQA,CAACC,cAAuB,EAAQ;MACtCR,yBAAyB,CAACO,QAAQ,CAACC,cAAc,CAAC;IACpD,CAAC;IAEDC,SAASA,CAACC,MAAe,EAAQ;MAC/BV,yBAAyB,CAACS,SAAS,CAACC,MAAM,CAAC;IAC7C;EACF,CAAC;AACH,CAAC;AAACC,OAAA,CAAAV,gBAAA,GAAAA,gBAAA;AACK,MAAMW,iBAAiB,GAAGA,CAAA,KAAM;EACrCvC,oBAAoB,CAACU,OAAO,GAAGe,2BAA2B;AAC5D,CAAC;AAACa,OAAA,CAAAC,iBAAA,GAAAA,iBAAA"}