"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactNativeReanimated = _interopRequireWildcard(require("react-native-reanimated"));
var _reactNativeKeyboardController = require("react-native-keyboard-controller");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
const KeyboardStickyView = /*#__PURE__*/(0, _react.forwardRef)(({
  children,
  offset: {
    closed = 0,
    opened = 0
  } = {},
  style,
  ...props
}, ref) => {
  const {
    height,
    progress
  } = (0, _reactNativeKeyboardController.useReanimatedKeyboardAnimation)();
  const stickyViewStyle = (0, _reactNativeReanimated.useAnimatedStyle)(() => {
    const offset = (0, _reactNativeReanimated.interpolate)(progress.value, [0, 1], [closed, opened]);
    return {
      transform: [{
        translateY: height.value + offset
      }]
    };
  }, [closed, opened]);
  const styles = (0, _react.useMemo)(() => [style, stickyViewStyle], [style, stickyViewStyle]);
  return /*#__PURE__*/_react.default.createElement(_reactNativeReanimated.default.View, _extends({
    ref: ref,
    style: styles
  }, props), children);
});
var _default = exports.default = KeyboardStickyView;
//# sourceMappingURL=index.js.map