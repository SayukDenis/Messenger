{"version":3,"names":["React","forwardRef","useCallback","useMemo","View","useWindowDimensions","Reanimated","interpolate","runOnUI","useAnimatedStyle","useDerivedValue","useSharedValue","useKeyboardAnimation","defaultLayout","x","y","width","height","KeyboardAvoidingView","behavior","children","contentContainerStyle","enabled","keyboardVerticalOffset","style","onLayout","onLayoutProps","props","ref","initialFrame","frame","value","keyboard","screenHeight","relativeKeyboardHeight","keyboardY","heightWhenOpened","Math","max","onLayoutWorklet","layout","isClosed","e","nativeEvent","animatedStyle","bottom","progress","bottomHeight","flex","paddingBottom","isPositionBehavior","containerStyle","combinedStyles","createElement","_extends"],"sources":["index.tsx"],"sourcesContent":["import React, { forwardRef, useCallback, useMemo } from \"react\";\nimport { View, useWindowDimensions } from \"react-native\";\nimport Reanimated, {\n  interpolate,\n  runOnUI,\n  useAnimatedStyle,\n  useDerivedValue,\n  useSharedValue,\n} from \"react-native-reanimated\";\n\nimport { useKeyboardAnimation } from \"./hooks\";\n\nimport type { LayoutRectangle, ViewProps } from \"react-native\";\n\ntype Props = {\n  /**\n   * Specify how to react to the presence of the keyboard.\n   */\n  behavior?: \"height\" | \"position\" | \"padding\";\n\n  /**\n   * Style of the content container when `behavior` is 'position'.\n   */\n  contentContainerStyle?: ViewProps[\"style\"];\n\n  /**\n   * Controls whether this `KeyboardAvoidingView` instance should take effect.\n   * This is useful when more than one is on the screen. Defaults to true.\n   */\n  enabled?: boolean;\n\n  /**\n   * Distance between the top of the user screen and the React Native view. This\n   * may be non-zero in some cases. Defaults to 0.\n   */\n  keyboardVerticalOffset?: number;\n} & ViewProps;\n\nconst defaultLayout: LayoutRectangle = {\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0,\n};\n\n/**\n * View that moves out of the way when the keyboard appears by automatically\n * adjusting its height, position, or bottom padding.\n */\nconst KeyboardAvoidingView = forwardRef<View, React.PropsWithChildren<Props>>(\n  (\n    {\n      behavior,\n      children,\n      contentContainerStyle,\n      enabled = true,\n      keyboardVerticalOffset = 0,\n      style,\n      onLayout: onLayoutProps,\n      ...props\n    },\n    ref,\n  ) => {\n    const initialFrame = useSharedValue<LayoutRectangle | null>(null);\n    const frame = useDerivedValue(() => initialFrame.value || defaultLayout);\n\n    const keyboard = useKeyboardAnimation();\n    const { height: screenHeight } = useWindowDimensions();\n\n    const relativeKeyboardHeight = useCallback(() => {\n      \"worklet\";\n\n      const keyboardY =\n        screenHeight - keyboard.heightWhenOpened.value - keyboardVerticalOffset;\n\n      return Math.max(frame.value.y + frame.value.height - keyboardY, 0);\n    }, [screenHeight, keyboardVerticalOffset]);\n\n    const onLayoutWorklet = useCallback((layout: LayoutRectangle) => {\n      \"worklet\";\n\n      if (keyboard.isClosed.value || initialFrame.value === null) {\n        initialFrame.value = layout;\n      }\n    }, []);\n    const onLayout = useCallback<NonNullable<ViewProps[\"onLayout\"]>>(\n      (e) => {\n        runOnUI(onLayoutWorklet)(e.nativeEvent.layout);\n        onLayoutProps?.(e);\n      },\n      [onLayoutProps],\n    );\n\n    const animatedStyle = useAnimatedStyle(() => {\n      const bottom = interpolate(\n        keyboard.progress.value,\n        [0, 1],\n        [0, relativeKeyboardHeight()],\n      );\n      const bottomHeight = enabled ? bottom : 0;\n\n      switch (behavior) {\n        case \"height\":\n          if (!keyboard.isClosed.value) {\n            return {\n              height: frame.value.height - bottomHeight,\n              flex: 0,\n            };\n          }\n\n          return {};\n\n        case \"position\":\n          return { bottom: bottomHeight };\n\n        case \"padding\":\n          return { paddingBottom: bottomHeight };\n\n        default:\n          return {};\n      }\n    }, [behavior, enabled, relativeKeyboardHeight]);\n    const isPositionBehavior = behavior === \"position\";\n    const containerStyle = isPositionBehavior ? contentContainerStyle : style;\n    const combinedStyles = useMemo(\n      () => [containerStyle, animatedStyle],\n      [containerStyle, animatedStyle],\n    );\n\n    if (isPositionBehavior) {\n      return (\n        <View ref={ref} style={style} onLayout={onLayout} {...props}>\n          <Reanimated.View style={combinedStyles}>{children}</Reanimated.View>\n        </View>\n      );\n    }\n\n    return (\n      <Reanimated.View\n        ref={ref}\n        onLayout={onLayout}\n        style={combinedStyles}\n        {...props}\n      >\n        {children}\n      </Reanimated.View>\n    );\n  },\n);\n\nexport default KeyboardAvoidingView;\n"],"mappings":"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","ignoreList":[]}