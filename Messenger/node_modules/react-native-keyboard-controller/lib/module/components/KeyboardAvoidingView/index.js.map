{"version":3,"names":["React","forwardRef","useCallback","useMemo","View","useWindowDimensions","Reanimated","runOnUI","useAnimatedStyle","useDerivedValue","useSharedValue","useKeyboardInterpolation","useKeyboardAnimation","defaultLayout","x","y","width","height","KeyboardAvoidingView","_ref","ref","behavior","children","contentContainerStyle","enabled","keyboardVerticalOffset","style","onLayout","onLayoutProps","props","initialFrame","frame","value","keyboard","screenHeight","relativeKeyboardHeight","keyboardY","heightWhenOpened","Math","max","interpolate","onLayoutWorklet","layout","isClosed","e","nativeEvent","animatedStyle","bottom","bottomHeight","flex","paddingBottom","isPositionBehavior","containerStyle","combinedStyles","createElement","_extends"],"sources":["index.tsx"],"sourcesContent":["import React, { forwardRef, useCallback, useMemo } from \"react\";\nimport { View, useWindowDimensions } from \"react-native\";\nimport Reanimated, {\n  runOnUI,\n  useAnimatedStyle,\n  useDerivedValue,\n  useSharedValue,\n} from \"react-native-reanimated\";\n\nimport useKeyboardInterpolation from \"../hooks/useKeyboardInterpolation\";\n\nimport { useKeyboardAnimation } from \"./hooks\";\n\nimport type { LayoutRectangle, ViewProps } from \"react-native\";\n\ntype Props = {\n  /**\n   * Specify how to react to the presence of the keyboard.\n   */\n  behavior?: \"height\" | \"position\" | \"padding\";\n\n  /**\n   * Style of the content container when `behavior` is 'position'.\n   */\n  contentContainerStyle?: ViewProps[\"style\"];\n\n  /**\n   * Controls whether this `KeyboardAvoidingView` instance should take effect.\n   * This is useful when more than one is on the screen. Defaults to true.\n   */\n  enabled?: boolean;\n\n  /**\n   * Distance between the top of the user screen and the React Native view. This\n   * may be non-zero in some cases. Defaults to 0.\n   */\n  keyboardVerticalOffset?: number;\n} & ViewProps;\n\nconst defaultLayout: LayoutRectangle = {\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0,\n};\n\n/**\n * View that moves out of the way when the keyboard appears by automatically\n * adjusting its height, position, or bottom padding.\n */\nconst KeyboardAvoidingView = forwardRef<View, React.PropsWithChildren<Props>>(\n  (\n    {\n      behavior,\n      children,\n      contentContainerStyle,\n      enabled = true,\n      keyboardVerticalOffset = 0,\n      style,\n      onLayout: onLayoutProps,\n      ...props\n    },\n    ref,\n  ) => {\n    const initialFrame = useSharedValue<LayoutRectangle | null>(null);\n    const frame = useDerivedValue(() => initialFrame.value || defaultLayout);\n\n    const keyboard = useKeyboardAnimation();\n    const { height: screenHeight } = useWindowDimensions();\n\n    const relativeKeyboardHeight = useCallback(() => {\n      \"worklet\";\n\n      const keyboardY =\n        screenHeight - keyboard.heightWhenOpened.value - keyboardVerticalOffset;\n\n      return Math.max(frame.value.y + frame.value.height - keyboardY, 0);\n    }, [screenHeight, keyboardVerticalOffset]);\n    const { interpolate } = useKeyboardInterpolation();\n\n    const onLayoutWorklet = useCallback((layout: LayoutRectangle) => {\n      \"worklet\";\n\n      if (keyboard.isClosed.value) {\n        initialFrame.value = layout;\n      }\n    }, []);\n    const onLayout = useCallback<NonNullable<ViewProps[\"onLayout\"]>>(\n      (e) => {\n        runOnUI(onLayoutWorklet)(e.nativeEvent.layout);\n        onLayoutProps?.(e);\n      },\n      [onLayoutProps],\n    );\n\n    const animatedStyle = useAnimatedStyle(() => {\n      const bottom = interpolate(keyboard.height.value, [\n        0,\n        relativeKeyboardHeight(),\n      ]);\n      const bottomHeight = enabled ? bottom : 0;\n\n      switch (behavior) {\n        case \"height\":\n          if (!keyboard.isClosed.value) {\n            return {\n              height: frame.value.height - bottomHeight,\n              flex: 0,\n            };\n          }\n\n          return {};\n\n        case \"position\":\n          return { bottom: bottomHeight };\n\n        case \"padding\":\n          return { paddingBottom: bottomHeight };\n\n        default:\n          return {};\n      }\n    }, [behavior, enabled, relativeKeyboardHeight]);\n    const isPositionBehavior = behavior === \"position\";\n    const containerStyle = isPositionBehavior ? contentContainerStyle : style;\n    const combinedStyles = useMemo(\n      () => [containerStyle, animatedStyle],\n      [containerStyle, animatedStyle],\n    );\n\n    if (isPositionBehavior) {\n      return (\n        <View ref={ref} style={style} onLayout={onLayout} {...props}>\n          <Reanimated.View style={combinedStyles}>{children}</Reanimated.View>\n        </View>\n      );\n    }\n\n    return (\n      <Reanimated.View\n        ref={ref}\n        onLayout={onLayout}\n        style={combinedStyles}\n        {...props}\n      >\n        {children}\n      </Reanimated.View>\n    );\n  },\n);\n\nexport default KeyboardAvoidingView;\n"],"mappings":"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"}