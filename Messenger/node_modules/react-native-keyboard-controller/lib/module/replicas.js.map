{"version":3,"names":["useCallback","useEffect","useMemo","useRef","Animated","Easing","Keyboard","Platform","runOnUI","useAnimatedReaction","useDerivedValue","useSharedValue","withSpring","KeyboardController","AndroidSoftInputModes","useReanimatedKeyboardAnimation","availableOSEventType","OS","defaultAndroidEasing","bezier","useKeyboardAnimationReplica","height","Value","progress","animation","current","setInputMode","SOFT_INPUT_ADJUST_RESIZE","setDefaultMode","listener","addListener","e","timing","toValue","endCoordinates","duration","easing","useNativeDriver","start","remove","IOS_SPRING_CONFIG","damping","stiffness","mass","overshootClamping","restDisplacementThreshold","restSpeedThreshold","useReanimatedKeyboardAnimationReplica","heightEvent","value","handler","_height","_keyboardHeight","result","_previousResult","_previousKeyboardHeight","show","hide","useGradualKeyboardAnimation"],"sources":["replicas.ts"],"sourcesContent":["import { useCallback, useEffect, useMemo, useRef } from \"react\";\nimport { Animated, Easing, Keyboard, Platform } from \"react-native\";\nimport {\n  runOnUI,\n  useAnimatedReaction,\n  useDerivedValue,\n  useSharedValue,\n  withSpring,\n} from \"react-native-reanimated\";\n\nimport { KeyboardController } from \"./bindings\";\nimport { AndroidSoftInputModes } from \"./constants\";\nimport { useReanimatedKeyboardAnimation } from \"./hooks\";\n\nconst availableOSEventType = Platform.OS === \"ios\" ? \"Will\" : \"Did\";\n\n// cubic-bezier(.17,.67,.34,.94)\nexport const defaultAndroidEasing = Easing.bezier(0.4, 0.0, 0.2, 1);\ntype KeyboardAnimation = {\n  progress: Animated.Value;\n  height: Animated.Value;\n};\n\n/**\n * An experimental implementation of tracing keyboard appearance.\n * Switch an input mode to adjust resize mode. In this case all did* events\n * are triggering before keyboard appears, and using some approximations\n * it tries to mimicries a native transition.\n *\n * @returns {Animated.Value}\n */\nexport const useKeyboardAnimationReplica = (): KeyboardAnimation => {\n  const height = useRef(new Animated.Value(0));\n  const progress = useRef(new Animated.Value(0));\n  const animation = useMemo(\n    () => ({\n      height: height.current,\n      progress: progress.current,\n    }),\n    [],\n  );\n\n  useEffect(() => {\n    KeyboardController.setInputMode(\n      AndroidSoftInputModes.SOFT_INPUT_ADJUST_RESIZE,\n    );\n\n    return () => KeyboardController.setDefaultMode();\n  }, []);\n  useEffect(() => {\n    const listener = Keyboard.addListener(\n      `keyboard${availableOSEventType}Show`,\n      (e) => {\n        Animated.timing(height.current, {\n          toValue: -e.endCoordinates.height,\n          duration: e.duration !== 0 ? e.duration : 300,\n          easing: Easing.bezier(0.4, 0.0, 0.2, 1),\n          useNativeDriver: true,\n        }).start();\n\n        return () => listener.remove();\n      },\n    );\n  }, []);\n  useEffect(() => {\n    const listener = Keyboard.addListener(\n      `keyboard${availableOSEventType}Hide`,\n      (e) => {\n        Animated.timing(height.current, {\n          toValue: 0,\n          duration: e.duration !== 0 ? e.duration : 300,\n          easing: Easing.bezier(0.4, 0.0, 0.2, 1),\n          useNativeDriver: true,\n        }).start();\n\n        return () => listener.remove();\n      },\n    );\n  }, []);\n\n  return animation;\n};\n\nconst IOS_SPRING_CONFIG = {\n  damping: 500,\n  stiffness: 1000,\n  mass: 3,\n  overshootClamping: true,\n  restDisplacementThreshold: 10,\n  restSpeedThreshold: 10,\n};\n\n/**\n * A close replica to native iOS keyboard animation. The problem is that\n * iOS (unlike Android) can not fire events for each keyboard frame movement.\n * As a result we can not get gradual values (for example, for progress it always\n * will be 1 or 0). So if you want to rely on gradual values you will need to use\n * this replica.\n *\n * The transition is hardcoded and may vary from one to another OS versions. But it\n * seems like last time it has been changed in iOS 7. Since RN supports at least iOS\n * 11 it doesn't make sense to replicate iOS 7 behavior. If it changes in next OS\n * versions, then this implementation should be revisited and reflect necessary changes.\n *\n * @returns {height, progress} - animated values\n */\nexport const useReanimatedKeyboardAnimationReplica = () => {\n  const height = useSharedValue(0);\n  const heightEvent = useSharedValue(0);\n\n  const progress = useDerivedValue(() => height.value / heightEvent.value);\n\n  const handler = useCallback((_height: number) => {\n    \"worklet\";\n\n    heightEvent.value = _height;\n  }, []);\n\n  useAnimatedReaction(\n    () => ({\n      _keyboardHeight: heightEvent.value,\n    }),\n    (result, _previousResult) => {\n      const { _keyboardHeight } = result;\n      const _previousKeyboardHeight = _previousResult?._keyboardHeight;\n\n      if (_keyboardHeight !== _previousKeyboardHeight) {\n        height.value = withSpring(_keyboardHeight, IOS_SPRING_CONFIG);\n      }\n    },\n    [],\n  );\n\n  useEffect(() => {\n    const show = Keyboard.addListener(\"keyboardWillShow\", (e) => {\n      runOnUI(handler)(-e.endCoordinates.height);\n    });\n    const hide = Keyboard.addListener(\"keyboardWillHide\", () => {\n      runOnUI(handler)(0);\n    });\n\n    return () => {\n      show.remove();\n      hide.remove();\n    };\n  }, []);\n\n  return { height, progress };\n};\n\nexport const useGradualKeyboardAnimation =\n  Platform.OS === \"ios\"\n    ? useReanimatedKeyboardAnimationReplica\n    : useReanimatedKeyboardAnimation;\n"],"mappings":"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"}