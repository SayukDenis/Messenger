{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { styles } from \"./Styles.tsx\";\nimport OffNotificationIcon from \"./Icons/OffNotificationIcon.tsx\";\nimport OnNotificationIcon from \"./Icons/OnNotificationIcon.tsx\";\nimport BinIcon from \"./Icons/BinIcon.tsx\";\nimport SettingsIcon from \"./Icons/SettingsIcon.tsx\";\nimport ForwardContactIcon from \"./Icons/ForwardContactIcon.tsx\";\nimport BlockIcon from \"./Icons/BlockIcon.tsx\";\nimport UnblockIcon from \"./Icons/UnblockIcon.tsx\";\nimport EyeIcon from \"./Icons/EyeIcon.tsx\";\nimport ExitDoorIcon from \"./Icons/ExitIcon.tsx\";\nimport ClearChatIcon from \"./Icons/ClearChatIcon.tsx\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar ElseFeaturesButtons = function ElseFeaturesButtons(props) {\n  var settingsTitle = \"Settings\";\n  var offNotificationtitle = \"Off notification\";\n  var onNotificationtitle = \"On notification\";\n  var clearChatTItle = \"Clear chat\";\n  var forwardContactTitle = \"Forward contact\";\n  var blockButtonTitle = \"Block\";\n  var unblockButtonTitle = \"Unblock\";\n  var viewMemberTitle = \"View member\";\n  var deleteGroupTitle = \"Delete group\";\n  var leaveGroupTitle = \"Leave group\";\n  return _jsx(_Fragment, {\n    children: props.isVisible && _jsxs(View, {\n      style: styles.elseFeaturesButtonsContainer,\n      children: [_jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          props.settingsPress();\n          props.setIsVisible(false);\n        },\n        style: styles.additionalFeatureButton,\n        children: [_jsx(SettingsIcon, {\n          style: styles.additionalFeatureIcon\n        }), _jsx(Text, {\n          style: styles.additionalFeatureTitle,\n          children: settingsTitle\n        })]\n      }), _jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          props.onMutePress(!props.isMuted);\n          props.setIsVisible(false);\n        },\n        style: styles.additionalFeatureButton,\n        children: [props.isMuted ? _jsx(OnNotificationIcon, {\n          style: styles.additionalFeatureIcon\n        }) : _jsx(OffNotificationIcon, {\n          style: styles.additionalFeatureIcon\n        }), _jsx(Text, {\n          style: styles.additionalFeatureTitle,\n          children: props.isMuted ? onNotificationtitle : offNotificationtitle\n        })]\n      }), _jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          props.onClearChatPress(true);\n        },\n        style: styles.additionalFeatureButton,\n        children: [_jsx(ClearChatIcon, {\n          style: styles.additionalFeatureIcon\n        }), _jsx(Text, {\n          style: styles.additionalFeatureTitle,\n          children: clearChatTItle\n        })]\n      }), props.mode === \"user\" && _jsxs(_Fragment, {\n        children: [_jsxs(TouchableOpacity, {\n          style: styles.additionalFeatureButton,\n          children: [_jsx(ForwardContactIcon, {\n            style: styles.additionalFeatureIcon\n          }), _jsx(Text, {\n            style: styles.additionalFeatureTitle,\n            children: forwardContactTitle\n          })]\n        }), _jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            if (props.onBlockPress !== undefined) {\n              props.onBlockPress(!props.isBlocked);\n            }\n            props.setIsVisible(false);\n          },\n          style: styles.additionalFeatureButton,\n          children: [props.isBlocked ? _jsx(UnblockIcon, {\n            style: styles.additionalFeatureIcon\n          }) : _jsx(BlockIcon, {\n            style: styles.additionalFeatureIcon\n          }), _jsx(Text, {\n            style: styles.blockButtonTitle,\n            children: props.isBlocked ? unblockButtonTitle : blockButtonTitle\n          })]\n        })]\n      }), props.mode === \"group\" && _jsxs(_Fragment, {\n        children: [_jsxs(TouchableOpacity, {\n          style: styles.additionalFeatureButton,\n          children: [_jsx(EyeIcon, {\n            style: styles.additionalFeatureIcon\n          }), _jsx(Text, {\n            style: styles.additionalFeatureTitle,\n            children: viewMemberTitle\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.additionalFeatureButton,\n          children: [_jsx(BinIcon, {\n            style: styles.additionalFeatureIcon\n          }), _jsx(Text, {\n            style: [styles.additionalFeatureTitle, {\n              color: \"red\"\n            }],\n            children: deleteGroupTitle\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.additionalFeatureButton,\n          children: [_jsx(ExitDoorIcon, {\n            style: styles.additionalFeatureIcon\n          }), _jsx(Text, {\n            style: [styles.additionalFeatureTitle, {\n              color: \"red\"\n            }],\n            children: leaveGroupTitle\n          })]\n        })]\n      })]\n    })\n  });\n};\nexport default ElseFeaturesButtons;","map":{"version":3,"names":["React","View","TouchableOpacity","Text","styles","OffNotificationIcon","OnNotificationIcon","BinIcon","SettingsIcon","ForwardContactIcon","BlockIcon","UnblockIcon","EyeIcon","ExitDoorIcon","ClearChatIcon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ElseFeaturesButtons","props","settingsTitle","offNotificationtitle","onNotificationtitle","clearChatTItle","forwardContactTitle","blockButtonTitle","unblockButtonTitle","viewMemberTitle","deleteGroupTitle","leaveGroupTitle","children","isVisible","style","elseFeaturesButtonsContainer","onPress","settingsPress","setIsVisible","additionalFeatureButton","additionalFeatureIcon","additionalFeatureTitle","onMutePress","isMuted","onClearChatPress","mode","onBlockPress","undefined","isBlocked","color"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/Profiles/SemiComponents/MainScreen/ElseFeaturesButtons.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React from \"react\";\r\nimport { View, TouchableOpacity, Text } from \"react-native\";\r\nimport { styles } from \"./Styles.tsx\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport OffNotificationIcon from \"./Icons/OffNotificationIcon.tsx\";\r\nimport OnNotificationIcon from \"./Icons/OnNotificationIcon.tsx\";\r\nimport BinIcon from \"./Icons/BinIcon.tsx\";\r\nimport SettingsIcon from \"./Icons/SettingsIcon.tsx\";\r\nimport ForwardContactIcon from \"./Icons/ForwardContactIcon.tsx\";\r\nimport BlockIcon from \"./Icons/BlockIcon.tsx\";\r\nimport UnblockIcon from \"./Icons/UnblockIcon.tsx\";\r\nimport EyeIcon from \"./Icons/EyeIcon.tsx\";\r\nimport ExitDoorIcon from \"./Icons/ExitIcon.tsx\";\r\nimport ClearChatIcon from \"./Icons/ClearChatIcon.tsx\";\r\n\r\ninterface ElseFeaturesButtonsProps {\r\n  setIsVisible: (value: boolean) => void;\r\n  isVisible: boolean;\r\n  onMutePress: (value: boolean) => void;\r\n  isMuted: boolean;\r\n  onBlockPress?: (value: boolean) => void;\r\n  isBlocked?: boolean;\r\n  onClearChatPress: (value: boolean) => void;\r\n  isClearChatPressed: boolean;\r\n  navigation: StackNavigationProp<{}>;\r\n  settingsPress: () => void;\r\n  mode: string;\r\n}\r\n\r\nconst ElseFeaturesButtons: React.FC<ElseFeaturesButtonsProps> = (props) => {\r\n  const settingsTitle: string = \"Settings\";\r\n  const offNotificationtitle: string = \"Off notification\";\r\n  const onNotificationtitle: string = \"On notification\";\r\n  const clearChatTItle: string = \"Clear chat\";\r\n  const forwardContactTitle: string = \"Forward contact\";\r\n  const blockButtonTitle: string = \"Block\";\r\n  const unblockButtonTitle: string = \"Unblock\";\r\n  const viewMemberTitle: string = \"View member\";\r\n  const deleteGroupTitle: string = \"Delete group\";\r\n  const leaveGroupTitle: string = \"Leave group\";\r\n\r\n  return (\r\n    <>\r\n      {props.isVisible && (\r\n        <View style={styles.elseFeaturesButtonsContainer}>\r\n          {/* Settings button */}\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              props.settingsPress();\r\n              props.setIsVisible(false);\r\n            }}\r\n            style={styles.additionalFeatureButton}\r\n          >\r\n            <SettingsIcon style={styles.additionalFeatureIcon} />\r\n            <Text style={styles.additionalFeatureTitle}>{settingsTitle}</Text>\r\n          </TouchableOpacity>\r\n\r\n          {/* Toggle Notification button */}\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              props.onMutePress(!props.isMuted);\r\n              props.setIsVisible(false);\r\n            }}\r\n            style={styles.additionalFeatureButton}\r\n          >\r\n            {props.isMuted ? (\r\n              <OnNotificationIcon style={styles.additionalFeatureIcon} />\r\n            ) : (\r\n              <OffNotificationIcon style={styles.additionalFeatureIcon} />\r\n            )}\r\n            <Text style={styles.additionalFeatureTitle}>\r\n              {props.isMuted ? onNotificationtitle : offNotificationtitle}\r\n            </Text>\r\n          </TouchableOpacity>\r\n\r\n          {/* Clear chat button */}\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              props.onClearChatPress(true);\r\n            }}\r\n            style={styles.additionalFeatureButton}\r\n          >\r\n            <ClearChatIcon style={styles.additionalFeatureIcon} />\r\n            <Text style={styles.additionalFeatureTitle}>{clearChatTItle}</Text>\r\n          </TouchableOpacity>\r\n\r\n          {props.mode === \"user\" && (\r\n            <>\r\n              {/* Forward contact button */}\r\n              <TouchableOpacity style={styles.additionalFeatureButton}>\r\n                <ForwardContactIcon style={styles.additionalFeatureIcon} />\r\n                <Text style={styles.additionalFeatureTitle}>\r\n                  {forwardContactTitle}\r\n                </Text>\r\n              </TouchableOpacity>\r\n\r\n              {/* Toggle block button */}\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  if (props.onBlockPress !== undefined) {\r\n                    props.onBlockPress(!props.isBlocked);\r\n                  }\r\n                  props.setIsVisible(false);\r\n                }}\r\n                style={styles.additionalFeatureButton}\r\n              >\r\n                {props.isBlocked ? (\r\n                  <UnblockIcon style={styles.additionalFeatureIcon} />\r\n                ) : (\r\n                  <BlockIcon style={styles.additionalFeatureIcon} />\r\n                )}\r\n                <Text style={styles.blockButtonTitle}>\r\n                  {props.isBlocked ? unblockButtonTitle : blockButtonTitle}\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </>\r\n          )}\r\n          {props.mode === \"group\" && (\r\n            <>\r\n              {/* View member button */}\r\n              <TouchableOpacity style={styles.additionalFeatureButton}>\r\n                <EyeIcon style={styles.additionalFeatureIcon} />\r\n                <Text style={styles.additionalFeatureTitle}>\r\n                  {viewMemberTitle}\r\n                </Text>\r\n              </TouchableOpacity>\r\n\r\n              {/* Delete group button */}\r\n              <TouchableOpacity style={styles.additionalFeatureButton}>\r\n                <BinIcon style={styles.additionalFeatureIcon} />\r\n                <Text style={[styles.additionalFeatureTitle, { color: \"red\" }]}>\r\n                  {deleteGroupTitle}\r\n                </Text>\r\n              </TouchableOpacity>\r\n\r\n              {/* Leave group button */}\r\n              <TouchableOpacity style={styles.additionalFeatureButton}>\r\n                <ExitDoorIcon style={styles.additionalFeatureIcon} />\r\n                <Text style={[styles.additionalFeatureTitle, { color: \"red\" }]}>\r\n                  {leaveGroupTitle}\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </>\r\n          )}\r\n        </View>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ElseFeaturesButtons;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}