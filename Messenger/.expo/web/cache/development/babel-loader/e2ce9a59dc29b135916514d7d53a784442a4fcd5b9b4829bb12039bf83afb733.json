{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { styles } from \"./Styles\";\nimport Header from \"../../SemiComponents/Header\";\nimport { user } from \"../../SemiComponents/DBUser\";\nimport Photos from \"../../SemiComponents/MainScreen/Multimedia/Photos\";\nimport { tempUser } from \"../../SemiComponents/DBUser\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar GalleryScreen = function GalleryScreen(props) {\n  var _useState = useState(tempUser.selectedPhotosAndVideos),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedPhotosAndVideos = _useState2[0],\n    setSelectedPhotosAndVideos = _useState2[1];\n  useEffect(function () {\n    tempUser.selectedPhotosAndVideos = selectedPhotosAndVideos;\n  });\n  return _jsxs(View, {\n    style: [styles.mainContainer, {\n      backgroundColor: \"rgb(174, 174, 174)\"\n    }],\n    children: [_jsx(Header, {\n      primaryTitle: \"Gallery\",\n      onGoBackPress: function onGoBackPress() {\n        props.navigation.goBack();\n      }\n    }), _jsx(ScrollView, {\n      style: {\n        flex: 1\n      },\n      contentContainerStyle: {\n        top: -0.085 * Dimensions.get(\"screen\").height\n      },\n      overScrollMode: \"never\",\n      showsVerticalScrollIndicator: false,\n      children: _jsx(Photos, {\n        selectedPhotosAndVideos: selectedPhotosAndVideos,\n        isPhotoSelectionVisible: true,\n        data: user.photosAndVideos,\n        onPress: function onPress(photo) {\n          if (!(selectedPhotosAndVideos != null && selectedPhotosAndVideos.includes(photo))) {\n            setSelectedPhotosAndVideos(selectedPhotosAndVideos == null ? void 0 : selectedPhotosAndVideos.concat([photo]));\n          } else {\n            setSelectedPhotosAndVideos(selectedPhotosAndVideos == null ? void 0 : selectedPhotosAndVideos.filter(function (photoOrVideo) {\n              return photoOrVideo !== photo;\n            }));\n          }\n        }\n      })\n    })]\n  });\n};\nexport default GalleryScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Dimensions","ScrollView","styles","Header","user","Photos","tempUser","jsx","_jsx","jsxs","_jsxs","GalleryScreen","props","_useState","selectedPhotosAndVideos","_useState2","_slicedToArray","setSelectedPhotosAndVideos","style","mainContainer","backgroundColor","children","primaryTitle","onGoBackPress","navigation","goBack","flex","contentContainerStyle","top","get","height","overScrollMode","showsVerticalScrollIndicator","isPhotoSelectionVisible","data","photosAndVideos","onPress","photo","includes","concat","filter","photoOrVideo"],"sources":["/home/zatibmag/Desktop/Project/Messenger/Messenger/Pages/Profiles/DialogueProfile/NewAlbumScreen/GalleryScreen.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { View, Dimensions, ScrollView } from \"react-native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport { styles } from \"./Styles\";\r\nimport Header from \"../../SemiComponents/Header\";\r\nimport { user, PhotoOrVideo } from \"../../SemiComponents/DBUser\";\r\nimport Photos from \"../../SemiComponents/MainScreen/Multimedia/Photos\";\r\nimport { tempUser } from \"../../SemiComponents/DBUser\";\r\n\r\ninterface GalleryScreenProps {\r\n  navigation: StackNavigationProp<{}>;\r\n}\r\n\r\nconst GalleryScreen: React.FC<GalleryScreenProps> = (props) => {\r\n  const [selectedPhotosAndVideos, setSelectedPhotosAndVideos] = useState<\r\n    Array<PhotoOrVideo>\r\n  >(tempUser.selectedPhotosAndVideos);\r\n\r\n  useEffect(() => {\r\n    tempUser.selectedPhotosAndVideos = selectedPhotosAndVideos;\r\n  });\r\n\r\n  return (\r\n    <View\r\n      style={[styles.mainContainer, { backgroundColor: \"rgb(174, 174, 174)\" }]}\r\n    >\r\n      <Header\r\n        primaryTitle=\"Gallery\"\r\n        onGoBackPress={() => {\r\n          props.navigation.goBack();\r\n        }}\r\n      />\r\n      <ScrollView\r\n        style={{\r\n          flex: 1,\r\n        }}\r\n        contentContainerStyle={{\r\n          top: -0.085 * Dimensions.get(\"screen\").height,\r\n        }}\r\n        overScrollMode=\"never\"\r\n        showsVerticalScrollIndicator={false}\r\n      >\r\n        <Photos\r\n          selectedPhotosAndVideos={selectedPhotosAndVideos}\r\n          isPhotoSelectionVisible={true}\r\n          data={user.photosAndVideos}\r\n          onPress={(photo: PhotoOrVideo) => {\r\n            if (!selectedPhotosAndVideos?.includes(photo)) {\r\n              setSelectedPhotosAndVideos(\r\n                selectedPhotosAndVideos?.concat([photo])\r\n              );\r\n            } else {\r\n              setSelectedPhotosAndVideos(\r\n                selectedPhotosAndVideos?.filter(\r\n                  (photoOrVideo) => photoOrVideo !== photo\r\n                )\r\n              );\r\n            }\r\n          }}\r\n        />\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default GalleryScreen;\r\n"],"mappings":";AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAGnD,SAASC,MAAM;AACf,OAAOC,MAAM;AACb,SAASC,IAAI;AACb,OAAOC,MAAM;AACb,SAASC,QAAQ;AAAsC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAMvD,IAAMC,aAA2C,GAAG,SAA9CA,aAA2CA,CAAIC,KAAK,EAAK;EAC7D,IAAAC,SAAA,GAA8DhB,QAAQ,CAEpES,QAAQ,CAACQ,uBAAuB,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAF5BC,uBAAuB,GAAAC,UAAA;IAAEE,0BAA0B,GAAAF,UAAA;EAI1DjB,SAAS,CAAC,YAAM;IACdQ,QAAQ,CAACQ,uBAAuB,GAAGA,uBAAuB;EAC5D,CAAC,CAAC;EAEF,OACEJ,KAAA,CAACX,IAAI;IACHmB,KAAK,EAAE,CAAChB,MAAM,CAACiB,aAAa,EAAE;MAAEC,eAAe,EAAE;IAAqB,CAAC,CAAE;IAAAC,QAAA,GAEzEb,IAAA,CAACL,MAAM;MACLmB,YAAY,EAAC,SAAS;MACtBC,aAAa,EAAE,SAAAA,cAAA,EAAM;QACnBX,KAAK,CAACY,UAAU,CAACC,MAAM,CAAC,CAAC;MAC3B;IAAE,CACH,CAAC,EACFjB,IAAA,CAACP,UAAU;MACTiB,KAAK,EAAE;QACLQ,IAAI,EAAE;MACR,CAAE;MACFC,qBAAqB,EAAE;QACrBC,GAAG,EAAE,CAAC,KAAK,GAAG5B,UAAU,CAAC6B,GAAG,CAAC,QAAQ,CAAC,CAACC;MACzC,CAAE;MACFC,cAAc,EAAC,OAAO;MACtBC,4BAA4B,EAAE,KAAM;MAAAX,QAAA,EAEpCb,IAAA,CAACH,MAAM;QACLS,uBAAuB,EAAEA,uBAAwB;QACjDmB,uBAAuB,EAAE,IAAK;QAC9BC,IAAI,EAAE9B,IAAI,CAAC+B,eAAgB;QAC3BC,OAAO,EAAE,SAAAA,QAACC,KAAmB,EAAK;UAChC,IAAI,EAACvB,uBAAuB,YAAvBA,uBAAuB,CAAEwB,QAAQ,CAACD,KAAK,CAAC,GAAE;YAC7CpB,0BAA0B,CACxBH,uBAAuB,oBAAvBA,uBAAuB,CAAEyB,MAAM,CAAC,CAACF,KAAK,CAAC,CACzC,CAAC;UACH,CAAC,MAAM;YACLpB,0BAA0B,CACxBH,uBAAuB,oBAAvBA,uBAAuB,CAAE0B,MAAM,CAC7B,UAACC,YAAY;cAAA,OAAKA,YAAY,KAAKJ,KAAK;YAAA,CAC1C,CACF,CAAC;UACH;QACF;MAAE,CACH;IAAC,CACQ,CAAC;EAAA,CACT,CAAC;AAEX,CAAC;AAED,eAAe1B,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}