{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useSelector, connect, useDispatch } from 'react-redux';\nimport StyleChatFolderCenter from \"./StyleChatFolderCenter\";\nimport AddButton from \"../SvgComponents/AddButton\";\nimport ButtonForSettings from \"../../../../SemiComponents/ButtonForSettings\";\nimport ButtonForAllChat from \"./ComponentForAllChat/AllChatButton\";\nimport RecommendFolderButt from \"./ComponentForAllChat/RecommendFolderButt\";\nimport { addNewFolder, removeRecomendedFolder } from \"../../../../../ReducersAndActions/Actions/SettingsActions/SettingsActions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    arrayOfFolderNames: state.SettingsPagesReducers.AddNewFolder.listOfNewFolder,\n    recomendedFolders: state.SettingsPagesReducers.AddRecomendedFoldert.recomdendedFolders\n  };\n};\nvar ChatFolderCenter = function ChatFolderCenter(_ref) {\n  var navigation = _ref.navigation;\n  var arrayOfFolderNames = useSelector(function (state) {\n    return state.SettingsPagesReducers.AddNewFolder.listOfNewFolder;\n  });\n  var recomendedFolders = useSelector(function (state) {\n    return state.SettingsPagesReducers.AddRecomendedFoldert.recomdendedFolders;\n  });\n  var dispatch = useDispatch();\n  var addItem = function addItem(nameFolder) {\n    console.log(\"function work\");\n    if (nameFolder.trim() !== \"\") {\n      dispatch(removeRecomendedFolder(nameFolder));\n      dispatch(addNewFolder(nameFolder));\n      console.log(\"dispatch \" + nameFolder);\n    }\n  };\n  return _jsx(View, {\n    children: arrayOfFolderNames.length > 0 ? _jsxs(View, {\n      children: [_jsx(Text, {\n        style: StyleChatFolderCenter.articleFolderTextStyle,\n        children: \"Folders\"\n      }), _jsxs(TouchableOpacity, {\n        style: {\n          justifyContent: 'flex-end'\n        },\n        onPress: function onPress() {\n          return navigation.navigate('AddFolderPage');\n        },\n        children: [_jsx(View, {\n          style: StyleChatFolderCenter.newFodlerButton\n        }), _jsxs(View, {\n          style: {\n            position: 'absolute',\n            flexDirection: 'row',\n            marginLeft: '5%',\n            width: \"26%\",\n            height: \"70%\",\n            alignItems: 'center',\n            paddingBottom: '1.5%'\n          },\n          children: [_jsx(View, {\n            style: {\n              paddingLeft: \"6%\"\n            },\n            children: _jsx(AddButton, {})\n          }), _jsx(Text, {\n            style: StyleChatFolderCenter.styleChatFolderText,\n            children: \"New Folder\"\n          })]\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: {\n          marginTop: '0.5%'\n        },\n        children: _jsx(ButtonForAllChat, {\n          text: \"All Chats\"\n        })\n      }), arrayOfFolderNames.map(function (item, index) {\n        return _jsx(TouchableOpacity, {\n          style: {\n            marginTop: \"0.5%\"\n          },\n          children: _jsx(ButtonForSettings, {\n            text: item\n          })\n        }, index);\n      }), _jsx(Text, {\n        style: StyleChatFolderCenter.articleFolderTextStyle,\n        children: \"Recomended folders\"\n      }), recomendedFolders.map(function (item, index) {\n        return _jsx(TouchableOpacity, {\n          style: {\n            marginTop: \"0.5%\"\n          },\n          children: _jsx(RecommendFolderButt, {\n            text: item\n          })\n        }, index);\n      })]\n    }) : _jsxs(View, {\n      children: [_jsx(Text, {\n        style: StyleChatFolderCenter.articleFolderTextStyle,\n        children: \"Folders\"\n      }), _jsxs(TouchableOpacity, {\n        style: {\n          justifyContent: 'flex-end'\n        },\n        onPress: function onPress() {\n          return navigation.navigate('AddFolderPage');\n        },\n        children: [_jsx(View, {\n          style: StyleChatFolderCenter.newFodlerButton\n        }), _jsxs(View, {\n          style: {\n            position: 'absolute',\n            flexDirection: 'row',\n            marginLeft: '5%',\n            width: \"26%\",\n            height: \"70%\",\n            alignItems: 'center',\n            paddingBottom: '1.5%'\n          },\n          children: [_jsx(View, {\n            style: {\n              paddingLeft: \"6%\"\n            },\n            children: _jsx(AddButton, {})\n          }), _jsx(Text, {\n            style: StyleChatFolderCenter.styleChatFolderText,\n            children: \"New Folder\"\n          })]\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: {\n          marginTop: '0.5%'\n        },\n        children: _jsx(ButtonForAllChat, {\n          text: \"All Chats\"\n        })\n      }), _jsx(Text, {\n        style: StyleChatFolderCenter.articleFolderTextStyle,\n        children: \"Recomended folders\"\n      }), recomendedFolders.map(function (item, index) {\n        return _jsx(TouchableOpacity, {\n          style: {\n            marginTop: \"0.5%\"\n          },\n          onPress: function onPress() {\n            return addItem(item);\n          },\n          children: _jsx(RecommendFolderButt, {\n            text: item\n          })\n        }, index);\n      })]\n    })\n  });\n};\nexport default connect(mapStateToProps)(ChatFolderCenter);","map":{"version":3,"names":["React","View","Text","TouchableOpacity","useSelector","connect","useDispatch","StyleChatFolderCenter","AddButton","ButtonForSettings","ButtonForAllChat","RecommendFolderButt","addNewFolder","removeRecomendedFolder","jsx","_jsx","jsxs","_jsxs","mapStateToProps","state","arrayOfFolderNames","SettingsPagesReducers","AddNewFolder","listOfNewFolder","recomendedFolders","AddRecomendedFoldert","recomdendedFolders","ChatFolderCenter","_ref","navigation","dispatch","addItem","nameFolder","console","log","trim","children","length","style","articleFolderTextStyle","justifyContent","onPress","navigate","newFodlerButton","position","flexDirection","marginLeft","width","height","alignItems","paddingBottom","paddingLeft","styleChatFolderText","marginTop","text","map","item","index"],"sources":["D:/project/1project/Messenger/Messenger/Pages/Settings/ChatFolderPage/MainChatFolderPage/ChatFolderCenter/ChatFolderCenter.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { View,Text, TouchableOpacity, ScrollView } from \"react-native\";\r\nimport { useSelector, connect, useDispatch } from 'react-redux';\r\nimport StyleChatFolderCenter from \"./StyleChatFolderCenter\";\r\nimport AddButton from \"../SvgComponents/AddButton\";\r\nimport ButtonForSettings from \"../../../../SemiComponents/ButtonForSettings\";\r\nimport ButtonForAllChat from \"./ComponentForAllChat/AllChatButton\";\r\nimport RecommendFolderButt from \"./ComponentForAllChat/RecommendFolderButt\";\r\nimport { addNewFolder, removeRecomendedFolder } from \"../../../../../ReducersAndActions/Actions/SettingsActions/SettingsActions\";\r\n\r\n\r\nconst mapStateToProps = (state :any) => {\r\n  return({\r\n  arrayOfFolderNames:  state.SettingsPagesReducers.AddNewFolder.listOfNewFolder,\r\n  recomendedFolders: state.SettingsPagesReducers.AddRecomendedFoldert.recomdendedFolders,\r\n})};\r\n\r\n\r\nconst ChatFolderCenter : React.FC<any> = ({ navigation })=>{\r\n\r\n    let arrayOfFolderNames :string[] = useSelector((state :any) => state.SettingsPagesReducers.AddNewFolder.listOfNewFolder)\r\n    let recomendedFolders : string[] = useSelector ((state:any)=> state.SettingsPagesReducers.AddRecomendedFoldert.recomdendedFolders)\r\n    const dispatch = useDispatch();\r\n    const addItem = (nameFolder: string) => {\r\n      console.log(\"function work\")\r\n      if (nameFolder.trim() !== \"\") {\r\n        dispatch(removeRecomendedFolder(nameFolder));\r\n        dispatch(addNewFolder(nameFolder));\r\n        console.log(\"dispatch \" + nameFolder);\r\n      }\r\n    };\r\n      return <View>\r\n        {arrayOfFolderNames.length > 0 ? (\r\n        <View>\r\n            <Text style ={StyleChatFolderCenter.articleFolderTextStyle}>Folders</Text>\r\n                    <TouchableOpacity style ={{ justifyContent:'flex-end',}}  onPress={() => navigation.navigate('AddFolderPage')} >\r\n                        <View style ={StyleChatFolderCenter.newFodlerButton} ></View>\r\n                        <View style ={ {position:'absolute',flexDirection:'row', marginLeft:'5%',width:\"26%\",height:\"70%\",alignItems:'center', paddingBottom:'1.5%'}}>\r\n                          <View style ={{paddingLeft:\"6%\"}}><AddButton></AddButton></View>\r\n                          <Text style={StyleChatFolderCenter.styleChatFolderText}>New Folder</Text>\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={{marginTop:'0.5%'}} >\r\n                      <ButtonForAllChat text=\"All Chats\"></ButtonForAllChat>\r\n                      </TouchableOpacity>\r\n                    {arrayOfFolderNames.map((item, index) => (\r\n                    <TouchableOpacity style={{marginTop:\"0.5%\"}} key={index}  >\r\n                      <ButtonForSettings text={item}></ButtonForSettings>\r\n                      </TouchableOpacity>\r\n                  ))}\r\n                     <Text style ={StyleChatFolderCenter.articleFolderTextStyle}>Recomended folders</Text>\r\n                    {recomendedFolders.map((item, index) => (\r\n                    <TouchableOpacity style={{marginTop:\"0.5%\"}} key={index}  >\r\n                    <RecommendFolderButt text={item}></RecommendFolderButt></TouchableOpacity>\r\n                  ))}\r\n        </View>\r\n      ) : (\r\n        <View>\r\n          <Text style ={StyleChatFolderCenter.articleFolderTextStyle}>Folders</Text>\r\n                    <TouchableOpacity style ={{ justifyContent:'flex-end'}}  onPress={() => navigation.navigate('AddFolderPage')} >\r\n                        <View style ={StyleChatFolderCenter.newFodlerButton} ></View>\r\n                        <View style ={ {position:'absolute',flexDirection:'row', marginLeft:'5%',width:\"26%\",height:\"70%\",alignItems:'center', paddingBottom:'1.5%'}}>\r\n                          <View style ={{paddingLeft:\"6%\"}}><AddButton></AddButton></View>\r\n                          <Text style={StyleChatFolderCenter.styleChatFolderText}>New Folder</Text>\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={{marginTop:'0.5%'}} >\r\n                      <ButtonForAllChat text=\"All Chats\"></ButtonForAllChat>\r\n                      </TouchableOpacity>\r\n                      <Text style ={StyleChatFolderCenter.articleFolderTextStyle}>Recomended folders</Text>\r\n                    {recomendedFolders.map((item, index) => (\r\n                    <TouchableOpacity style={{marginTop:\"0.5%\"}} key={index} onPress={()=>addItem(item)}  >\r\n                      <RecommendFolderButt text={item}></RecommendFolderButt>\r\n                    </TouchableOpacity>\r\n                  ))}\r\n        </View>\r\n      )}\r\n    </View>\r\n}\r\n\r\nexport default connect(mapStateToProps)(ChatFolderCenter);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}