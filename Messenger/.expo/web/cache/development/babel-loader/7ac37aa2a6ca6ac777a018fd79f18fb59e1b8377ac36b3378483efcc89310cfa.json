{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { styles } from \"./Style/Style\";\nimport { PIN_LENGTH, renderCodeCells, handleDeletePress } from \"./Script/ScriptCodePassword\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function CodePassword(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    pin = _useState2[0],\n    setPin = _useState2[1];\n  var navigateToChatList = function navigateToChatList() {\n    navigation.navigate('ChatList');\n  };\n  var handleCodeInput = function handleCodeInput() {\n    if (pin.length === PIN_LENGTH) {\n      navigateToChatList();\n    }\n  };\n  return _jsxs(ImageBackground, {\n    source: require(\"./Image/Background.png\"),\n    style: styles.backgroundImage,\n    children: [_jsx(Image, {\n      source: require(\"./Image/Vector.png\"),\n      style: styles.imageStyle\n    }), _jsx(Text, {\n      style: styles.header,\n      children: \"Enter the telentic lock code\"\n    }), _jsxs(View, {\n      style: styles.pinContainer,\n      children: [pin.split('').map(function (_, index) {\n        return _jsx(View, {\n          style: [styles.pinDot, styles.activeDot]\n        }, index);\n      }), Array.from({\n        length: PIN_LENGTH - pin.length\n      }).map(function (_, index) {\n        return _jsx(View, {\n          style: styles.pinDot\n        }, index);\n      })]\n    }), _jsxs(View, {\n      style: styles.codeInput,\n      onPress: navigateToCodePassword,\n      children: [_jsx(View, {\n        style: styles.codeRow,\n        children: renderCodeCells(pin, setPin).slice(0, 3)\n      }), _jsx(View, {\n        style: styles.codeRow,\n        children: renderCodeCells(pin, setPin).slice(3, 6)\n      }), _jsx(View, {\n        style: styles.codeRow,\n        children: renderCodeCells(pin, setPin).slice(6, 9)\n      }), renderCodeCells(pin, setPin).slice(9, 10)]\n    }), _jsx(Text, {\n      style: styles.header,\n      onPress: function onPress(event) {\n        return handleDeletePress(pin, setPin);\n      },\n      children: \"Delete\"\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","ImageBackground","Image","View","Text","styles","PIN_LENGTH","renderCodeCells","handleDeletePress","jsx","_jsx","jsxs","_jsxs","CodePassword","_ref","navigation","_useState","_useState2","_slicedToArray","pin","setPin","navigateToChatList","navigate","handleCodeInput","length","source","require","style","backgroundImage","children","imageStyle","header","pinContainer","split","map","_","index","pinDot","activeDot","Array","from","codeInput","onPress","navigateToCodePassword","codeRow","slice","event"],"sources":["D:/repo/Messenger/Messenger/Pages/CodePassword/CodePassword.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { ImageBackground, Image, View, Text, TouchableOpacity } from 'react-native';\r\nimport { styles } from './Style/Style';\r\nimport { PIN_LENGTH, renderCodeCells, handleDeletePress } from './Script/ScriptCodePassword';\r\nimport LinearGradient from 'react-native-linear-gradient';\r\n\r\nexport default function CodePassword({ navigation }) {\r\n  const [pin, setPin] = useState('');\r\n\r\n  const navigateToChatList = () => {\r\n    navigation.navigate('ChatList');\r\n  };\r\n\r\n  const handleCodeInput = () => {\r\n    if (pin.length === PIN_LENGTH) {\r\n      navigateToChatList();\r\n    }\r\n  };\r\n\r\n  return (  \r\n    <ImageBackground source={require('./Image/Background.png')} style={styles.backgroundImage}>\r\n    \r\n            <Image source={require('./Image/Vector.png')}\r\n            style={styles.imageStyle}/>\r\n      <Text style={styles.header}>Enter the telentic lock code</Text>\r\n      <View style={styles.pinContainer}>\r\n  {pin.split('').map((_, index) => (\r\n    <View key={index} style={[styles.pinDot, styles.activeDot]} />\r\n  ))}\r\n  {Array.from({ length: PIN_LENGTH - pin.length }).map((_, index) => (\r\n    <View key={index} style={styles.pinDot} />\r\n  ))}\r\n  </View>\r\n  <View style={styles.codeInput}\r\n   onPress={navigateToCodePassword}>\r\n        <View style={styles.codeRow}>{renderCodeCells(pin, setPin).slice(0, 3)}</View>\r\n        <View style={styles.codeRow}>{renderCodeCells(pin, setPin).slice(3, 6)}</View>\r\n        <View style={styles.codeRow}>{renderCodeCells(pin, setPin).slice(6, 9)}</View>\r\n        {renderCodeCells(pin, setPin).slice(9,10)}\r\n  </View>      \r\n        <Text style={styles.header} onPress={(event) => handleDeletePress(pin, setPin)}>Delete</Text>\r\n    </ImageBackground>\r\n  );}  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}