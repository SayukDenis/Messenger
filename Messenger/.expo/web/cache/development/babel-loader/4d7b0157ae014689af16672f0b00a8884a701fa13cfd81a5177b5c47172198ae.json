{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar React = require(\"react\");\nvar react_native_1 = require(\"react-native-web/dist/index\");\nvar image_viewer_style_1 = require(\"./image-viewer.style\");\nvar Props = function () {\n  function Props() {\n    this.show = false;\n    this.imageUrls = [];\n    this.flipThreshold = 80;\n    this.maxOverflow = 300;\n    this.index = 0;\n    this.failImageSource = undefined;\n    this.backgroundColor = 'black';\n    this.footerContainerStyle = {};\n    this.menuContext = {\n      saveToLocal: 'save to the album',\n      cancel: 'cancel'\n    };\n    this.saveToLocalByLongPress = true;\n    this.enableImageZoom = true;\n    this.style = {};\n    this.enableSwipeDown = false;\n    this.enablePreload = false;\n    this.pageAnimateTime = 100;\n    this.useNativeDriver = false;\n    this.onLongPress = function () {};\n    this.onClick = function () {};\n    this.onDoubleClick = function () {};\n    this.onSave = function () {};\n    this.onMove = function () {};\n    this.renderHeader = function () {\n      return null;\n    };\n    this.renderFooter = function () {\n      return null;\n    };\n    this.renderIndicator = function (currentIndex, allSize) {\n      return React.createElement(react_native_1.View, {\n        style: image_viewer_style_1.simpleStyle.count\n      }, React.createElement(react_native_1.Text, {\n        style: image_viewer_style_1.simpleStyle.countText\n      }, currentIndex + '/' + allSize));\n    };\n    this.renderImage = function (props) {\n      return React.createElement(react_native_1.Image, props);\n    };\n    this.renderArrowLeft = function () {\n      return null;\n    };\n    this.renderArrowRight = function () {\n      return null;\n    };\n    this.onShowModal = function () {};\n    this.onCancel = function () {};\n    this.onSwipeDown = function () {};\n    this.loadingRender = function () {\n      return null;\n    };\n    this.onSaveToCamera = function () {};\n    this.onChange = function () {};\n  }\n  return Props;\n}();\nexports.Props = Props;\nvar State = function () {\n  function State() {\n    this.show = false;\n    this.currentShowIndex = 0;\n    this.prevIndexProp = 0;\n    this.imageLoaded = false;\n    this.imageSizes = [];\n    this.isShowMenu = false;\n  }\n  return State;\n}();\nexports.State = State;","map":{"version":3,"names":["React","require","react_native_1","image_viewer_style_1","Props","show","imageUrls","flipThreshold","maxOverflow","index","failImageSource","undefined","backgroundColor","footerContainerStyle","menuContext","saveToLocal","cancel","saveToLocalByLongPress","enableImageZoom","style","enableSwipeDown","enablePreload","pageAnimateTime","useNativeDriver","onLongPress","onClick","onDoubleClick","onSave","onMove","renderHeader","renderFooter","renderIndicator","currentIndex","allSize","createElement","View","simpleStyle","count","Text","countText","renderImage","props","Image","renderArrowLeft","renderArrowRight","onShowModal","onCancel","onSwipeDown","loadingRender","onSaveToCamera","onChange","exports","State","currentShowIndex","prevIndexProp","imageLoaded","imageSizes","isShowMenu"],"sources":["/home/zatibmag/Desktop/Project/Messenger/Messenger/node_modules/react-native-image-zoom-viewer/src/image-viewer.type.ts"],"sourcesContent":["import * as React from 'react';\nimport { Image, ImageURISource, Text, View, ViewStyle } from 'react-native';\nimport { simpleStyle } from './image-viewer.style';\n\ninterface IOnMove {\n  type: string;\n  positionX: number;\n  positionY: number;\n  scale: number;\n  zoomCurrentDistance: number;\n}\n\nexport class Props {\n  /**\n   * 是否显示\n   */\n  public show?: boolean = false;\n\n  /**\n   * 图片数组\n   */\n  public imageUrls: IImageInfo[] = [];\n\n  /**\n   * 滑动到下一页的X阈值\n   */\n  public flipThreshold?: number = 80;\n\n  /**\n   * 当前页能滑到下一页X位置最大值\n   */\n  public maxOverflow?: number = 300;\n\n  /**\n   * 初始显示第几张图\n   */\n  public index?: number = 0;\n\n  /**\n   * 加载失败的图\n   */\n  public failImageSource?: IImageInfo = undefined;\n\n  /**\n   * 背景颜色\n   */\n  public backgroundColor?: string = 'black';\n\n  /**\n   * style props for the footer container\n   */\n  public footerContainerStyle?: object = {};\n\n  /**\n   * Menu Context Values\n   */\n  public menuContext?: any = { saveToLocal: 'save to the album', cancel: 'cancel' };\n\n  /**\n   * 是否开启长按保存到本地的功能\n   */\n  public saveToLocalByLongPress?: boolean = true;\n\n  /**\n   * 是否允许缩放图片\n   */\n  public enableImageZoom?: boolean = true;\n\n  public style?: ViewStyle = {};\n\n  /**\n   * Enable swipe down to close image viewer.\n   * When swipe down, will trigger onCancel.\n   */\n  public enableSwipeDown?: boolean = false;\n\n  /**\n   * threshold for firing swipe down function\n   */\n  public swipeDownThreshold?: number;\n\n  public doubleClickInterval?: number;\n\n  /**\n   * Min and Max scale for zooming\n   */\n  public minScale?: number;\n\n  public maxScale?: number;\n\n  /**\n   * 是否预加载图片\n   */\n  public enablePreload?: boolean = false;\n\n  /**\n   * 翻页时的动画时间\n   */\n  public pageAnimateTime?: number = 100;\n\n  /** \n   * 是否启用原生动画驱动\n   * Whether to use the native code to perform animations.\n   */\n  public useNativeDriver?: boolean = false;\n\n  /**\n   * 长按图片的回调\n   */\n  public onLongPress?: (image?: IImageInfo) => void = () => {\n    //\n  };\n\n  /**\n   * 单击回调\n   */\n  public onClick?: (close?: () => any, currentShowIndex?: number) => void = () => {\n    //\n  };\n\n  /**\n   * 双击回调\n   */\n  public onDoubleClick?: (close?: () => any) => void = () => {\n    //\n  };\n\n  /**\n   * 图片保存到本地方法，如果写了这个方法，就不会调取系统默认方法\n   * 针对安卓不支持 saveToCameraRoll 远程图片，可以在安卓调用此回调，调用安卓原生接口\n   */\n  public onSave?: (url: string) => void = () => {\n    //\n  };\n\n  public onMove?: (position?: IOnMove) => void = () => {\n    //\n  };\n\n  /**\n   * 自定义头部\n   */\n  public renderHeader?: (currentIndex?: number) => React.ReactElement<any> = () => {\n    return null as any;\n  };\n\n  /**\n   * 自定义尾部\n   */\n  public renderFooter?: (currentIndex: number) => React.ReactElement<any> = () => {\n    return null as any;\n  };\n\n  /**\n   * 自定义计时器\n   */\n  public renderIndicator?: (currentIndex?: number, allSize?: number) => React.ReactElement<any> = (\n    currentIndex?: number,\n    allSize?: number\n  ) => {\n    return React.createElement(\n      View,\n      { style: simpleStyle.count },\n      React.createElement(Text, { style: simpleStyle.countText }, currentIndex + '/' + allSize)\n    );\n  };\n\n  /**\n   * Render image component\n   */\n  public renderImage?: (props: any) => React.ReactElement<any> = (props: any) => {\n    return React.createElement(Image, props);\n  };\n\n  /**\n   * 自定义左翻页按钮\n   */\n  public renderArrowLeft?: () => React.ReactElement<any> = () => {\n    return null as any;\n  };\n\n  /**\n   * 自定义右翻页按钮\n   */\n  public renderArrowRight?: () => React.ReactElement<any> = () => {\n    return null as any;\n  };\n\n  /**\n   * 弹出大图的回调\n   */\n  public onShowModal?: (content?: any) => void = () => {\n    //\n  };\n\n  /**\n   * 取消看图的回调\n   */\n  public onCancel?: () => void = () => {\n    //\n  };\n\n  /**\n   * function that fires when user swipes down\n   */\n  public onSwipeDown?: () => void = () => {\n    //\n  };\n\n  /**\n   * 渲染loading元素\n   */\n  public loadingRender?: () => React.ReactElement<any> = () => {\n    return null as any;\n  };\n\n  /**\n   * 保存到相册的回调\n   */\n  public onSaveToCamera?: (index?: number) => void = () => {\n    //\n  };\n\n  /**\n   * 当图片切换时触发\n   */\n  public onChange?: (index?: number) => void = () => {\n    //\n  };\n\n  public menus?: ({ cancel, saveToLocal }: any) => React.ReactElement<any>;\n}\n\nexport class State {\n  /**\n   * 是否显示\n   */\n  public show?: boolean = false;\n\n  /**\n   * 当前显示第几个\n   */\n  public currentShowIndex?: number = 0;\n\n  /**\n   * Used to detect if parent component applied new index prop\n   */\n  public prevIndexProp?: number = 0;\n\n  /**\n   * 图片拉取是否完毕了\n   */\n  public imageLoaded?: boolean = false;\n\n  /**\n   * 图片长宽列表\n   */\n  public imageSizes?: IImageSize[] = [];\n\n  /**\n   * 是否出现功能菜单\n   */\n  public isShowMenu?: boolean = false;\n}\n\nexport interface IImageInfo {\n  url: string;\n  /**\n   * 没有的话会自动拉取\n   */\n  width?: number;\n  /**\n   * 没有的话会自动拉取\n   */\n  height?: number;\n  /**\n   * 图片字节大小(kb为单位)\n   */\n  sizeKb?: number;\n  /**\n   * 原图字节大小(kb为单位)\n   * 如果设置了这个字段,并且有原图url,则显示查看原图按钮\n   */\n  originSizeKb?: number;\n  /**\n   * 原图url地址\n   */\n  originUrl?: string;\n  /**\n   * Pass to image props\n   */\n  props?: any;\n  /**\n   * 初始是否不超高 TODO:\n   */\n  freeHeight?: boolean;\n  /**\n   * 初始是否不超高 TODO:\n   */\n  freeWidth?: boolean;\n}\n\nexport interface IImageSize {\n  width: number;\n  height: number;\n  // 图片加载状态\n  status: 'loading' | 'success' | 'fail';\n}\n"],"mappings":";;;;;AAAA,IAAAA,KAAA,GAAAC,OAAA;AAA+B,IAAAC,cAAA,GAAAD,OAAA;AAE/B,IAAAE,oBAAA,GAAAF,OAAA;AAUA,IAAAG,KAAA;EAAA,SAAAA,MAAA;IAIS,KAAAC,IAAI,GAAa,KAAK;IAKtB,KAAAC,SAAS,GAAiB,EAAE;IAK5B,KAAAC,aAAa,GAAY,EAAE;IAK3B,KAAAC,WAAW,GAAY,GAAG;IAK1B,KAAAC,KAAK,GAAY,CAAC;IAKlB,KAAAC,eAAe,GAAgBC,SAAS;IAKxC,KAAAC,eAAe,GAAY,OAAO;IAKlC,KAAAC,oBAAoB,GAAY,EAAE;IAKlC,KAAAC,WAAW,GAAS;MAAEC,WAAW,EAAE,mBAAmB;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAK1E,KAAAC,sBAAsB,GAAa,IAAI;IAKvC,KAAAC,eAAe,GAAa,IAAI;IAEhC,KAAAC,KAAK,GAAe,EAAE;IAMtB,KAAAC,eAAe,GAAa,KAAK;IAmBjC,KAAAC,aAAa,GAAa,KAAK;IAK/B,KAAAC,eAAe,GAAY,GAAG;IAM9B,KAAAC,eAAe,GAAa,KAAK;IAKjC,KAAAC,WAAW,GAAkC,aAEpD,CAAC;IAKM,KAAAC,OAAO,GAA4D,aAE1E,CAAC;IAKM,KAAAC,aAAa,GAAiC,aAErD,CAAC;IAMM,KAAAC,MAAM,GAA2B,aAExC,CAAC;IAEM,KAAAC,MAAM,GAAkC,aAE/C,CAAC;IAKM,KAAAC,YAAY,GAAwD;MACzE,OAAO,IAAW;IACpB,CAAC;IAKM,KAAAC,YAAY,GAAuD;MACxE,OAAO,IAAW;IACpB,CAAC;IAKM,KAAAC,eAAe,GAA0E,UAC9FC,YAAqB,EACrBC,OAAgB;MAEhB,OAAOjC,KAAK,CAACkC,aAAa,CACxBhC,cAAA,CAAAiC,IAAI,EACJ;QAAEhB,KAAK,EAAEhB,oBAAA,CAAAiC,WAAW,CAACC;MAAK,CAAE,EAC5BrC,KAAK,CAACkC,aAAa,CAAChC,cAAA,CAAAoC,IAAI,EAAE;QAAEnB,KAAK,EAAEhB,oBAAA,CAAAiC,WAAW,CAACG;MAAS,CAAE,EAAEP,YAAY,GAAG,GAAG,GAAGC,OAAO,CAAC,CAC1F;IACH,CAAC;IAKM,KAAAO,WAAW,GAA6C,UAACC,KAAU;MACxE,OAAOzC,KAAK,CAACkC,aAAa,CAAChC,cAAA,CAAAwC,KAAK,EAAED,KAAK,CAAC;IAC1C,CAAC;IAKM,KAAAE,eAAe,GAAmC;MACvD,OAAO,IAAW;IACpB,CAAC;IAKM,KAAAC,gBAAgB,GAAmC;MACxD,OAAO,IAAW;IACpB,CAAC;IAKM,KAAAC,WAAW,GAA6B,aAE/C,CAAC;IAKM,KAAAC,QAAQ,GAAgB,aAE/B,CAAC;IAKM,KAAAC,WAAW,GAAgB,aAElC,CAAC;IAKM,KAAAC,aAAa,GAAmC;MACrD,OAAO,IAAW;IACpB,CAAC;IAKM,KAAAC,cAAc,GAA8B,aAEnD,CAAC;IAKM,KAAAC,QAAQ,GAA8B,aAE7C,CAAC;EAGH;EAAA,OAAA9C,KAAC;AAAD,CAAC,CA3ND;AAAa+C,OAAA,CAAA/C,KAAA,GAAAA,KAAA;AA6Nb,IAAAgD,KAAA;EAAA,SAAAA,MAAA;IAIS,KAAA/C,IAAI,GAAa,KAAK;IAKtB,KAAAgD,gBAAgB,GAAY,CAAC;IAK7B,KAAAC,aAAa,GAAY,CAAC;IAK1B,KAAAC,WAAW,GAAa,KAAK;IAK7B,KAAAC,UAAU,GAAkB,EAAE;IAK9B,KAAAC,UAAU,GAAa,KAAK;EACrC;EAAA,OAAAL,KAAC;AAAD,CAAC,CA9BD;AAAaD,OAAA,CAAAC,KAAA,GAAAA,KAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}