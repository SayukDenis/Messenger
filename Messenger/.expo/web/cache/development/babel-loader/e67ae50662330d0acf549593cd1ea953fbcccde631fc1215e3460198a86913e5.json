{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport StylePassCentre from \"./StylePasswordCenter\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MultipleSwitches = function MultipleSwitches() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isSwitch1On = _useState2[0],\n    setIsSwitch1On = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isSwitch2On = _useState4[0],\n    setIsSwitch2On = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isButtonDisabled = _useState6[0],\n    setIsButtonDisabled = _useState6[1];\n  var handleSwitch1Change = function handleSwitch1Change(value) {\n    setIsSwitch1On(value);\n    setIsButtonDisabled(!value);\n  };\n  var handleSwitch2Change = function handleSwitch2Change(value) {\n    setIsSwitch2On(value);\n    setIsButtonDisabled(!value);\n  };\n  var handleButtonPress = function handleButtonPress() {\n    alert('Кнопка була натиснута');\n  };\n  return _jsxs(View, {\n    style: StylePassCentre.passConteiner,\n    children: [_jsxs(TouchableOpacity, {\n      style: StylePassCentre.funcOn,\n      children: [_jsx(Text, {\n        style: StylePassCentre.styleText,\n        children: \"Off lock code\"\n      }), _jsx(Switch, {\n        trackColor: {\n          false: \"#767577\",\n          true: \"#81b0ff\"\n        },\n        thumbColor: isSwitch1On ? \"#f5dd4b\" : \"#f4f3f4\",\n        ios_backgroundColor: \"#3e3e3e\",\n        onValueChange: handleSwitch1Change,\n        value: isSwitch1On\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: StylePassCentre.funcOn,\n      children: _jsx(Text, {\n        style: StylePassCentre.styleText,\n        children: \"Edit lock code\"\n      })\n    }), _jsxs(TouchableOpacity, {\n      style: StylePassCentre.funcOn,\n      children: [_jsx(Text, {\n        style: StylePassCentre.styleText,\n        children: \"Unlock to Face or Touch id\"\n      }), _jsx(Switch, {\n        trackColor: {\n          false: \"#767577\",\n          true: \"#81b0ff\"\n        },\n        thumbColor: isSwitch2On ? \"#f5dd4b\" : \"#f4f3f4\",\n        ios_backgroundColor: \"#3e3e3e\",\n        onValueChange: handleSwitch2Change,\n        value: isSwitch2On\n      })]\n    })]\n  });\n};\nexport default MultipleSwitches;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","Switch","StylePassCentre","jsx","_jsx","jsxs","_jsxs","MultipleSwitches","_useState","_useState2","_slicedToArray","isSwitch1On","setIsSwitch1On","_useState3","_useState4","isSwitch2On","setIsSwitch2On","_useState5","_useState6","isButtonDisabled","setIsButtonDisabled","handleSwitch1Change","value","handleSwitch2Change","handleButtonPress","alert","style","passConteiner","children","funcOn","styleText","trackColor","false","true","thumbColor","ios_backgroundColor","onValueChange"],"sources":["D:/project/try1/Messenger/Messenger/Pages/Settings/ConfidentialityPage/Password/PasswordCenter/MultiSwitches/MulitiSwithes.tsx"],"sourcesContent":["import React,{useState} from \"react\";\r\nimport { View, Text, TouchableOpacity, Switch } from \"react-native\";\r\nimport StylePassCentre from \"./StylePasswordCenter\";\r\n\r\nconst MultipleSwitches = () => {\r\n    const [isSwitch1On, setIsSwitch1On] = useState(false);\r\n  const [isSwitch2On, setIsSwitch2On] = useState(false);\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(true);\r\n\r\n  const handleSwitch1Change = (value: boolean | ((prevState: boolean) => boolean)) => {\r\n    setIsSwitch1On(value);\r\n\r\n    // Перевіряємо стан Switch 1 та налаштовуємо доступність Switch 2 та кнопки\r\n    setIsButtonDisabled(!value);\r\n  };\r\n\r\n  const handleSwitch2Change = (value: boolean | ((prevState: boolean) => boolean)) => {\r\n    setIsSwitch2On(value);\r\n\r\n    // Перевіряємо стан Switch 2 та налаштовуємо доступність кнопки\r\n    setIsButtonDisabled(!value);\r\n  };\r\n\r\n  const handleButtonPress = () => {\r\n    // Обробник натискання на кнопку\r\n    alert('Кнопка була натиснута');\r\n  };\r\n\r\n    return<View style={StylePassCentre.passConteiner}>\r\n    <TouchableOpacity style={StylePassCentre.funcOn} ><Text style={StylePassCentre.styleText} >Off lock code</Text>\r\n    <Switch\r\n          trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\r\n          thumbColor={isSwitch1On ? \"#f5dd4b\" : \"#f4f3f4\"}\r\n          ios_backgroundColor=\"#3e3e3e\"\r\n          onValueChange={handleSwitch1Change}\r\n          value={isSwitch1On}\r\n        />\r\n    </TouchableOpacity>\r\n    <TouchableOpacity style={StylePassCentre.funcOn} ><Text style={StylePassCentre.styleText} >Edit lock code</Text>\r\n    </TouchableOpacity>\r\n    <TouchableOpacity style={StylePassCentre.funcOn} ><Text style={StylePassCentre.styleText} >Unlock to Face or Touch id</Text>\r\n    <Switch\r\n          trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\r\n          thumbColor={isSwitch2On ? \"#f5dd4b\" : \"#f4f3f4\"}\r\n          ios_backgroundColor=\"#3e3e3e\"\r\n          onValueChange={handleSwitch2Change}\r\n          value={isSwitch2On}\r\n        />\r\n    </TouchableOpacity>\r\n</View>\r\n}\r\n\r\nexport default MultipleSwitches;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}