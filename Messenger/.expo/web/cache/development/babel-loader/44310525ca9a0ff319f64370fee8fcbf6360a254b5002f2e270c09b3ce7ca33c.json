{"ast":null,"code":"import React from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar NavigationForAuthorization = function NavigationForAuthorization() {\n  return _jsx(_Fragment, {});\n};\nvar ConfidentialityPageNavigator = function ConfidentialityPageNavigator() {\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"ConfidentialityPage\",\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"ConfidentialityPage\",\n      component: ConfidentialityPage\n    }), _jsx(Stack.Screen, {\n      name: \"BlockUsers\",\n      component: BlockUser\n    }), _jsx(Stack.Screen, {\n      name: \"PasswordPage\",\n      component: PasswordPage\n    })]\n  });\n};\nvar EditPageNavigator = function EditPageNavigator() {\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"EditPage\",\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"EditPage\",\n      component: EditPage\n    }), _jsx(Stack.Screen, {\n      name: \"EditBioPage\",\n      component: EditBioPage\n    }), _jsx(Stack.Screen, {\n      name: \"EditUsernamePage\",\n      component: EditUsernamePage\n    })]\n  });\n};\nvar ChatFolderPageNAvigator = function ChatFolderPageNAvigator() {\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"Chatfolders\",\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Chatfolders\",\n      component: ChatFolderPage\n    }), _jsx(Stack.Screen, {\n      name: \"AddFolderPage\",\n      component: AddFolderPage\n    })]\n  });\n};\nexport default NavigationForAuthorization;","map":{"version":3,"names":["React","Fragment","_Fragment","jsx","_jsx","jsxs","_jsxs","NavigationForAuthorization","ConfidentialityPageNavigator","Stack","Navigator","initialRouteName","screenOptions","headerShown","children","Screen","name","component","ConfidentialityPage","BlockUser","PasswordPage","EditPageNavigator","EditPage","EditBioPage","EditUsernamePage","ChatFolderPageNAvigator","ChatFolderPage","AddFolderPage"],"sources":["D:/repo/Messenger/Messenger/Pages/Authorization/NavigationForAuthorization.tsx"],"sourcesContent":["import React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport Authorization from './Authorization';\r\nimport PhoneCodeRegistration from './Pages/PhoneCodeRegistration';\r\nimport Registration from './Pages/Registration';\r\n\r\nconst NavigationForAuthorization = () => {\r\n    return (\r\n      <>\r\n      \r\n      </>\r\n    );\r\n  };\r\n  \r\n  const ConfidentialityPageNavigator=()=> {\r\n    return (\r\n      <Stack.Navigator\r\n      initialRouteName=\"ConfidentialityPage\"\r\n      screenOptions={{\r\n        headerShown: false,\r\n      }}\r\n    >\r\n        <Stack.Screen name=\"ConfidentialityPage\" component={ConfidentialityPage} />\r\n        <Stack.Screen name=\"BlockUsers\" component={BlockUser} />\r\n        <Stack.Screen name=\"PasswordPage\" component={PasswordPage} />\r\n      </Stack.Navigator>\r\n    );\r\n  }\r\n  const EditPageNavigator=()=> {\r\n    return (\r\n      <Stack.Navigator\r\n      initialRouteName=\"EditPage\"\r\n      screenOptions={{\r\n        headerShown: false,\r\n      }}\r\n    >\r\n        <Stack.Screen name=\"EditPage\" component={EditPage} />\r\n        <Stack.Screen name=\"EditBioPage\" component={EditBioPage} />\r\n        <Stack.Screen name=\"EditUsernamePage\" component={EditUsernamePage} />\r\n      </Stack.Navigator>\r\n    );\r\n  }\r\n  \r\n  const ChatFolderPageNAvigator=()=> {\r\n    return (\r\n      <Stack.Navigator\r\n      initialRouteName=\"Chatfolders\"\r\n      screenOptions={{\r\n        headerShown: false,\r\n      }}\r\n    >\r\n        <Stack.Screen name=\"Chatfolders\" component={ChatFolderPage} />\r\n        <Stack.Screen name=\"AddFolderPage\" component={AddFolderPage} />\r\n      </Stack.Navigator>\r\n    );\r\n  }\r\n  \r\n  export default NavigationForAuthorization;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAO1B,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA0BA,CAAA,EAAS;EACrC,OACEH,IAAA,CAAAF,SAAA,IAEE,CAAC;AAEP,CAAC;AAED,IAAMM,4BAA4B,GAAC,SAA7BA,4BAA4BA,CAAA,EAAM;EACtC,OACEF,KAAA,CAACG,KAAK,CAACC,SAAS;IAChBC,gBAAgB,EAAC,qBAAqB;IACtCC,aAAa,EAAE;MACbC,WAAW,EAAE;IACf,CAAE;IAAAC,QAAA,GAEAV,IAAA,CAACK,KAAK,CAACM,MAAM;MAACC,IAAI,EAAC,qBAAqB;MAACC,SAAS,EAAEC;IAAoB,CAAE,CAAC,EAC3Ed,IAAA,CAACK,KAAK,CAACM,MAAM;MAACC,IAAI,EAAC,YAAY;MAACC,SAAS,EAAEE;IAAU,CAAE,CAAC,EACxDf,IAAA,CAACK,KAAK,CAACM,MAAM;MAACC,IAAI,EAAC,cAAc;MAACC,SAAS,EAAEG;IAAa,CAAE,CAAC;EAAA,CAC9C,CAAC;AAEtB,CAAC;AACD,IAAMC,iBAAiB,GAAC,SAAlBA,iBAAiBA,CAAA,EAAM;EAC3B,OACEf,KAAA,CAACG,KAAK,CAACC,SAAS;IAChBC,gBAAgB,EAAC,UAAU;IAC3BC,aAAa,EAAE;MACbC,WAAW,EAAE;IACf,CAAE;IAAAC,QAAA,GAEAV,IAAA,CAACK,KAAK,CAACM,MAAM;MAACC,IAAI,EAAC,UAAU;MAACC,SAAS,EAAEK;IAAS,CAAE,CAAC,EACrDlB,IAAA,CAACK,KAAK,CAACM,MAAM;MAACC,IAAI,EAAC,aAAa;MAACC,SAAS,EAAEM;IAAY,CAAE,CAAC,EAC3DnB,IAAA,CAACK,KAAK,CAACM,MAAM;MAACC,IAAI,EAAC,kBAAkB;MAACC,SAAS,EAAEO;IAAiB,CAAE,CAAC;EAAA,CACtD,CAAC;AAEtB,CAAC;AAED,IAAMC,uBAAuB,GAAC,SAAxBA,uBAAuBA,CAAA,EAAM;EACjC,OACEnB,KAAA,CAACG,KAAK,CAACC,SAAS;IAChBC,gBAAgB,EAAC,aAAa;IAC9BC,aAAa,EAAE;MACbC,WAAW,EAAE;IACf,CAAE;IAAAC,QAAA,GAEAV,IAAA,CAACK,KAAK,CAACM,MAAM;MAACC,IAAI,EAAC,aAAa;MAACC,SAAS,EAAES;IAAe,CAAE,CAAC,EAC9DtB,IAAA,CAACK,KAAK,CAACM,MAAM;MAACC,IAAI,EAAC,eAAe;MAACC,SAAS,EAAEU;IAAc,CAAE,CAAC;EAAA,CAChD,CAAC;AAEtB,CAAC;AAED,eAAepB,0BAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}