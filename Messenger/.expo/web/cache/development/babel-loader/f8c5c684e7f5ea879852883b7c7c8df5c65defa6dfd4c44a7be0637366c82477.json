{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { styles } from \"./Styles\";\nimport Header from \"../../SemiComponents/Header\";\nimport GoBackButton from \"../../SemiComponents/GoBackButton\";\nimport PlusIcon from \"./Icons/PlusIcon\";\nimport { user } from \"../../SemiComponents/DBUser\";\nimport BinIcon from \"../../SemiComponents/MainScreen/Icons/BinIcon\";\nimport Blur from \"../../SemiComponents/MainScreen/Blur\";\nimport RemovalApproval from \"../../SemiComponents/MainScreen/RemovalApproval\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var update = {\n  digit: 0\n};\nvar BranchesScreen = function BranchesScreen(_ref) {\n  var navigation = _ref.navigation;\n  var branchesTitle = \"Branches\";\n  var branchTitle = \"Branch\";\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isDeleteBranchPressed = _useState2[0],\n    setIsDeleteBranchPressed = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    branchNameToRemove = _useState4[0],\n    setBranchNameToRemove = _useState4[1];\n  return _jsxs(View, {\n    style: styles.mainContainer,\n    children: [_jsx(Blur, {\n      visibleWhen: isDeleteBranchPressed,\n      onPress: function onPress() {\n        setIsDeleteBranchPressed(false);\n      },\n      style: styles.blurEffect\n    }), _jsx(Header, {\n      primaryTitle: branchesTitle\n    }), _jsx(GoBackButton, {\n      onPress: function onPress() {\n        return navigation.goBack();\n      }\n    }), _jsx(RemovalApproval, {\n      onAnyPress: function onAnyPress() {\n        setIsDeleteBranchPressed(false);\n      },\n      onAgreePress: function onAgreePress() {\n        var branchToRemoveNow = user.branches.find(function (branch) {\n          return branch.name === branchNameToRemove;\n        });\n        if (branchToRemoveNow) {\n          user.branches.splice(user.branches.indexOf(branchToRemoveNow), 1);\n        }\n        setBranchNameToRemove(\"\");\n      },\n      isPressed: isDeleteBranchPressed,\n      text: user.removalText + \" \" + branchNameToRemove + \"?\"\n    }), _jsxs(TouchableOpacity, {\n      onPress: function onPress() {\n        navigation.navigate(\"NewBranchScreen\");\n      },\n      style: [styles.settingOption, {\n        zIndex: 1\n      }],\n      children: [_jsx(PlusIcon, {\n        style: styles.plusIcon\n      }), _jsx(Text, {\n        style: styles.plusBranchTitle,\n        children: branchTitle\n      })]\n    }), _jsx(FlatList, {\n      data: user.branches.map(function (branch) {\n        return {\n          branch: branch\n        };\n      }),\n      keyExtractor: function keyExtractor(item) {\n        return item.branch.name;\n      },\n      horizontal: false,\n      numColumns: 1,\n      contentContainerStyle: {\n        paddingBottom: 0.07 * Dimensions.get(\"screen\").height,\n        zIndex: 0\n      },\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsxs(TouchableOpacity, {\n          style: styles.settingOption,\n          children: [_jsx(View, {\n            style: [styles.branchAvatarInList, {\n              backgroundColor: item.branch.color\n            }],\n            children: _jsx(Text, {\n              style: {\n                fontSize: 20\n              },\n              children: item.branch.emoji\n            })\n          }), _jsx(View, {\n            style: styles.branchTitleContainer,\n            children: _jsx(Text, {\n              numberOfLines: 1,\n              style: styles.branchTitleInList,\n              children: item.branch.name\n            })\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              setIsDeleteBranchPressed(true);\n              setBranchNameToRemove(item.branch.name);\n            },\n            style: styles.binIconContainer,\n            children: _jsx(BinIcon, {\n              style: styles.binIcon\n            })\n          })]\n        });\n      }\n    })]\n  });\n};\nexport default BranchesScreen;","map":{"version":3,"names":["React","useState","View","TouchableOpacity","Text","FlatList","Dimensions","styles","Header","GoBackButton","PlusIcon","user","BinIcon","Blur","RemovalApproval","jsx","_jsx","jsxs","_jsxs","update","digit","BranchesScreen","_ref","navigation","branchesTitle","branchTitle","_useState","_useState2","_slicedToArray","isDeleteBranchPressed","setIsDeleteBranchPressed","_useState3","_useState4","branchNameToRemove","setBranchNameToRemove","style","mainContainer","children","visibleWhen","onPress","blurEffect","primaryTitle","goBack","onAnyPress","onAgreePress","branchToRemoveNow","branches","find","branch","name","splice","indexOf","isPressed","text","removalText","navigate","settingOption","zIndex","plusIcon","plusBranchTitle","data","map","keyExtractor","item","horizontal","numColumns","contentContainerStyle","paddingBottom","get","height","renderItem","_ref2","branchAvatarInList","backgroundColor","color","fontSize","emoji","branchTitleContainer","numberOfLines","branchTitleInList","binIconContainer","binIcon"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/Profiles/DialogueProfile/BranchesScreen/BranchesScreen.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  TouchableOpacity,\r\n  Text,\r\n  FlatList,\r\n  Dimensions,\r\n} from \"react-native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport { styles } from \"./Styles\";\r\nimport Header from \"../../SemiComponents/Header\";\r\nimport GoBackButton from \"../../SemiComponents/GoBackButton\";\r\nimport PlusIcon from \"./Icons/PlusIcon\";\r\nimport { user } from \"../../SemiComponents/DBUser\";\r\nimport BinIcon from \"../../SemiComponents/MainScreen/Icons/BinIcon\";\r\nimport Blur from \"../../SemiComponents/MainScreen/Blur\";\r\nimport RemovalApproval from \"../../SemiComponents/MainScreen/RemovalApproval\";\r\n\r\ninterface updateProps {\r\n  digit: number;\r\n}\r\n\r\nexport const update: updateProps = { digit: 0 };\r\n\r\ntype BranchesScreenProps = {\r\n  navigation: StackNavigationProp<{}>;\r\n};\r\n\r\nconst BranchesScreen: React.FC<BranchesScreenProps> = ({ navigation }) => {\r\n  const branchesTitle: string = \"Branches\";\r\n  const branchTitle: string = \"Branch\";\r\n  const [isDeleteBranchPressed, setIsDeleteBranchPressed] = useState(false);\r\n  const [branchNameToRemove, setBranchNameToRemove] = useState(\"\");\r\n\r\n  return (\r\n    <View style={styles.mainContainer}>\r\n      <Blur\r\n        visibleWhen={isDeleteBranchPressed}\r\n        onPress={() => {\r\n          setIsDeleteBranchPressed(false);\r\n        }}\r\n        style={styles.blurEffect}\r\n      />\r\n\r\n      <Header primaryTitle={branchesTitle} />\r\n\r\n      <GoBackButton onPress={() => navigation.goBack()} />\r\n\r\n      <RemovalApproval\r\n        onAnyPress={() => {\r\n          setIsDeleteBranchPressed(false);\r\n        }}\r\n        onAgreePress={() => {\r\n          const branchToRemoveNow = user.branches.find(\r\n            (branch) => branch.name === branchNameToRemove\r\n          );\r\n\r\n          if (branchToRemoveNow) {\r\n            user.branches.splice(user.branches.indexOf(branchToRemoveNow), 1);\r\n          }\r\n\r\n          setBranchNameToRemove(\"\");\r\n        }}\r\n        isPressed={isDeleteBranchPressed}\r\n        text={user.removalText + \" \" + branchNameToRemove + \"?\"}\r\n      />\r\n      <TouchableOpacity\r\n        onPress={() => {\r\n          navigation.navigate(\"NewBranchScreen\" as never);\r\n        }}\r\n        style={[styles.settingOption, { zIndex: 1 }]}\r\n      >\r\n        <PlusIcon style={styles.plusIcon} />\r\n        <Text style={styles.plusBranchTitle}>{branchTitle}</Text>\r\n      </TouchableOpacity>\r\n\r\n      <FlatList\r\n        data={user.branches.map((branch) => ({ branch }))}\r\n        keyExtractor={(item) => item.branch.name}\r\n        horizontal={false}\r\n        numColumns={1}\r\n        contentContainerStyle={{\r\n          paddingBottom: 0.07 * Dimensions.get(\"screen\").height,\r\n          zIndex: 0,\r\n        }}\r\n        renderItem={({ item }) => (\r\n          <TouchableOpacity style={styles.settingOption}>\r\n            <View\r\n              style={[\r\n                styles.branchAvatarInList,\r\n                {\r\n                  backgroundColor: item.branch.color,\r\n                },\r\n              ]}\r\n            >\r\n              <Text style={{ fontSize: 20 }}>{item.branch.emoji}</Text>\r\n            </View>\r\n            <View style={styles.branchTitleContainer}>\r\n              <Text numberOfLines={1} style={styles.branchTitleInList}>\r\n                {item.branch.name}\r\n              </Text>\r\n            </View>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setIsDeleteBranchPressed(true);\r\n                setBranchNameToRemove(item.branch.name);\r\n              }}\r\n              style={styles.binIconContainer}\r\n            >\r\n              <BinIcon style={styles.binIcon} />\r\n            </TouchableOpacity>\r\n          </TouchableOpacity>\r\n        )}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default BranchesScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}