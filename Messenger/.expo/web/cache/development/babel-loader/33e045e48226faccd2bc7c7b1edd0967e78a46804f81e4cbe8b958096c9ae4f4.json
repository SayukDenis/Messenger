{"ast":null,"code":"import React from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { CountOfUnreadMessages } from \"../List of folders containers/Functions/CountOfUnreadMessage\";\nimport { CountOfMessages } from \"../List of folders containers/Functions/CountOfMessages\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar CountOfUnreadMessageOnFolderComponent = function CountOfUnreadMessageOnFolderComponent(_ref) {\n  var folder = _ref.folder,\n    isSelected = _ref.isSelected;\n  if (folder.folderName == \"AllChats\") {\n    return;\n  }\n  var backgroundColorOfContainer = isSelected ? \"#466FFF\" : \"#FFFFFF\";\n  var colorOfText = isSelected ? \"#FFFFFF\" : \"#2B1D1D\";\n  var opacityOfBackgroundContainer = 0.35;\n  var selfProfile = useSelector(function (state) {\n    var self = state.selfProfileUser;\n    return self;\n  });\n  var CountOfUnreadMessageOnFolderComponent = 0;\n  for (var i = 0; i < folder.chats.length; i++) {\n    var numberOfUnreadMessageOnChat = CountOfUnreadMessages(selfProfile, folder.chats[i]);\n    CountOfUnreadMessageOnFolderComponent += numberOfUnreadMessageOnChat !== null ? 1 : 0;\n  }\n  return CountOfUnreadMessageOnFolderComponent > 0 && _jsx(View, {\n    style: {\n      alignSelf: \"center\"\n    },\n    children: CountOfMessages(CountOfUnreadMessageOnFolderComponent, backgroundColorOfContainer, colorOfText, opacityOfBackgroundContainer, 14)\n  });\n};\nexport default connect(null)(CountOfUnreadMessageOnFolderComponent);","map":{"version":3,"names":["React","connect","useSelector","CountOfUnreadMessages","CountOfMessages","View","jsx","_jsx","CountOfUnreadMessageOnFolderComponent","_ref","folder","isSelected","folderName","backgroundColorOfContainer","colorOfText","opacityOfBackgroundContainer","selfProfile","state","self","selfProfileUser","i","chats","length","numberOfUnreadMessageOnChat","style","alignSelf","children"],"sources":["D:/project/1project/Messenger/Messenger/Pages/ChatList/Components/Footer containers/CountOfUnreadMessageOnFolderComponent.tsx"],"sourcesContent":["import React from \"react\";\r\nimport Folder from \"../../../../dao/Models/Folder\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport SelfProfile from \"../../../../dao/Models/SelfProfile\";\r\nimport { CountOfUnreadMessages } from \"../List of folders containers/Functions/CountOfUnreadMessage\";\r\nimport { CountOfMessages } from \"../List of folders containers/Functions/CountOfMessages\";\r\nimport { View } from \"react-native\";\r\nimport { screenWidth } from \"../../Constants/ConstantsForChatlist\";\r\n\r\ninterface CountOfUnreadMessageOnFolderComponentProps {\r\n  folder: Folder;\r\n  isSelected:any;\r\n}\r\n\r\nconst CountOfUnreadMessageOnFolderComponent: React.FC<\r\n  CountOfUnreadMessageOnFolderComponentProps\r\n> = ({\r\n  folder,\r\nisSelected\r\n}) => {\r\n  if (folder.folderName == \"AllChats\") {\r\n    return;\r\n  }\r\n  const backgroundColorOfContainer: string=isSelected?\"#466FFF\":\"#FFFFFF\"\r\n  const colorOfText: string=isSelected?\"#FFFFFF\":\"#2B1D1D\"\r\n  const opacityOfBackgroundContainer: number=0.35\r\n  const selfProfile: SelfProfile = useSelector((state: any) => {\r\n    const self: SelfProfile = state.selfProfileUser;\r\n    return self;\r\n  });\r\n\r\n  let CountOfUnreadMessageOnFolderComponent = 0;\r\n  for (let i = 0; i < folder.chats.length; i++) {\r\n    const numberOfUnreadMessageOnChat = CountOfUnreadMessages(\r\n      selfProfile,\r\n      folder.chats[i]\r\n    );\r\n    CountOfUnreadMessageOnFolderComponent +=\r\n      numberOfUnreadMessageOnChat !== null ? 1 : 0;\r\n  }\r\n\r\n  return (\r\n    CountOfUnreadMessageOnFolderComponent > 0 && (\r\n      <View style={{ alignSelf: \"center\" }}>\r\n        {CountOfMessages(\r\n          CountOfUnreadMessageOnFolderComponent,\r\n          backgroundColorOfContainer,\r\n          colorOfText,\r\n          opacityOfBackgroundContainer,\r\n          14\r\n        )}\r\n      </View>\r\n    )\r\n  );\r\n};\r\n\r\nexport default connect(null)(CountOfUnreadMessageOnFolderComponent);\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,OAAO,EAAEC,WAAW,QAAQ,aAAa;AAElD,SAASC,qBAAqB;AAC9B,SAASC,eAAe;AAAkE,OAAAC,IAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAS1F,IAAMC,qCAEL,GAAG,SAAAA,sCAAAC,IAAA,EAGE;EAAA,IAFJC,MAAM,GAAAD,IAAA,CAANC,MAAM;IACRC,UAAU,GAAAF,IAAA,CAAVE,UAAU;EAER,IAAID,MAAM,CAACE,UAAU,IAAI,UAAU,EAAE;IACnC;EACF;EACA,IAAMC,0BAAkC,GAACF,UAAU,GAAC,SAAS,GAAC,SAAS;EACvE,IAAMG,WAAmB,GAACH,UAAU,GAAC,SAAS,GAAC,SAAS;EACxD,IAAMI,4BAAoC,GAAC,IAAI;EAC/C,IAAMC,WAAwB,GAAGd,WAAW,CAAC,UAACe,KAAU,EAAK;IAC3D,IAAMC,IAAiB,GAAGD,KAAK,CAACE,eAAe;IAC/C,OAAOD,IAAI;EACb,CAAC,CAAC;EAEF,IAAIV,qCAAqC,GAAG,CAAC;EAC7C,KAAK,IAAIY,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,MAAM,CAACW,KAAK,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;IAC5C,IAAMG,2BAA2B,GAAGpB,qBAAqB,CACvDa,WAAW,EACXN,MAAM,CAACW,KAAK,CAACD,CAAC,CAChB,CAAC;IACDZ,qCAAqC,IACnCe,2BAA2B,KAAK,IAAI,GAAG,CAAC,GAAG,CAAC;EAChD;EAEA,OACEf,qCAAqC,GAAG,CAAC,IACvCD,IAAA,CAACF,IAAI;IAACmB,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAAC,QAAA,EAClCtB,eAAe,CACdI,qCAAqC,EACrCK,0BAA0B,EAC1BC,WAAW,EACXC,4BAA4B,EAC5B,EACF;EAAC,CACG,CACP;AAEL,CAAC;AAED,eAAed,OAAO,CAAC,IAAI,CAAC,CAACO,qCAAqC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}