{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nvar clipboardAvailable;\nvar Clipboard = function () {\n  function Clipboard() {\n    _classCallCheck(this, Clipboard);\n  }\n  _createClass(Clipboard, null, [{\n    key: \"isAvailable\",\n    value: function isAvailable() {\n      if (clipboardAvailable === undefined) {\n        clipboardAvailable = typeof document.queryCommandSupported === 'function' && document.queryCommandSupported('copy');\n      }\n      return clipboardAvailable;\n    }\n  }, {\n    key: \"getString\",\n    value: function getString() {\n      return Promise.resolve('');\n    }\n  }, {\n    key: \"setString\",\n    value: function setString(text) {\n      var success = false;\n      var body = document.body;\n      if (body) {\n        var node = document.createElement('span');\n        node.textContent = text;\n        node.style.opacity = '0';\n        node.style.position = 'absolute';\n        node.style.whiteSpace = 'pre-wrap';\n        node.style.userSelect = 'auto';\n        body.appendChild(node);\n        var selection = window.getSelection();\n        selection.removeAllRanges();\n        var range = document.createRange();\n        range.selectNodeContents(node);\n        selection.addRange(range);\n        try {\n          document.execCommand('copy');\n          success = true;\n        } catch (e) {}\n        selection.removeAllRanges();\n        body.removeChild(node);\n      }\n      return success;\n    }\n  }]);\n  return Clipboard;\n}();\nexport { Clipboard as default };","map":{"version":3,"names":["clipboardAvailable","Clipboard","_classCallCheck","_createClass","key","value","isAvailable","undefined","document","queryCommandSupported","getString","Promise","resolve","setString","text","success","body","node","createElement","textContent","style","opacity","position","whiteSpace","userSelect","appendChild","selection","window","getSelection","removeAllRanges","range","createRange","selectNodeContents","addRange","execCommand","e","removeChild","default"],"sources":["D:/project/1project/Messenger/Messenger/node_modules/react-native-web/dist/exports/Clipboard/index.js"],"sourcesContent":["/**\r\n * Copyright (c) Nicolas Gallagher.\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\r\n\r\nvar clipboardAvailable;\r\nexport default class Clipboard {\r\n  static isAvailable() {\r\n    if (clipboardAvailable === undefined) {\r\n      clipboardAvailable = typeof document.queryCommandSupported === 'function' && document.queryCommandSupported('copy');\r\n    }\r\n    return clipboardAvailable;\r\n  }\r\n  static getString() {\r\n    return Promise.resolve('');\r\n  }\r\n  static setString(text) {\r\n    var success = false;\r\n    var body = document.body;\r\n    if (body) {\r\n      // add the text to a hidden node\r\n      var node = document.createElement('span');\r\n      node.textContent = text;\r\n      node.style.opacity = '0';\r\n      node.style.position = 'absolute';\r\n      node.style.whiteSpace = 'pre-wrap';\r\n      node.style.userSelect = 'auto';\r\n      body.appendChild(node);\r\n\r\n      // select the text\r\n      var selection = window.getSelection();\r\n      selection.removeAllRanges();\r\n      var range = document.createRange();\r\n      range.selectNodeContents(node);\r\n      selection.addRange(range);\r\n\r\n      // attempt to copy\r\n      try {\r\n        document.execCommand('copy');\r\n        success = true;\r\n      } catch (e) {}\r\n\r\n      // remove selection and node\r\n      selection.removeAllRanges();\r\n      body.removeChild(node);\r\n    }\r\n    return success;\r\n  }\r\n}"],"mappings":";;AAUA,IAAIA,kBAAkB;AAAC,IACFC,SAAS;EAAA,SAAAA,UAAA;IAAAC,eAAA,OAAAD,SAAA;EAAA;EAAAE,YAAA,CAAAF,SAAA;IAAAG,GAAA;IAAAC,KAAA,EAC5B,SAAAC,YAAA,EAAqB;MACnB,IAAIN,kBAAkB,KAAKO,SAAS,EAAE;QACpCP,kBAAkB,GAAG,OAAOQ,QAAQ,CAACC,qBAAqB,KAAK,UAAU,IAAID,QAAQ,CAACC,qBAAqB,CAAC,MAAM,CAAC;MACrH;MACA,OAAOT,kBAAkB;IAC3B;EAAC;IAAAI,GAAA;IAAAC,KAAA,EACD,SAAAK,UAAA,EAAmB;MACjB,OAAOC,OAAO,CAACC,OAAO,CAAC,EAAE,CAAC;IAC5B;EAAC;IAAAR,GAAA;IAAAC,KAAA,EACD,SAAAQ,UAAiBC,IAAI,EAAE;MACrB,IAAIC,OAAO,GAAG,KAAK;MACnB,IAAIC,IAAI,GAAGR,QAAQ,CAACQ,IAAI;MACxB,IAAIA,IAAI,EAAE;QAER,IAAIC,IAAI,GAAGT,QAAQ,CAACU,aAAa,CAAC,MAAM,CAAC;QACzCD,IAAI,CAACE,WAAW,GAAGL,IAAI;QACvBG,IAAI,CAACG,KAAK,CAACC,OAAO,GAAG,GAAG;QACxBJ,IAAI,CAACG,KAAK,CAACE,QAAQ,GAAG,UAAU;QAChCL,IAAI,CAACG,KAAK,CAACG,UAAU,GAAG,UAAU;QAClCN,IAAI,CAACG,KAAK,CAACI,UAAU,GAAG,MAAM;QAC9BR,IAAI,CAACS,WAAW,CAACR,IAAI,CAAC;QAGtB,IAAIS,SAAS,GAAGC,MAAM,CAACC,YAAY,CAAC,CAAC;QACrCF,SAAS,CAACG,eAAe,CAAC,CAAC;QAC3B,IAAIC,KAAK,GAAGtB,QAAQ,CAACuB,WAAW,CAAC,CAAC;QAClCD,KAAK,CAACE,kBAAkB,CAACf,IAAI,CAAC;QAC9BS,SAAS,CAACO,QAAQ,CAACH,KAAK,CAAC;QAGzB,IAAI;UACFtB,QAAQ,CAAC0B,WAAW,CAAC,MAAM,CAAC;UAC5BnB,OAAO,GAAG,IAAI;QAChB,CAAC,CAAC,OAAOoB,CAAC,EAAE,CAAC;QAGbT,SAAS,CAACG,eAAe,CAAC,CAAC;QAC3Bb,IAAI,CAACoB,WAAW,CAACnB,IAAI,CAAC;MACxB;MACA,OAAOF,OAAO;IAChB;EAAC;EAAA,OAAAd,SAAA;AAAA;AAAA,SAzCkBA,SAAS,IAAAoC,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}