{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { memo } from 'react';\nimport { EMessageType } from \"../../../../dao/Models/EMessageType\";\nimport ReplyTextType from \"../MessageViewsAndTypes/ReplyTextType\";\nimport DefaultTextType from \"../MessageViewsAndTypes/DefaultTextType\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar MessageItem = function MessageItem(_ref) {\n  var item = _ref.item,\n    listOfMessages = _ref.listOfMessages,\n    setMessageMenuVisible = _ref.setMessageMenuVisible,\n    scrollViewRef = _ref.scrollViewRef,\n    coordsY = _ref.coordsY,\n    author = _ref.author,\n    messageID = _ref.messageID,\n    setCoordsY = _ref.setCoordsY;\n  var messageViewHandle = function messageViewHandle(_ref2) {\n    var listOfMessages = _ref2.listOfMessages,\n      message = _ref2.message,\n      setMessageMenuVisible = _ref2.setMessageMenuVisible,\n      scrollViewRef = _ref2.scrollViewRef,\n      coordsY = _ref2.coordsY,\n      author = _ref2.author;\n    if (message.messageType == EMessageType.text && message.messageResponseId) {\n      return _jsx(ReplyTextType, {\n        messages: listOfMessages,\n        message: message,\n        setMessageMenuVisible: setMessageMenuVisible,\n        id: message.messageId,\n        scrollView: scrollViewRef,\n        cordsY: coordsY,\n        author: author\n      }, message.messageId);\n    } else if (message.messageType == EMessageType.text) {\n      return _jsx(DefaultTextType, {\n        messages: listOfMessages,\n        message: message,\n        setMessageMenuVisible: setMessageMenuVisible,\n        id: message.messageId,\n        author: author\n      }, message.messageId);\n    }\n  };\n  return _jsx(View, {\n    onLayout: function onLayout(event) {\n      var newCoordsY = _objectSpread({}, coordsY);\n      newCoordsY[item.messageId] = [event.nativeEvent.layout.y, event.nativeEvent.layout.height];\n      setCoordsY(newCoordsY);\n    },\n    style: {\n      flex: 1,\n      zIndex: item.messageId === messageID ? 4 : -10\n    },\n    children: messageViewHandle({\n      listOfMessages: listOfMessages,\n      message: item,\n      setMessageMenuVisible: setMessageMenuVisible,\n      scrollViewRef: scrollViewRef,\n      coordsY: coordsY,\n      author: author\n    })\n  });\n};\nexport default memo(MessageItem);","map":{"version":3,"names":["React","memo","EMessageType","ReplyTextType","DefaultTextType","jsx","_jsx","MessageItem","_ref","item","listOfMessages","setMessageMenuVisible","scrollViewRef","coordsY","author","messageID","setCoordsY","messageViewHandle","_ref2","message","messageType","text","messageResponseId","messages","id","messageId","scrollView","cordsY","View","onLayout","event","newCoordsY","_objectSpread","nativeEvent","layout","y","height","style","flex","zIndex","children"],"sources":["D:/project/1project/Messenger/Messenger/Pages/Chats/Dialogue/components/MessageItem.tsx"],"sourcesContent":["import { View, Text } from 'react-native'\r\nimport React, { memo, useCallback, useMemo } from 'react'\r\nimport { EMessageType } from '../../../../dao/Models/EMessageType';\r\nimport { messageViewHandleProps } from './interfaces/IDialogueMessages';\r\nimport ReplyTextType from '../MessageViewsAndTypes/ReplyTextType';\r\nimport DefaultTextType from '../MessageViewsAndTypes/DefaultTextType';\r\n\r\nconst MessageItem = ({ item, listOfMessages, setMessageMenuVisible, scrollViewRef, coordsY, author, messageID, setCoordsY }:any) => {\r\n\r\n  const messageViewHandle = ({listOfMessages, message, setMessageMenuVisible, scrollViewRef, coordsY, author}:messageViewHandleProps) => {\r\n    if(message.messageType == EMessageType.text && message.messageResponseId) {\r\n      return <ReplyTextType key={message.messageId} messages={listOfMessages} message={message} setMessageMenuVisible={setMessageMenuVisible} id={message.messageId!} scrollView={scrollViewRef} cordsY={coordsY} author={author}/>;\r\n    }\r\n    else if(message.messageType == EMessageType.text) {\r\n      return <DefaultTextType key={message.messageId} messages={listOfMessages} message={message} setMessageMenuVisible={setMessageMenuVisible} id={message.messageId!} author={author}/>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View\r\n      onLayout={(event) => {\r\n        const newCoordsY = { ...coordsY };\r\n        newCoordsY[item.messageId] = [event.nativeEvent.layout.y, event.nativeEvent.layout.height];\r\n        setCoordsY(newCoordsY);\r\n      }}\r\n      style={{ flex: 1, zIndex: item.messageId === messageID ? 4 : -10 }}\r\n      >\r\n        {messageViewHandle({ listOfMessages, message: item, setMessageMenuVisible, scrollViewRef, coordsY, author })}\r\n      </View>\r\n    );\r\n  }\r\n\r\n\r\nexport default memo(MessageItem);"],"mappings":";;;;AACA,OAAOA,KAAK,IAAIC,IAAI,QAA8B,OAAO;AACzD,SAASC,YAAY;AAErB,OAAOC,aAAa;AACpB,OAAOC,eAAe;AAAgD,SAAAC,GAAA,IAAAC,IAAA;AAEtE,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAAC,IAAA,EAAmH;EAAA,IAA7GC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IAAEC,cAAc,GAAAF,IAAA,CAAdE,cAAc;IAAEC,qBAAqB,GAAAH,IAAA,CAArBG,qBAAqB;IAAEC,aAAa,GAAAJ,IAAA,CAAbI,aAAa;IAAEC,OAAO,GAAAL,IAAA,CAAPK,OAAO;IAAEC,MAAM,GAAAN,IAAA,CAANM,MAAM;IAAEC,SAAS,GAAAP,IAAA,CAATO,SAAS;IAAEC,UAAU,GAAAR,IAAA,CAAVQ,UAAU;EAEvH,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAAC,KAAA,EAAgH;IAAA,IAA3GR,cAAc,GAAAQ,KAAA,CAAdR,cAAc;MAAES,OAAO,GAAAD,KAAA,CAAPC,OAAO;MAAER,qBAAqB,GAAAO,KAAA,CAArBP,qBAAqB;MAAEC,aAAa,GAAAM,KAAA,CAAbN,aAAa;MAAEC,OAAO,GAAAK,KAAA,CAAPL,OAAO;MAAEC,MAAM,GAAAI,KAAA,CAANJ,MAAM;IACxG,IAAGK,OAAO,CAACC,WAAW,IAAIlB,YAAY,CAACmB,IAAI,IAAIF,OAAO,CAACG,iBAAiB,EAAE;MACxE,OAAOhB,IAAA,CAACH,aAAa;QAAyBoB,QAAQ,EAAEb,cAAe;QAACS,OAAO,EAAEA,OAAQ;QAACR,qBAAqB,EAAEA,qBAAsB;QAACa,EAAE,EAAEL,OAAO,CAACM,SAAW;QAACC,UAAU,EAAEd,aAAc;QAACe,MAAM,EAAEd,OAAQ;QAACC,MAAM,EAAEA;MAAO,GAAhMK,OAAO,CAACM,SAAyL,CAAC;IAC/N,CAAC,MACI,IAAGN,OAAO,CAACC,WAAW,IAAIlB,YAAY,CAACmB,IAAI,EAAE;MAChD,OAAOf,IAAA,CAACF,eAAe;QAAyBmB,QAAQ,EAAEb,cAAe;QAACS,OAAO,EAAEA,OAAQ;QAACR,qBAAqB,EAAEA,qBAAsB;QAACa,EAAE,EAAEL,OAAO,CAACM,SAAW;QAACX,MAAM,EAAEA;MAAO,GAApJK,OAAO,CAACM,SAA6I,CAAC;IACrL;EACF,CAAC;EAED,OACEnB,IAAA,CAACsB,IAAI;IACHC,QAAQ,EAAE,SAAAA,SAACC,KAAK,EAAK;MACnB,IAAMC,UAAU,GAAAC,aAAA,KAAQnB,OAAO,CAAE;MACjCkB,UAAU,CAACtB,IAAI,CAACgB,SAAS,CAAC,GAAG,CAACK,KAAK,CAACG,WAAW,CAACC,MAAM,CAACC,CAAC,EAAEL,KAAK,CAACG,WAAW,CAACC,MAAM,CAACE,MAAM,CAAC;MAC1FpB,UAAU,CAACe,UAAU,CAAC;IACxB,CAAE;IACFM,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,MAAM,EAAE9B,IAAI,CAACgB,SAAS,KAAKV,SAAS,GAAG,CAAC,GAAG,CAAC;IAAG,CAAE;IAAAyB,QAAA,EAEhEvB,iBAAiB,CAAC;MAAEP,cAAc,EAAdA,cAAc;MAAES,OAAO,EAAEV,IAAI;MAAEE,qBAAqB,EAArBA,qBAAqB;MAAEC,aAAa,EAAbA,aAAa;MAAEC,OAAO,EAAPA,OAAO;MAAEC,MAAM,EAANA;IAAO,CAAC;EAAC,CACxG,CAAC;AAEX,CAAC;AAGH,eAAeb,IAAI,CAACM,WAAW,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}