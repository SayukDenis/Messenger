{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { combineReducers } from \"redux\";\nvar initialState = {\n  counterOfSelectedMessages: 0\n};\nvar counterOfSelectedMessagesReducer = function counterOfSelectedMessagesReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'INCREMENT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        counterOfSelectedMessages: state.counterOfSelectedMessages + 1\n      });\n    case 'DECREMENT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        counterOfSelectedMessages: state.counterOfSelectedMessages - 1\n      });\n    case 'RESET':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        counterOfSelectedMessages: 0\n      });\n    default:\n      return state;\n  }\n};\nvar ChatReducer = combineReducers({\n  counterForSelectedMessages: counterOfSelectedMessagesReducer\n});\nexport default ChatReducer;","map":{"version":3,"names":["combineReducers","initialState","counterOfSelectedMessages","counterOfSelectedMessagesReducer","state","arguments","length","undefined","action","type","_objectSpread","ChatReducer","counterForSelectedMessages"],"sources":["D:/project/1project/Messenger/Messenger/ReducersAndActions/Reducers/ChatReducers/ChatsReducers.tsx"],"sourcesContent":["import { combineReducers } from \"redux\";\r\n\r\nconst initialState = {\r\n  counterOfSelectedMessages: 0,\r\n};\r\n\r\nconst counterOfSelectedMessagesReducer = (state = initialState, action:any) => {\r\n  switch (action.type) {\r\n    case 'INCREMENT':\r\n      return { ...state, counterOfSelectedMessages: state.counterOfSelectedMessages + 1 };\r\n    case 'DECREMENT':\r\n      return { ...state, counterOfSelectedMessages: state.counterOfSelectedMessages - 1 };\r\n    case 'RESET':\r\n      return { ...state, counterOfSelectedMessages: 0 }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst ChatReducer = combineReducers({\r\n  counterForSelectedMessages: counterOfSelectedMessagesReducer\r\n});\r\n\r\nexport default ChatReducer;"],"mappings":";;;AAAA,SAASA,eAAe,QAAQ,OAAO;AAEvC,IAAMC,YAAY,GAAG;EACnBC,yBAAyB,EAAE;AAC7B,CAAC;AAED,IAAMC,gCAAgC,GAAG,SAAnCA,gCAAgCA,CAAA,EAAyC;EAAA,IAArCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGJ,YAAY;EAAA,IAAEO,MAAU,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACxE,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAK,WAAW;MACd,OAAAC,aAAA,CAAAA,aAAA,KAAYN,KAAK;QAAEF,yBAAyB,EAAEE,KAAK,CAACF,yBAAyB,GAAG;MAAC;IACnF,KAAK,WAAW;MACd,OAAAQ,aAAA,CAAAA,aAAA,KAAYN,KAAK;QAAEF,yBAAyB,EAAEE,KAAK,CAACF,yBAAyB,GAAG;MAAC;IACnF,KAAK,OAAO;MACV,OAAAQ,aAAA,CAAAA,aAAA,KAAYN,KAAK;QAAEF,yBAAyB,EAAE;MAAC;IACjD;MACE,OAAOE,KAAK;EAChB;AACF,CAAC;AAED,IAAMO,WAAW,GAAGX,eAAe,CAAC;EAClCY,0BAA0B,EAAET;AAC9B,CAAC,CAAC;AAEF,eAAeQ,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}