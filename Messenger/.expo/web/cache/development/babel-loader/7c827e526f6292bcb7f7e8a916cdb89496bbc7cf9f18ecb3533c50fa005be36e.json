{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { memo } from 'react';\nimport { EMessageType } from \"../../../../dao/Models/EMessageType\";\nimport ReplyTextType from \"../MessageViewsAndTypes/ReplyTextType\";\nimport DefaultTextType from \"../MessageViewsAndTypes/DefaultTextType\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar MessageItem = function MessageItem(_ref) {\n  var item = _ref.item,\n    listOfMessages = _ref.listOfMessages,\n    setMessageMenuVisible = _ref.setMessageMenuVisible,\n    flatListRef = _ref.flatListRef,\n    coordsY = _ref.coordsY,\n    author = _ref.author,\n    messageID = _ref.messageID,\n    setCoordsY = _ref.setCoordsY,\n    userMessageLastWatched = _ref.userMessageLastWatched,\n    selecting = _ref.selecting;\n  var messageViewHandle = function messageViewHandle(_ref2) {\n    var message = _ref2.message;\n    if (message.messageType == EMessageType.text && message.messageResponseId) {\n      return _jsx(ReplyTextType, {\n        messages: listOfMessages,\n        message: message,\n        setMessageMenuVisible: setMessageMenuVisible,\n        id: message.messageId,\n        scrollView: flatListRef,\n        author: author,\n        userMessageLastWatched: userMessageLastWatched,\n        selecting: selecting\n      }, message.messageId);\n    } else if (message.messageType == EMessageType.text) {\n      return _jsx(DefaultTextType, {\n        message: message,\n        setMessageMenuVisible: setMessageMenuVisible,\n        id: message.messageId,\n        author: author,\n        userMessageLastWatched: userMessageLastWatched,\n        selecting: selecting\n      }, message.messageId);\n    }\n  };\n  return _jsx(View, {\n    onLayout: function onLayout(event) {\n      var newCoordsY = _toConsumableArray(coordsY);\n      newCoordsY[item.messageId] = [event.nativeEvent.layout.y, event.nativeEvent.layout.height];\n      setCoordsY(newCoordsY);\n    },\n    style: {\n      flex: 1,\n      zIndex: item.messageId === messageID ? 4 : -10\n    },\n    children: messageViewHandle({\n      message: item\n    })\n  }, item.messageId);\n};\nexport default memo(MessageItem);","map":{"version":3,"names":["React","memo","EMessageType","ReplyTextType","DefaultTextType","jsx","_jsx","MessageItem","_ref","item","listOfMessages","setMessageMenuVisible","flatListRef","coordsY","author","messageID","setCoordsY","userMessageLastWatched","selecting","messageViewHandle","_ref2","message","messageType","text","messageResponseId","messages","id","messageId","scrollView","View","onLayout","event","newCoordsY","_toConsumableArray","nativeEvent","layout","y","height","style","flex","zIndex","children"],"sources":["D:/project/1project/Messenger/Messenger/Pages/Chats/Dialogue/components/MessageItem.tsx"],"sourcesContent":["import { FlatList, View } from 'react-native'\r\nimport React, { memo } from 'react'\r\nimport { EMessageType } from '../../../../dao/Models/EMessageType';\r\nimport { messageViewHandleProps } from './interfaces/IDialogueMessages';\r\nimport ReplyTextType from '../MessageViewsAndTypes/ReplyTextType';\r\nimport DefaultTextType from '../MessageViewsAndTypes/DefaultTextType';\r\nimport { MessageItemProps } from './interfaces/IMessageItem';\r\n\r\nconst MessageItem = ({ item, listOfMessages, setMessageMenuVisible, flatListRef, coordsY, author, messageID, setCoordsY, userMessageLastWatched, selecting }:MessageItemProps) => {\r\n   \r\n  const messageViewHandle = ({message}:messageViewHandleProps) => {\r\n    if(message.messageType == EMessageType.text && message.messageResponseId) {\r\n      return <ReplyTextType \r\n        key={message.messageId} \r\n        messages={listOfMessages} \r\n        message={message} \r\n        setMessageMenuVisible={setMessageMenuVisible} \r\n        id={message.messageId!} \r\n        scrollView={flatListRef}\r\n        author={author}\r\n        userMessageLastWatched={userMessageLastWatched}\r\n        selecting={selecting}\r\n      />;\r\n    }\r\n    else if(message.messageType == EMessageType.text) {\r\n      return <DefaultTextType \r\n        key={message.messageId} \r\n        message={message} \r\n        setMessageMenuVisible={setMessageMenuVisible} \r\n        id={message.messageId!} \r\n        author={author}\r\n        userMessageLastWatched={userMessageLastWatched}\r\n        selecting={selecting}\r\n      />;\r\n    }\r\n  };\r\n\r\n  return (\r\n      <View\r\n        key={item.messageId}\r\n        onLayout={(event) => {\r\n          const newCoordsY = [ ...coordsY ];\r\n          newCoordsY[item.messageId!] = [event.nativeEvent.layout.y, event.nativeEvent.layout.height];\r\n          setCoordsY(newCoordsY);\r\n        }}\r\n        style={{ flex: 1, zIndex: item.messageId === messageID ? 4 : -10 }}\r\n      >\r\n        {messageViewHandle({ message: item })}\r\n      </View>\r\n    );\r\n  }\r\n\r\n\r\nexport default memo(MessageItem);"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,IAAI,QAAQ,OAAO;AACnC,SAASC,YAAY;AAErB,OAAOC,aAAa;AACpB,OAAOC,eAAe;AAAgD,SAAAC,GAAA,IAAAC,IAAA;AAGtE,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAAC,IAAA,EAAiK;EAAA,IAA3JC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IAAEC,cAAc,GAAAF,IAAA,CAAdE,cAAc;IAAEC,qBAAqB,GAAAH,IAAA,CAArBG,qBAAqB;IAAEC,WAAW,GAAAJ,IAAA,CAAXI,WAAW;IAAEC,OAAO,GAAAL,IAAA,CAAPK,OAAO;IAAEC,MAAM,GAAAN,IAAA,CAANM,MAAM;IAAEC,SAAS,GAAAP,IAAA,CAATO,SAAS;IAAEC,UAAU,GAAAR,IAAA,CAAVQ,UAAU;IAAEC,sBAAsB,GAAAT,IAAA,CAAtBS,sBAAsB;IAAEC,SAAS,GAAAV,IAAA,CAATU,SAAS;EAExJ,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAAC,KAAA,EAAyC;IAAA,IAApCC,OAAO,GAAAD,KAAA,CAAPC,OAAO;IACjC,IAAGA,OAAO,CAACC,WAAW,IAAIpB,YAAY,CAACqB,IAAI,IAAIF,OAAO,CAACG,iBAAiB,EAAE;MACxE,OAAOlB,IAAA,CAACH,aAAa;QAEnBsB,QAAQ,EAAEf,cAAe;QACzBW,OAAO,EAAEA,OAAQ;QACjBV,qBAAqB,EAAEA,qBAAsB;QAC7Ce,EAAE,EAAEL,OAAO,CAACM,SAAW;QACvBC,UAAU,EAAEhB,WAAY;QACxBE,MAAM,EAAEA,MAAO;QACfG,sBAAsB,EAAEA,sBAAuB;QAC/CC,SAAS,EAAEA;MAAU,GARhBG,OAAO,CAACM,SASd,CAAC;IACJ,CAAC,MACI,IAAGN,OAAO,CAACC,WAAW,IAAIpB,YAAY,CAACqB,IAAI,EAAE;MAChD,OAAOjB,IAAA,CAACF,eAAe;QAErBiB,OAAO,EAAEA,OAAQ;QACjBV,qBAAqB,EAAEA,qBAAsB;QAC7Ce,EAAE,EAAEL,OAAO,CAACM,SAAW;QACvBb,MAAM,EAAEA,MAAO;QACfG,sBAAsB,EAAEA,sBAAuB;QAC/CC,SAAS,EAAEA;MAAU,GANhBG,OAAO,CAACM,SAOd,CAAC;IACJ;EACF,CAAC;EAED,OACIrB,IAAA,CAACuB,IAAI;IAEHC,QAAQ,EAAE,SAAAA,SAACC,KAAK,EAAK;MACnB,IAAMC,UAAU,GAAAC,kBAAA,CAAQpB,OAAO,CAAE;MACjCmB,UAAU,CAACvB,IAAI,CAACkB,SAAS,CAAE,GAAG,CAACI,KAAK,CAACG,WAAW,CAACC,MAAM,CAACC,CAAC,EAAEL,KAAK,CAACG,WAAW,CAACC,MAAM,CAACE,MAAM,CAAC;MAC3FrB,UAAU,CAACgB,UAAU,CAAC;IACxB,CAAE;IACFM,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,MAAM,EAAE/B,IAAI,CAACkB,SAAS,KAAKZ,SAAS,GAAG,CAAC,GAAG,CAAC;IAAG,CAAE;IAAA0B,QAAA,EAElEtB,iBAAiB,CAAC;MAAEE,OAAO,EAAEZ;IAAK,CAAC;EAAC,GARhCA,IAAI,CAACkB,SASN,CAAC;AAEX,CAAC;AAGH,eAAe1B,IAAI,CAACM,WAAW,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}