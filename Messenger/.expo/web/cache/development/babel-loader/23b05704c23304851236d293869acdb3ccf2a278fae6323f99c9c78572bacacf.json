{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Swiper from 'react-native-swiper';\nimport ListOfFolder from \"./ListOfFolder\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Footer = function Footer(_ref) {\n  var user = _ref.user;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedFolder = _useState2[0],\n    setSelectedFolder = _useState2[1];\n  var handleFolderPress = function handleFolderPress(index) {\n    if (selectedFolder === index) {} else {\n      setSelectedFolder(index);\n    }\n  };\n  return _jsx(_Fragment, {\n    children: _jsx(Swiper, {\n      loop: false,\n      showsPagination: true,\n      index: selectedFolder,\n      onIndexChanged: function onIndexChanged(newIndex) {\n        setSelectedFolder(newIndex);\n      },\n      children: user.folders.map(function (folder, index) {\n        return _jsx(ListOfFolder, {\n          user: user,\n          selectedFolder: index\n        }, index);\n      })\n    })\n  });\n};\nexport default Footer;","map":{"version":3,"names":["React","useState","Swiper","ListOfFolder","jsx","_jsx","Fragment","_Fragment","Footer","_ref","user","_useState","_useState2","_slicedToArray","selectedFolder","setSelectedFolder","handleFolderPress","index","children","loop","showsPagination","onIndexChanged","newIndex","folders","map","folder"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/ChatList/Components/Footer.tsx"],"sourcesContent":["import React, { ReactNode, useState } from 'react';\r\nimport { View, ScrollView,StyleSheet,Text } from 'react-native';\r\nimport MySelfUser from '../1HelpFullFolder/MySelfUser';\r\nimport { footerstyles } from '../Styles/FooterStyle';\r\nimport Folder from './Footer containers/Folder';\r\nimport { listOfChatsStyle } from '../Styles/ListOfChatsStyle';\r\nimport ChatContainer from './List of folders containers/ChatContainer';\r\nimport Swiper from 'react-native-swiper';\r\nimport ListOfFolder from './ListOfFolder';\r\nimport { Pagination } from 'react-native-swiper';\r\ninterface FooterProps {\r\n  user: MySelfUser;\r\n}\r\n\r\nconst Footer: React.FC<FooterProps> = ({ user }) => {\r\n  const [selectedFolder, setSelectedFolder] = useState<number>(0);\r\n  \r\n  const handleFolderPress = (index: number) => {\r\n    if (selectedFolder === index) {\r\n    } else {\r\n      setSelectedFolder(index); \r\n    }\r\n  };\r\n /* const swipeLeft=(numberOfFolder:number):number=>{\r\n    if(numberOfFolder!=0){\r\n      setSelectedFolder(numberOfFolder-1)\r\n      return selectedFolder;\r\n    }\r\n    return numberOfFolder;\r\n  }\r\n  const swipeRight=(numberOfFolder:number):number=>{\r\n    if(numberOfFolder!=user.folders.length-1){\r\n      setSelectedFolder(numberOfFolder+1)\r\n      return selectedFolder;\r\n    }\r\n    return numberOfFolder;\r\n  }*/\r\n  \r\n  return (\r\n    <>\r\n    <Swiper\r\n  loop={false} //pagingEnabled\r\n  showsPagination={true} \r\n  index={selectedFolder}\r\n  onIndexChanged={(newIndex) => {setSelectedFolder(newIndex);}}\r\n>\r\n  {user.folders.map((folder, index) => (\r\n    <ListOfFolder user={user} selectedFolder={index} key={index} />\r\n  ))}\r\n</Swiper>\r\n{/*<View style={footerstyles.container}>\r\n      <ScrollView showsHorizontalScrollIndicator={false} horizontal={true} style={footerstyles.scrollView}>\r\n        {user.folders.map((folder, index) => (\r\n          <Folder\r\n            key={index}\r\n            text={folder.name}\r\n            containerStyle={footerstyles.folderContainer}\r\n            textStyle={footerstyles.folder}\r\n            isSelected={selectedFolder === index}\r\n            onPress={() => handleFolderPress(index)}\r\n          />\r\n        ))}\r\n      </ScrollView>\r\n        </View>*/}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAeC,QAAQ,QAAQ,OAAO;AAOlD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,YAAY;AAAuB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAM1C,IAAMC,MAA6B,GAAG,SAAhCA,MAA6BA,CAAAC,IAAA,EAAiB;EAAA,IAAXC,IAAI,GAAAD,IAAA,CAAJC,IAAI;EAC3C,IAAAC,SAAA,GAA4CV,QAAQ,CAAS,CAAC,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAxDG,cAAc,GAAAF,UAAA;IAAEG,iBAAiB,GAAAH,UAAA;EAExC,IAAMI,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,KAAa,EAAK;IAC3C,IAAIH,cAAc,KAAKG,KAAK,EAAE,CAC9B,CAAC,MAAM;MACLF,iBAAiB,CAACE,KAAK,CAAC;IAC1B;EACF,CAAC;EAgBD,OACEZ,IAAA,CAAAE,SAAA;IAAAW,QAAA,EACAb,IAAA,CAACH,MAAM;MACTiB,IAAI,EAAE,KAAM;MACZC,eAAe,EAAE,IAAK;MACtBH,KAAK,EAAEH,cAAe;MACtBO,cAAc,EAAE,SAAAA,eAACC,QAAQ,EAAK;QAACP,iBAAiB,CAACO,QAAQ,CAAC;MAAC,CAAE;MAAAJ,QAAA,EAE5DR,IAAI,CAACa,OAAO,CAACC,GAAG,CAAC,UAACC,MAAM,EAAER,KAAK;QAAA,OAC9BZ,IAAA,CAACF,YAAY;UAACO,IAAI,EAAEA,IAAK;UAACI,cAAc,EAAEG;QAAM,GAAMA,KAAQ,CAAC;MAAA,CAChE;IAAC,CACI;EAAC,CAeH,CAAC;AAEP,CAAC;AAED,eAAeT,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}