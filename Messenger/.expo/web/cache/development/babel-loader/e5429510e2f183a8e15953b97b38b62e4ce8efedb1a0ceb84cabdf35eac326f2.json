{"ast":null,"code":"import Platform from \"react-native-web/dist/exports/Platform\";\nexport default function getDefaultHeaderHeight(layout, modalPresentation, statusBarHeight) {\n  var headerHeight;\n  var isLandscape = layout.width > layout.height;\n  if (Platform.OS === 'ios') {\n    if (Platform.isPad || Platform.isTV) {\n      if (modalPresentation) {\n        headerHeight = 56;\n      } else {\n        headerHeight = 50;\n      }\n    } else {\n      if (isLandscape) {\n        headerHeight = 32;\n      } else {\n        if (modalPresentation) {\n          headerHeight = 56;\n        } else {\n          headerHeight = 44;\n        }\n      }\n    }\n  } else if (Platform.OS === 'android') {\n    headerHeight = 56;\n  } else {\n    headerHeight = 64;\n  }\n  return headerHeight + statusBarHeight;\n}","map":{"version":3,"names":["getDefaultHeaderHeight","layout","modalPresentation","statusBarHeight","headerHeight","isLandscape","width","height","Platform","OS","isPad","isTV"],"sources":["D:\\project\\1project\\Messenger\\Messenger\\node_modules\\@react-navigation\\elements\\src\\Header\\getDefaultHeaderHeight.tsx"],"sourcesContent":["import { Platform } from 'react-native';\r\n\r\nimport type { Layout } from '../types';\r\n\r\nexport default function getDefaultHeaderHeight(\r\n  layout: Layout,\r\n  modalPresentation: boolean,\r\n  statusBarHeight: number\r\n): number {\r\n  let headerHeight;\r\n\r\n  const isLandscape = layout.width > layout.height;\r\n\r\n  if (Platform.OS === 'ios') {\r\n    if (Platform.isPad || Platform.isTV) {\r\n      if (modalPresentation) {\r\n        headerHeight = 56;\r\n      } else {\r\n        headerHeight = 50;\r\n      }\r\n    } else {\r\n      if (isLandscape) {\r\n        headerHeight = 32;\r\n      } else {\r\n        if (modalPresentation) {\r\n          headerHeight = 56;\r\n        } else {\r\n          headerHeight = 44;\r\n        }\r\n      }\r\n    }\r\n  } else if (Platform.OS === 'android') {\r\n    headerHeight = 56;\r\n  } else {\r\n    headerHeight = 64;\r\n  }\r\n\r\n  return headerHeight + statusBarHeight;\r\n}\r\n"],"mappings":";AAIA,eAAe,SAASA,sBAAsBA,CAC5CC,MAAc,EACdC,iBAA0B,EAC1BC,eAAuB,EACf;EACR,IAAIC,YAAY;EAEhB,IAAMC,WAAW,GAAGJ,MAAM,CAACK,KAAK,GAAGL,MAAM,CAACM,MAAM;EAEhD,IAAIC,QAAQ,CAACC,EAAE,KAAK,KAAK,EAAE;IACzB,IAAID,QAAQ,CAACE,KAAK,IAAIF,QAAQ,CAACG,IAAI,EAAE;MACnC,IAAIT,iBAAiB,EAAE;QACrBE,YAAY,GAAG,EAAE;MACnB,CAAC,MAAM;QACLA,YAAY,GAAG,EAAE;MACnB;IACF,CAAC,MAAM;MACL,IAAIC,WAAW,EAAE;QACfD,YAAY,GAAG,EAAE;MACnB,CAAC,MAAM;QACL,IAAIF,iBAAiB,EAAE;UACrBE,YAAY,GAAG,EAAE;QACnB,CAAC,MAAM;UACLA,YAAY,GAAG,EAAE;QACnB;MACF;IACF;EACF,CAAC,MAAM,IAAII,QAAQ,CAACC,EAAE,KAAK,SAAS,EAAE;IACpCL,YAAY,GAAG,EAAE;EACnB,CAAC,MAAM;IACLA,YAAY,GAAG,EAAE;EACnB;EAEA,OAAOA,YAAY,GAAGD,eAAe;AACvC"},"metadata":{},"sourceType":"module","externalDependencies":[]}