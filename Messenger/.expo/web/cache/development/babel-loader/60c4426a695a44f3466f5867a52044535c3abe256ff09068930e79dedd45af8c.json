{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { styles } from \"./Styles\";\nimport Header from \"../../SemiComponents/GeneralComponents/Header\";\nimport CheckMarkIcon from \"../../SemiComponents/Screens/MainScreen/Icons/CheckMarkIcon\";\nimport { user } from \"../../SemiComponents/DatabaseSimulation/DBUser\";\nimport ToggleButton from \"../../SemiComponents/GeneralComponents/ToggleButton\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PermissionScreen = function PermissionScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(user.selectedInterval),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedInverval = _useState2[0],\n    setSelectedInterval = _useState2[1];\n  var _useState3 = useState(user.isEmergencyMessagesEnabled),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isEmergencyMessagesEnabled = _useState4[0],\n    setIsEmergencyMessagesEnabled = _useState4[1];\n  var permissionTitle = \"Permission\";\n  var emergencyMessageTitle = \"Emergency Message\";\n  var eitherTitle = \"Either\";\n  var minTitle = \"min\";\n  var intervals = [{\n    title: eitherTitle,\n    value: 0\n  }, {\n    title: 1 + \" \" + minTitle,\n    value: 1\n  }, {\n    title: 3 + \" \" + minTitle,\n    value: 3\n  }, {\n    title: 5 + \" \" + minTitle,\n    value: 5\n  }, {\n    title: 10 + \" \" + minTitle,\n    value: 10\n  }];\n  useEffect(function () {\n    user.selectedInterval = selectedInverval;\n    user.isEmergencyMessagesEnabled = isEmergencyMessagesEnabled;\n  });\n  return _jsxs(LinearGradient, {\n    colors: [\"#cf9b95\", \"#c98bb8\", \"#c37adb\"],\n    style: {\n      flex: 1\n    },\n    children: [_jsx(Header, {\n      primaryTitle: permissionTitle,\n      onGoBackPress: function onGoBackPress() {\n        navigation.goBack();\n      }\n    }), _jsxs(TouchableOpacity, {\n      onPress: function onPress() {\n        setIsEmergencyMessagesEnabled(!isEmergencyMessagesEnabled);\n      },\n      style: styles.settingOption,\n      children: [_jsx(LinearGradient, {\n        colors: [\"#cf9b95\", \"#c98bb8\", \"#c37adb\"],\n        style: styles.linearGradient\n      }), _jsx(Text, {\n        style: styles.settingOptionTitle,\n        children: emergencyMessageTitle\n      }), _jsx(ToggleButton, {\n        isEnabled: isEmergencyMessagesEnabled,\n        Toggle: function Toggle() {\n          setIsEmergencyMessagesEnabled(!isEmergencyMessagesEnabled);\n        }\n      })]\n    }), _jsx(View, {\n      style: styles.containerForSettingTitle,\n      children: _jsx(Text, {\n        style: styles.settingTitle,\n        children: \"Interval\"\n      })\n    }), intervals.map(function (interval, index) {\n      return _jsxs(View, {\n        children: [_jsx(View, {\n          style: {\n            height: 0.005 * Dimensions.get(\"screen\").height\n          }\n        }), _jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            setSelectedInterval(interval.value);\n          },\n          style: styles.settingOption,\n          children: [_jsx(LinearGradient, {\n            colors: [\"#cf9b95\", \"#c98bb8\", \"#c37adb\"],\n            style: styles.linearGradient\n          }), _jsx(Text, {\n            style: styles.settingOptionTitle,\n            children: interval.title\n          }), selectedInverval === interval.value && _jsx(CheckMarkIcon, {\n            style: styles.checkMark,\n            stroke: \"rgb(115, 76, 165)\"\n          })]\n        })]\n      }, index);\n    })]\n  });\n};\nexport default PermissionScreen;","map":{"version":3,"names":["React","useEffect","useState","View","TouchableOpacity","Text","styles","Header","CheckMarkIcon","user","ToggleButton","LinearGradient","Dimensions","jsx","_jsx","jsxs","_jsxs","PermissionScreen","_ref","navigation","_useState","selectedInterval","_useState2","_slicedToArray","selectedInverval","setSelectedInterval","_useState3","isEmergencyMessagesEnabled","_useState4","setIsEmergencyMessagesEnabled","permissionTitle","emergencyMessageTitle","eitherTitle","minTitle","intervals","title","value","colors","style","flex","children","primaryTitle","onGoBackPress","goBack","onPress","settingOption","linearGradient","settingOptionTitle","isEnabled","Toggle","containerForSettingTitle","settingTitle","map","interval","index","height","get","checkMark","stroke"],"sources":["C:/Users/T480/source/repos/Messenger/Messenger/Pages/Profiles/DialogueProfile/PermissionScreen/PermissionScreen.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { View, TouchableOpacity, Text } from \"react-native\";\r\nimport { styles } from \"./Styles\";\r\nimport Header from \"../../SemiComponents/GeneralComponents/Header\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport CheckMarkIcon from \"../../SemiComponents/Screens/MainScreen/Icons/CheckMarkIcon\";\r\nimport { user } from \"../../SemiComponents/DatabaseSimulation/DBUser\";\r\nimport ToggleButton from \"../../SemiComponents/GeneralComponents/ToggleButton\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { Dimensions } from \"react-native\";\r\n\r\ntype PermissionScreenProps = {\r\n  navigation: StackNavigationProp<{}>; // Встановіть правильний тип для navigation\r\n};\r\n\r\nconst PermissionScreen: React.FC<PermissionScreenProps> = ({ navigation }) => {\r\n  const [selectedInverval, setSelectedInterval] = useState(\r\n    user.selectedInterval\r\n  );\r\n  const [isEmergencyMessagesEnabled, setIsEmergencyMessagesEnabled] = useState(\r\n    user.isEmergencyMessagesEnabled\r\n  );\r\n\r\n  const permissionTitle: string = \"Permission\";\r\n  const emergencyMessageTitle: string = \"Emergency Message\";\r\n  const eitherTitle: string = \"Either\";\r\n  const minTitle: string = \"min\";\r\n\r\n  const intervals = [\r\n    { title: eitherTitle, value: 0 },\r\n    { title: 1 + \" \" + minTitle, value: 1 },\r\n    { title: 3 + \" \" + minTitle, value: 3 },\r\n    { title: 5 + \" \" + minTitle, value: 5 },\r\n    { title: 10 + \" \" + minTitle, value: 10 },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    user.selectedInterval = selectedInverval;\r\n    user.isEmergencyMessagesEnabled = isEmergencyMessagesEnabled;\r\n  });\r\n\r\n  return (\r\n    <LinearGradient\r\n      colors={[\"#cf9b95\", \"#c98bb8\", \"#c37adb\"]}\r\n      style={{ flex: 1 }}\r\n    >\r\n      <Header\r\n        primaryTitle={permissionTitle}\r\n        onGoBackPress={() => {\r\n          navigation.goBack();\r\n        }}\r\n      />\r\n\r\n      {/* Emergency message toggle button */}\r\n      <TouchableOpacity\r\n        onPress={() => {\r\n          setIsEmergencyMessagesEnabled(!isEmergencyMessagesEnabled);\r\n        }}\r\n        style={styles.settingOption}\r\n      >\r\n        <LinearGradient\r\n          colors={[\"#cf9b95\", \"#c98bb8\", \"#c37adb\"]}\r\n          style={styles.linearGradient}\r\n        />\r\n        <Text style={styles.settingOptionTitle}>{emergencyMessageTitle}</Text>\r\n        <ToggleButton\r\n          isEnabled={isEmergencyMessagesEnabled}\r\n          Toggle={() => {\r\n            setIsEmergencyMessagesEnabled(!isEmergencyMessagesEnabled);\r\n          }}\r\n        />\r\n      </TouchableOpacity>\r\n\r\n      <View style={styles.containerForSettingTitle}>\r\n        <Text style={styles.settingTitle}>Interval</Text>\r\n      </View>\r\n\r\n      {/* Different buttons to set an interval */}\r\n\r\n      {intervals.map((interval, index) => (\r\n        <View key={index}>\r\n          <View style={{ height: 0.005 * Dimensions.get(\"screen\").height }} />\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              setSelectedInterval(interval.value);\r\n            }}\r\n            style={styles.settingOption}\r\n          >\r\n            <LinearGradient\r\n              colors={[\"#cf9b95\", \"#c98bb8\", \"#c37adb\"]}\r\n              style={styles.linearGradient}\r\n            />\r\n            <Text style={styles.settingOptionTitle}>{interval.title}</Text>\r\n            {selectedInverval === interval.value && (\r\n              <CheckMarkIcon\r\n                style={styles.checkMark}\r\n                stroke=\"rgb(115, 76, 165)\"\r\n              />\r\n            )}\r\n          </TouchableOpacity>\r\n        </View>\r\n      ))}\r\n    </LinearGradient>\r\n  );\r\n};\r\n\r\nexport default PermissionScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}