{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TextInput } from \"react-native-gesture-handler\";\nimport { styles } from \"./ProfileGroupStyles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var GroupName = function GroupName(_ref) {\n  var setGroupNameExample = _ref.setGroupNameExample;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    GroupName = _useState2[0],\n    setGroupName = _useState2[1];\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      style: {\n        top: \"40%\",\n        left: \"5%\",\n        fontSize: 20\n      },\n      children: \"Group name\"\n    }), _jsx(TextInput, {\n      style: styles.GroupName,\n      onChangeText: function onChangeText(text) {\n        setGroupName(text);\n      },\n      value: GroupName\n    })]\n  });\n};","map":{"version":3,"names":["React","useState","Text","View","TextInput","styles","jsx","_jsx","jsxs","_jsxs","GroupName","_ref","setGroupNameExample","_useState","_useState2","_slicedToArray","setGroupName","children","style","top","left","fontSize","onChangeText","text","value"],"sources":["/home/zatibmag/Desktop/Project/Messenger/Messenger/Pages/Profiles/GroupProfile/EditGroup/GroupNameInput.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Text, View } from \"react-native\";\nimport { State as GestureState, TextInput } from \"react-native-gesture-handler\";\nimport { styles } from \"./ProfileGroupStyles\";\n\nexport const GroupName = ({\n  setGroupNameExample,\n}: {\n  setGroupNameExample: React.Dispatch<React.SetStateAction<string>>;\n}) => {\n  const [GroupName, setGroupName] = useState(\"\");\n  return (\n    <View>\n      <Text style={{ top: \"40%\", left: \"5%\", fontSize: 20 }}>Group name</Text>\n      <TextInput\n        style={styles.GroupName}\n        onChangeText={(text) => {\n          setGroupName(text); // Оновлено значення GroupName\n        }}\n        value={GroupName}\n      />\n    </View>\n  );\n};\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAmB,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAEnD,SAAgCC,SAAS,QAAQ,8BAA8B;AAC/E,SAASC,MAAM;AAA+B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE9C,OAAO,IAAMC,SAAS,GAAG,SAAAA,UAAAC,IAAA,EAInB;EAAA,IAHJC,mBAAmB,GAAAD,IAAA,CAAnBC,mBAAmB;EAInB,IAAAC,SAAA,GAAkCZ,QAAQ,CAAC,EAAE,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCH,SAAS,GAAAI,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAC9B,OACEL,KAAA,CAACN,IAAI;IAAAc,QAAA,GACHV,IAAA,CAACL,IAAI;MAACgB,KAAK,EAAE;QAAEC,GAAG,EAAE,KAAK;QAAEC,IAAI,EAAE,IAAI;QAAEC,QAAQ,EAAE;MAAG,CAAE;MAAAJ,QAAA,EAAC;IAAU,CAAM,CAAC,EACxEV,IAAA,CAACH,SAAS;MACRc,KAAK,EAAEb,MAAM,CAACK,SAAU;MACxBY,YAAY,EAAE,SAAAA,aAACC,IAAI,EAAK;QACtBP,YAAY,CAACO,IAAI,CAAC;MACpB,CAAE;MACFC,KAAK,EAAEd;IAAU,CAClB,CAAC;EAAA,CACE,CAAC;AAEX,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}