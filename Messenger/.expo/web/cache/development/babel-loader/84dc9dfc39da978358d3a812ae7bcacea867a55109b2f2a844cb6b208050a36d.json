{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ImageZoomState = exports.ImageZoomProps = void 0;\nvar ImageZoomProps = function () {\n  function ImageZoomProps() {\n    this.cropWidth = 100;\n    this.cropHeight = 100;\n    this.imageWidth = 100;\n    this.imageHeight = 100;\n    this.panToMove = true;\n    this.pinchToZoom = true;\n    this.enableDoubleClickZoom = true;\n    this.clickDistance = 10;\n    this.maxOverflow = 100;\n    this.longPressTime = 800;\n    this.doubleClickInterval = 175;\n    this.style = {};\n    this.swipeDownThreshold = 230;\n    this.enableSwipeDown = false;\n    this.enableCenterFocus = true;\n    this.useHardwareTextureAndroid = true;\n    this.minScale = 0.6;\n    this.maxScale = 10;\n    this.useNativeDriver = false;\n    this.onClick = function () {};\n    this.onDoubleClick = function () {};\n    this.onLongPress = function () {};\n    this.horizontalOuterRangeOffset = function () {};\n    this.onDragLeft = function () {};\n    this.responderRelease = function () {};\n    this.onMove = function () {};\n    this.layoutChange = function () {};\n    this.onSwipeDown = function () {};\n    this.onStartShouldSetPanResponder = function () {\n      return true;\n    };\n    this.onPanResponderTerminationRequest = function () {\n      return false;\n    };\n  }\n  return ImageZoomProps;\n}();\nexports.ImageZoomProps = ImageZoomProps;\nvar ImageZoomState = function () {\n  function ImageZoomState() {\n    this.centerX = 0.5;\n    this.centerY = 0.5;\n  }\n  return ImageZoomState;\n}();\nexports.ImageZoomState = ImageZoomState;","map":{"version":3,"names":["ImageZoomProps","cropWidth","cropHeight","imageWidth","imageHeight","panToMove","pinchToZoom","enableDoubleClickZoom","clickDistance","maxOverflow","longPressTime","doubleClickInterval","style","swipeDownThreshold","enableSwipeDown","enableCenterFocus","useHardwareTextureAndroid","minScale","maxScale","useNativeDriver","onClick","onDoubleClick","onLongPress","horizontalOuterRangeOffset","onDragLeft","responderRelease","onMove","layoutChange","onSwipeDown","onStartShouldSetPanResponder","onPanResponderTerminationRequest","exports","ImageZoomState","centerX","centerY"],"sources":["/home/zatibmag/Desktop/Project/Messenger/Messenger/node_modules/react-native-image-pan-zoom/src/image-zoom/image-zoom.type.ts"],"sourcesContent":["import { GestureResponderEvent, PanResponderGestureState, LayoutChangeEvent, ViewStyle } from 'react-native';\n\nexport interface ICenterOn {\n  x: number;\n  y: number;\n  scale: number;\n  duration: number;\n}\n\nexport interface IOnMove {\n  type: string;\n  positionX: number;\n  positionY: number;\n  scale: number;\n  zoomCurrentDistance: number;\n}\n\nexport interface IOnClick {\n  locationX: number;\n  locationY: number;\n  pageX: number;\n  pageY: number;\n}\n\nexport class ImageZoomProps {\n  /**\n   * 操作区域宽度\n   */\n  public cropWidth: number = 100;\n\n  /**\n   * 操作区域高度\n   */\n  public cropHeight: number = 100;\n\n  /**\n   * 图片宽度\n   */\n  public imageWidth: number = 100;\n\n  /**\n   * 图片高度\n   */\n  public imageHeight: number = 100;\n\n  /**\n   * 单手是否能移动图片\n   */\n  public panToMove?: boolean = true;\n\n  /**\n   * 多手指是否能缩放\n   */\n  public pinchToZoom?: boolean = true;\n\n  /**\n   * 双击能否放大\n   */\n  public enableDoubleClickZoom?: boolean = true;\n\n  /**\n   * 单击最大位移\n   */\n  public clickDistance?: number = 10;\n\n  /**\n   * 最大滑动阈值\n   */\n  public maxOverflow?: number = 100;\n\n  /**\n   * 长按的阈值（毫秒）\n   */\n  public longPressTime?: number = 800;\n\n  /**\n   * 双击计时器最大间隔\n   */\n  public doubleClickInterval?: number = 175;\n\n  /**\n   * If provided this will cause the view to zoom and pan to the center point\n   * Duration is optional and defaults to 300 ms.\n   */\n  public centerOn?: ICenterOn;\n\n  public style?: ViewStyle = {};\n\n  /**\n   * threshold for firing swipe down function\n   */\n  public swipeDownThreshold?: number = 230;\n\n  /**\n   * for enabling vertical movement if user doesn't want it\n   */\n  public enableSwipeDown?: boolean = false;\n\n  /**\n   * for disabling focus on image center if user doesn't want it\n   */\n  public enableCenterFocus?: boolean = true;\n\n  /**\n   * for disabling rendering to hardware texture on Android\n   */\n  public useHardwareTextureAndroid?: boolean = true;\n\n  /**\n   * minimum zoom scale\n   */\n  public minScale?: number = 0.6;\n\n  /**\n   * maximum zoom scale\n   */\n  public maxScale?: number = 10;\n\n  /**\n   * 是否启用原生动画驱动\n   * Whether to use native code to perform animations.\n   */\n  public useNativeDriver?: boolean = false;\n\n  /**\n   * 单击的回调\n   */\n  public onClick?: (eventParams: IOnClick) => void = () => {\n    //\n  };\n\n  /**\n   * 双击的回调\n   */\n  public onDoubleClick?: (eventParams: IOnClick) => void = () => {\n    //\n  };\n\n  /**\n   * 长按的回调\n   */\n  public onLongPress?: (eventParams: IOnClick) => void = () => {\n    //\n  };\n\n  /**\n   * 横向超出的距离，父级做图片切换时，可以监听这个函数\n   * 当此函数触发时，可以做切换操作\n   */\n  public horizontalOuterRangeOffset?: (offsetX: number) => void = () => {\n    //\n  };\n\n  /**\n   * 触发想切换到左边的图，向左滑动速度超出阈值时触发\n   */\n  public onDragLeft?: () => void = () => {\n    //\n  };\n\n  /**\n   * 松手但是没有取消看图的回调\n   */\n  public responderRelease?: (vx: number, scale: number) => void = () => {\n    //\n  };\n\n  /**\n   * If provided, this will be called everytime the map is moved\n   */\n  public onMove?: (position: IOnMove) => void = () => {\n    //\n  };\n\n  /**\n   * If provided, this method will be called when the onLayout event fires\n   */\n  public layoutChange?: (event: LayoutChangeEvent) => void = () => {\n    //\n  };\n\n  /**\n   * function that fires when user swipes down\n   */\n  public onSwipeDown?: () => void = () => {\n    //\n  };\n\n  /**\n   * Allows defining the onMoveShouldSetResponder behavior.\n   */\n  public onMoveShouldSetPanResponder?: (\n    event: GestureResponderEvent,\n    gestureState: PanResponderGestureState\n  ) => boolean;\n\n  /**\n   * Allows overriding the default onStartShouldSetPanResponder behavior.\n   * By default, always becomes the responder\n   */\n  public onStartShouldSetPanResponder?: (\n    event: GestureResponderEvent,\n    gestureState: PanResponderGestureState\n  ) => boolean = () => true;\n\n  /**\n   * Allows overriding the default onPanResponderTerminationRequest behavior.\n   * By default, doesn't terminate until the press ends\n   */\n  public onPanResponderTerminationRequest?: (\n    event: GestureResponderEvent,\n    gestureState: PanResponderGestureState\n  ) => boolean = () => false;\n}\n\nexport class ImageZoomState {\n  /**\n   * 中心 x 坐标\n   */\n  public centerX?: number = 0.5;\n  /**\n   * 中心 y 坐标\n   */\n  public centerY?: number = 0.5;\n}\n"],"mappings":";;;;;;AAwBA,IAAAA,cAAA;EAAA,SAAAA,eAAA;IAIS,KAAAC,SAAS,GAAW,GAAG;IAKvB,KAAAC,UAAU,GAAW,GAAG;IAKxB,KAAAC,UAAU,GAAW,GAAG;IAKxB,KAAAC,WAAW,GAAW,GAAG;IAKzB,KAAAC,SAAS,GAAa,IAAI;IAK1B,KAAAC,WAAW,GAAa,IAAI;IAK5B,KAAAC,qBAAqB,GAAa,IAAI;IAKtC,KAAAC,aAAa,GAAY,EAAE;IAK3B,KAAAC,WAAW,GAAY,GAAG;IAK1B,KAAAC,aAAa,GAAY,GAAG;IAK5B,KAAAC,mBAAmB,GAAY,GAAG;IAQlC,KAAAC,KAAK,GAAe,EAAE;IAKtB,KAAAC,kBAAkB,GAAY,GAAG;IAKjC,KAAAC,eAAe,GAAa,KAAK;IAKjC,KAAAC,iBAAiB,GAAa,IAAI;IAKlC,KAAAC,yBAAyB,GAAa,IAAI;IAK1C,KAAAC,QAAQ,GAAY,GAAG;IAKvB,KAAAC,QAAQ,GAAY,EAAE;IAMtB,KAAAC,eAAe,GAAa,KAAK;IAKjC,KAAAC,OAAO,GAAqC,aAEnD,CAAC;IAKM,KAAAC,aAAa,GAAqC,aAEzD,CAAC;IAKM,KAAAC,WAAW,GAAqC,aAEvD,CAAC;IAMM,KAAAC,0BAA0B,GAA+B,aAEhE,CAAC;IAKM,KAAAC,UAAU,GAAgB,aAEjC,CAAC;IAKM,KAAAC,gBAAgB,GAAyC,aAEhE,CAAC;IAKM,KAAAC,MAAM,GAAiC,aAE9C,CAAC;IAKM,KAAAC,YAAY,GAAwC,aAE3D,CAAC;IAKM,KAAAC,WAAW,GAAgB,aAElC,CAAC;IAcM,KAAAC,4BAA4B,GAGpB;MAAM,WAAI;IAAJ,CAAI;IAMlB,KAAAC,gCAAgC,GAGxB;MAAM,YAAK;IAAL,CAAK;EAC5B;EAAA,OAAA9B,cAAC;AAAD,CAAC,CA7LD;AAAa+B,OAAA,CAAA/B,cAAA,GAAAA,cAAA;AA+Lb,IAAAgC,cAAA;EAAA,SAAAA,eAAA;IAIS,KAAAC,OAAO,GAAY,GAAG;IAItB,KAAAC,OAAO,GAAY,GAAG;EAC/B;EAAA,OAAAF,cAAC;AAAD,CAAC,CATD;AAAaD,OAAA,CAAAC,cAAA,GAAAA,cAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}