{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport { listOfChatsStyle } from \"../../Styles/ListOfChatsStyle\";\nimport LastMessageStatus from \"./LastMessageStatus\";\nimport ModeActivity from \"../Status Content/ModeActivity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  screenWidth = _Dimensions$get.width,\n  screenHeight = _Dimensions$get.height;\nvar ChatContainer = function ChatContainer(_ref) {\n  var chat = _ref.chat;\n  var lastMessage = chat.listOfMessages[chat.listOfMessages.length - 1];\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    positionXForStartOfSwipeable = _useState2[0],\n    setPositionXForStartOfSwipeable = _useState2[1];\n  var timeForAnimation = 2000;\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isSwiped = _useState4[0],\n    setIsSwiped = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isSwipedFromRight = _useState6[0],\n    setIsSwipedFromRight = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    stateForRightAnimation = _useState8[0],\n    setStateForRightAnimation = _useState8[1];\n  var _useState9 = useState(1),\n    _useState10 = _slicedToArray(_useState9, 2),\n    durationForAnimation = _useState10[0],\n    setDurationForAnimation = _useState10[1];\n  var _useState11 = useState(screenWidth),\n    _useState12 = _slicedToArray(_useState11, 2),\n    positionXForSwipeable = _useState12[0],\n    setPositionXForSwipeable = _useState12[1];\n  var formattedTime = function formattedTime() {\n    if (!lastMessage) return \"\";\n    var now = new Date();\n    var timeDiff = now.getTime() - lastMessage.timeOfSend.getTime();\n    var dayInMilliseconds = 24 * 60 * 60 * 1000;\n    var weekInMilliseconds = 7 * dayInMilliseconds;\n    var yearInMilliseconds = 365 * dayInMilliseconds;\n    var minutes = lastMessage.timeOfSend.getMinutes();\n    var hours = lastMessage.timeOfSend.getHours();\n    var day = lastMessage.timeOfSend.getDate();\n    var month = lastMessage.timeOfSend.getMonth();\n    var minutesString = minutes < 10 ? `0${minutes}` : minutes.toString();\n    var hoursString = hours < 10 ? `0${hours}` : hours.toString();\n    var daySting = day < 10 ? `0${day}` : day.toString();\n    var monthString = month < 10 ? `0${month}` : month.toString();\n    if (timeDiff < dayInMilliseconds) {\n      return `${hoursString}:${minutesString}`;\n    } else if (timeDiff < weekInMilliseconds) {\n      var daysOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n      var dayOfWeek = daysOfWeek[lastMessage.timeOfSend.getDay()];\n      return dayOfWeek.slice(0, 3);\n    } else if (timeDiff < yearInMilliseconds) {\n      return `${daySting}.${monthString}`;\n    } else {\n      return `${daySting}.${monthString}.${lastMessage.timeOfSend.getFullYear() - 2000}`;\n    }\n  };\n  var handlePress = function handlePress() {\n    console.log(\"Кнопку натиснули\");\n  };\n  var onLongPressChat = function onLongPressChat(e, chat) {\n    console.log(chat.name);\n  };\n  useEffect(function () {}, [positionXForSwipeable]);\n  var dragXPosition = useState(new Animated.Value(screenWidth))[0];\n  var dragXPositionForAnimation = useState(new Animated.Value(0))[0];\n  var scale1 = dragXPosition.interpolate({\n    inputRange: [screenWidth, screenWidth * 1.1],\n    outputRange: [-screenWidth * 0.2, -screenWidth * 0.15]\n  });\n  var scale2 = dragXPositionForAnimation.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screenWidth * 0.1, -screenWidth * 0.2]\n  });\n  var scrollViewRef = useRef(null);\n  var handleScrollToRightFirstPosition = function handleScrollToRightFirstPosition() {\n    setStateForRightAnimation(false);\n    var scrollVarible = positionXForStartOfSwipeable == screenWidth;\n    if (positionXForSwipeable < screenWidth * 1.4 && positionXForSwipeable > screenWidth && (!isSwipedFromRight || scrollVarible)) {\n      scrollToRight40Percents();\n      setIsSwipedFromRight(true);\n      console.log(positionXForStartOfSwipeable);\n      return;\n    }\n    if (positionXForSwipeable < screenWidth || setIsSwipedFromRight && positionXForSwipeable < screenWidth * 1.4) {\n      scrollToRightBound();\n      setIsSwiped(false);\n      setIsSwipedFromRight(false);\n      return;\n    }\n    if (positionXForSwipeable > screenWidth * 1.4 && isSwipedFromRight || scrollVarible) {\n      scrollToRight40Percents();\n      setIsSwipedFromRight(true);\n    }\n  };\n  var scrollToRight40Percents = function scrollToRight40Percents() {\n    scrollViewRef.current.scrollTo({\n      x: screenWidth * 1.4\n    });\n  };\n  var scrollToRightBound = function scrollToRightBound() {\n    scrollViewRef.current.scrollTo({\n      x: screenWidth\n    });\n  };\n  var handleOnScroll = function handleOnScroll(e) {\n    var positionX = e.nativeEvent.contentOffset.x;\n    setPositionXForSwipeable(positionX);\n    if (positionXForSwipeable > screenWidth * 1.6 && !stateForRightAnimation && durationForAnimation != timeForAnimation - 1) {\n      setDurationForAnimation(timeForAnimation);\n      setStateForRightAnimation(true);\n      return;\n    } else if (positionXForSwipeable < screenWidth * 1.6 && stateForRightAnimation && durationForAnimation != timeForAnimation - 1 && durationForAnimation != null) {\n      setDurationForAnimation(timeForAnimation - 1);\n      return;\n    }\n    if (durationForAnimation == timeForAnimation) {\n      Animated.timing(dragXPositionForAnimation, {\n        toValue: 1,\n        duration: durationForAnimation * 1,\n        easing: Easing.linear,\n        useNativeDriver: true\n      }).start(function () {});\n      setDurationForAnimation(1);\n    } else if (durationForAnimation == timeForAnimation - 1) {\n      Animated.timing(dragXPositionForAnimation, {\n        toValue: 0,\n        duration: (durationForAnimation + 1) * 1,\n        easing: Easing.linear,\n        useNativeDriver: true\n      }).start(function () {\n        setStateForRightAnimation(false);\n        setDurationForAnimation(1);\n      });\n      setDurationForAnimation(null);\n    } else if (durationForAnimation == 1) {\n      Animated.timing(dragXPosition, {\n        toValue: positionX,\n        duration: durationForAnimation,\n        useNativeDriver: true\n      }).start();\n    }\n  };\n  return _jsxs(Animated.View, {\n    children: [_jsx(TouchableOpacity, {\n      style: listOfChatsStyle.helpContainer,\n      onPress: handlePress,\n      onLongPress: function onLongPress(e) {\n        return onLongPressChat(e, chat);\n      },\n      activeOpacity: 0.1\n    }), _jsxs(Animated.ScrollView, {\n      ref: scrollViewRef,\n      pagingEnabled: true,\n      horizontal: true,\n      showsHorizontalScrollIndicator: false,\n      style: {\n        width: screenWidth,\n        flexDirection: \"row\"\n      },\n      decelerationRate: 0,\n      scrollEventThrottle: 10,\n      contentOffset: {\n        x: screenWidth,\n        y: 0\n      },\n      onScrollBeginDrag: function onScrollBeginDrag(e) {\n        setIsSwiped(true);\n        setPositionXForStartOfSwipeable(e.nativeEvent.contentOffset.x);\n      },\n      onScroll: handleOnScroll,\n      onScrollEndDrag: handleScrollToRightFirstPosition,\n      children: [_jsx(Animated.View, {\n        style: {\n          height: screenHeight * 0.08,\n          width: screenWidth,\n          backgroundColor: \"blue\"\n        }\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          handlePress();\n        },\n        onLongPress: function onLongPress(e) {\n          return onLongPressChat(e, chat);\n        },\n        pressRetentionOffset: {\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0\n        },\n        activeOpacity: 1,\n        children: _jsxs(View, {\n          style: listOfChatsStyle.chatcontainer,\n          children: [_jsxs(View, {\n            style: [listOfChatsStyle.imageContainer],\n            children: [_jsx(Image, {\n              source: {\n                uri: chat.url\n              },\n              style: listOfChatsStyle.image\n            }), _jsx(ModeActivity, {\n              style: listOfChatsStyle.modeOfActivity,\n              status: chat.status\n            })]\n          }), _jsxs(View, {\n            style: listOfChatsStyle.containerForOther,\n            children: [_jsxs(View, {\n              style: listOfChatsStyle.highcontainer,\n              children: [_jsx(View, {\n                style: listOfChatsStyle.namecontainer,\n                children: _jsx(Text, {\n                  style: listOfChatsStyle.nameStyle,\n                  numberOfLines: 1,\n                  ellipsizeMode: \"tail\",\n                  children: chat.name\n                })\n              }), _jsxs(View, {\n                style: [listOfChatsStyle.rightContainer],\n                children: [_jsx(LastMessageStatus, {\n                  chat: chat\n                }), _jsx(Text, {\n                  style: listOfChatsStyle.timeStyle,\n                  children: formattedTime()\n                })]\n              })]\n            }), _jsx(View, {\n              style: listOfChatsStyle.containerForContent,\n              children: _jsx(Text, {\n                style: listOfChatsStyle.contentStyle,\n                numberOfLines: 2,\n                ellipsizeMode: \"tail\",\n                children: lastMessage == null ? void 0 : lastMessage.content\n              })\n            })]\n          })]\n        })\n      }), _jsxs(Animated.View, {\n        style: {\n          height: screenHeight * 0.08,\n          width: screenWidth,\n          backgroundColor: \"yellow\",\n          flexDirection: \"row\"\n        },\n        children: [_jsx(Animated.View, {\n          style: {\n            width: screenWidth * 0.2,\n            backgroundColor: \"yellow\"\n          },\n          children: _jsx(Animated.View, {\n            style: {\n              backgroundColor: \"blue\",\n              opacity: 0.5,\n              flex: 1\n            },\n            children: _jsx(Animated.Text, {\n              children: \"Delete\"\n            })\n          })\n        }), _jsx(Animated.View, {\n          style: {\n            width: screenWidth,\n            backgroundColor: \"red\",\n            transform: [{\n              translateX: stateForRightAnimation ? scale2 : scale1\n            }]\n          },\n          children: _jsx(Animated.View, {\n            style: {\n              backgroundColor: \"blue\",\n              opacity: 0.5,\n              width: screenWidth * 0.2,\n              flex: 1\n            },\n            children: _jsx(Animated.Text, {\n              children: \"Delete\"\n            })\n          })\n        })]\n      })]\n    })]\n  });\n};\nexport default React.memo(ChatContainer);","map":{"version":3,"names":["React","useEffect","useRef","useState","View","Image","Text","TouchableOpacity","Dimensions","Animated","Easing","listOfChatsStyle","LastMessageStatus","ModeActivity","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","screenWidth","width","screenHeight","height","ChatContainer","_ref","chat","lastMessage","listOfMessages","length","_useState","_useState2","_slicedToArray","positionXForStartOfSwipeable","setPositionXForStartOfSwipeable","timeForAnimation","_useState3","_useState4","isSwiped","setIsSwiped","_useState5","_useState6","isSwipedFromRight","setIsSwipedFromRight","_useState7","_useState8","stateForRightAnimation","setStateForRightAnimation","_useState9","_useState10","durationForAnimation","setDurationForAnimation","_useState11","_useState12","positionXForSwipeable","setPositionXForSwipeable","formattedTime","now","Date","timeDiff","getTime","timeOfSend","dayInMilliseconds","weekInMilliseconds","yearInMilliseconds","minutes","getMinutes","hours","getHours","day","getDate","month","getMonth","minutesString","toString","hoursString","daySting","monthString","daysOfWeek","dayOfWeek","getDay","slice","getFullYear","handlePress","console","log","onLongPressChat","e","name","dragXPosition","Value","dragXPositionForAnimation","scale1","interpolate","inputRange","outputRange","scale2","scrollViewRef","handleScrollToRightFirstPosition","scrollVarible","scrollToRight40Percents","scrollToRightBound","current","scrollTo","x","handleOnScroll","positionX","nativeEvent","contentOffset","timing","toValue","duration","easing","linear","useNativeDriver","start","children","style","helpContainer","onPress","onLongPress","activeOpacity","ScrollView","ref","pagingEnabled","horizontal","showsHorizontalScrollIndicator","flexDirection","decelerationRate","scrollEventThrottle","y","onScrollBeginDrag","onScroll","onScrollEndDrag","backgroundColor","pressRetentionOffset","top","left","right","bottom","chatcontainer","imageContainer","source","uri","url","image","modeOfActivity","status","containerForOther","highcontainer","namecontainer","nameStyle","numberOfLines","ellipsizeMode","rightContainer","timeStyle","containerForContent","contentStyle","content","opacity","flex","transform","translateX","memo"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/ChatList/Components/List of folders containers/ChatContainer.tsx"],"sourcesContent":["import React, {\r\n  Component,\r\n  MutableRefObject,\r\n  Ref,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport {\r\n  View,\r\n  Image,\r\n  Text,\r\n  TouchableOpacity,\r\n  Dimensions,\r\n  PanResponder,\r\n  Animated,\r\n  GestureResponderEvent,\r\n  NativeSyntheticEvent,\r\n  NativeScrollEvent,\r\n  ScrollView,\r\n  Easing,\r\n} from \"react-native\";\r\nimport { listOfChatsStyle } from \"../../Styles/ListOfChatsStyle\";\r\nimport Message from \"../../1HelpFullFolder/Message\";\r\nimport Chat from \"../../1HelpFullFolder/Chat\";\r\nimport LastMessageStatus from \"./LastMessageStatus\";\r\nimport ModeActivity from \"../Status Content/ModeActivity\";\r\n\r\ninterface ChatProps {\r\n  chat: Chat;\r\n}\r\n\r\nconst { width: screenWidth, height: screenHeight } = Dimensions.get(\"window\");\r\nconst ChatContainer: React.FC<ChatProps> = ({ chat }) => {\r\n  const lastMessage: Message | undefined =\r\n    chat.listOfMessages[chat.listOfMessages.length - 1];\r\n  const [positionXForStartOfSwipeable, setPositionXForStartOfSwipeable] =\r\n    useState<number>(null);\r\n  const timeForAnimation: number = 2000;\r\n  const [isSwiped, setIsSwiped] = useState(false);\r\n  const [isSwipedFromRight, setIsSwipedFromRight] = useState(false);\r\n  const [stateForRightAnimation, setStateForRightAnimation] = useState(false);\r\n  const [durationForAnimation, setDurationForAnimation] = useState(1);\r\n  const [positionXForSwipeable, setPositionXForSwipeable] =\r\n    useState<number>(screenWidth);\r\n  const formattedTime = (): string => {\r\n    if (!lastMessage) return \"\";\r\n    const now: Date = new Date();\r\n    const timeDiff: number = now.getTime() - lastMessage.timeOfSend.getTime();\r\n    const dayInMilliseconds: number = 24 * 60 * 60 * 1000;\r\n    const weekInMilliseconds: number = 7 * dayInMilliseconds;\r\n    const yearInMilliseconds: number = 365 * dayInMilliseconds;\r\n    const minutes: number = lastMessage.timeOfSend.getMinutes();\r\n    const hours: number = lastMessage.timeOfSend.getHours();\r\n    const day: number = lastMessage.timeOfSend.getDate();\r\n    const month: number = lastMessage.timeOfSend.getMonth();\r\n    const minutesString: string =\r\n      minutes < 10 ? `0${minutes}` : minutes.toString();\r\n    const hoursString: string = hours < 10 ? `0${hours}` : hours.toString();\r\n    const daySting: string = day < 10 ? `0${day}` : day.toString();\r\n    const monthString: string = month < 10 ? `0${month}` : month.toString();\r\n\r\n    if (timeDiff < dayInMilliseconds) {\r\n      return `${hoursString}:${minutesString}`;\r\n    } else if (timeDiff < weekInMilliseconds) {\r\n      const daysOfWeek = [\r\n        \"Sunday\",\r\n        \"Monday\",\r\n        \"Tuesday\",\r\n        \"Wednesday\",\r\n        \"Thursday\",\r\n        \"Friday\",\r\n        \"Saturday\",\r\n      ];\r\n      const dayOfWeek: string = daysOfWeek[lastMessage.timeOfSend.getDay()];\r\n      return dayOfWeek.slice(0, 3);\r\n    } else if (timeDiff < yearInMilliseconds) {\r\n      return `${daySting}.${monthString}`;\r\n    } else {\r\n      return `${daySting}.${monthString}.${\r\n        lastMessage.timeOfSend.getFullYear() - 2000\r\n      }`;\r\n    }\r\n  };\r\n  const handlePress = () => {\r\n    console.log(\"Кнопку натиснули\");\r\n  };\r\n  const onLongPressChat = (e: GestureResponderEvent, chat: Chat) => {\r\n    console.log(chat.name);\r\n  };\r\n  useEffect(() => {\r\n    //console.log(positionXForSwipeable);\r\n  }, [positionXForSwipeable]);\r\n\r\n  const dragXPosition = useState(new Animated.Value(screenWidth))[0];\r\n  const dragXPositionForAnimation = useState(new Animated.Value(0))[0];\r\n  const scale1 = dragXPosition.interpolate({\r\n    inputRange: [screenWidth, screenWidth * 1.1],\r\n    outputRange: [-screenWidth * 0.2, -screenWidth * 0.15],\r\n  });\r\n  const scale2 = dragXPositionForAnimation.interpolate({\r\n    inputRange: [0, 1],\r\n    outputRange: [screenWidth * 0.1, -screenWidth * 0.2],\r\n  });\r\n\r\n  const scrollViewRef: Ref<ScrollView> = useRef<ScrollView>(null);\r\n  const handleScrollToRightFirstPosition = () => {\r\n    setStateForRightAnimation(false)\r\n    const scrollVarible = positionXForStartOfSwipeable == screenWidth;\r\n    if (\r\n      positionXForSwipeable < screenWidth * 1.4 &&\r\n      positionXForSwipeable > screenWidth &&\r\n      (!isSwipedFromRight || scrollVarible)\r\n    ) {\r\n      scrollToRight40Percents();\r\n      setIsSwipedFromRight(true);\r\n      console.log(positionXForStartOfSwipeable);\r\n      return;\r\n    }\r\n    if (\r\n      positionXForSwipeable < screenWidth ||\r\n      (setIsSwipedFromRight && positionXForSwipeable < screenWidth * 1.4)\r\n    ) {\r\n      scrollToRightBound();\r\n      setIsSwiped(false);\r\n      setIsSwipedFromRight(false);\r\n      return;\r\n    }\r\n    if (\r\n      (positionXForSwipeable > screenWidth * 1.4 && isSwipedFromRight) ||\r\n      scrollVarible\r\n    ) {\r\n      scrollToRight40Percents();\r\n      setIsSwipedFromRight(true);\r\n    }\r\n  };\r\n  const scrollToRight40Percents = () => {\r\n    scrollViewRef.current.scrollTo({ x: screenWidth * 1.4 });\r\n  };\r\n  const scrollToRightBound = () => {\r\n    scrollViewRef.current.scrollTo({ x: screenWidth });\r\n  };\r\n  const handleOnScroll = (e: NativeSyntheticEvent<NativeScrollEvent>) => {\r\n    const positionX = e.nativeEvent.contentOffset.x;\r\n\r\n    setPositionXForSwipeable(positionX);\r\n    if (positionXForSwipeable > screenWidth * 1.6 && !stateForRightAnimation&&(durationForAnimation!=timeForAnimation-1)) {\r\n      setDurationForAnimation(timeForAnimation);\r\n      setStateForRightAnimation(true);\r\n      return\r\n    } else if (\r\n      positionXForSwipeable < screenWidth * 1.6 &&\r\n      stateForRightAnimation&&(durationForAnimation!=timeForAnimation-1)&&(durationForAnimation!=null)\r\n    ) {\r\n\r\n      setDurationForAnimation(timeForAnimation - 1);\r\n      return\r\n    }\r\n    if (durationForAnimation == timeForAnimation) {\r\n      Animated.timing(dragXPositionForAnimation, {\r\n        toValue: 1,\r\n        duration: durationForAnimation * 1,\r\n        easing: Easing.linear,\r\n        useNativeDriver: true,\r\n      }).start(() => {});\r\n      setDurationForAnimation(1);\r\n    } else if (durationForAnimation == timeForAnimation - 1) {\r\n      Animated.timing(dragXPositionForAnimation, {\r\n        toValue: 0,\r\n        duration: (durationForAnimation + 1) * 1,\r\n        easing: Easing.linear,\r\n        useNativeDriver: true,\r\n      }).start(() => {\r\n        setStateForRightAnimation(false);\r\n        setDurationForAnimation(1);\r\n      });\r\n      setDurationForAnimation(null);\r\n    } else if (durationForAnimation == 1) {\r\n      Animated.timing(dragXPosition, {\r\n        toValue: positionX,\r\n        duration: durationForAnimation,\r\n        useNativeDriver: true,\r\n      }).start();\r\n    }\r\n  };\r\n  return (\r\n    <Animated.View>\r\n      <TouchableOpacity\r\n        style={listOfChatsStyle.helpContainer}\r\n        onPress={handlePress}\r\n        onLongPress={(e) => onLongPressChat(e, chat)}\r\n        activeOpacity={0.1}\r\n      />\r\n      <Animated.ScrollView\r\n        ref={scrollViewRef}\r\n        pagingEnabled={true}\r\n        horizontal\r\n        showsHorizontalScrollIndicator={false}\r\n        style={{\r\n          width: screenWidth,\r\n          flexDirection: \"row\",\r\n        }}\r\n        decelerationRate={0}\r\n        scrollEventThrottle={10}\r\n        contentOffset={{ x: screenWidth, y: 0 }}\r\n        onScrollBeginDrag={(e: NativeSyntheticEvent<NativeScrollEvent>) => {\r\n          setIsSwiped(true);\r\n          setPositionXForStartOfSwipeable(e.nativeEvent.contentOffset.x);\r\n        }}\r\n        onScroll={handleOnScroll}\r\n        onScrollEndDrag={handleScrollToRightFirstPosition}\r\n      >\r\n        <Animated.View\r\n          style={{\r\n            height: screenHeight * 0.08,\r\n            width: screenWidth,\r\n            backgroundColor: \"blue\",\r\n          }}\r\n        />\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            handlePress();\r\n          }}\r\n          onLongPress={(e) => onLongPressChat(e, chat)}\r\n          pressRetentionOffset={{ top: 0, left: 0, right: 0, bottom: 0 }}\r\n          activeOpacity={1}\r\n        >\r\n          <View style={listOfChatsStyle.chatcontainer}>\r\n            <View style={[listOfChatsStyle.imageContainer]}>\r\n              <Image\r\n                source={{ uri: chat.url }}\r\n                style={listOfChatsStyle.image}\r\n              ></Image>\r\n              <ModeActivity\r\n                style={listOfChatsStyle.modeOfActivity}\r\n                status={chat.status}\r\n              />\r\n            </View>\r\n            <View style={listOfChatsStyle.containerForOther}>\r\n              <View style={listOfChatsStyle.highcontainer}>\r\n                <View style={listOfChatsStyle.namecontainer}>\r\n                  <Text\r\n                    style={listOfChatsStyle.nameStyle}\r\n                    numberOfLines={1}\r\n                    ellipsizeMode=\"tail\"\r\n                  >\r\n                    {chat.name}\r\n                  </Text>\r\n                </View>\r\n                <View style={[listOfChatsStyle.rightContainer]}>\r\n                  <LastMessageStatus chat={chat} />\r\n                  <Text style={listOfChatsStyle.timeStyle}>\r\n                    {formattedTime()}\r\n                  </Text>\r\n                </View>\r\n              </View>\r\n              <View style={listOfChatsStyle.containerForContent}>\r\n                <Text\r\n                  style={listOfChatsStyle.contentStyle}\r\n                  numberOfLines={2}\r\n                  ellipsizeMode=\"tail\"\r\n                >\r\n                  {lastMessage?.content}\r\n                </Text>\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </TouchableOpacity>\r\n        <Animated.View\r\n          style={{\r\n            height: screenHeight * 0.08,\r\n            width: screenWidth,\r\n            backgroundColor: \"yellow\",\r\n            flexDirection: \"row\",\r\n          }}\r\n        >\r\n          <Animated.View\r\n            style={{\r\n              width: screenWidth * 0.2,\r\n              backgroundColor: \"yellow\",\r\n            }}\r\n          >\r\n            <Animated.View\r\n              style={{ backgroundColor: \"blue\", opacity: 0.5, flex: 1 }}\r\n            >\r\n              <Animated.Text>Delete</Animated.Text>\r\n            </Animated.View>\r\n          </Animated.View>\r\n          <Animated.View\r\n            style={{\r\n              width: screenWidth,\r\n              backgroundColor: \"red\",\r\n              transform: [\r\n                {\r\n                  translateX: stateForRightAnimation ? scale2 : scale1,\r\n                },\r\n              ],\r\n            }}\r\n          >\r\n            <Animated.View\r\n              style={{\r\n                backgroundColor: \"blue\",\r\n                opacity: 0.5,\r\n                width: screenWidth * 0.2,\r\n                flex: 1,\r\n              }}\r\n            >\r\n              <Animated.Text>Delete</Animated.Text>\r\n            </Animated.View>\r\n          </Animated.View>\r\n        </Animated.View>\r\n      </Animated.ScrollView>\r\n    </Animated.View>\r\n  );\r\n};\r\n\r\nexport default React.memo(ChatContainer);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}