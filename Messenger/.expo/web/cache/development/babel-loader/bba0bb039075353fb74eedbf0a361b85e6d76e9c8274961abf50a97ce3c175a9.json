{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { styles } from \"./Styles\";\nimport { user } from \"../../SemiComponents/DBUser\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar screenHeight = Dimensions.get(\"screen\").height;\nvar screenWidth = Dimensions.get(\"screen\").width;\nvar CurrentAvatarBar = function CurrentAvatarBar(props) {\n  return _jsx(_Fragment, {\n    children: user.avatars.length > 1 && _jsx(View, {\n      style: styles.currentAvatarBarMainContainer,\n      children: user.avatars.map(function (avatar, index) {\n        return _jsx(View, {\n          style: [styles.avatarBarElement, {\n            width: 0.68 * screenWidth / user.avatars.length,\n            backgroundColor: props.currentAvatar == avatar ? \"white\" : \"rgb(161, 156, 145)\",\n            left: 0.7 * screenWidth / user.avatars.length * index\n          }]\n        }, index);\n      })\n    })\n  });\n};\nexport default CurrentAvatarBar;","map":{"version":3,"names":["React","View","Dimensions","styles","user","jsx","_jsx","Fragment","_Fragment","screenHeight","get","height","screenWidth","width","CurrentAvatarBar","props","children","avatars","length","style","currentAvatarBarMainContainer","map","avatar","index","avatarBarElement","backgroundColor","currentAvatar","left"],"sources":["/home/zatibmag/Desktop/Project/Messenger/Messenger/Pages/Profiles/DialogueProfile/AvatarsAndInfoScreen/CurrentAvatarBar.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React, { useState } from \"react\";\r\nimport { View, Text, Dimensions } from \"react-native\";\r\nimport { styles } from \"./Styles\";\r\nimport { PhotoOrVideo, user } from \"../../SemiComponents/DBUser\";\r\n\r\nconst screenHeight = Dimensions.get(\"screen\").height;\r\nconst screenWidth = Dimensions.get(\"screen\").width;\r\n\r\ninterface CurrentAvatarBarProps {\r\n  currentAvatar: PhotoOrVideo;\r\n}\r\n\r\nconst CurrentAvatarBar: React.FC<CurrentAvatarBarProps> = (props) => {\r\n  return (\r\n    <>\r\n      {user.avatars.length > 1 && (\r\n        <View style={styles.currentAvatarBarMainContainer}>\r\n          {user.avatars.map((avatar, index) => (\r\n            <View\r\n              key={index}\r\n              style={[\r\n                styles.avatarBarElement,\r\n                {\r\n                  width: (0.68 * screenWidth) / user.avatars.length,\r\n                  backgroundColor:\r\n                    props.currentAvatar == avatar\r\n                      ? \"white\"\r\n                      : \"rgb(161, 156, 145)\",\r\n\r\n                  left: ((0.7 * screenWidth) / user.avatars.length) * index,\r\n                },\r\n              ]}\r\n            />\r\n          ))}\r\n        </View>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CurrentAvatarBar;\r\n"],"mappings":"AAEA,OAAOA,KAAK,MAAoB,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAExC,SAASC,MAAM;AACf,SAAuBC,IAAI;AAAsC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjE,IAAMC,YAAY,GAAGP,UAAU,CAACQ,GAAG,CAAC,QAAQ,CAAC,CAACC,MAAM;AACpD,IAAMC,WAAW,GAAGV,UAAU,CAACQ,GAAG,CAAC,QAAQ,CAAC,CAACG,KAAK;AAMlD,IAAMC,gBAAiD,GAAG,SAApDA,gBAAiDA,CAAIC,KAAK,EAAK;EACnE,OACET,IAAA,CAAAE,SAAA;IAAAQ,QAAA,EACGZ,IAAI,CAACa,OAAO,CAACC,MAAM,GAAG,CAAC,IACtBZ,IAAA,CAACL,IAAI;MAACkB,KAAK,EAAEhB,MAAM,CAACiB,6BAA8B;MAAAJ,QAAA,EAC/CZ,IAAI,CAACa,OAAO,CAACI,GAAG,CAAC,UAACC,MAAM,EAAEC,KAAK;QAAA,OAC9BjB,IAAA,CAACL,IAAI;UAEHkB,KAAK,EAAE,CACLhB,MAAM,CAACqB,gBAAgB,EACvB;YACEX,KAAK,EAAG,IAAI,GAAGD,WAAW,GAAIR,IAAI,CAACa,OAAO,CAACC,MAAM;YACjDO,eAAe,EACbV,KAAK,CAACW,aAAa,IAAIJ,MAAM,GACzB,OAAO,GACP,oBAAoB;YAE1BK,IAAI,EAAI,GAAG,GAAGf,WAAW,GAAIR,IAAI,CAACa,OAAO,CAACC,MAAM,GAAIK;UACtD,CAAC;QACD,GAZGA,KAaN,CAAC;MAAA,CACH;IAAC,CACE;EACP,CACD,CAAC;AAEP,CAAC;AAED,eAAeT,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}