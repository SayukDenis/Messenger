{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleButtonList from \"./StyleButtonLIst\";\nimport ButtonForSettings from \"../../../../../SemiComponents/ButtonForSettings\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ButtonList = function ButtonList(_ref) {\n  var navigation = _ref.navigation;\n  var items = [\"Saved message\", \"Look\", \"Notification\", \"Chat folders\", \"Confidentiality\", \"Language\"];\n  return _jsxs(View, {\n    children: [items.map(function (item, index) {\n      return _jsx(View, {\n        children: _jsx(TouchableOpacity, {\n          style: {\n            marginBottom: 1\n          },\n          onPress: function onPress() {\n            return navigation.navigate(item);\n          },\n          children: _jsx(ButtonForSettings, {\n            text: item\n          })\n        })\n      }, index);\n    }), _jsx(Text, {\n      style: StyleButtonList.styleButListText,\n      children: \"FAQ\"\n    }), _jsx(TouchableOpacity, {\n      style: {\n        marginBottom: 1\n      },\n      onPress: function onPress() {\n        return navigation.navigate('Question page');\n      },\n      children: _jsx(ButtonForSettings, {\n        text: \"Question in Telintik\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: {\n        marginBottom: 1\n      },\n      onPress: function onPress() {\n        return navigation.navigate('Ask a question');\n      },\n      children: _jsx(ButtonForSettings, {\n        text: \"Ask a Question\"\n      })\n    })]\n  });\n};\nexport default ButtonList;","map":{"version":3,"names":["React","View","TouchableOpacity","Text","StyleButtonList","ButtonForSettings","jsx","_jsx","jsxs","_jsxs","ButtonList","_ref","navigation","items","children","map","item","index","style","marginBottom","onPress","navigate","text","styleButListText"],"sources":["D:/project/1project/Messenger/Messenger/Pages/Settings/MainSettingPage/settingsPage/Center/ButtonLIst/Buttonlist.tsx"],"sourcesContent":["import React from 'react';\r\nimport { View, TouchableOpacity, Text } from 'react-native';\r\nimport StyleButtonList from './StyleButtonLIst';\r\nimport ButtonForSettings from '../../../../../SemiComponents/ButtonForSettings';\r\n\r\nconst ButtonList: React.FC<any> = ({ navigation }) => {\r\n    let items: string[] =[\"Saved message\",\"Look\",\"Notification\",\"Chat folders\",\"Confidentiality\",\"Language\",];\r\n    return <View>\r\n    {items.map((item, index) => (\r\n      <View key={index} >\r\n        <TouchableOpacity style={{marginBottom:1}} onPress={() => navigation.navigate(item)}>\r\n          <ButtonForSettings text={item} ></ButtonForSettings>\r\n        </TouchableOpacity>\r\n      </View>\r\n    ))}\r\n     <Text style= {StyleButtonList.styleButListText}>FAQ</Text>\r\n                                <TouchableOpacity style={{marginBottom:1}}   onPress={() => navigation.navigate('Question page')}>                                      \r\n                                        <ButtonForSettings text='Question in Telintik'></ButtonForSettings>\r\n                                </TouchableOpacity>\r\n                                    <TouchableOpacity style={{marginBottom:1}}   onPress={() => navigation.navigate('Ask a question')}>\r\n                                      <ButtonForSettings text='Ask a Question'></ButtonForSettings>\r\n                                    </TouchableOpacity>\r\n    </View>\r\n}\r\n\r\n\r\nexport default ButtonList;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAE1B,OAAOC,eAAe;AACtB,OAAOC,iBAAiB;AAAwD,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEhF,IAAMC,UAAyB,GAAG,SAA5BA,UAAyBA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC3C,IAAIC,KAAe,GAAE,CAAC,eAAe,EAAC,MAAM,EAAC,cAAc,EAAC,cAAc,EAAC,iBAAiB,EAAC,UAAU,CAAE;EACzG,OAAOJ,KAAA,CAACR,IAAI;IAAAa,QAAA,GACXD,KAAK,CAACE,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK;MAAA,OACrBV,IAAA,CAACN,IAAI;QAAAa,QAAA,EACHP,IAAA,CAACL,gBAAgB;UAACgB,KAAK,EAAE;YAACC,YAAY,EAAC;UAAC,CAAE;UAACC,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMR,UAAU,CAACS,QAAQ,CAACL,IAAI,CAAC;UAAA,CAAC;UAAAF,QAAA,EAClFP,IAAA,CAACF,iBAAiB;YAACiB,IAAI,EAAEN;UAAK,CAAqB;QAAC,CACpC;MAAC,GAHVC,KAIL,CAAC;IAAA,CACR,CAAC,EACDV,IAAA,CAACJ,IAAI;MAACe,KAAK,EAAGd,eAAe,CAACmB,gBAAiB;MAAAT,QAAA,EAAC;IAAG,CAAM,CAAC,EAC/BP,IAAA,CAACL,gBAAgB;MAACgB,KAAK,EAAE;QAACC,YAAY,EAAC;MAAC,CAAE;MAAGC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMR,UAAU,CAACS,QAAQ,CAAC,eAAe,CAAC;MAAA,CAAC;MAAAP,QAAA,EACzFP,IAAA,CAACF,iBAAiB;QAACiB,IAAI,EAAC;MAAsB,CAAoB;IAAC,CACzD,CAAC,EACff,IAAA,CAACL,gBAAgB;MAACgB,KAAK,EAAE;QAACC,YAAY,EAAC;MAAC,CAAE;MAAGC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMR,UAAU,CAACS,QAAQ,CAAC,gBAAgB,CAAC;MAAA,CAAC;MAAAP,QAAA,EAChGP,IAAA,CAACF,iBAAiB;QAACiB,IAAI,EAAC;MAAgB,CAAoB;IAAC,CAC7C,CAAC;EAAA,CAC7C,CAAC;AACX,CAAC;AAGD,eAAeZ,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}