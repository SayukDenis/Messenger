{"ast":null,"code":"import React, { useRef } from \"react\";\nimport HeaderContainer from \"../../../SemiComponents/HeaderContainer\";\nimport DefaultContainerInHeader from \"../../../SemiComponents/DefaultContainerInHeader\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport BackButton from \"../../../SemiComponents/BackButton\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { screenHeight, screenWidth } from \"../../Constants/ConstantsForChatlist\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HeaderForWriteMessage = function HeaderForWriteMessage(_ref) {\n  var navigation = _ref.navigation;\n  var inputRef = useRef(null);\n  var pressOnBackButton = useRef(function () {\n    navigation.goBack();\n  });\n  return _jsx(HeaderContainer, {\n    children: _jsxs(DefaultContainerInHeader, {\n      children: [_jsx(TouchableOpacity, {\n        onPress: pressOnBackButton.current,\n        style: {\n          alignSelf: \"center\"\n        },\n        children: _jsx(BackButton, {})\n      }), _jsx(View, {\n        style: {\n          alignSelf: \"center\",\n          marginLeft: 5\n        },\n        children: _jsx(TextInput, {\n          ref: inputRef,\n          style: {\n            width: screenWidth * 0.8,\n            height: screenHeight * 0.0415,\n            backgroundColor: \"#272727\",\n            alignSelf: \"center\",\n            color: \"white\",\n            paddingHorizontal: 15,\n            borderRadius: 100,\n            fontSize: 16\n          },\n          placeholder: \"Search to write\",\n          placeholderTextColor: \"#888282\",\n          keyboardAppearance: \"dark\"\n        })\n      })]\n    })\n  });\n};\nexport default HeaderForWriteMessage;","map":{"version":3,"names":["React","useRef","HeaderContainer","DefaultContainerInHeader","TextInput","TouchableOpacity","BackButton","View","screenHeight","screenWidth","jsx","_jsx","jsxs","_jsxs","HeaderForWriteMessage","_ref","navigation","inputRef","pressOnBackButton","goBack","children","onPress","current","style","alignSelf","marginLeft","ref","width","height","backgroundColor","color","paddingHorizontal","borderRadius","fontSize","placeholder","placeholderTextColor","keyboardAppearance"],"sources":["D:/project/1project/Messenger/Messenger/Pages/ChatList/Components/Write Message containers/HeaderForWriteMessage.tsx"],"sourcesContent":["import React, { useRef } from \"react\";\r\nimport HeaderContainer from \"../../../SemiComponents/HeaderContainer\";\r\nimport DefaultContainerInHeader from \"../../../SemiComponents/DefaultContainerInHeader\";\r\nimport { TextInput, TouchableOpacity } from \"react-native\";\r\nimport BackButton from \"../../../SemiComponents/BackButton\";\r\nimport { View } from \"react-native\";\r\nimport { screenHeight, screenWidth } from \"../../Constants/ConstantsForChatlist\";\r\n\r\ninterface HeaderForWriteMessageProps {\r\n  navigation: any;\r\n}\r\n\r\nconst HeaderForWriteMessage: React.FC<HeaderForWriteMessageProps> = ({\r\n  navigation,\r\n}) => {\r\n    const inputRef = useRef<TextInput>(null);\r\n  const pressOnBackButton = useRef(() => {\r\n    navigation.goBack();\r\n  });\r\n  return (\r\n    <HeaderContainer>\r\n      <DefaultContainerInHeader>\r\n        <TouchableOpacity\r\n          onPress={pressOnBackButton.current}\r\n          style={{ alignSelf: \"center\" }}\r\n        >\r\n          <BackButton />\r\n        </TouchableOpacity>\r\n        <View style={{ alignSelf: \"center\", marginLeft: 5 }}>\r\n          <TextInput\r\n            ref={inputRef}\r\n            style={{\r\n              width: screenWidth* 0.8,\r\n              height: screenHeight* 0.0415,\r\n              backgroundColor: \"#272727\",\r\n              alignSelf: \"center\",\r\n              color: \"white\",\r\n              paddingHorizontal: 15,\r\n              borderRadius: 100,\r\n              fontSize: 16,\r\n            }}\r\n            placeholder=\"Search to write\"\r\n            placeholderTextColor={\"#888282\"}\r\n            keyboardAppearance=\"dark\"\r\n          />\r\n        </View>\r\n      </DefaultContainerInHeader>\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nexport default HeaderForWriteMessage;\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,OAAOC,eAAe;AACtB,OAAOC,wBAAwB;AAAyD,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAExF,OAAOC,UAAU;AAA2C,OAAAC,IAAA;AAE5D,SAASC,YAAY,EAAEC,WAAW;AAA+C,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAMjF,IAAMC,qBAA2D,GAAG,SAA9DA,qBAA2DA,CAAAC,IAAA,EAE3D;EAAA,IADJC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAER,IAAMC,QAAQ,GAAGhB,MAAM,CAAY,IAAI,CAAC;EAC1C,IAAMiB,iBAAiB,GAAGjB,MAAM,CAAC,YAAM;IACrCe,UAAU,CAACG,MAAM,CAAC,CAAC;EACrB,CAAC,CAAC;EACF,OACER,IAAA,CAACT,eAAe;IAAAkB,QAAA,EACdP,KAAA,CAACV,wBAAwB;MAAAiB,QAAA,GACvBT,IAAA,CAACN,gBAAgB;QACfgB,OAAO,EAAEH,iBAAiB,CAACI,OAAQ;QACnCC,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAS,CAAE;QAAAJ,QAAA,EAE/BT,IAAA,CAACL,UAAU,IAAE;MAAC,CACE,CAAC,EACnBK,IAAA,CAACJ,IAAI;QAACgB,KAAK,EAAE;UAAEC,SAAS,EAAE,QAAQ;UAAEC,UAAU,EAAE;QAAE,CAAE;QAAAL,QAAA,EAClDT,IAAA,CAACP,SAAS;UACRsB,GAAG,EAAET,QAAS;UACdM,KAAK,EAAE;YACLI,KAAK,EAAElB,WAAW,GAAE,GAAG;YACvBmB,MAAM,EAAEpB,YAAY,GAAE,MAAM;YAC5BqB,eAAe,EAAE,SAAS;YAC1BL,SAAS,EAAE,QAAQ;YACnBM,KAAK,EAAE,OAAO;YACdC,iBAAiB,EAAE,EAAE;YACrBC,YAAY,EAAE,GAAG;YACjBC,QAAQ,EAAE;UACZ,CAAE;UACFC,WAAW,EAAC,iBAAiB;UAC7BC,oBAAoB,EAAE,SAAU;UAChCC,kBAAkB,EAAC;QAAM,CAC1B;MAAC,CACE,CAAC;IAAA,CACiB;EAAC,CACZ,CAAC;AAEtB,CAAC;AAED,eAAetB,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}