{"ast":null,"code":"import React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { footerstyles } from \"../../Styles/FooterStyle\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar FolderIndicator = function FolderIndicator(_ref) {\n  var currentPosition = _ref.currentPosition,\n    screenWidth = _ref.screenWidth,\n    widths = _ref.widths,\n    positionsOfFolder = _ref.positionsOfFolder,\n    isVisibleForModalFolder = _ref.isVisibleForModalFolder;\n  var indicatorLeft = (currentPosition - screenWidth * Math.round(currentPosition / screenWidth)) % screenWidth / screenWidth * widths[Math.round(currentPosition / screenWidth)] + positionsOfFolder[Math.round(currentPosition / screenWidth)];\n  return _jsx(Animated.View, {\n    style: {\n      left: indicatorLeft\n    },\n    children: !isVisibleForModalFolder ? _jsx(Animated.View, {\n      style: [footerstyles.selectedFolder, {\n        width: widths[Math.round(currentPosition / screenWidth)] * 0.8,\n        marginLeft: widths[Math.round(currentPosition / screenWidth)] * 0.1\n      }]\n    }) : null\n  });\n};\nexport default FolderIndicator;","map":{"version":3,"names":["React","Animated","footerstyles","jsx","_jsx","FolderIndicator","_ref","currentPosition","screenWidth","widths","positionsOfFolder","isVisibleForModalFolder","indicatorLeft","Math","round","View","style","left","children","selectedFolder","width","marginLeft"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/ChatList/Components/Footer containers/FolderIndicator.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Animated, View } from 'react-native';\r\nimport { footerstyles } from '../../Styles/FooterStyle';\r\n\r\ninterface AnimatedFolderIndicatorProps {\r\n    currentPosition: number;\r\n    screenWidth: number;\r\n    widths: number[];\r\n    positionsOfFolder: number[];\r\n    isVisibleForModalFolder: boolean;\r\n  }\r\n  \r\nconst FolderIndicator: React.FC<AnimatedFolderIndicatorProps> = ({\r\n  currentPosition,\r\n  screenWidth,\r\n  widths,\r\n  positionsOfFolder,\r\n  isVisibleForModalFolder,\r\n}) => {\r\n  const indicatorLeft =\r\n    (((currentPosition - screenWidth * Math.round(currentPosition / screenWidth)) %\r\n      screenWidth) /\r\n      screenWidth) *\r\n      widths[Math.round(currentPosition / screenWidth)] +\r\n    positionsOfFolder[Math.round(currentPosition / screenWidth)];\r\n\r\n  return (\r\n    <Animated.View style={{ left: indicatorLeft }}>\r\n      {!isVisibleForModalFolder ? (\r\n        <Animated.View\r\n          style={[\r\n            footerstyles.selectedFolder,\r\n            {\r\n              width: widths[Math.round(currentPosition / screenWidth)] * 0.8,\r\n              marginLeft: widths[Math.round(currentPosition / screenWidth)] * 0.1,\r\n            },\r\n          ]}\r\n        />\r\n      ) : null}\r\n    </Animated.View>\r\n  );\r\n};\r\n\r\nexport default FolderIndicator;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,QAAA;AAE1B,SAASC,YAAY;AAAmC,SAAAC,GAAA,IAAAC,IAAA;AAUxD,IAAMC,eAAuD,GAAG,SAA1DA,eAAuDA,CAAAC,IAAA,EAMvD;EAAA,IALJC,eAAe,GAAAD,IAAA,CAAfC,eAAe;IACfC,WAAW,GAAAF,IAAA,CAAXE,WAAW;IACXC,MAAM,GAAAH,IAAA,CAANG,MAAM;IACNC,iBAAiB,GAAAJ,IAAA,CAAjBI,iBAAiB;IACjBC,uBAAuB,GAAAL,IAAA,CAAvBK,uBAAuB;EAEvB,IAAMC,aAAa,GACf,CAACL,eAAe,GAAGC,WAAW,GAAGK,IAAI,CAACC,KAAK,CAACP,eAAe,GAAGC,WAAW,CAAC,IAC1EA,WAAW,GACXA,WAAW,GACXC,MAAM,CAACI,IAAI,CAACC,KAAK,CAACP,eAAe,GAAGC,WAAW,CAAC,CAAC,GACnDE,iBAAiB,CAACG,IAAI,CAACC,KAAK,CAACP,eAAe,GAAGC,WAAW,CAAC,CAAC;EAE9D,OACEJ,IAAA,CAACH,QAAQ,CAACc,IAAI;IAACC,KAAK,EAAE;MAAEC,IAAI,EAAEL;IAAc,CAAE;IAAAM,QAAA,EAC3C,CAACP,uBAAuB,GACvBP,IAAA,CAACH,QAAQ,CAACc,IAAI;MACZC,KAAK,EAAE,CACLd,YAAY,CAACiB,cAAc,EAC3B;QACEC,KAAK,EAAEX,MAAM,CAACI,IAAI,CAACC,KAAK,CAACP,eAAe,GAAGC,WAAW,CAAC,CAAC,GAAG,GAAG;QAC9Da,UAAU,EAAEZ,MAAM,CAACI,IAAI,CAACC,KAAK,CAACP,eAAe,GAAGC,WAAW,CAAC,CAAC,GAAG;MAClE,CAAC;IACD,CACH,CAAC,GACA;EAAI,CACK,CAAC;AAEpB,CAAC;AAED,eAAeH,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}