{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport StylePassCentre from \"./StylePasswordCenter\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PasswordCenter = function PasswordCenter() {\n  var swithes = [{\n    Text: 'off lock code',\n    value: false\n  }, {\n    Text: 'Unlock to Face or Touch id',\n    value: false\n  }];\n  return _jsxs(View, {\n    style: StylePassCentre.passConteiner,\n    children: [_jsxs(TouchableOpacity, {\n      style: StylePassCentre.funcOn,\n      children: [_jsx(Text, {\n        style: StylePassCentre.styleText,\n        children: \"Off lock code\"\n      }), _jsx(Switch, {\n        trackColor: {\n          false: '#767577',\n          true: '#81b0ff'\n        },\n        thumbColor: IsEnable ? '#f5dd4b' : '#f4f3f4',\n        ios_backgroundColor: \"#3e3e3e\",\n        onValueChange: toggleSwitch,\n        value: IsEnable\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: StylePassCentre.funcOn,\n      children: _jsx(Text, {\n        style: StylePassCentre.styleText,\n        children: \"Edit lock code\"\n      })\n    }), _jsxs(TouchableOpacity, {\n      style: StylePassCentre.funcOn,\n      children: [_jsx(Text, {\n        style: StylePassCentre.styleText,\n        children: \"Unlock to Face or Touch id\"\n      }), _jsx(Switch, {\n        trackColor: {\n          false: '#767577',\n          true: '#81b0ff'\n        },\n        thumbColor: IsEnable ? '#f5dd4b' : '#f4f3f4',\n        ios_backgroundColor: \"#3e3e3e\",\n        onValueChange: toggleSwitch,\n        value: IsEnable\n      })]\n    })]\n  });\n};\nexport default PasswordCenter;","map":{"version":3,"names":["React","View","Text","TouchableOpacity","Switch","StylePassCentre","jsx","_jsx","jsxs","_jsxs","PasswordCenter","swithes","value","style","passConteiner","children","funcOn","styleText","trackColor","false","true","thumbColor","IsEnable","ios_backgroundColor","onValueChange","toggleSwitch"],"sources":["D:/project/try1/Messenger/Messenger/Pages/Settings/ConfidentialityPage/Password/PasswordCenter/PasswondCenter.tsx"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport { View, Text, TouchableOpacity, Switch } from \"react-native\";\r\nimport StylePassCentre from \"./StylePasswordCenter\";\r\n\r\nconst PasswordCenter =()=>{\r\n\r\n    let swithes =[{Text:'off lock code',value:false},{Text:'Unlock to Face or Touch id',value:false}];\r\n    \r\n    return<View style={StylePassCentre.passConteiner}>\r\n        <TouchableOpacity style={StylePassCentre.funcOn} ><Text style={StylePassCentre.styleText} >Off lock code</Text> \r\n        <Switch\r\n        trackColor={{false: '#767577', true: '#81b0ff'}}\r\n        thumbColor={IsEnable ? '#f5dd4b' : '#f4f3f4'}\r\n        ios_backgroundColor=\"#3e3e3e\"\r\n        onValueChange={toggleSwitch}\r\n        value={IsEnable}\r\n      /></TouchableOpacity>\r\n        <TouchableOpacity style={StylePassCentre.funcOn} ><Text style={StylePassCentre.styleText} >Edit lock code</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={StylePassCentre.funcOn} ><Text style={StylePassCentre.styleText} >Unlock to Face or Touch id</Text>\r\n        <Switch\r\n        trackColor={{false: '#767577', true: '#81b0ff'}}\r\n        thumbColor={IsEnable ? '#f5dd4b' : '#f4f3f4'}\r\n        ios_backgroundColor=\"#3e3e3e\"\r\n        onValueChange={toggleSwitch}\r\n        value={IsEnable}\r\n      /></TouchableOpacity>\r\n    </View>\r\n}\r\n\r\nexport default PasswordCenter;"],"mappings":"AAAA,OAAOA,KAAK,MAAkB,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,MAAA;AAEtC,OAAOC,eAAe;AAA8B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpD,IAAMC,cAAc,GAAE,SAAhBA,cAAcA,CAAA,EAAM;EAEtB,IAAIC,OAAO,GAAE,CAAC;IAACT,IAAI,EAAC,eAAe;IAACU,KAAK,EAAC;EAAK,CAAC,EAAC;IAACV,IAAI,EAAC,4BAA4B;IAACU,KAAK,EAAC;EAAK,CAAC,CAAC;EAEjG,OAAMH,KAAA,CAACR,IAAI;IAACY,KAAK,EAAER,eAAe,CAACS,aAAc;IAAAC,QAAA,GAC7CN,KAAA,CAACN,gBAAgB;MAACU,KAAK,EAAER,eAAe,CAACW,MAAO;MAAAD,QAAA,GAAER,IAAA,CAACL,IAAI;QAACW,KAAK,EAAER,eAAe,CAACY,SAAU;QAAAF,QAAA,EAAE;MAAa,CAAM,CAAC,EAC/GR,IAAA,CAACH,MAAM;QACPc,UAAU,EAAE;UAACC,KAAK,EAAE,SAAS;UAAEC,IAAI,EAAE;QAAS,CAAE;QAChDC,UAAU,EAAEC,QAAQ,GAAG,SAAS,GAAG,SAAU;QAC7CC,mBAAmB,EAAC,SAAS;QAC7BC,aAAa,EAAEC,YAAa;QAC5Bb,KAAK,EAAEU;MAAS,CACjB,CAAC;IAAA,CAAkB,CAAC,EACnBf,IAAA,CAACJ,gBAAgB;MAACU,KAAK,EAAER,eAAe,CAACW,MAAO;MAAAD,QAAA,EAAER,IAAA,CAACL,IAAI;QAACW,KAAK,EAAER,eAAe,CAACY,SAAU;QAAAF,QAAA,EAAE;MAAc,CAAM;IAAC,CAC9F,CAAC,EACnBN,KAAA,CAACN,gBAAgB;MAACU,KAAK,EAAER,eAAe,CAACW,MAAO;MAAAD,QAAA,GAAER,IAAA,CAACL,IAAI;QAACW,KAAK,EAAER,eAAe,CAACY,SAAU;QAAAF,QAAA,EAAE;MAA0B,CAAM,CAAC,EAC5HR,IAAA,CAACH,MAAM;QACPc,UAAU,EAAE;UAACC,KAAK,EAAE,SAAS;UAAEC,IAAI,EAAE;QAAS,CAAE;QAChDC,UAAU,EAAEC,QAAQ,GAAG,SAAS,GAAG,SAAU;QAC7CC,mBAAmB,EAAC,SAAS;QAC7BC,aAAa,EAAEC,YAAa;QAC5Bb,KAAK,EAAEU;MAAS,CACjB,CAAC;IAAA,CAAkB,CAAC;EAAA,CACjB,CAAC;AACX,CAAC;AAED,eAAeZ,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}