{"ast":null,"code":"import { defineAnimation, getReduceMotionForAnimation } from \"./util\";\nexport var withDelay = function withDelay(delayMs, _nextAnimation, reduceMotion) {\n  'worklet';\n\n  return defineAnimation(_nextAnimation, function () {\n    'worklet';\n\n    var nextAnimation = typeof _nextAnimation === 'function' ? _nextAnimation() : _nextAnimation;\n    function delay(animation, now) {\n      var startTime = animation.startTime,\n        started = animation.started,\n        previousAnimation = animation.previousAnimation;\n      var current = animation.current;\n      if (now - startTime > delayMs || animation.reduceMotion) {\n        if (!started) {\n          nextAnimation.onStart(nextAnimation, current, now, previousAnimation);\n          animation.previousAnimation = null;\n          animation.started = true;\n        }\n        var finished = nextAnimation.onFrame(nextAnimation, now);\n        animation.current = nextAnimation.current;\n        return finished;\n      } else if (previousAnimation) {\n        var _finished = previousAnimation.finished || previousAnimation.onFrame(previousAnimation, now);\n        animation.current = previousAnimation.current;\n        if (_finished) {\n          animation.previousAnimation = null;\n        }\n      }\n      return false;\n    }\n    function onStart(animation, value, now, previousAnimation) {\n      animation.startTime = now;\n      animation.started = false;\n      animation.current = value;\n      if (previousAnimation === animation) {\n        animation.previousAnimation = previousAnimation.previousAnimation;\n      } else {\n        animation.previousAnimation = previousAnimation;\n      }\n      if (nextAnimation.reduceMotion === undefined) {\n        nextAnimation.reduceMotion = animation.reduceMotion;\n      }\n    }\n    var callback = function callback(finished) {\n      if (nextAnimation.callback) {\n        nextAnimation.callback(finished);\n      }\n    };\n    return {\n      isHigherOrder: true,\n      onFrame: delay,\n      onStart: onStart,\n      current: nextAnimation.current,\n      callback: callback,\n      previousAnimation: null,\n      startTime: 0,\n      started: false,\n      reduceMotion: getReduceMotionForAnimation(reduceMotion)\n    };\n  });\n};","map":{"version":3,"names":["defineAnimation","getReduceMotionForAnimation","withDelay","delayMs","_nextAnimation","reduceMotion","nextAnimation","delay","animation","now","startTime","started","previousAnimation","current","onStart","finished","onFrame","value","undefined","callback","isHigherOrder"],"sources":["C:\\Users\\Admin\\Project\\Project\\Messenger\\Messenger\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\animation\\delay.ts"],"sourcesContent":["import { defineAnimation, getReduceMotionForAnimation } from './util';\nimport type {\n  Animation,\n  Timestamp,\n  AnimatableValue,\n  AnimationObject,\n  ReduceMotion,\n} from '../commonTypes';\nimport type { DelayAnimation } from './commonTypes';\n\n// TODO TYPESCRIPT This is a temporary type to get rid of .d.ts file.\ntype withDelayType = <T extends AnimatableValue>(\n  delayMs: number,\n  delayedAnimation: T,\n  reduceMotion?: ReduceMotion\n) => T;\n\nexport const withDelay = function <T extends AnimationObject>(\n  delayMs: number,\n  _nextAnimation: T | (() => T),\n  reduceMotion?: ReduceMotion\n): Animation<DelayAnimation> {\n  'worklet';\n  return defineAnimation<DelayAnimation, T>(\n    _nextAnimation,\n    (): DelayAnimation => {\n      'worklet';\n      const nextAnimation =\n        typeof _nextAnimation === 'function'\n          ? _nextAnimation()\n          : _nextAnimation;\n\n      function delay(animation: DelayAnimation, now: Timestamp): boolean {\n        const { startTime, started, previousAnimation } = animation;\n        const current: AnimatableValue = animation.current;\n\n        if (now - startTime > delayMs || animation.reduceMotion) {\n          if (!started) {\n            nextAnimation.onStart(\n              nextAnimation,\n              current,\n              now,\n              previousAnimation!\n            );\n            animation.previousAnimation = null;\n            animation.started = true;\n          }\n          const finished = nextAnimation.onFrame(nextAnimation, now);\n          animation.current = nextAnimation.current!;\n          return finished;\n        } else if (previousAnimation) {\n          const finished =\n            previousAnimation.finished ||\n            previousAnimation.onFrame(previousAnimation, now);\n          animation.current = previousAnimation.current;\n          if (finished) {\n            animation.previousAnimation = null;\n          }\n        }\n        return false;\n      }\n\n      function onStart(\n        animation: Animation<any>,\n        value: AnimatableValue,\n        now: Timestamp,\n        previousAnimation: Animation<any> | null\n      ): void {\n        animation.startTime = now;\n        animation.started = false;\n        animation.current = value;\n        if (previousAnimation === animation) {\n          animation.previousAnimation = previousAnimation.previousAnimation;\n        } else {\n          animation.previousAnimation = previousAnimation;\n        }\n\n        // child animations inherit the setting, unless they already have it defined\n        // they will have it defined only if the user used the `reduceMotion` prop\n        if (nextAnimation.reduceMotion === undefined) {\n          nextAnimation.reduceMotion = animation.reduceMotion;\n        }\n      }\n\n      const callback = (finished?: boolean): void => {\n        if (nextAnimation.callback) {\n          nextAnimation.callback(finished);\n        }\n      };\n\n      return {\n        isHigherOrder: true,\n        onFrame: delay,\n        onStart,\n        current: nextAnimation.current!,\n        callback,\n        previousAnimation: null,\n        startTime: 0,\n        started: false,\n        reduceMotion: getReduceMotionForAnimation(reduceMotion),\n      };\n    }\n  );\n} as withDelayType;\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,2BAA2B;AAiBrD,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAASA,CACpBC,OAAe,EACfC,cAA6B,EAC7BC,YAA2B,EACA;EAC3B,SAAS;;EACT,OAAOL,eAAe,CACpBI,cAAc,EACd,YAAsB;IACpB,SAAS;;IACT,IAAME,aAAa,GACjB,OAAOF,cAAc,KAAK,UAAU,GAChCA,cAAc,EAAE,GAChBA,cAAc;IAEpB,SAASG,KAAKA,CAACC,SAAyB,EAAEC,GAAc,EAAW;MACjE,IAAQC,SAAS,GAAiCF,SAAS,CAAnDE,SAAS;QAAEC,OAAO,GAAwBH,SAAS,CAAxCG,OAAO;QAAEC,iBAAA,GAAsBJ,SAAS,CAA/BI,iBAAA;MAC5B,IAAMC,OAAwB,GAAGL,SAAS,CAACK,OAAO;MAElD,IAAIJ,GAAG,GAAGC,SAAS,GAAGP,OAAO,IAAIK,SAAS,CAACH,YAAY,EAAE;QACvD,IAAI,CAACM,OAAO,EAAE;UACZL,aAAa,CAACQ,OAAO,CACnBR,aAAa,EACbO,OAAO,EACPJ,GAAG,EACHG,iBAAiB,CAClB;UACDJ,SAAS,CAACI,iBAAiB,GAAG,IAAI;UAClCJ,SAAS,CAACG,OAAO,GAAG,IAAI;QAC1B;QACA,IAAMI,QAAQ,GAAGT,aAAa,CAACU,OAAO,CAACV,aAAa,EAAEG,GAAG,CAAC;QAC1DD,SAAS,CAACK,OAAO,GAAGP,aAAa,CAACO,OAAQ;QAC1C,OAAOE,QAAQ;MACjB,CAAC,MAAM,IAAIH,iBAAiB,EAAE;QAC5B,IAAMG,SAAQ,GACZH,iBAAiB,CAACG,QAAQ,IAC1BH,iBAAiB,CAACI,OAAO,CAACJ,iBAAiB,EAAEH,GAAG,CAAC;QACnDD,SAAS,CAACK,OAAO,GAAGD,iBAAiB,CAACC,OAAO;QAC7C,IAAIE,SAAQ,EAAE;UACZP,SAAS,CAACI,iBAAiB,GAAG,IAAI;QACpC;MACF;MACA,OAAO,KAAK;IACd;IAEA,SAASE,OAAOA,CACdN,SAAyB,EACzBS,KAAsB,EACtBR,GAAc,EACdG,iBAAwC,EAClC;MACNJ,SAAS,CAACE,SAAS,GAAGD,GAAG;MACzBD,SAAS,CAACG,OAAO,GAAG,KAAK;MACzBH,SAAS,CAACK,OAAO,GAAGI,KAAK;MACzB,IAAIL,iBAAiB,KAAKJ,SAAS,EAAE;QACnCA,SAAS,CAACI,iBAAiB,GAAGA,iBAAiB,CAACA,iBAAiB;MACnE,CAAC,MAAM;QACLJ,SAAS,CAACI,iBAAiB,GAAGA,iBAAiB;MACjD;MAIA,IAAIN,aAAa,CAACD,YAAY,KAAKa,SAAS,EAAE;QAC5CZ,aAAa,CAACD,YAAY,GAAGG,SAAS,CAACH,YAAY;MACrD;IACF;IAEA,IAAMc,QAAQ,GAAI,SAAZA,QAAQA,CAAIJ,QAAkB,EAAW;MAC7C,IAAIT,aAAa,CAACa,QAAQ,EAAE;QAC1Bb,aAAa,CAACa,QAAQ,CAACJ,QAAQ,CAAC;MAClC;IACF,CAAC;IAED,OAAO;MACLK,aAAa,EAAE,IAAI;MACnBJ,OAAO,EAAET,KAAK;MACdO,OAAO,EAAPA,OAAO;MACPD,OAAO,EAAEP,aAAa,CAACO,OAAQ;MAC/BM,QAAQ,EAARA,QAAQ;MACRP,iBAAiB,EAAE,IAAI;MACvBF,SAAS,EAAE,CAAC;MACZC,OAAO,EAAE,KAAK;MACdN,YAAY,EAAEJ,2BAA2B,CAACI,YAAY;IACxD,CAAC;EACH,CAAC,CACF;AACH,CAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}