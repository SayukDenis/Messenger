{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { styles } from \"./Styles\";\nimport TopToolBar from \"../../SemiComponents/MainScreen/TopToolBar\";\nimport AvatarWithCallingButtons from \"./AvatarWithCallingButtons\";\nimport Multimedia from \"../../SemiComponents/MainScreen/Multimedia\";\nimport Blur from \"../../SemiComponents/MainScreen/Blur\";\nimport ElseFeaturesButtons from \"../../SemiComponents/MainScreen/ElseFeaturesButtons\";\nimport RemovalApproval from \"../../SemiComponents/MainScreen/RemovalApproval\";\nimport { user } from \"../../SemiComponents/DBUser\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MainUserScreen = function MainUserScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isElseFeaturesVisible = _useState2[0],\n    _setIsElseFeaturesVisible = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isPhotoAlbumSelectionVisible = _useState4[0],\n    setIsPhotoAlbumSelectionVisible = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isClearChatButtonClicked = _useState6[0],\n    setIsClearChatButtonClicked = _useState6[1];\n  var _useState7 = useState(user.isMuted),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isMuted = _useState8[0],\n    setIsMuted = _useState8[1];\n  var _useState9 = useState(user.isBlocked),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isBlocked = _useState10[0],\n    setIsBlocked = _useState10[1];\n  useEffect(function () {\n    user.isBlocked = isBlocked;\n    user.isMuted = isMuted;\n  });\n  return _jsxs(View, {\n    style: styles.mainContainer,\n    children: [_jsx(Blur, {\n      visibleWhen: isPhotoAlbumSelectionVisible,\n      onPress: function onPress() {\n        setIsPhotoAlbumSelectionVisible(false);\n      },\n      style: styles.blurEffect\n    }), _jsx(Blur, {\n      visibleWhen: isElseFeaturesVisible === true,\n      onPress: function onPress() {\n        _setIsElseFeaturesVisible(false);\n      },\n      style: styles.blurEffect\n    }), _jsx(Blur, {\n      visibleWhen: isClearChatButtonClicked === true,\n      onPress: function onPress() {\n        setIsClearChatButtonClicked(false);\n      },\n      style: [styles.blurEffect, {\n        zIndex: 3\n      }]\n    }), _jsx(TopToolBar, {\n      primaryTitle: user.profileName,\n      secondaryTitle: user.lastTimeOnline,\n      setIsElseFeaturesVisible: function setIsElseFeaturesVisible(value) {\n        return _setIsElseFeaturesVisible(value);\n      },\n      isMuted: isMuted,\n      isBlocked: isBlocked,\n      isSearchButtonVisible: true,\n      onGoBackPress: function onGoBackPress() {\n        navigation.goBack();\n      }\n    }), _jsx(ElseFeaturesButtons, {\n      isVisible: isElseFeaturesVisible,\n      setIsVisible: function setIsVisible(value) {\n        return _setIsElseFeaturesVisible(value);\n      },\n      isMuted: isMuted,\n      onMutePress: function onMutePress(value) {\n        setIsMuted(value);\n      },\n      isBlocked: isBlocked,\n      onBlockPress: function onBlockPress(value) {\n        setIsBlocked(value);\n      },\n      isClearChatPressed: isClearChatButtonClicked,\n      onClearChatPress: function onClearChatPress(value) {\n        setIsClearChatButtonClicked(value);\n      },\n      navigation: navigation,\n      settingsPress: function settingsPress() {\n        return navigation.navigate(\"SettingsScreen\");\n      },\n      mode: \"user\"\n    }), _jsx(RemovalApproval, {\n      isPressed: isClearChatButtonClicked,\n      onAnyPress: function onAnyPress() {\n        setIsClearChatButtonClicked(false);\n      },\n      onAgreePress: function onAgreePress() {\n        alert(\"Agree\");\n      },\n      text: user.clearChatText\n    }), _jsxs(ScrollView, {\n      style: {\n        flex: 1,\n        zIndex: isPhotoAlbumSelectionVisible ? 2 : 0\n      },\n      contentContainerStyle: {\n        zIndex: isPhotoAlbumSelectionVisible ? 2 : 0\n      },\n      overScrollMode: \"never\",\n      showsVerticalScrollIndicator: false,\n      onScroll: function onScroll() {\n        setIsPhotoAlbumSelectionVisible(false);\n      },\n      children: [_jsx(AvatarWithCallingButtons, {}), _jsx(Multimedia, {\n        isLongPressed: isPhotoAlbumSelectionVisible,\n        onLongPress: function onLongPress(value) {\n          return setIsPhotoAlbumSelectionVisible(value);\n        }\n      })]\n    })]\n  });\n};\nexport default MainUserScreen;","map":{"version":3,"names":["React","useState","useEffect","View","ScrollView","styles","TopToolBar","AvatarWithCallingButtons","Multimedia","Blur","ElseFeaturesButtons","RemovalApproval","user","jsx","_jsx","jsxs","_jsxs","MainUserScreen","_ref","navigation","_useState","_useState2","_slicedToArray","isElseFeaturesVisible","setIsElseFeaturesVisible","_useState3","_useState4","isPhotoAlbumSelectionVisible","setIsPhotoAlbumSelectionVisible","_useState5","_useState6","isClearChatButtonClicked","setIsClearChatButtonClicked","_useState7","isMuted","_useState8","setIsMuted","_useState9","isBlocked","_useState10","setIsBlocked","style","mainContainer","children","visibleWhen","onPress","blurEffect","zIndex","primaryTitle","profileName","secondaryTitle","lastTimeOnline","value","isSearchButtonVisible","onGoBackPress","goBack","isVisible","setIsVisible","onMutePress","onBlockPress","isClearChatPressed","onClearChatPress","settingsPress","navigate","mode","isPressed","onAnyPress","onAgreePress","alert","text","clearChatText","flex","contentContainerStyle","overScrollMode","showsVerticalScrollIndicator","onScroll","isLongPressed","onLongPress"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/Profiles/DialogueProfile/MainUserScreen/MainUserScreen.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { View, ScrollView } from \"react-native\";\r\nimport { styles } from \"./Styles\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport TopToolBar from \"../../SemiComponents/MainScreen/TopToolBar\";\r\nimport AvatarWithCallingButtons from \"./AvatarWithCallingButtons\";\r\nimport Multimedia from \"../../SemiComponents/MainScreen/Multimedia\";\r\nimport Blur from \"../../SemiComponents/MainScreen/Blur\";\r\nimport ElseFeaturesButtons from \"../../SemiComponents/MainScreen/ElseFeaturesButtons\";\r\nimport RemovalApproval from \"../../SemiComponents/MainScreen/RemovalApproval\";\r\nimport { user } from \"../../SemiComponents/DBUser\";\r\n\r\ntype MainUserScreenProps = {\r\n  navigation: StackNavigationProp<{}>; // Встановіть правильний тип для navigation\r\n};\r\n\r\nconst MainUserScreen: React.FC<MainUserScreenProps> = ({ navigation }) => {\r\n  const [isElseFeaturesVisible, setIsElseFeaturesVisible] = useState(false);\r\n  const [isPhotoAlbumSelectionVisible, setIsPhotoAlbumSelectionVisible] =\r\n    useState(false);\r\n  const [isClearChatButtonClicked, setIsClearChatButtonClicked] =\r\n    useState(false);\r\n  const [isMuted, setIsMuted] = useState(user.isMuted);\r\n  const [isBlocked, setIsBlocked] = useState(user.isBlocked);\r\n\r\n  useEffect(() => {\r\n    user.isBlocked = isBlocked;\r\n    user.isMuted = isMuted;\r\n  });\r\n\r\n  return (\r\n    <View style={styles.mainContainer}>\r\n      {/* Blur if photo or album button is on long press */}\r\n      <Blur\r\n        visibleWhen={isPhotoAlbumSelectionVisible}\r\n        onPress={() => {\r\n          setIsPhotoAlbumSelectionVisible(false);\r\n        }}\r\n        style={styles.blurEffect}\r\n      />\r\n\r\n      {/* Blur if else features button is pressed */}\r\n      <Blur\r\n        visibleWhen={isElseFeaturesVisible === true}\r\n        onPress={() => {\r\n          setIsElseFeaturesVisible(false);\r\n        }}\r\n        style={styles.blurEffect}\r\n      />\r\n\r\n      {/* Blur if clear chat is pressed */}\r\n      <Blur\r\n        visibleWhen={isClearChatButtonClicked === true}\r\n        onPress={() => {\r\n          setIsClearChatButtonClicked(false);\r\n        }}\r\n        style={[styles.blurEffect, { zIndex: 3 }]}\r\n      />\r\n\r\n      {/* Top tool bar with buttons*/}\r\n      <TopToolBar\r\n        primaryTitle={user.profileName}\r\n        secondaryTitle={user.lastTimeOnline}\r\n        setIsElseFeaturesVisible={(value: boolean) =>\r\n          setIsElseFeaturesVisible(value)\r\n        }\r\n        isMuted={isMuted}\r\n        isBlocked={isBlocked}\r\n        isSearchButtonVisible={true}\r\n        onGoBackPress={() => {\r\n          navigation.goBack();\r\n        }}\r\n      />\r\n\r\n      {/* Else features which appear when else features button is pressed*/}\r\n      <ElseFeaturesButtons\r\n        isVisible={isElseFeaturesVisible}\r\n        setIsVisible={(value: boolean) => setIsElseFeaturesVisible(value)}\r\n        isMuted={isMuted}\r\n        onMutePress={(value: boolean) => {\r\n          setIsMuted(value);\r\n        }}\r\n        isBlocked={isBlocked}\r\n        onBlockPress={(value: boolean) => {\r\n          setIsBlocked(value);\r\n        }}\r\n        isClearChatPressed={isClearChatButtonClicked}\r\n        onClearChatPress={(value: boolean) => {\r\n          setIsClearChatButtonClicked(value);\r\n        }}\r\n        navigation={navigation}\r\n        settingsPress={() => navigation.navigate(\"SettingsScreen\" as never)}\r\n        mode=\"user\"\r\n      />\r\n\r\n      {/* Approval to clear chat if clear button is clicked via else features buttons */}\r\n      <RemovalApproval\r\n        isPressed={isClearChatButtonClicked}\r\n        onAnyPress={() => {\r\n          setIsClearChatButtonClicked(false);\r\n        }}\r\n        onAgreePress={() => {\r\n          alert(\"Agree\");\r\n        }}\r\n        text={user.clearChatText}\r\n      />\r\n\r\n      <ScrollView\r\n        style={{\r\n          flex: 1,\r\n          zIndex: isPhotoAlbumSelectionVisible ? 2 : 0,\r\n        }}\r\n        contentContainerStyle={{\r\n          zIndex: isPhotoAlbumSelectionVisible ? 2 : 0,\r\n        }}\r\n        overScrollMode=\"never\"\r\n        showsVerticalScrollIndicator={false}\r\n        onScroll={() => {\r\n          setIsPhotoAlbumSelectionVisible(false);\r\n        }}\r\n      >\r\n        {/* Touchable avatar image with phone and videocamera buttons*/}\r\n        <AvatarWithCallingButtons />\r\n\r\n        {/* Multimedia bar with photo/albums, files, voice, links buttons*/}\r\n        <Multimedia\r\n          isLongPressed={isPhotoAlbumSelectionVisible}\r\n          onLongPress={(value) => setIsPhotoAlbumSelectionVisible(value)}\r\n        />\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default MainUserScreen;\r\n"],"mappings":";AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAEnD,SAASC,MAAM;AAEf,OAAOC,UAAU;AACjB,OAAOC,wBAAwB;AAC/B,OAAOC,UAAU;AACjB,OAAOC,IAAI;AACX,OAAOC,mBAAmB;AAC1B,OAAOC,eAAe;AACtB,SAASC,IAAI;AAAsC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAMnD,IAAMC,cAA6C,GAAG,SAAhDA,cAA6CA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EACjE,IAAAC,SAAA,GAA0DnB,QAAQ,CAAC,KAAK,CAAC;IAAAoB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAlEG,qBAAqB,GAAAF,UAAA;IAAEG,yBAAwB,GAAAH,UAAA;EACtD,IAAAI,UAAA,GACExB,QAAQ,CAAC,KAAK,CAAC;IAAAyB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IADVE,4BAA4B,GAAAD,UAAA;IAAEE,+BAA+B,GAAAF,UAAA;EAEpE,IAAAG,UAAA,GACE5B,QAAQ,CAAC,KAAK,CAAC;IAAA6B,UAAA,GAAAR,cAAA,CAAAO,UAAA;IADVE,wBAAwB,GAAAD,UAAA;IAAEE,2BAA2B,GAAAF,UAAA;EAE5D,IAAAG,UAAA,GAA8BhC,QAAQ,CAACW,IAAI,CAACsB,OAAO,CAAC;IAAAC,UAAA,GAAAb,cAAA,CAAAW,UAAA;IAA7CC,OAAO,GAAAC,UAAA;IAAEC,UAAU,GAAAD,UAAA;EAC1B,IAAAE,UAAA,GAAkCpC,QAAQ,CAACW,IAAI,CAAC0B,SAAS,CAAC;IAAAC,WAAA,GAAAjB,cAAA,CAAAe,UAAA;IAAnDC,SAAS,GAAAC,WAAA;IAAEC,YAAY,GAAAD,WAAA;EAE9BrC,SAAS,CAAC,YAAM;IACdU,IAAI,CAAC0B,SAAS,GAAGA,SAAS;IAC1B1B,IAAI,CAACsB,OAAO,GAAGA,OAAO;EACxB,CAAC,CAAC;EAEF,OACElB,KAAA,CAACb,IAAI;IAACsC,KAAK,EAAEpC,MAAM,CAACqC,aAAc;IAAAC,QAAA,GAEhC7B,IAAA,CAACL,IAAI;MACHmC,WAAW,EAAEjB,4BAA6B;MAC1CkB,OAAO,EAAE,SAAAA,QAAA,EAAM;QACbjB,+BAA+B,CAAC,KAAK,CAAC;MACxC,CAAE;MACFa,KAAK,EAAEpC,MAAM,CAACyC;IAAW,CAC1B,CAAC,EAGFhC,IAAA,CAACL,IAAI;MACHmC,WAAW,EAAErB,qBAAqB,KAAK,IAAK;MAC5CsB,OAAO,EAAE,SAAAA,QAAA,EAAM;QACbrB,yBAAwB,CAAC,KAAK,CAAC;MACjC,CAAE;MACFiB,KAAK,EAAEpC,MAAM,CAACyC;IAAW,CAC1B,CAAC,EAGFhC,IAAA,CAACL,IAAI;MACHmC,WAAW,EAAEb,wBAAwB,KAAK,IAAK;MAC/Cc,OAAO,EAAE,SAAAA,QAAA,EAAM;QACbb,2BAA2B,CAAC,KAAK,CAAC;MACpC,CAAE;MACFS,KAAK,EAAE,CAACpC,MAAM,CAACyC,UAAU,EAAE;QAAEC,MAAM,EAAE;MAAE,CAAC;IAAE,CAC3C,CAAC,EAGFjC,IAAA,CAACR,UAAU;MACT0C,YAAY,EAAEpC,IAAI,CAACqC,WAAY;MAC/BC,cAAc,EAAEtC,IAAI,CAACuC,cAAe;MACpC3B,wBAAwB,EAAE,SAAAA,yBAAC4B,KAAc;QAAA,OACvC5B,yBAAwB,CAAC4B,KAAK,CAAC;MAAA,CAChC;MACDlB,OAAO,EAAEA,OAAQ;MACjBI,SAAS,EAAEA,SAAU;MACrBe,qBAAqB,EAAE,IAAK;MAC5BC,aAAa,EAAE,SAAAA,cAAA,EAAM;QACnBnC,UAAU,CAACoC,MAAM,CAAC,CAAC;MACrB;IAAE,CACH,CAAC,EAGFzC,IAAA,CAACJ,mBAAmB;MAClB8C,SAAS,EAAEjC,qBAAsB;MACjCkC,YAAY,EAAE,SAAAA,aAACL,KAAc;QAAA,OAAK5B,yBAAwB,CAAC4B,KAAK,CAAC;MAAA,CAAC;MAClElB,OAAO,EAAEA,OAAQ;MACjBwB,WAAW,EAAE,SAAAA,YAACN,KAAc,EAAK;QAC/BhB,UAAU,CAACgB,KAAK,CAAC;MACnB,CAAE;MACFd,SAAS,EAAEA,SAAU;MACrBqB,YAAY,EAAE,SAAAA,aAACP,KAAc,EAAK;QAChCZ,YAAY,CAACY,KAAK,CAAC;MACrB,CAAE;MACFQ,kBAAkB,EAAE7B,wBAAyB;MAC7C8B,gBAAgB,EAAE,SAAAA,iBAACT,KAAc,EAAK;QACpCpB,2BAA2B,CAACoB,KAAK,CAAC;MACpC,CAAE;MACFjC,UAAU,EAAEA,UAAW;MACvB2C,aAAa,EAAE,SAAAA,cAAA;QAAA,OAAM3C,UAAU,CAAC4C,QAAQ,CAAC,gBAAyB,CAAC;MAAA,CAAC;MACpEC,IAAI,EAAC;IAAM,CACZ,CAAC,EAGFlD,IAAA,CAACH,eAAe;MACdsD,SAAS,EAAElC,wBAAyB;MACpCmC,UAAU,EAAE,SAAAA,WAAA,EAAM;QAChBlC,2BAA2B,CAAC,KAAK,CAAC;MACpC,CAAE;MACFmC,YAAY,EAAE,SAAAA,aAAA,EAAM;QAClBC,KAAK,CAAC,OAAO,CAAC;MAChB,CAAE;MACFC,IAAI,EAAEzD,IAAI,CAAC0D;IAAc,CAC1B,CAAC,EAEFtD,KAAA,CAACZ,UAAU;MACTqC,KAAK,EAAE;QACL8B,IAAI,EAAE,CAAC;QACPxB,MAAM,EAAEpB,4BAA4B,GAAG,CAAC,GAAG;MAC7C,CAAE;MACF6C,qBAAqB,EAAE;QACrBzB,MAAM,EAAEpB,4BAA4B,GAAG,CAAC,GAAG;MAC7C,CAAE;MACF8C,cAAc,EAAC,OAAO;MACtBC,4BAA4B,EAAE,KAAM;MACpCC,QAAQ,EAAE,SAAAA,SAAA,EAAM;QACd/C,+BAA+B,CAAC,KAAK,CAAC;MACxC,CAAE;MAAAe,QAAA,GAGF7B,IAAA,CAACP,wBAAwB,IAAE,CAAC,EAG5BO,IAAA,CAACN,UAAU;QACToE,aAAa,EAAEjD,4BAA6B;QAC5CkD,WAAW,EAAE,SAAAA,YAACzB,KAAK;UAAA,OAAKxB,+BAA+B,CAACwB,KAAK,CAAC;QAAA;MAAC,CAChE,CAAC;IAAA,CACQ,CAAC;EAAA,CACT,CAAC;AAEX,CAAC;AAED,eAAenC,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}