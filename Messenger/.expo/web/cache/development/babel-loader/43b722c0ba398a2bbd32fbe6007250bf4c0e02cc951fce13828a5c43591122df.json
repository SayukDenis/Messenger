{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { styles } from \"../Styles\";\nimport CrossIcon from \"../Icons/CrossIcon\";\nimport ColorList from \"./ColorList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ColorSelection = function ColorSelection(props) {\n  return _jsx(_Fragment, {\n    children: props.isVisible && _jsxs(_Fragment, {\n      children: [_jsx(View, {\n        style: styles.closeEmojiSelectionButtonContainer,\n        children: _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            props.onClosePress();\n          },\n          children: _jsx(View, {\n            style: styles.closeEmojiSelectionButton,\n            children: _jsx(CrossIcon, {\n              style: styles.crossIcon\n            })\n          })\n        })\n      }), _jsx(View, {\n        style: styles.emojiSelectionContainer,\n        children: _jsx(ColorList, {\n          onSpecialColorPress: props.onSpecialColorPress,\n          pickedColor: props.pickedColor,\n          onColorPress: props.onColorPress,\n          pickedSpecialColor: props.pickedSpecialColor\n        })\n      })]\n    })\n  });\n};\nexport default ColorSelection;","map":{"version":3,"names":["React","View","TouchableOpacity","styles","CrossIcon","ColorList","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","ColorSelection","props","children","isVisible","style","closeEmojiSelectionButtonContainer","onPress","onClosePress","closeEmojiSelectionButton","crossIcon","emojiSelectionContainer","onSpecialColorPress","pickedColor","onColorPress","pickedSpecialColor"],"sources":["/home/zatibmag/Desktop/Project/Messenger/Messenger/Pages/Profiles/DialogueProfile/BranchesScreen/NewBranchScreen/ColorSelection.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React from \"react\";\r\nimport { View, TouchableOpacity } from \"react-native\";\r\nimport { styles } from \"../Styles\";\r\nimport CrossIcon from \"../Icons/CrossIcon\";\r\nimport ColorList from \"./ColorList\";\r\n\r\ninterface ColorSelectionProps {\r\n  isVisible: boolean;\r\n  onColorPress: (value: string) => void;\r\n  onClosePress: () => void;\r\n  pickedColor: string;\r\n  pickedSpecialColor: string;\r\n  onSpecialColorPress: () => void;\r\n}\r\n\r\nconst ColorSelection: React.FC<ColorSelectionProps> = (props) => {\r\n  return (\r\n    <>\r\n      {props.isVisible && (\r\n        <>\r\n          <View style={styles.closeEmojiSelectionButtonContainer}>\r\n            {/* Close emoji selection button */}\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                props.onClosePress();\r\n              }}\r\n            >\r\n              <View style={styles.closeEmojiSelectionButton}>\r\n                <CrossIcon style={styles.crossIcon} />\r\n              </View>\r\n            </TouchableOpacity>\r\n          </View>\r\n          <View style={styles.emojiSelectionContainer}>\r\n            <ColorList\r\n              onSpecialColorPress={props.onSpecialColorPress}\r\n              pickedColor={props.pickedColor}\r\n              onColorPress={props.onColorPress}\r\n              pickedSpecialColor={props.pickedSpecialColor}\r\n            />\r\n          </View>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ColorSelection;\r\n"],"mappings":"AAEA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAE1B,SAASC,MAAM;AACf,OAAOC,SAAS;AAChB,OAAOC,SAAS;AAAoB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAWpC,IAAMC,cAA6C,GAAG,SAAhDA,cAA6CA,CAAIC,KAAK,EAAK;EAC/D,OACEN,IAAA,CAAAE,SAAA;IAAAK,QAAA,EACGD,KAAK,CAACE,SAAS,IACdJ,KAAA,CAAAF,SAAA;MAAAK,QAAA,GACEP,IAAA,CAACN,IAAI;QAACe,KAAK,EAAEb,MAAM,CAACc,kCAAmC;QAAAH,QAAA,EAErDP,IAAA,CAACL,gBAAgB;UACfgB,OAAO,EAAE,SAAAA,QAAA,EAAM;YACbL,KAAK,CAACM,YAAY,CAAC,CAAC;UACtB,CAAE;UAAAL,QAAA,EAEFP,IAAA,CAACN,IAAI;YAACe,KAAK,EAAEb,MAAM,CAACiB,yBAA0B;YAAAN,QAAA,EAC5CP,IAAA,CAACH,SAAS;cAACY,KAAK,EAAEb,MAAM,CAACkB;YAAU,CAAE;UAAC,CAClC;QAAC,CACS;MAAC,CACf,CAAC,EACPd,IAAA,CAACN,IAAI;QAACe,KAAK,EAAEb,MAAM,CAACmB,uBAAwB;QAAAR,QAAA,EAC1CP,IAAA,CAACF,SAAS;UACRkB,mBAAmB,EAAEV,KAAK,CAACU,mBAAoB;UAC/CC,WAAW,EAAEX,KAAK,CAACW,WAAY;UAC/BC,YAAY,EAAEZ,KAAK,CAACY,YAAa;UACjCC,kBAAkB,EAAEb,KAAK,CAACa;QAAmB,CAC9C;MAAC,CACE,CAAC;IAAA,CACP;EACH,CACD,CAAC;AAEP,CAAC;AAED,eAAed,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}