{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport User from \"../../Models/User\";\nimport { dataSource } from \"../../local/database\";\nvar manager = dataSource.manager;\nexport function usersOperations() {\n  return _usersOperations.apply(this, arguments);\n}\nfunction _usersOperations() {\n  _usersOperations = _asyncToGenerator(function* () {\n    console.log('\\n\\tUsers start\\n');\n    if (!dataSource.isInitialized) yield dataSource.initialize();\n    var user1 = new User('User1', 'nickname1');\n    user1.numberPhone = '123-456-7890';\n    user1.description = 'This is User1';\n    user1.linkToPhoto = 'https://example.com/user1photo.jpg';\n    user1 = yield manager.save(user1);\n    console.log('User1 has been saved');\n    var user2 = new User('User2', 'nickname2');\n    user2.numberPhone = '987-654-3210';\n    user2.description = 'This is User2';\n    user2.linkToPhoto = undefined;\n    user2 = yield manager.save(user2);\n    console.log('User2 has been saved');\n    var user3 = new User('User3', 'nickname3');\n    user3.numberPhone = '555-9999';\n    user3.description = undefined;\n    user3.linkToPhoto = undefined;\n    user3 = yield manager.save(user3);\n    console.log('User3 has been saved');\n    yield readUsers();\n    user1.numberPhone = '555-1234';\n    user1.nickname = 'CoolUser1';\n    user1.description = undefined;\n    user1.linkToPhoto = 'https://example.com/user1_new_photo.jpg';\n    user1 = yield manager.save(user1);\n    user2.numberPhone = '555-5678';\n    user2.nickname = 'AwesomeUser2';\n    user2.description = 'Loves coding and hiking in the mountains.';\n    user2.linkToPhoto = 'https://example.com/user2_new_photo.jpg';\n    user2 = yield manager.save(user2);\n    user3.numberPhone = '555-3333';\n    user3.nickname = 'DynamicUser3';\n    user3.description = undefined;\n    user3.linkToPhoto = 'https://example.com/user3_new_photo.jpg';\n    user3 = yield manager.save(user3);\n    console.log('Users have been updated');\n    yield readUsers();\n    yield manager.delete(User, user1.userId);\n    yield manager.delete(User, user2.userId);\n    yield manager.delete(User, user3.userId);\n    console.log('Users have been deleted');\n    yield readUsers();\n  });\n  return _usersOperations.apply(this, arguments);\n}\nexport function readUsers() {\n  return _readUsers.apply(this, arguments);\n}\nfunction _readUsers() {\n  _readUsers = _asyncToGenerator(function* () {\n    var savedUsers = yield manager.find(User);\n    console.log(`Users quantity: ${savedUsers.length}`);\n    for (var user of savedUsers) {\n      console.log(user);\n    }\n  });\n  return _readUsers.apply(this, arguments);\n}","map":{"version":3,"names":["User","dataSource","manager","usersOperations","_usersOperations","apply","arguments","_asyncToGenerator","console","log","isInitialized","initialize","user1","numberPhone","description","linkToPhoto","save","user2","undefined","user3","readUsers","nickname","delete","userId","_readUsers","savedUsers","find","length","user"],"sources":["C:/Users/T480/source/repos/Messenger/Messenger/dao/test/manualTest/usersOperations.ts"],"sourcesContent":["import User from '../../Models/User';\r\nimport { dataSource } from '../../local/database';\r\n\r\nconst manager = dataSource.manager;\r\n\r\nexport async function usersOperations() {\r\n\r\n    console.log('\\n\\tUsers start\\n');\r\n\r\n    if (!dataSource.isInitialized) await dataSource.initialize();\r\n\r\n    // Save User1\r\n    let user1 = new User('User1', 'nickname1');\r\n    user1.numberPhone = '123-456-7890';\r\n    user1.description = 'This is User1';\r\n    user1.linkToPhoto = 'https://example.com/user1photo.jpg';\r\n    user1 = await manager.save(user1);\r\n    console.log('User1 has been saved');\r\n\r\n    // Save User2\r\n    let user2 = new User('User2', 'nickname2');\r\n    user2.numberPhone = '987-654-3210';\r\n    user2.description = 'This is User2';\r\n    user2.linkToPhoto = undefined;\r\n    user2 = await manager.save(user2);\r\n    console.log('User2 has been saved');\r\n\r\n    // Save User3\r\n    let user3 = new User('User3', 'nickname3');\r\n    user3.numberPhone = '555-9999';\r\n    user3.description = undefined;\r\n    user3.linkToPhoto = undefined;\r\n    user3 = await manager.save(user3);\r\n    console.log('User3 has been saved');\r\n\r\n    // Read Users\r\n    await readUsers();\r\n\r\n    // Update Users\r\n    user1.numberPhone = '555-1234';\r\n    user1.nickname = 'CoolUser1';\r\n    user1.description = undefined;\r\n    user1.linkToPhoto = 'https://example.com/user1_new_photo.jpg';\r\n    user1 = await manager.save(user1);\r\n\r\n    user2.numberPhone = '555-5678';\r\n    user2.nickname = 'AwesomeUser2';\r\n    user2.description = 'Loves coding and hiking in the mountains.';\r\n    user2.linkToPhoto = 'https://example.com/user2_new_photo.jpg';\r\n    user2 = await manager.save(user2);\r\n\r\n    user3.numberPhone = '555-3333';\r\n    user3.nickname = 'DynamicUser3';\r\n    user3.description = undefined;\r\n    user3.linkToPhoto = 'https://example.com/user3_new_photo.jpg';\r\n    user3 = await manager.save(user3);\r\n    console.log('Users have been updated');\r\n\r\n    // Read Users\r\n    await readUsers();\r\n\r\n    // Delete Users\r\n    await manager.delete(User, user1.userId);\r\n    await manager.delete(User, user2.userId);\r\n    await manager.delete(User, user3.userId);\r\n    console.log('Users have been deleted');\r\n\r\n    // Read Users\r\n    await readUsers();\r\n}\r\n\r\nexport async function readUsers() {\r\n    const savedUsers = await manager.find(User);\r\n    console.log(`Users quantity: ${savedUsers.length}`);\r\n    for (let user of savedUsers) {\r\n        console.log(user);\r\n    }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}