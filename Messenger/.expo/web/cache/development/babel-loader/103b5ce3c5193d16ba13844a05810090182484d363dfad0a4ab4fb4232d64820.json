{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { headerstyles } from \"../Styles/HeaderStyle\";\nimport MagnifyingGlass from \"./Headers containers/MagnifyingGlass\";\nimport ModeOfEmployment from \"./Headers containers/ModeOfEmployment\";\nimport Line from \"./Headers containers/Line\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  screenWidth = _Dimensions$get.width,\n  screenHeight = _Dimensions$get.height;\nexport default function Header(_ref) {\n  var mySelfUser = _ref.mySelfUser;\n  var timeForLineAnimation = 500;\n  var rotateGradusOfLines = 45;\n  var topLineValue = useState(new Animated.Value(0))[0];\n  var middleLineValue = useState(new Animated.Value(1))[0];\n  var bottomLineValue = useState(new Animated.Value(0))[0];\n  var _useState = useState(1),\n    _useState2 = _slicedToArray(_useState, 2),\n    state = _useState2[0],\n    setState = _useState2[1];\n  var topLineRotation = topLineValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: [\"0deg\", `-${rotateGradusOfLines}deg`]\n  });\n  var bottomLineRotation = bottomLineValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: [\"0deg\", `${rotateGradusOfLines}deg`]\n  });\n  var width = topLineValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screenWidth, screenWidth * 0.9]\n  });\n  var hamburgerAnimation = function hamburgerAnimation(e) {\n    setState(state == 0 ? 1 : 0);\n    lineTransformation(e);\n  };\n  var lineTransformation = function lineTransformation(e) {\n    Animated.timing(topLineValue, {\n      toValue: state,\n      duration: timeForLineAnimation,\n      useNativeDriver: false\n    }).start();\n    Animated.timing(bottomLineValue, {\n      toValue: state,\n      duration: timeForLineAnimation,\n      useNativeDriver: false\n    }).start();\n    Animated.timing(middleLineValue, {\n      toValue: state == 0 ? 1 : 0,\n      duration: timeForLineAnimation,\n      useNativeDriver: false\n    }).start();\n  };\n  return _jsxs(View, {\n    style: {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      right: 0,\n      zIndex: 5\n    },\n    children: [_jsx(View, {\n      style: headerstyles.gapContainer\n    }), _jsx(View, {\n      style: headerstyles.container,\n      children: _jsxs(View, {\n        style: headerstyles.header,\n        children: [_jsx(MagnifyingGlass, {\n          style: headerstyles.magnifyingglass\n        }), _jsx(ModeOfEmployment, {}), _jsx(TouchableOpacity, {\n          onPress: hamburgerAnimation,\n          children: _jsxs(View, {\n            style: headerstyles.hamburgerview,\n            children: [_jsx(Animated.View, {\n              style: {\n                transform: [{\n                  rotate: topLineRotation\n                }]\n              },\n              children: _jsx(Line, {\n                screenWidth: screenWidth,\n                screenHeight: screenHeight\n              })\n            }), _jsx(Animated.View, {\n              style: {\n                opacity: middleLineValue\n              },\n              children: _jsx(Line, {\n                screenWidth: screenWidth,\n                screenHeight: screenHeight\n              })\n            }), _jsx(Animated.View, {\n              style: {\n                transform: [{\n                  rotate: bottomLineRotation\n                }]\n              },\n              children: _jsx(Line, {\n                screenWidth: screenWidth,\n                screenHeight: screenHeight\n              })\n            })]\n          })\n        })]\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","View","TouchableOpacity","Animated","Dimensions","headerstyles","MagnifyingGlass","ModeOfEmployment","Line","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","screenWidth","width","screenHeight","height","Header","_ref","mySelfUser","timeForLineAnimation","rotateGradusOfLines","topLineValue","Value","middleLineValue","bottomLineValue","_useState","_useState2","_slicedToArray","state","setState","topLineRotation","interpolate","inputRange","outputRange","bottomLineRotation","hamburgerAnimation","e","lineTransformation","timing","toValue","duration","useNativeDriver","start","style","position","top","left","right","zIndex","children","gapContainer","container","header","magnifyingglass","onPress","hamburgerview","transform","rotate","opacity"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/ChatList/Components/Header.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Image,\r\n  TouchableOpacity,\r\n  GestureResponderEvent,\r\n  Animated,\r\n  Dimensions,\r\n} from \"react-native\";\r\nimport { headerstyles } from \"../Styles/HeaderStyle\";\r\nimport MagnifyingGlass from \"./Headers containers/MagnifyingGlass\";\r\nimport ModeOfEmployment from \"./Headers containers/ModeOfEmployment\";\r\nimport Line from \"./Headers containers/Line\";\r\nimport MySelfUser from \"../1HelpFullFolder/MySelfUser\";\r\nconst { width: screenWidth ,height:screenHeight} = Dimensions.get('window');\r\nexport default function Header({ mySelfUser }: { mySelfUser: MySelfUser }) {\r\n  const timeForLineAnimation:number=500;\r\n  const rotateGradusOfLines:number=45;\r\n  const topLineValue = useState(new Animated.Value(0))[0];\r\n  const middleLineValue = useState(new Animated.Value(1))[0];\r\n  const bottomLineValue = useState(new Animated.Value(0))[0];\r\n  const [state,setState]=useState(1);\r\n  const topLineRotation= topLineValue.interpolate({\r\n    inputRange: [0, 1],\r\n    outputRange: [\"0deg\", `-${rotateGradusOfLines}deg`],\r\n  });\r\n  const bottomLineRotation=bottomLineValue.interpolate({\r\n    inputRange: [0, 1],\r\n    outputRange: [\"0deg\", `${rotateGradusOfLines}deg`],\r\n  })\r\n  const width=topLineValue.interpolate({\r\n    inputRange:[0,1],\r\n    outputRange:[screenWidth,screenWidth*0.9]\r\n  })\r\n  const hamburgerAnimation = (e: GestureResponderEvent) => {\r\n    setState(state==0?1:0)\r\n    lineTransformation(e);\r\n  };\r\n  const lineTransformation = (e: GestureResponderEvent) => {\r\n    Animated.timing(topLineValue, {\r\n      toValue: state,\r\n      duration: timeForLineAnimation, \r\n      useNativeDriver: false,\r\n    }).start();\r\n    Animated.timing(bottomLineValue, {\r\n      toValue: state,\r\n      duration: timeForLineAnimation, \r\n      useNativeDriver: false,\r\n    }).start();\r\n    Animated.timing(middleLineValue, {\r\n      toValue: state==0?1:0,\r\n      duration: timeForLineAnimation, // Змінив на 1000 мс (1 секунда) для прикладу\r\n      useNativeDriver: false,\r\n    }).start();\r\n  };\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        zIndex: 5,\r\n      }}\r\n    >\r\n      <View style={headerstyles.gapContainer} />\r\n      <View style={headerstyles.container}>\r\n        <View style={headerstyles.header}>\r\n          <MagnifyingGlass style={headerstyles.magnifyingglass} />\r\n          <ModeOfEmployment />\r\n          <TouchableOpacity onPress={hamburgerAnimation}>\r\n            <View style={headerstyles.hamburgerview}>\r\n              <Animated.View style={{ transform: [{ rotate: topLineRotation}] }}>\r\n                <Line screenWidth={screenWidth} screenHeight={screenHeight}  />\r\n              </Animated.View>\r\n              <Animated.View style={{ opacity:middleLineValue }}>\r\n                <Line  screenWidth={screenWidth} screenHeight={screenHeight}/>\r\n              </Animated.View>\r\n              <Animated.View style={{ transform: [{ rotate: bottomLineRotation }] }}>\r\n                <Line screenWidth={screenWidth} screenHeight={screenHeight} />\r\n              </Animated.View>\r\n            </View>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}