{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport styles from \"../Styles\";\nimport DownArrowIcon from \"../Icons/DownArrowIcon\";\nimport { GetProfile } from \"../../../DatabaseSimulation/DBFunctions\";\nimport CheckMarkIcon from \"../Icons/CheckMarkIcon\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Files = function Files(props) {\n  return _jsx(View, {\n    style: styles.mediaContainer,\n    children: _jsx(FlatList, {\n      data: GetProfile().files,\n      keyExtractor: function keyExtractor(item) {\n        return GetProfile().files.indexOf(item).toString();\n      },\n      horizontal: false,\n      numColumns: 1,\n      contentContainerStyle: {\n        paddingBottom: 0.5 * Dimensions.get(\"screen\").height\n      },\n      scrollEnabled: false,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsxs(TouchableOpacity, {\n          style: styles.fileContainer,\n          onPress: function onPress() {\n            props.onPress(item);\n          },\n          onLongPress: function onLongPress() {\n            props.onLongPress(item);\n          },\n          children: [_jsx(View, {\n            style: styles.fileFormatContainer,\n            children: _jsx(Text, {\n              numberOfLines: 1,\n              style: styles.fileFormatText,\n              children: item.format\n            })\n          }), _jsx(View, {\n            style: styles.fileNameContainer,\n            children: _jsx(Text, {\n              numberOfLines: 1,\n              style: styles.fileVoiceOrLinkTitle,\n              children: item.name\n            })\n          }), props.isSelectionVisible ? _jsx(View, {\n            style: styles.checkMarkContainerForFile,\n            children: props.isCheckMarkVisible(item) && _jsx(CheckMarkIcon, {\n              style: styles.checkMarkIcon\n            })\n          }) : _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              props.onDownloadPress();\n            },\n            style: styles.downloadFileIconContainer,\n            children: _jsx(DownArrowIcon, {\n              style: styles.downloadFileIcon\n            })\n          })]\n        });\n      }\n    })\n  });\n};\nexport default Files;","map":{"version":3,"names":["React","View","FlatList","TouchableOpacity","Text","Dimensions","styles","DownArrowIcon","GetProfile","CheckMarkIcon","jsx","_jsx","jsxs","_jsxs","Files","props","style","mediaContainer","children","data","files","keyExtractor","item","indexOf","toString","horizontal","numColumns","contentContainerStyle","paddingBottom","get","height","scrollEnabled","renderItem","_ref","fileContainer","onPress","onLongPress","fileFormatContainer","numberOfLines","fileFormatText","format","fileNameContainer","fileVoiceOrLinkTitle","name","isSelectionVisible","checkMarkContainerForFile","isCheckMarkVisible","checkMarkIcon","onDownloadPress","downloadFileIconContainer","downloadFileIcon"],"sources":["C:/Users/T480/source/repos/Messenger/Messenger/Pages/Profiles/SemiComponents/Screens/MainScreen/Multimedia/Files.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React from \"react\";\r\nimport {\r\n  View,\r\n  FlatList,\r\n  TouchableOpacity,\r\n  Text,\r\n  Dimensions,\r\n} from \"react-native\";\r\nimport styles from \"../Styles\";\r\nimport DownArrowIcon from \"../Icons/DownArrowIcon\";\r\nimport { GetProfile } from \"../../../DatabaseSimulation/DBFunctions\";\r\nimport { File } from \"../../../DatabaseSimulation/DBClasses\";\r\nimport CheckMarkIcon from \"../Icons/CheckMarkIcon\";\r\n\r\ninterface FilesProps {\r\n  onPress: (value: File) => void;\r\n  onLongPress: (value: File) => void;\r\n  onDownloadPress: () => void;\r\n  isSelectionVisible: boolean;\r\n  isCheckMarkVisible: (value: File) => boolean;\r\n}\r\n\r\nconst Files: React.FC<FilesProps> = (props) => {\r\n  return (\r\n    <View style={styles.mediaContainer}>\r\n      <FlatList\r\n        data={GetProfile().files}\r\n        keyExtractor={(item) => GetProfile().files.indexOf(item).toString()}\r\n        horizontal={false}\r\n        numColumns={1}\r\n        contentContainerStyle={{\r\n          paddingBottom: 0.5 * Dimensions.get(\"screen\").height,\r\n        }}\r\n        scrollEnabled={false}\r\n        renderItem={({ item }) => {\r\n          return (\r\n            <TouchableOpacity\r\n              style={styles.fileContainer}\r\n              onPress={() => {\r\n                props.onPress(item);\r\n              }}\r\n              onLongPress={() => {\r\n                props.onLongPress(item);\r\n              }}\r\n            >\r\n              <View style={styles.fileFormatContainer}>\r\n                <Text numberOfLines={1} style={styles.fileFormatText}>\r\n                  {item.format}\r\n                </Text>\r\n              </View>\r\n              <View style={styles.fileNameContainer}>\r\n                <Text numberOfLines={1} style={styles.fileVoiceOrLinkTitle}>\r\n                  {item.name}\r\n                </Text>\r\n              </View>\r\n              {props.isSelectionVisible ? (\r\n                <View style={styles.checkMarkContainerForFile}>\r\n                  {props.isCheckMarkVisible(item) && (\r\n                    <CheckMarkIcon style={styles.checkMarkIcon} />\r\n                  )}\r\n                </View>\r\n              ) : (\r\n                <TouchableOpacity\r\n                  onPress={() => {\r\n                    props.onDownloadPress();\r\n                  }}\r\n                  style={styles.downloadFileIconContainer}\r\n                >\r\n                  <DownArrowIcon style={styles.downloadFileIcon} />\r\n                </TouchableOpacity>\r\n              )}\r\n            </TouchableOpacity>\r\n          );\r\n        }}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Files;\r\n"],"mappings":"AAEA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAQ1B,OAAOC,MAAM;AACb,OAAOC,aAAa;AACpB,SAASC,UAAU;AAEnB,OAAOC,aAAa;AAA+B,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAUnD,IAAMC,KAA2B,GAAG,SAA9BA,KAA2BA,CAAIC,KAAK,EAAK;EAC7C,OACEJ,IAAA,CAACV,IAAI;IAACe,KAAK,EAAEV,MAAM,CAACW,cAAe;IAAAC,QAAA,EACjCP,IAAA,CAACT,QAAQ;MACPiB,IAAI,EAAEX,UAAU,CAAC,CAAC,CAACY,KAAM;MACzBC,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAKd,UAAU,CAAC,CAAC,CAACY,KAAK,CAACG,OAAO,CAACD,IAAI,CAAC,CAACE,QAAQ,CAAC,CAAC;MAAA,CAAC;MACpEC,UAAU,EAAE,KAAM;MAClBC,UAAU,EAAE,CAAE;MACdC,qBAAqB,EAAE;QACrBC,aAAa,EAAE,GAAG,GAAGvB,UAAU,CAACwB,GAAG,CAAC,QAAQ,CAAC,CAACC;MAChD,CAAE;MACFC,aAAa,EAAE,KAAM;MACrBC,UAAU,EAAE,SAAAA,WAAAC,IAAA,EAAc;QAAA,IAAXX,IAAI,GAAAW,IAAA,CAAJX,IAAI;QACjB,OACET,KAAA,CAACV,gBAAgB;UACfa,KAAK,EAAEV,MAAM,CAAC4B,aAAc;UAC5BC,OAAO,EAAE,SAAAA,QAAA,EAAM;YACbpB,KAAK,CAACoB,OAAO,CAACb,IAAI,CAAC;UACrB,CAAE;UACFc,WAAW,EAAE,SAAAA,YAAA,EAAM;YACjBrB,KAAK,CAACqB,WAAW,CAACd,IAAI,CAAC;UACzB,CAAE;UAAAJ,QAAA,GAEFP,IAAA,CAACV,IAAI;YAACe,KAAK,EAAEV,MAAM,CAAC+B,mBAAoB;YAAAnB,QAAA,EACtCP,IAAA,CAACP,IAAI;cAACkC,aAAa,EAAE,CAAE;cAACtB,KAAK,EAAEV,MAAM,CAACiC,cAAe;cAAArB,QAAA,EAClDI,IAAI,CAACkB;YAAM,CACR;UAAC,CACH,CAAC,EACP7B,IAAA,CAACV,IAAI;YAACe,KAAK,EAAEV,MAAM,CAACmC,iBAAkB;YAAAvB,QAAA,EACpCP,IAAA,CAACP,IAAI;cAACkC,aAAa,EAAE,CAAE;cAACtB,KAAK,EAAEV,MAAM,CAACoC,oBAAqB;cAAAxB,QAAA,EACxDI,IAAI,CAACqB;YAAI,CACN;UAAC,CACH,CAAC,EACN5B,KAAK,CAAC6B,kBAAkB,GACvBjC,IAAA,CAACV,IAAI;YAACe,KAAK,EAAEV,MAAM,CAACuC,yBAA0B;YAAA3B,QAAA,EAC3CH,KAAK,CAAC+B,kBAAkB,CAACxB,IAAI,CAAC,IAC7BX,IAAA,CAACF,aAAa;cAACO,KAAK,EAAEV,MAAM,CAACyC;YAAc,CAAE;UAC9C,CACG,CAAC,GAEPpC,IAAA,CAACR,gBAAgB;YACfgC,OAAO,EAAE,SAAAA,QAAA,EAAM;cACbpB,KAAK,CAACiC,eAAe,CAAC,CAAC;YACzB,CAAE;YACFhC,KAAK,EAAEV,MAAM,CAAC2C,yBAA0B;YAAA/B,QAAA,EAExCP,IAAA,CAACJ,aAAa;cAACS,KAAK,EAAEV,MAAM,CAAC4C;YAAiB,CAAE;UAAC,CACjC,CACnB;QAAA,CACe,CAAC;MAEvB;IAAE,CACH;EAAC,CACE,CAAC;AAEX,CAAC;AAED,eAAepC,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}