{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport invariant from 'fbjs/lib/invariant';\nimport EventEmitter from \"../../vendor/react-native/vendor/emitter/EventEmitter\";\nimport canUseDOM from \"../../modules/canUseDom\";\nvar isPrefixed = canUseDOM && !document.hasOwnProperty('hidden') && document.hasOwnProperty('webkitHidden');\nvar EVENT_TYPES = ['change', 'memoryWarning'];\nvar VISIBILITY_CHANGE_EVENT = isPrefixed ? 'webkitvisibilitychange' : 'visibilitychange';\nvar VISIBILITY_STATE_PROPERTY = isPrefixed ? 'webkitVisibilityState' : 'visibilityState';\nvar AppStates = {\n  BACKGROUND: 'background',\n  ACTIVE: 'active'\n};\nvar changeEmitter = null;\nvar AppState = function () {\n  function AppState() {\n    _classCallCheck(this, AppState);\n  }\n  _createClass(AppState, null, [{\n    key: \"currentState\",\n    get: function get() {\n      if (!AppState.isAvailable) {\n        return AppStates.ACTIVE;\n      }\n      switch (document[VISIBILITY_STATE_PROPERTY]) {\n        case 'hidden':\n        case 'prerender':\n        case 'unloaded':\n          return AppStates.BACKGROUND;\n        default:\n          return AppStates.ACTIVE;\n      }\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, handler) {\n      if (AppState.isAvailable) {\n        invariant(EVENT_TYPES.indexOf(type) !== -1, 'Trying to subscribe to unknown event: \"%s\"', type);\n        if (type === 'change') {\n          if (!changeEmitter) {\n            changeEmitter = new EventEmitter();\n            document.addEventListener(VISIBILITY_CHANGE_EVENT, function () {\n              if (changeEmitter) {\n                changeEmitter.emit('change', AppState.currentState);\n              }\n            }, false);\n          }\n          return changeEmitter.addListener(type, handler);\n        }\n      }\n    }\n  }]);\n  return AppState;\n}();\nexport { AppState as default };\nAppState.isAvailable = canUseDOM && document[VISIBILITY_STATE_PROPERTY];","map":{"version":3,"names":["invariant","EventEmitter","canUseDOM","isPrefixed","document","hasOwnProperty","EVENT_TYPES","VISIBILITY_CHANGE_EVENT","VISIBILITY_STATE_PROPERTY","AppStates","BACKGROUND","ACTIVE","changeEmitter","AppState","_classCallCheck","_createClass","key","get","isAvailable","value","addEventListener","type","handler","indexOf","emit","currentState","addListener","default"],"sources":["D:/repo/Messenger/Messenger/node_modules/react-native-web/dist/exports/AppState/index.js"],"sourcesContent":["/**\r\n * Copyright (c) Nicolas Gallagher.\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\r\n\r\nimport invariant from 'fbjs/lib/invariant';\r\nimport EventEmitter from '../../vendor/react-native/vendor/emitter/EventEmitter';\r\nimport canUseDOM from '../../modules/canUseDom';\r\n\r\n// Android 4.4 browser\r\nvar isPrefixed = canUseDOM && !document.hasOwnProperty('hidden') && document.hasOwnProperty('webkitHidden');\r\nvar EVENT_TYPES = ['change', 'memoryWarning'];\r\nvar VISIBILITY_CHANGE_EVENT = isPrefixed ? 'webkitvisibilitychange' : 'visibilitychange';\r\nvar VISIBILITY_STATE_PROPERTY = isPrefixed ? 'webkitVisibilityState' : 'visibilityState';\r\nvar AppStates = {\r\n  BACKGROUND: 'background',\r\n  ACTIVE: 'active'\r\n};\r\nvar changeEmitter = null;\r\nexport default class AppState {\r\n  static get currentState() {\r\n    if (!AppState.isAvailable) {\r\n      return AppStates.ACTIVE;\r\n    }\r\n    switch (document[VISIBILITY_STATE_PROPERTY]) {\r\n      case 'hidden':\r\n      case 'prerender':\r\n      case 'unloaded':\r\n        return AppStates.BACKGROUND;\r\n      default:\r\n        return AppStates.ACTIVE;\r\n    }\r\n  }\r\n  static addEventListener(type, handler) {\r\n    if (AppState.isAvailable) {\r\n      invariant(EVENT_TYPES.indexOf(type) !== -1, 'Trying to subscribe to unknown event: \"%s\"', type);\r\n      if (type === 'change') {\r\n        if (!changeEmitter) {\r\n          changeEmitter = new EventEmitter();\r\n          document.addEventListener(VISIBILITY_CHANGE_EVENT, () => {\r\n            if (changeEmitter) {\r\n              changeEmitter.emit('change', AppState.currentState);\r\n            }\r\n          }, false);\r\n        }\r\n        return changeEmitter.addListener(type, handler);\r\n      }\r\n    }\r\n  }\r\n}\r\nAppState.isAvailable = canUseDOM && document[VISIBILITY_STATE_PROPERTY];"],"mappings":";;AAUA,OAAOA,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,YAAY;AACnB,OAAOC,SAAS;AAGhB,IAAIC,UAAU,GAAGD,SAAS,IAAI,CAACE,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC,IAAID,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC;AAC3G,IAAIC,WAAW,GAAG,CAAC,QAAQ,EAAE,eAAe,CAAC;AAC7C,IAAIC,uBAAuB,GAAGJ,UAAU,GAAG,wBAAwB,GAAG,kBAAkB;AACxF,IAAIK,yBAAyB,GAAGL,UAAU,GAAG,uBAAuB,GAAG,iBAAiB;AACxF,IAAIM,SAAS,GAAG;EACdC,UAAU,EAAE,YAAY;EACxBC,MAAM,EAAE;AACV,CAAC;AACD,IAAIC,aAAa,GAAG,IAAI;AAAC,IACJC,QAAQ;EAAA,SAAAA,SAAA;IAAAC,eAAA,OAAAD,QAAA;EAAA;EAAAE,YAAA,CAAAF,QAAA;IAAAG,GAAA;IAAAC,GAAA,EAC3B,SAAAA,IAAA,EAA0B;MACxB,IAAI,CAACJ,QAAQ,CAACK,WAAW,EAAE;QACzB,OAAOT,SAAS,CAACE,MAAM;MACzB;MACA,QAAQP,QAAQ,CAACI,yBAAyB,CAAC;QACzC,KAAK,QAAQ;QACb,KAAK,WAAW;QAChB,KAAK,UAAU;UACb,OAAOC,SAAS,CAACC,UAAU;QAC7B;UACE,OAAOD,SAAS,CAACE,MAAM;MAC3B;IACF;EAAC;IAAAK,GAAA;IAAAG,KAAA,EACD,SAAAC,iBAAwBC,IAAI,EAAEC,OAAO,EAAE;MACrC,IAAIT,QAAQ,CAACK,WAAW,EAAE;QACxBlB,SAAS,CAACM,WAAW,CAACiB,OAAO,CAACF,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,4CAA4C,EAAEA,IAAI,CAAC;QAC/F,IAAIA,IAAI,KAAK,QAAQ,EAAE;UACrB,IAAI,CAACT,aAAa,EAAE;YAClBA,aAAa,GAAG,IAAIX,YAAY,CAAC,CAAC;YAClCG,QAAQ,CAACgB,gBAAgB,CAACb,uBAAuB,EAAE,YAAM;cACvD,IAAIK,aAAa,EAAE;gBACjBA,aAAa,CAACY,IAAI,CAAC,QAAQ,EAAEX,QAAQ,CAACY,YAAY,CAAC;cACrD;YACF,CAAC,EAAE,KAAK,CAAC;UACX;UACA,OAAOb,aAAa,CAACc,WAAW,CAACL,IAAI,EAAEC,OAAO,CAAC;QACjD;MACF;IACF;EAAC;EAAA,OAAAT,QAAA;AAAA;AAAA,SA7BkBA,QAAQ,IAAAc,OAAA;AA+B7Bd,QAAQ,CAACK,WAAW,GAAGhB,SAAS,IAAIE,QAAQ,CAACI,yBAAyB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}