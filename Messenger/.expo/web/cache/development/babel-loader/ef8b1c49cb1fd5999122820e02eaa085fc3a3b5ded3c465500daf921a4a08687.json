{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleEditBioPageCenter from \"./StyleEditBioPageCenter\";\nimport CancelButton from \"../EditSVG/CancelButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar windowHeight = Dimensions.get('window').height;\nvar EditBioCenter = function EditBioCenter() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    text = _useState2[0],\n    setText = _useState2[1];\n  var maxCharactersPerLine = 50;\n  var handleTextChange = function handleTextChange(inputText) {\n    var formattedText = inputText;\n    var inputHeigth = windowHeight * 0.07;\n    if (formattedText.length % (maxCharactersPerLine + 1) === 0) {\n      formattedText += '\\n';\n      setTextInputHeight(inputText.length + inputHeigth);\n    }\n    setText(formattedText);\n  };\n  var _useState3 = useState(windowHeight * 0.07),\n    _useState4 = _slicedToArray(_useState3, 2),\n    textInputHeight = _useState4[0],\n    setTextInputHeight = _useState4[1];\n  var resetCounter = function resetCounter() {\n    setText(\"\");\n    setTextInputHeight(windowHeight * 0.07);\n  };\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      style: StyleEditBioPageCenter.textCenterConteiner,\n      children: \"Your Bio\"\n    }), _jsxs(View, {\n      style: [StyleEditBioPageCenter.textInputConteiner, {\n        height: textInputHeight\n      }],\n      children: [_jsx(TouchableOpacity, {\n        children: _jsx(TextInput, {\n          style: [StyleEditBioPageCenter.textInput, {\n            height: textInputHeight\n          }],\n          multiline: true,\n          value: text,\n          onChangeText: handleTextChange,\n          maxLength: 50,\n          placeholder: \"De Nis pipiska\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          resetCounter;\n          setText('');\n          setTextInputHeight(windowHeight * 0.07);\n        },\n        children: _jsxs(View, {\n          style: StyleEditBioPageCenter.counterConteinter,\n          children: [_jsx(CancelButton, {}), _jsxs(Text, {\n            children: [\" \", text.length, \"/50\"]\n          })]\n        })\n      })]\n    })]\n  });\n};\nexport default EditBioCenter;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","Dimensions","StyleEditBioPageCenter","CancelButton","jsx","_jsx","jsxs","_jsxs","windowHeight","get","height","EditBioCenter","_useState","_useState2","_slicedToArray","text","setText","maxCharactersPerLine","handleTextChange","inputText","formattedText","inputHeigth","length","setTextInputHeight","_useState3","_useState4","textInputHeight","resetCounter","children","style","textCenterConteiner","textInputConteiner","textInput","multiline","value","onChangeText","maxLength","placeholder","onPress","counterConteinter"],"sources":["D:/project/ty/Messenger/Messenger/Pages/Settings/MainSettingPage/EdiitPage/EditBioPage/EditBiopageCenter/EditBioPageCenter.tsx"],"sourcesContent":["import React , { useState } from \"react\";\r\nimport { View, Text, TextInput, TouchableOpacity, Dimensions } from \"react-native\";\r\nimport StyleEditBioPageCenter from \"./StyleEditBioPageCenter\";\r\nimport CancelButton from \"../EditSVG/CancelButton\";\r\n\r\nconst windowHeight = Dimensions.get('window').height;\r\n\r\nconst EditBioCenter =()=>{\r\n    const [text, setText] = useState('');\r\n    const maxCharactersPerLine = 50;\r\n    const handleTextChange = (inputText) => {\r\n        let formattedText = inputText;\r\n        let inputHeigth =windowHeight*0.07;\r\n        if (formattedText.length % (maxCharactersPerLine + 1) === 0) {\r\n            formattedText += '\\n';\r\n            setTextInputHeight(inputText.length +inputHeigth);\r\n        }\r\n        setText(formattedText);\r\n        \r\n    };\r\n    const [textInputHeight, setTextInputHeight] = useState(windowHeight*0.07,);\r\n      const resetCounter = () => {\r\n        setText(\"\");\r\n        setTextInputHeight(windowHeight*0.07);\r\n      };\r\n    return <View>\r\n        <Text style ={StyleEditBioPageCenter.textCenterConteiner}>Your Bio</Text>\r\n        <View style ={[StyleEditBioPageCenter.textInputConteiner,{ height: textInputHeight }] }>\r\n            <TouchableOpacity ><TextInput style ={[StyleEditBioPageCenter.textInput,{ height: textInputHeight }] } multiline  value={text}  onChangeText={handleTextChange} maxLength={50}  placeholder=\"De Nis pipiska\"/></TouchableOpacity>\r\n            <TouchableOpacity onPress={()=>{resetCounter; setText(''); setTextInputHeight(windowHeight*0.07);}}>\r\n                <View style={StyleEditBioPageCenter.counterConteinter}>\r\n                    <CancelButton/>\r\n                    <Text> {text.length}/50</Text>\r\n                </View>\r\n            </TouchableOpacity>\r\n        </View>\r\n    </View>\r\n}\r\n\r\nexport default EditBioCenter;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}