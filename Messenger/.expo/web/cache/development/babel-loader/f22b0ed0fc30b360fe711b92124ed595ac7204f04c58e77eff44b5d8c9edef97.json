{"ast":null,"code":"'use strict';\nfunction deepFreezeAndThrowOnMutationInDev(object) {\n  if (__DEV__) {\n    if (typeof object !== 'object' || object === null || Object.isFrozen(object) || Object.isSealed(object)) {\n      return object;\n    }\n    var keys = Object.keys(object);\n    var _hasOwnProperty = Object.prototype.hasOwnProperty;\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      if (_hasOwnProperty.call(object, key)) {\n        Object.defineProperty(object, key, {\n          get: identity.bind(null, object[key])\n        });\n        Object.defineProperty(object, key, {\n          set: throwOnImmutableMutation.bind(null, key)\n        });\n      }\n    }\n    Object.freeze(object);\n    Object.seal(object);\n    for (var _i = 0; _i < keys.length; _i++) {\n      var _key = keys[_i];\n      if (_hasOwnProperty.call(object, _key)) {\n        deepFreezeAndThrowOnMutationInDev(object[_key]);\n      }\n    }\n  }\n  return object;\n}\nfunction throwOnImmutableMutation(key, value) {\n  throw Error('You attempted to set the key `' + key + '` with the value `' + JSON.stringify(value) + '` on an object that is meant to be immutable ' + 'and has been frozen.');\n}\nfunction identity(value) {\n  return value;\n}\nmodule.exports = deepFreezeAndThrowOnMutationInDev;","map":{"version":3,"names":["deepFreezeAndThrowOnMutationInDev","object","__DEV__","Object","isFrozen","isSealed","keys","hasOwnProperty","prototype","i","length","key","call","defineProperty","get","identity","bind","set","throwOnImmutableMutation","freeze","seal","value","Error","JSON","stringify","module","exports"],"sources":["D:/project/try1/Messenger/Messenger/node_modules/react-native/Libraries/Utilities/deepFreezeAndThrowOnMutationInDev.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * If your application is accepting different values for the same field over\r\n * time and is doing a diff on them, you can either (1) create a copy or\r\n * (2) ensure that those values are not mutated behind two passes.\r\n * This function helps you with (2) by freezing the object and throwing if\r\n * the user subsequently modifies the value.\r\n *\r\n * There are two caveats with this function:\r\n *   - If the call site is not in strict mode, it will only throw when\r\n *     mutating existing fields, adding a new one\r\n *     will unfortunately fail silently :(\r\n *   - If the object is already frozen or sealed, it will not continue the\r\n *     deep traversal and will leave leaf nodes unfrozen.\r\n *\r\n * Freezing the object and adding the throw mechanism is expensive and will\r\n * only be used in DEV.\r\n */\r\nfunction deepFreezeAndThrowOnMutationInDev<T: {...} | Array<mixed>>(\r\n  object: T,\r\n): T {\r\n  if (__DEV__) {\r\n    if (\r\n      typeof object !== 'object' ||\r\n      object === null ||\r\n      Object.isFrozen(object) ||\r\n      Object.isSealed(object)\r\n    ) {\r\n      return object;\r\n    }\r\n\r\n    // $FlowFixMe[not-an-object] `object` can be an array, but Object.keys works with arrays too\r\n    const keys = Object.keys((object: {...} | Array<mixed>));\r\n    // $FlowFixMe[method-unbinding] added when improving typing for this parameters\r\n    const hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const key = keys[i];\r\n      if (hasOwnProperty.call(object, key)) {\r\n        Object.defineProperty(object, key, {\r\n          get: identity.bind(null, object[key]),\r\n        });\r\n        Object.defineProperty(object, key, {\r\n          set: throwOnImmutableMutation.bind(null, key),\r\n        });\r\n      }\r\n    }\r\n\r\n    Object.freeze(object);\r\n    Object.seal(object);\r\n\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const key = keys[i];\r\n      if (hasOwnProperty.call(object, key)) {\r\n        deepFreezeAndThrowOnMutationInDev(object[key]);\r\n      }\r\n    }\r\n  }\r\n  return object;\r\n}\r\n\r\n/* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\r\n * LTI update could not be added via codemod */\r\nfunction throwOnImmutableMutation(key: empty, value) {\r\n  throw Error(\r\n    'You attempted to set the key `' +\r\n      key +\r\n      '` with the value `' +\r\n      JSON.stringify(value) +\r\n      '` on an object that is meant to be immutable ' +\r\n      'and has been frozen.',\r\n  );\r\n}\r\n\r\nfunction identity(value: mixed) {\r\n  return value;\r\n}\r\n\r\nmodule.exports = deepFreezeAndThrowOnMutationInDev;\r\n"],"mappings":"AAUA,YAAY;AAmBZ,SAASA,iCAAiCA,CACxCC,MAAS,EACN;EACH,IAAIC,OAAO,EAAE;IACX,IACE,OAAOD,MAAM,KAAK,QAAQ,IAC1BA,MAAM,KAAK,IAAI,IACfE,MAAM,CAACC,QAAQ,CAACH,MAAM,CAAC,IACvBE,MAAM,CAACE,QAAQ,CAACJ,MAAM,CAAC,EACvB;MACA,OAAOA,MAAM;IACf;IAGA,IAAMK,IAAI,GAAGH,MAAM,CAACG,IAAI,CAAEL,MAA6B,CAAC;IAExD,IAAMM,eAAc,GAAGJ,MAAM,CAACK,SAAS,CAACD,cAAc;IAEtD,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,IAAI,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;MACpC,IAAME,GAAG,GAAGL,IAAI,CAACG,CAAC,CAAC;MACnB,IAAIF,eAAc,CAACK,IAAI,CAACX,MAAM,EAAEU,GAAG,CAAC,EAAE;QACpCR,MAAM,CAACU,cAAc,CAACZ,MAAM,EAAEU,GAAG,EAAE;UACjCG,GAAG,EAAEC,QAAQ,CAACC,IAAI,CAAC,IAAI,EAAEf,MAAM,CAACU,GAAG,CAAC;QACtC,CAAC,CAAC;QACFR,MAAM,CAACU,cAAc,CAACZ,MAAM,EAAEU,GAAG,EAAE;UACjCM,GAAG,EAAEC,wBAAwB,CAACF,IAAI,CAAC,IAAI,EAAEL,GAAG;QAC9C,CAAC,CAAC;MACJ;IACF;IAEAR,MAAM,CAACgB,MAAM,CAAClB,MAAM,CAAC;IACrBE,MAAM,CAACiB,IAAI,CAACnB,MAAM,CAAC;IAEnB,KAAK,IAAIQ,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAGH,IAAI,CAACI,MAAM,EAAED,EAAC,EAAE,EAAE;MACpC,IAAME,IAAG,GAAGL,IAAI,CAACG,EAAC,CAAC;MACnB,IAAIF,eAAc,CAACK,IAAI,CAACX,MAAM,EAAEU,IAAG,CAAC,EAAE;QACpCX,iCAAiC,CAACC,MAAM,CAACU,IAAG,CAAC,CAAC;MAChD;IACF;EACF;EACA,OAAOV,MAAM;AACf;AAIA,SAASiB,wBAAwBA,CAACP,GAAU,EAAEU,KAAK,EAAE;EACnD,MAAMC,KAAK,CACT,gCAAgC,GAC9BX,GAAG,GACH,oBAAoB,GACpBY,IAAI,CAACC,SAAS,CAACH,KAAK,CAAC,GACrB,+CAA+C,GAC/C,sBACJ,CAAC;AACH;AAEA,SAASN,QAAQA,CAACM,KAAY,EAAE;EAC9B,OAAOA,KAAK;AACd;AAEAI,MAAM,CAACC,OAAO,GAAG1B,iCAAiC"},"metadata":{},"sourceType":"script","externalDependencies":[]}