{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport MultimediaBar from \"./MultimediaBar.tsx\";\nimport Photos from \"./Photos.tsx\";\nimport Files from \"./Files.tsx\";\nimport Voice from \"./Voice.tsx\";\nimport Links from \"./Links.tsx\";\nimport Albums from \"./Albums.tsx\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Multimedia = function Multimedia(props) {\n  var _useState = useState(\"Photos\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    pressedMultimediaButton = _useState2[0],\n    setPressedMultimediaButton = _useState2[1];\n  return _jsxs(_Fragment, {\n    children: [_jsx(MultimediaBar, {\n      isLongPressed: props.isLongPressed,\n      onLongPress: function onLongPress(value) {\n        return props.onLongPress(value);\n      },\n      onPress: function onPress(value) {\n        setPressedMultimediaButton(value);\n      }\n    }), pressedMultimediaButton == \"Photos\" && _jsx(Photos, {}), pressedMultimediaButton == \"Albums\" && _jsx(Albums, {}), pressedMultimediaButton == \"Files\" && _jsx(Files, {}), pressedMultimediaButton == \"Voice\" && _jsx(Voice, {}), pressedMultimediaButton == \"Links\" && _jsx(Links, {})]\n  });\n};\nexport default Multimedia;","map":{"version":3,"names":["React","useState","MultimediaBar","Photos","Files","Voice","Links","Albums","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Multimedia","props","_useState","_useState2","_slicedToArray","pressedMultimediaButton","setPressedMultimediaButton","children","isLongPressed","onLongPress","value","onPress"],"sources":["D:/Леша/Messenger_Project/Messenger/messenger/Pages/Profiles/SemiComponents/MainScreen/Multimedia.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Dimensions, ScrollView, View } from \"react-native\";\r\nimport styles from \"./Styles.tsx\";\r\nimport MultimediaBar from \"./MultimediaBar.tsx\";\r\nimport Photos from \"./Photos.tsx\";\r\nimport Files from \"./Files.tsx\";\r\nimport Voice from \"./Voice.tsx\";\r\nimport Links from \"./Links.tsx\";\r\nimport Albums from \"./Albums.tsx\";\r\n\r\ninterface MultimediaProps {\r\n  isLongPressed: boolean;\r\n  onLongPress: (value: boolean) => void;\r\n}\r\n\r\nconst Multimedia: React.FC<MultimediaProps> = (props) => {\r\n  const [pressedMultimediaButton, setPressedMultimediaButton] =\r\n    useState(\"Photos\");\r\n\r\n  return (\r\n    <>\r\n      <MultimediaBar\r\n        isLongPressed={props.isLongPressed}\r\n        onLongPress={(value) => props.onLongPress(value)}\r\n        onPress={(value: string) => {\r\n          setPressedMultimediaButton(value);\r\n        }}\r\n      />\r\n\r\n      {pressedMultimediaButton == \"Photos\" && <Photos />}\r\n      {pressedMultimediaButton == \"Albums\" && <Albums />}\r\n      {pressedMultimediaButton == \"Files\" && <Files />}\r\n      {pressedMultimediaButton == \"Voice\" && <Voice />}\r\n      {pressedMultimediaButton == \"Links\" && <Links />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Multimedia;\r\n"],"mappings":";AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAmB,OAAO;AAGlD,OAAOC,aAAa;AACpB,OAAOC,MAAM;AACb,OAAOC,KAAK;AACZ,OAAOC,KAAK;AACZ,OAAOC,KAAK;AACZ,OAAOC,MAAM;AAAqB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAOlC,IAAMC,UAAqC,GAAG,SAAxCA,UAAqCA,CAAIC,KAAK,EAAK;EACvD,IAAAC,SAAA,GACEf,QAAQ,CAAC,QAAQ,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IADbG,uBAAuB,GAAAF,UAAA;IAAEG,0BAA0B,GAAAH,UAAA;EAG1D,OACEJ,KAAA,CAAAF,SAAA;IAAAU,QAAA,GACEZ,IAAA,CAACP,aAAa;MACZoB,aAAa,EAAEP,KAAK,CAACO,aAAc;MACnCC,WAAW,EAAE,SAAAA,YAACC,KAAK;QAAA,OAAKT,KAAK,CAACQ,WAAW,CAACC,KAAK,CAAC;MAAA,CAAC;MACjDC,OAAO,EAAE,SAAAA,QAACD,KAAa,EAAK;QAC1BJ,0BAA0B,CAACI,KAAK,CAAC;MACnC;IAAE,CACH,CAAC,EAEDL,uBAAuB,IAAI,QAAQ,IAAIV,IAAA,CAACN,MAAM,IAAE,CAAC,EACjDgB,uBAAuB,IAAI,QAAQ,IAAIV,IAAA,CAACF,MAAM,IAAE,CAAC,EACjDY,uBAAuB,IAAI,OAAO,IAAIV,IAAA,CAACL,KAAK,IAAE,CAAC,EAC/Ce,uBAAuB,IAAI,OAAO,IAAIV,IAAA,CAACJ,KAAK,IAAE,CAAC,EAC/Cc,uBAAuB,IAAI,OAAO,IAAIV,IAAA,CAACH,KAAK,IAAE,CAAC;EAAA,CAChD,CAAC;AAEP,CAAC;AAED,eAAeQ,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}