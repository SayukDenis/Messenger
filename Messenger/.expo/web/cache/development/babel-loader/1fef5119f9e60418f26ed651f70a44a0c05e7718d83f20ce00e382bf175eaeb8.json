{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleCentre from \"./StyleCenter\";\nimport ButtonList from \"./ButtonLIst/Buttonlist\";\nimport StyleButtonList from \"./ButtonLIst/StyleButtonLIst\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Center = function Center() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isModalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var toggleModal = function toggleModal() {\n    setModalVisible(!isModalVisible);\n  };\n  return _jsxs(View, {\n    style: StyleCentre.conteiner,\n    children: [_jsx(Image, {\n      style: StyleCentre.imgStyle,\n      source: {\n        uri: 'https://www.meme-arsenal.com/memes/a297a80a2839282005e0a60135421919.jpg'\n      }\n    }), _jsx(View, {\n      style: StyleCentre.button,\n      children: _jsx(Button, {\n        title: \"Edit\"\n      })\n    }), _jsx(View, {\n      style: StyleCentre.box\n    }), _jsx(Text, {\n      style: StyleCentre.text,\n      children: \"Settings\"\n    }), _jsx(ButtonList, {}), _jsx(Text, {\n      style: StyleCentre.text,\n      children: \"Help\"\n    }), _jsx(TouchableOpacity, {\n      style: StyleButtonList.button,\n      children: _jsx(Text, {\n        children: \"Question in Telintik\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: StyleButtonList.button,\n      children: _jsx(Text, {\n        children: \"Ask a Question\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: StyleCentre.editButton,\n      children: _jsx(Text, {\n        style: StyleCentre.editButtonText,\n        onPress: toggleModal,\n        children: \"Exit\"\n      })\n    }), _jsx(Modal, {\n      animationType: \"none\",\n      transparent: true,\n      visible: isModalVisible,\n      onRequestClose: toggleModal,\n      children: _jsx(View, {\n        style: StyleCentre.modalContainer,\n        children: _jsxs(View, {\n          style: StyleCentre.modalContent,\n          children: [_jsx(Text, {\n            children: \"Do you reallu want to log out\"\n          }), _jsxs(View, {\n            children: [_jsx(TouchableOpacity, {\n              onPress: toggleModal,\n              children: _jsx(Text, {\n                children: \"Agree\"\n              })\n            }), _jsx(TouchableOpacity, {\n              onPress: toggleModal,\n              children: _jsx(Text, {\n                children: \"Unagree\"\n              })\n            })]\n          })]\n        })\n      })\n    })]\n  });\n};\nexport default Center;","map":{"version":3,"names":["React","useState","View","Image","Button","Text","TouchableOpacity","Modal","StyleCentre","ButtonList","StyleButtonList","jsx","_jsx","jsxs","_jsxs","Center","_useState","_useState2","_slicedToArray","isModalVisible","setModalVisible","toggleModal","style","conteiner","children","imgStyle","source","uri","button","title","box","text","editButton","editButtonText","onPress","animationType","transparent","visible","onRequestClose","modalContainer","modalContent"],"sources":["D:/project/try1/Messenger/Messenger/Pages/Settings/MainSettingPage/settingsPage/Center/Center.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport { View, Image, Button, Text,TouchableOpacity, Modal, StyleSheet  } from 'react-native';\r\nimport StyleCentre from './StyleCenter';\r\nimport ButtonList from './ButtonLIst/Buttonlist';\r\nimport StyleButtonList from './ButtonLIst/StyleButtonLIst';\r\n\r\nconst Center =()=>{\r\n        const [isModalVisible, setModalVisible] = useState(false);\r\n        const toggleModal = () => {\r\n            setModalVisible(!isModalVisible);\r\n        };\r\n\r\n    return <View style={StyleCentre.conteiner} >\r\n           <Image style={StyleCentre.imgStyle} source={{uri:'https://www.meme-arsenal.com/memes/a297a80a2839282005e0a60135421919.jpg'}}></Image>\r\n           <View style={StyleCentre.button}><Button title =\"Edit\" ></Button></View>\r\n           <View style={StyleCentre.box}></View>\r\n           <Text style= {StyleCentre.text}>Settings</Text>\r\n           <ButtonList></ButtonList>\r\n           <Text style= {StyleCentre.text}>Help</Text>\r\n           <TouchableOpacity style={StyleButtonList.button}>\r\n                <Text>Question in Telintik</Text>\r\n           </TouchableOpacity>\r\n            <TouchableOpacity style={StyleButtonList.button}>\r\n                <Text>Ask a Question</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity style ={StyleCentre.editButton} >\r\n                <Text style={StyleCentre.editButtonText} onPress={toggleModal}>Exit</Text>\r\n            </TouchableOpacity>            \r\n                <Modal\r\n                    animationType=\"none\"\r\n                    transparent={true}\r\n                    visible={isModalVisible}\r\n                    onRequestClose={toggleModal}\r\n                >\r\n                    <View style={StyleCentre.modalContainer}>\r\n                    <View style={StyleCentre.modalContent}>\r\n                        <Text>Do you reallu want to log out</Text>\r\n                        <View>\r\n                            <TouchableOpacity onPress={toggleModal} ><Text>Agree</Text></TouchableOpacity>\r\n                            <TouchableOpacity onPress={toggleModal} ><Text>Unagree</Text></TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n                    </View>\r\n                </Modal>\r\n    </View>\r\n}\r\n\r\nexport default Center;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}