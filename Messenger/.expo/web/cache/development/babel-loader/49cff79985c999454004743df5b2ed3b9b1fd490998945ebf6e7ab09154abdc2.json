{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { styles } from \"./ProfileGroupStyles\";\nimport { GestureHandlerRootView } from \"react-native-gesture-handler\";\nimport { GroupHead } from \"./GroupHeadProfile\";\nimport { GroupBio } from \"./GroupBio\";\nimport { GroupName } from \"./GroupNameInput\";\nimport { EditGroupPhoto } from \"./EditGroupPhoto\";\nimport { UsersList } from \"./UsersList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function EditGroup() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    users = _useState2[0],\n    setUsers = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    GroupHeadNameExample = _useState4[0],\n    setGroupHeadNameExample = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    bioTextExample = _useState6[0],\n    setBioTextExample = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    menuVisible = _useState8[0],\n    setMenuVisible = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    GroupNameExample = _useState10[0],\n    setGroupNameExample = _useState10[1];\n  var _useState11 = useState(\"https://picsum.photos/id/237/536/354\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    GroupImage = _useState12[0],\n    setGroupImage = _useState12[1];\n  var user = {\n    ImagePath: \"https://picsum.photos/id/237/536/354\",\n    Nickname: \"User\"\n  };\n  useEffect(function () {\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n    function _fetchData() {\n      _fetchData = _asyncToGenerator(function* () {\n        try {\n          var response = yield fetch(\"DB_URL\");\n          var data = yield response.json();\n          setUsers(data);\n        } catch (error) {\n          console.error(\"Помилка завантаження даних:\", error);\n        }\n      });\n      return _fetchData.apply(this, arguments);\n    }\n    fetchData();\n  }, []);\n  return _jsx(GestureHandlerRootView, {\n    style: styles.wrapper,\n    children: _jsxs(SafeAreaView, {\n      style: styles.container,\n      children: [_jsx(GroupHead, {\n        setGroupHeadNameExample: setGroupHeadNameExample\n      }), _jsx(EditGroupPhoto, {}), _jsx(GroupName, {\n        setGroupNameExample: setGroupNameExample\n      }), _jsx(GroupBio, {\n        setBioTextExample: setBioTextExample\n      }), users.length > 0 ? _jsx(UsersList, {\n        users: users\n      }) : _jsx(UsersList, {\n        users: [user]\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","SafeAreaView","styles","GestureHandlerRootView","GroupHead","GroupBio","GroupName","EditGroupPhoto","UsersList","jsx","_jsx","jsxs","_jsxs","EditGroup","_useState","_useState2","_slicedToArray","users","setUsers","_useState3","_useState4","GroupHeadNameExample","setGroupHeadNameExample","_useState5","_useState6","bioTextExample","setBioTextExample","_useState7","_useState8","menuVisible","setMenuVisible","_useState9","_useState10","GroupNameExample","setGroupNameExample","_useState11","_useState12","GroupImage","setGroupImage","user","ImagePath","Nickname","fetchData","_fetchData","apply","arguments","_asyncToGenerator","response","fetch","data","json","error","console","style","wrapper","children","container","length"],"sources":["/home/zatibmag/Desktop/Project/Messenger/Messenger/Pages/Profiles/GroupProfile/EditGroup/EditGroup.tsx"],"sourcesContent":["// Ваш файл GroupProfile.tsx\nimport React, { useState, useEffect } from \"react\";\nimport { SafeAreaView } from \"react-native\";\nimport { styles } from \"./ProfileGroupStyles\"; // Адаптувати шлях до правильного файлу\nimport { GestureHandlerRootView } from \"react-native-gesture-handler\";\nimport { GroupHead } from \"./GroupHeadProfile\";\nimport { GroupBio } from \"./GroupBio\";\nimport { User, UserProps } from \"./UserProfile\";\nimport { GroupName } from \"./GroupNameInput\";\nimport { EditGroupPhoto } from \"./EditGroupPhoto\";\nimport { UsersList } from \"./UsersList\";\n\nexport default function EditGroup() {\n  const [users, setUsers] = useState<UserProps[]>([]);\n  const [GroupHeadNameExample, setGroupHeadNameExample] = useState(\"\");\n  const [bioTextExample, setBioTextExample] = useState(\"\");\n  const [menuVisible, setMenuVisible] = useState(false); // Початково приховане меню\n  const [GroupNameExample, setGroupNameExample] = useState(\"\");\n  const [GroupImage, setGroupImage] = useState(\n    \"https://picsum.photos/id/237/536/354\"\n  );\n\n  const user: UserProps = {\n    ImagePath: \"https://picsum.photos/id/237/536/354\",\n    Nickname: \"User\",\n  };\n\n  useEffect(() => {\n    // Ваш код для отримання користувачів з бази даних.\n    // Поки дані не завантажені, встановлюємо тимчасове значення user\n    // Наприклад, якщо дані завантажуються асинхронно з використанням async/await:\n    async function fetchData() {\n      try {\n        // Використовуйте свій код для отримання користувачів тут\n        const response = await fetch(\"DB_URL\");\n        const data = await response.json();\n        setUsers(data); // Оновлюємо users, коли дані завантажені\n      } catch (error) {\n        console.error(\"Помилка завантаження даних:\", error);\n      }\n    }\n\n    // Викликаємо функцію для завантаження даних\n    fetchData();\n  }, []); // Передайте необхідні параметри для запиту до бази даних\n\n  return (\n    <GestureHandlerRootView style={styles.wrapper}>\n      <SafeAreaView style={styles.container}>\n        <GroupHead setGroupHeadNameExample={setGroupHeadNameExample} />\n        <EditGroupPhoto />\n        <GroupName setGroupNameExample={setGroupNameExample} />\n        <GroupBio setBioTextExample={setBioTextExample} />\n        {users.length > 0 ? (\n          <UsersList users={users} />\n        ) : (\n          <UsersList users={[user]} /> // Відображаємо user, коли users порожній\n        )}\n      </SafeAreaView>\n    </GestureHandlerRootView>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}