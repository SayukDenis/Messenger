{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { styles } from \"../Styles\";\nimport tinycolor from \"tinycolor2\";\nimport ColorPicker from \"react-native-wheel-color-picker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar BranchColorPicker = function BranchColorPicker(props) {\n  var colorPickerTitle = \"Custom\";\n  var _useState = useState(props.pickedColor),\n    _useState2 = _slicedToArray(_useState, 2),\n    color = _useState2[0],\n    setColor = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    inputText = _useState4[0],\n    setInputText = _useState4[1];\n  useEffect(function () {\n    if (inputText.length === 6 && tinycolor(inputText).isValid()) {\n      setColor(inputText);\n    }\n  }, [inputText]);\n  useEffect(function () {\n    props.onColorChange(color);\n  }, [props.isVisible]);\n  return _jsx(_Fragment, {\n    children: props.isVisible && _jsxs(View, {\n      style: styles.colorPickerOuterContainer,\n      children: [_jsx(View, {\n        style: styles.colorPickerTitleContainer,\n        children: _jsx(Text, {\n          style: styles.colorPickerTitle,\n          children: colorPickerTitle\n        })\n      }), _jsx(View, {\n        style: [styles.colorPickerInnerContainer, {\n          backgroundColor: color\n        }],\n        children: _jsx(View, {\n          style: styles.circleAroundColorPicker,\n          children: _jsx(View, {\n            style: [styles.colorPickerElement, {\n              right: 0.005 * Dimensions.get(\"screen\").width\n            }],\n            children: _jsx(ColorPicker, {\n              onColorChange: function onColorChange(color) {\n                setColor(color);\n              },\n              thumbSize: 0.11 * Dimensions.get(\"screen\").width,\n              sliderSize: 27,\n              row: true,\n              gapSize: 0.015 * Dimensions.get(\"screen\").width,\n              swatches: false,\n              color: color,\n              shadeSliderThumb: true\n            })\n          })\n        })\n      }), _jsx(View, {\n        style: styles.inputColorOuterContainer,\n        children: _jsxs(View, {\n          style: styles.inputColorInnerContainer,\n          children: [_jsx(Text, {\n            style: styles.inputColorTextHashTag,\n            children: \"#\"\n          }), _jsx(TextInput, {\n            style: styles.inputColorText,\n            onChangeText: function onChangeText(value) {\n              if (/^[a-zA-Z0-9]*$/.test(value)) {\n                setInputText(value.toUpperCase());\n              }\n            },\n            value: inputText,\n            placeholder: \"7C4F91\",\n            placeholderTextColor: \"rgb(185, 185, 185)\",\n            maxLength: 6,\n            autoCapitalize: \"characters\",\n            keyboardType: \"email-address\"\n          })]\n        })\n      })]\n    })\n  });\n};\nexport default BranchColorPicker;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TextInput","Dimensions","styles","tinycolor","ColorPicker","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","BranchColorPicker","props","colorPickerTitle","_useState","pickedColor","_useState2","_slicedToArray","color","setColor","_useState3","_useState4","inputText","setInputText","length","isValid","onColorChange","isVisible","children","style","colorPickerOuterContainer","colorPickerTitleContainer","colorPickerInnerContainer","backgroundColor","circleAroundColorPicker","colorPickerElement","right","get","width","thumbSize","sliderSize","row","gapSize","swatches","shadeSliderThumb","inputColorOuterContainer","inputColorInnerContainer","inputColorTextHashTag","inputColorText","onChangeText","value","test","toUpperCase","placeholder","placeholderTextColor","maxLength","autoCapitalize","keyboardType"],"sources":["/home/zatibmag/Desktop/Project/Messenger/Messenger/Pages/Profiles/DialogueProfile/BranchesScreen/NewBranchScreen/BranchColorPicker.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  Keyboard,\r\n  KeyboardEvent,\r\n  Dimensions,\r\n} from \"react-native\";\r\nimport { styles } from \"../Styles\";\r\nimport tinycolor from \"tinycolor2\";\r\nimport ColorPicker from \"react-native-wheel-color-picker\";\r\n\r\ninterface BranchColorPickerProps {\r\n  isVisible: boolean;\r\n  onColorChange: (value: string) => void;\r\n  pickedColor: string;\r\n}\r\n\r\nconst BranchColorPicker: React.FC<BranchColorPickerProps> = (props) => {\r\n  const colorPickerTitle: string = \"Custom\";\r\n  const [color, setColor] = useState(props.pickedColor);\r\n  const [inputText, setInputText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (inputText.length === 6 && tinycolor(inputText).isValid()) {\r\n      setColor(inputText);\r\n    }\r\n  }, [inputText]);\r\n\r\n  useEffect(() => {\r\n    props.onColorChange(color);\r\n  }, [props.isVisible]);\r\n\r\n  return (\r\n    <>\r\n      {props.isVisible && (\r\n        <View style={styles.colorPickerOuterContainer}>\r\n          <View style={styles.colorPickerTitleContainer}>\r\n            <Text style={styles.colorPickerTitle}>{colorPickerTitle}</Text>\r\n          </View>\r\n\r\n          <View\r\n            style={[\r\n              styles.colorPickerInnerContainer,\r\n              { backgroundColor: color },\r\n            ]}\r\n          >\r\n            <View style={styles.circleAroundColorPicker}>\r\n              <View\r\n                style={[\r\n                  styles.colorPickerElement,\r\n                  {\r\n                    right: 0.005 * Dimensions.get(\"screen\").width,\r\n                  },\r\n                ]}\r\n              >\r\n                <ColorPicker\r\n                  onColorChange={(color) => {\r\n                    setColor(color);\r\n                  }}\r\n                  thumbSize={0.11 * Dimensions.get(\"screen\").width}\r\n                  sliderSize={27}\r\n                  row={true}\r\n                  gapSize={0.015 * Dimensions.get(\"screen\").width}\r\n                  swatches={false}\r\n                  color={color}\r\n                  shadeSliderThumb={true}\r\n                />\r\n              </View>\r\n            </View>\r\n          </View>\r\n\r\n          <View style={styles.inputColorOuterContainer}>\r\n            <View style={styles.inputColorInnerContainer}>\r\n              <Text style={styles.inputColorTextHashTag}>#</Text>\r\n              <TextInput\r\n                style={styles.inputColorText}\r\n                onChangeText={(value) => {\r\n                  if (/^[a-zA-Z0-9]*$/.test(value)) {\r\n                    setInputText(value.toUpperCase());\r\n                  }\r\n                }}\r\n                value={inputText}\r\n                placeholder=\"7C4F91\"\r\n                placeholderTextColor={\"rgb(185, 185, 185)\"}\r\n                maxLength={6}\r\n                autoCapitalize=\"characters\"\r\n                keyboardType=\"email-address\"\r\n              />\r\n            </View>\r\n          </View>\r\n        </View>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BranchColorPicker;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}