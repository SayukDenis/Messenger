{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { footerstyles } from \"../Styles/FooterStyle\";\nimport Folder from \"./Footer containers/Folder\";\nimport Swiper from 'react-native-swiper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Footer = function Footer(_ref) {\n  var user = _ref.user;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedFolder = _useState2[0],\n    setSelectedFolder = _useState2[1];\n  var swiperRef = useRef(null);\n  var handleFolderPress = function handleFolderPress(index) {\n    if (selectedFolder !== index) {\n      var _swiperRef$current;\n      setSelectedFolder(index);\n      (_swiperRef$current = swiperRef.current) == null ? void 0 : _swiperRef$current.scrollTo(index, true);\n    }\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(Swiper, {\n      ref: swiperRef,\n      onIndexChanged: function onIndexChanged(index) {\n        return setSelectedFolder(index);\n      },\n      showsPagination: false,\n      children: user.folders.map(function (folder, index) {\n        return _jsx(View, {\n          children: _jsx(ScrollView, {\n            showsVerticalScrollIndicator: false,\n            style: listOfChatsStyle.container\n          })\n        }, index);\n      })\n    }), _jsx(View, {\n      style: footerstyles.container,\n      children: _jsx(ScrollView, {\n        showsHorizontalScrollIndicator: false,\n        horizontal: true,\n        style: footerstyles.scrollView,\n        children: user.folders.map(function (folder, index) {\n          return _jsx(Folder, {\n            text: folder.name,\n            containerStyle: footerstyles.folderContainer,\n            textStyle: footerstyles.folder,\n            isSelected: selectedFolder === index,\n            onPress: function onPress() {\n              return handleFolderPress(index);\n            }\n          }, index);\n        })\n      })\n    })]\n  });\n};\nexport default Footer;","map":{"version":3,"names":["React","useState","useRef","View","ScrollView","footerstyles","Folder","Swiper","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Footer","_ref","user","_useState","_useState2","_slicedToArray","selectedFolder","setSelectedFolder","swiperRef","handleFolderPress","index","_swiperRef$current","current","scrollTo","children","ref","onIndexChanged","showsPagination","folders","map","folder","showsVerticalScrollIndicator","style","listOfChatsStyle","container","showsHorizontalScrollIndicator","horizontal","scrollView","text","name","containerStyle","folderContainer","textStyle","isSelected","onPress"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/ChatList/Components/Footer.tsx"],"sourcesContent":["import React, { ReactNode, useState, useRef } from 'react';\r\nimport { View, ScrollView, StyleSheet } from 'react-native';\r\nimport MySelfUser from '../1HelpFullFolder/MySelfUser';\r\nimport { footerstyles } from '../Styles/FooterStyle';\r\nimport Folder from './Footer containers/Folder';\r\nimport Swiper from 'react-native-swiper';\r\n\r\ninterface FooterProps {\r\n  user: MySelfUser;\r\n}\r\n\r\nconst Footer: React.FC<FooterProps> = ({ user }) => {\r\n  const [selectedFolder, setSelectedFolder] = useState<number>(0);\r\n  const swiperRef = useRef<Swiper | null>(null);\r\n\r\n  const handleFolderPress = (index: number) => {\r\n    if (selectedFolder !== index) {\r\n      setSelectedFolder(index);\r\n      swiperRef.current?.scrollTo(index, true); // Перемістити до відповідного слайду\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Swiper\r\n        ref={swiperRef}\r\n        onIndexChanged={(index) => setSelectedFolder(index)}\r\n        showsPagination={false} // Вимкнути пагінацію, якщо не потрібно\r\n      >\r\n        {user.folders.map((folder, index) => (\r\n          <View key={index}>\r\n            {/* Вміст для кожного слайду тут */}\r\n            <ScrollView\r\n              showsVerticalScrollIndicator={false}\r\n              style={listOfChatsStyle.container}\r\n            >\r\n              {/* Ваш код для вмісту кожного слайду */}\r\n            </ScrollView>\r\n          </View>\r\n        ))}\r\n      </Swiper>\r\n\r\n      <View style={footerstyles.container}>\r\n        <ScrollView\r\n          showsHorizontalScrollIndicator={false}\r\n          horizontal={true}\r\n          style={footerstyles.scrollView}\r\n        >\r\n          {user.folders.map((folder, index) => (\r\n            <Folder\r\n              key={index}\r\n              text={folder.name}\r\n              containerStyle={footerstyles.folderContainer}\r\n              textStyle={footerstyles.folder}\r\n              isSelected={selectedFolder === index}\r\n              onPress={() => handleFolderPress(index)}\r\n            />\r\n          ))}\r\n        </ScrollView>\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAeC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAG3D,SAASC,YAAY;AACrB,OAAOC,MAAM;AACb,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAMzC,IAAMC,MAA6B,GAAG,SAAhCA,MAA6BA,CAAAC,IAAA,EAAiB;EAAA,IAAXC,IAAI,GAAAD,IAAA,CAAJC,IAAI;EAC3C,IAAAC,SAAA,GAA4ChB,QAAQ,CAAS,CAAC,CAAC;IAAAiB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAxDG,cAAc,GAAAF,UAAA;IAAEG,iBAAiB,GAAAH,UAAA;EACxC,IAAMI,SAAS,GAAGpB,MAAM,CAAgB,IAAI,CAAC;EAE7C,IAAMqB,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,KAAa,EAAK;IAC3C,IAAIJ,cAAc,KAAKI,KAAK,EAAE;MAAA,IAAAC,kBAAA;MAC5BJ,iBAAiB,CAACG,KAAK,CAAC;MACxB,CAAAC,kBAAA,GAAAH,SAAS,CAACI,OAAO,qBAAjBD,kBAAA,CAAmBE,QAAQ,CAACH,KAAK,EAAE,IAAI,CAAC;IAC1C;EACF,CAAC;EAED,OACEX,KAAA,CAAAF,SAAA;IAAAiB,QAAA,GACEnB,IAAA,CAACF,MAAM;MACLsB,GAAG,EAAEP,SAAU;MACfQ,cAAc,EAAE,SAAAA,eAACN,KAAK;QAAA,OAAKH,iBAAiB,CAACG,KAAK,CAAC;MAAA,CAAC;MACpDO,eAAe,EAAE,KAAM;MAAAH,QAAA,EAEtBZ,IAAI,CAACgB,OAAO,CAACC,GAAG,CAAC,UAACC,MAAM,EAAEV,KAAK;QAAA,OAC9Bf,IAAA,CAACN,IAAI;UAAAyB,QAAA,EAEHnB,IAAA,CAACL,UAAU;YACT+B,4BAA4B,EAAE,KAAM;YACpCC,KAAK,EAAEC,gBAAgB,CAACC;UAAU,CAGxB;QAAC,GAPJd,KAQL,CAAC;MAAA,CACR;IAAC,CACI,CAAC,EAETf,IAAA,CAACN,IAAI;MAACiC,KAAK,EAAE/B,YAAY,CAACiC,SAAU;MAAAV,QAAA,EAClCnB,IAAA,CAACL,UAAU;QACTmC,8BAA8B,EAAE,KAAM;QACtCC,UAAU,EAAE,IAAK;QACjBJ,KAAK,EAAE/B,YAAY,CAACoC,UAAW;QAAAb,QAAA,EAE9BZ,IAAI,CAACgB,OAAO,CAACC,GAAG,CAAC,UAACC,MAAM,EAAEV,KAAK;UAAA,OAC9Bf,IAAA,CAACH,MAAM;YAELoC,IAAI,EAAER,MAAM,CAACS,IAAK;YAClBC,cAAc,EAAEvC,YAAY,CAACwC,eAAgB;YAC7CC,SAAS,EAAEzC,YAAY,CAAC6B,MAAO;YAC/Ba,UAAU,EAAE3B,cAAc,KAAKI,KAAM;YACrCwB,OAAO,EAAE,SAAAA,QAAA;cAAA,OAAMzB,iBAAiB,CAACC,KAAK,CAAC;YAAA;UAAC,GALnCA,KAMN,CAAC;QAAA,CACH;MAAC,CACQ;IAAC,CACT,CAAC;EAAA,CACP,CAAC;AAEP,CAAC;AAED,eAAeV,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}