{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { footerstyles } from \"../../Styles/FooterStyle\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar FolderContainer = React.memo(function (_ref) {\n  var containerStyle = _ref.containerStyle,\n    textStyle = _ref.textStyle,\n    folder = _ref.folder,\n    isSelected = _ref.isSelected,\n    onPress = _ref.onPress,\n    handleLongPress = _ref.handleLongPress;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isSelectedThis = _useState2[0],\n    setIsSelectedThis = _useState2[1];\n  useEffect(function () {\n    console.log(\"component rerendered\");\n  });\n  return _jsx(_Fragment, {\n    children: _jsx(TouchableOpacity, {\n      activeOpacity: 1,\n      onPress: onPress,\n      onLongPress: handleLongPress,\n      children: _jsx(View, {\n        style: [containerStyle],\n        children: _jsx(Text, {\n          style: isSelected ? footerstyles.selectedText : textStyle,\n          children: folder.name\n        })\n      })\n    })\n  });\n});\nexport default FolderContainer;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","footerstyles","jsx","_jsx","Fragment","_Fragment","FolderContainer","memo","_ref","containerStyle","textStyle","folder","isSelected","onPress","handleLongPress","_useState","_useState2","_slicedToArray","isSelectedThis","setIsSelectedThis","useEffect","console","log","children","activeOpacity","onLongPress","style","selectedText","name"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/ChatList/Components/Footer containers/FolderContainer.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleProp,\r\n  ViewStyle,\r\n  TextStyle,\r\n  TouchableOpacity,\r\n  GestureResponderEvent,\r\n} from \"react-native\";\r\nimport { footerstyles } from \"../../Styles/FooterStyle\";\r\nimport Folder from \"../../1HelpFullFolder/Folder\";\r\n\r\ninterface FolderProps {\r\n  containerStyle?: StyleProp<ViewStyle>; // Стиль для контейнера\r\n  textStyle?: StyleProp<TextStyle>; // Стиль для тексту\r\n  folder: Folder;\r\n  isSelected: boolean; // Додаємо флаг для визначення, чи обрана папка\r\n  onPress: () => void;\r\n  handleLongPress: (e: GestureResponderEvent) => void;\r\n}\r\n\r\nconst FolderContainer: React.FC<FolderProps> = React.memo(\r\n  ({\r\n    containerStyle,\r\n    textStyle,\r\n    folder,\r\n    isSelected,\r\n    onPress,\r\n    handleLongPress\r\n  }) => {\r\n    const [isSelectedThis, setIsSelectedThis] = useState(false);\r\n    useEffect(() => {\r\n      console.log(\"component rerendered\");\r\n    });\r\n    return (\r\n      <>\r\n        <TouchableOpacity\r\n          activeOpacity={1}\r\n          onPress={onPress}\r\n          onLongPress={handleLongPress}\r\n        >\r\n          <View style={[containerStyle]}>\r\n            <Text style={isSelected ? footerstyles.selectedText : textStyle}>\r\n              {folder.name}\r\n            </Text>\r\n          </View>\r\n        </TouchableOpacity>\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default FolderContainer;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAUxC,SAASC,YAAY;AAAmC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAYxD,IAAMC,eAAsC,GAAGV,KAAK,CAACW,IAAI,CACvD,UAAAC,IAAA,EAOM;EAAA,IANJC,cAAc,GAAAD,IAAA,CAAdC,cAAc;IACdC,SAAS,GAAAF,IAAA,CAATE,SAAS;IACTC,MAAM,GAAAH,IAAA,CAANG,MAAM;IACNC,UAAU,GAAAJ,IAAA,CAAVI,UAAU;IACVC,OAAO,GAAAL,IAAA,CAAPK,OAAO;IACPC,eAAe,GAAAN,IAAA,CAAfM,eAAe;EAEf,IAAAC,SAAA,GAA4ClB,QAAQ,CAAC,KAAK,CAAC;IAAAmB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAApDG,cAAc,GAAAF,UAAA;IAAEG,iBAAiB,GAAAH,UAAA;EACxCI,SAAS,CAAC,YAAM;IACdC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;EACrC,CAAC,CAAC;EACF,OACEnB,IAAA,CAAAE,SAAA;IAAAkB,QAAA,EACEpB,IAAA,CAACH,gBAAgB;MACfwB,aAAa,EAAE,CAAE;MACjBX,OAAO,EAAEA,OAAQ;MACjBY,WAAW,EAAEX,eAAgB;MAAAS,QAAA,EAE7BpB,IAAA,CAACL,IAAI;QAAC4B,KAAK,EAAE,CAACjB,cAAc,CAAE;QAAAc,QAAA,EAC5BpB,IAAA,CAACJ,IAAI;UAAC2B,KAAK,EAAEd,UAAU,GAAGX,YAAY,CAAC0B,YAAY,GAAGjB,SAAU;UAAAa,QAAA,EAC7DZ,MAAM,CAACiB;QAAI,CACR;MAAC,CACH;IAAC,CACS;EAAC,CACnB,CAAC;AAEP,CACF,CAAC;AAED,eAAetB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}