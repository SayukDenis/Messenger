{"ast":null,"code":"import ModeOfEmployment from \"./ModeOfEmployment\";\nimport React from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { connect, useSelector } from \"react-redux\";\nimport Constants from \"expo-constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  screenWidth = _Dimensions$get.width,\n  screenHeight = _Dimensions$get.height;\nvar BlurForModeOfEmployment = function BlurForModeOfEmployment(_ref) {\n  var children = _ref.children;\n  var propsOfModeOfEmployment = useSelector(function (state) {\n    var props = state.chatListReducer.layoutOfModeOfEmployment.layoutOfModeOfEmployment;\n    return props;\n  });\n  return _jsxs(TouchableOpacity, {\n    activeOpacity: 1,\n    style: {\n      top: Platform.OS == \"android\" ? screenHeight * 0.08 + StatusBar.currentHeight : screenHeight * 0.08 + Constants.statusBarHeight\n    },\n    children: [_jsxs(View, {\n      style: [{\n        position: \"absolute\",\n        top: -propsOfModeOfEmployment.height,\n        left: propsOfModeOfEmployment.x + screenWidth * 0.02\n      }, propsOfModeOfEmployment],\n      children: [_jsx(ModeOfEmployment, {}), _jsx(View, {\n        style: [{\n          backgroundColor: \"white\",\n          opacity: 0.3,\n          borderRadius: 15,\n          position: \"absolute\",\n          zIndex: -1,\n          paddingTop: 10,\n          height: propsOfModeOfEmployment.height - 3,\n          width: propsOfModeOfEmployment.width\n        }]\n      })]\n    }), children]\n  });\n};\nexport default connect(null)(BlurForModeOfEmployment);","map":{"version":3,"names":["ModeOfEmployment","React","Dimensions","Platform","TouchableOpacity","StatusBar","View","connect","useSelector","Constants","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","screenWidth","width","screenHeight","height","BlurForModeOfEmployment","_ref","children","propsOfModeOfEmployment","state","props","chatListReducer","layoutOfModeOfEmployment","activeOpacity","style","top","OS","currentHeight","statusBarHeight","position","left","x","backgroundColor","opacity","borderRadius","zIndex","paddingTop"],"sources":["C:/Users/Admin/Project/Messenger/Messenger/Pages/ChatList/Components/Headers containers/BlurForModeOfEmployment.tsx"],"sourcesContent":["import ModeOfEmployment from \"./ModeOfEmployment\";\r\nimport React, { Children, ReactNode, useEffect, useState } from \"react\";\r\nimport {\r\n  Dimensions,\r\n  Platform,\r\n  TouchableOpacity,\r\n  StatusBar,\r\n  View,\r\n  Text,\r\n} from \"react-native\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport Constants from \"expo-constants\";\r\nimport { EnumForChatListBlurs } from \"../Enums/EnumsForChatListBlurs\";\r\nimport ModalWindowOfPressOnHeadersAvatar from \"./ModalWindowOfPressOnHeadersAvatar\";\r\nimport ModalWindowOfPressOnModeOfEmployment from \"./ModalWindowOfPressOnModeOfEmployment\";\r\n\r\nconst { width: screenWidth, height: screenHeight } = Dimensions.get(\"window\");\r\ninterface BlurForModeOfEmploymentProps {\r\n  children:ReactNode;\r\n}\r\nconst BlurForModeOfEmployment: React.FC<BlurForModeOfEmploymentProps> = ({children}) => {\r\n\r\n  const propsOfModeOfEmployment: any = useSelector((state: any) => {\r\n    const props =\r\n      state.chatListReducer.layoutOfModeOfEmployment.layoutOfModeOfEmployment;\r\n    return props;\r\n  });\r\n\r\n \r\n\r\n  return (\r\n    <TouchableOpacity\r\n      activeOpacity={1}\r\n      style={{\r\n        top:\r\n          Platform.OS == \"android\"\r\n            ? screenHeight * 0.08 + StatusBar.currentHeight\r\n            : screenHeight * 0.08 + Constants.statusBarHeight,\r\n      }}\r\n    >\r\n      <View\r\n        style={[\r\n          {\r\n            position: \"absolute\",\r\n            top: -propsOfModeOfEmployment.height,\r\n            left: propsOfModeOfEmployment.x + screenWidth * 0.02,\r\n          },\r\n          propsOfModeOfEmployment,\r\n        ]}\r\n      >\r\n        <ModeOfEmployment />\r\n        <View\r\n          style={[\r\n            {\r\n              backgroundColor: \"white\",\r\n              opacity: 0.3,\r\n              borderRadius: 15,\r\n              position: \"absolute\",\r\n              zIndex: -1,\r\n              paddingTop: 10,\r\n              height: propsOfModeOfEmployment.height - 3,\r\n              width: propsOfModeOfEmployment.width,\r\n            },\r\n          ]}\r\n        />\r\n      </View>\r\n      {children}\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nexport default connect(null)(BlurForModeOfEmployment);\r\n"],"mappings":"AAAA,OAAOA,gBAAgB;AACvB,OAAOC,KAAK,MAAoD,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,IAAA;AASxE,SAASC,OAAO,EAAEC,WAAW,QAAQ,aAAa;AAClD,OAAOC,SAAS,MAAM,gBAAgB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAKvC,IAAAC,eAAA,GAAqDZ,UAAU,CAACa,GAAG,CAAC,QAAQ,CAAC;EAA9DC,WAAW,GAAAF,eAAA,CAAlBG,KAAK;EAAuBC,YAAY,GAAAJ,eAAA,CAApBK,MAAM;AAIlC,IAAMC,uBAA+D,GAAG,SAAlEA,uBAA+DA,CAAAC,IAAA,EAAmB;EAAA,IAAdC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EAEhF,IAAMC,uBAA4B,GAAGf,WAAW,CAAC,UAACgB,KAAU,EAAK;IAC/D,IAAMC,KAAK,GACTD,KAAK,CAACE,eAAe,CAACC,wBAAwB,CAACA,wBAAwB;IACzE,OAAOF,KAAK;EACd,CAAC,CAAC;EAIF,OACEZ,KAAA,CAACT,gBAAgB;IACfwB,aAAa,EAAE,CAAE;IACjBC,KAAK,EAAE;MACLC,GAAG,EACD3B,QAAQ,CAAC4B,EAAE,IAAI,SAAS,GACpBb,YAAY,GAAG,IAAI,GAAGb,SAAS,CAAC2B,aAAa,GAC7Cd,YAAY,GAAG,IAAI,GAAGT,SAAS,CAACwB;IACxC,CAAE;IAAAX,QAAA,GAEFT,KAAA,CAACP,IAAI;MACHuB,KAAK,EAAE,CACL;QACEK,QAAQ,EAAE,UAAU;QACpBJ,GAAG,EAAE,CAACP,uBAAuB,CAACJ,MAAM;QACpCgB,IAAI,EAAEZ,uBAAuB,CAACa,CAAC,GAAGpB,WAAW,GAAG;MAClD,CAAC,EACDO,uBAAuB,CACvB;MAAAD,QAAA,GAEFX,IAAA,CAACX,gBAAgB,IAAE,CAAC,EACpBW,IAAA,CAACL,IAAI;QACHuB,KAAK,EAAE,CACL;UACEQ,eAAe,EAAE,OAAO;UACxBC,OAAO,EAAE,GAAG;UACZC,YAAY,EAAE,EAAE;UAChBL,QAAQ,EAAE,UAAU;UACpBM,MAAM,EAAE,CAAC,CAAC;UACVC,UAAU,EAAE,EAAE;UACdtB,MAAM,EAAEI,uBAAuB,CAACJ,MAAM,GAAG,CAAC;UAC1CF,KAAK,EAAEM,uBAAuB,CAACN;QACjC,CAAC;MACD,CACH,CAAC;IAAA,CACE,CAAC,EACNK,QAAQ;EAAA,CACO,CAAC;AAEvB,CAAC;AAED,eAAef,OAAO,CAAC,IAAI,CAAC,CAACa,uBAAuB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}