{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { styles } from \"./Styles\";\nimport Header from \"../../GeneralComponents/Header\";\nimport BinIcon from \"../MainScreen/Icons/BinIcon\";\nimport Blur from \"../../GeneralComponents/Blur\";\nimport RemovalApproval from \"../../GeneralComponents/RemovalApproval\";\nimport { useIsFocused } from \"@react-navigation/native\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { GetProfile } from \"../../DatabaseSimulation/DBFunctions\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport ButtonWithPlus from \"../../GeneralComponents/ButtonWithPlus\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar screenHeight = Dimensions.get(\"screen\").height;\nvar BranchesScreen = function BranchesScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isDeleteBranchPressed = _useState2[0],\n    setIsDeleteBranchPressed = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    branchNameToRemove = _useState4[0],\n    setBranchNameToRemove = _useState4[1];\n  var isFocused = useIsFocused();\n  useEffect(function () {}, [isFocused]);\n  return _jsxs(LinearGradient, {\n    colors: [\"#cf9b95\", \"#c98bb8\", \"#c37adb\"],\n    style: {\n      flex: 1\n    },\n    children: [_jsx(Blur, {\n      visibleWhen: isDeleteBranchPressed,\n      onPress: function onPress() {\n        setIsDeleteBranchPressed(false);\n      },\n      style: styles.blurEffect\n    }), _jsx(Header, {\n      primaryTitle: \"Branches\",\n      onGoBackPress: function onGoBackPress() {\n        navigation.goBack();\n      }\n    }), _jsx(RemovalApproval, {\n      onAnyPress: function onAnyPress() {\n        setIsDeleteBranchPressed(false);\n      },\n      onAgreePress: function onAgreePress() {\n        var branchToRemoveNow = GetProfile().branchParents.find(function (branch) {\n          return branch.name === branchNameToRemove;\n        });\n        if (branchToRemoveNow) {\n          GetProfile().branchParents.splice(GetProfile().branchParents.indexOf(branchToRemoveNow), 1);\n        }\n        setBranchNameToRemove(\"\");\n      },\n      isVisible: isDeleteBranchPressed,\n      text: \"Do you really want to delete \" + branchNameToRemove + \"?\"\n    }), _jsxs(ScrollView, {\n      children: [_jsx(ButtonWithPlus, {\n        text: \"Branch\",\n        onPress: function onPress() {\n          navigation.navigate(\"NewBranchScreen\");\n        }\n      }), _jsx(View, {\n        style: {\n          paddingBottom: 0.09 * screenHeight,\n          zIndex: 0,\n          top: 0.04 * screenHeight\n        },\n        children: GetProfile().branchParents.map(function (item, index) {\n          return _jsxs(View, {\n            children: [_jsx(View, {\n              style: {\n                height: 0.005 * screenHeight\n              }\n            }), _jsxs(TouchableOpacity, {\n              onPress: function onPress() {\n                GetProfile().selectedBranchParent = item;\n                navigation.navigate(\"ChangeBranchParentScreen\");\n              },\n              style: [styles.settingOption, {\n                top: 0\n              }],\n              children: [_jsx(LinearGradient, {\n                colors: [\"#cf9b95\", \"#c98bb8\", \"#c37adb\"],\n                style: [styles.linearGradient, {\n                  opacity: 0.7\n                }]\n              }), _jsx(View, {\n                style: [styles.branchAvatarInList, {\n                  backgroundColor: item.color\n                }],\n                children: _jsx(Text, {\n                  style: {\n                    fontSize: 20\n                  },\n                  children: item.emoji\n                })\n              }), _jsx(View, {\n                style: styles.branchTitleContainer,\n                children: _jsx(Text, {\n                  numberOfLines: 1,\n                  style: styles.branchTitleInList,\n                  children: item.name\n                })\n              }), _jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  setIsDeleteBranchPressed(true);\n                  setBranchNameToRemove(item.name);\n                },\n                style: styles.binIconContainer,\n                children: _jsx(BinIcon, {\n                  style: styles.binIcon\n                })\n              })]\n            })]\n          }, index);\n        })\n      })]\n    })]\n  });\n};\nexport default BranchesScreen;","map":{"version":3,"names":["React","useState","useEffect","View","TouchableOpacity","Text","Dimensions","styles","Header","BinIcon","Blur","RemovalApproval","useIsFocused","ScrollView","GetProfile","LinearGradient","ButtonWithPlus","jsx","_jsx","jsxs","_jsxs","screenHeight","get","height","BranchesScreen","_ref","navigation","_useState","_useState2","_slicedToArray","isDeleteBranchPressed","setIsDeleteBranchPressed","_useState3","_useState4","branchNameToRemove","setBranchNameToRemove","isFocused","colors","style","flex","children","visibleWhen","onPress","blurEffect","primaryTitle","onGoBackPress","goBack","onAnyPress","onAgreePress","branchToRemoveNow","branchParents","find","branch","name","splice","indexOf","isVisible","text","navigate","paddingBottom","zIndex","top","map","item","index","selectedBranchParent","settingOption","linearGradient","opacity","branchAvatarInList","backgroundColor","color","fontSize","emoji","branchTitleContainer","numberOfLines","branchTitleInList","binIconContainer","binIcon"],"sources":["C:/Users/T480/source/repos/Messenger/Messenger/Pages/Profiles/SemiComponents/Screens/BranchesScreen/BranchesScreen.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { View, TouchableOpacity, Text, Dimensions } from \"react-native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport { styles } from \"./Styles\";\r\nimport Header from \"../../GeneralComponents/Header\";\r\nimport BinIcon from \"../MainScreen/Icons/BinIcon\";\r\nimport Blur from \"../../GeneralComponents/Blur\";\r\nimport RemovalApproval from \"../../GeneralComponents/RemovalApproval\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\nimport { GetProfile } from \"../../DatabaseSimulation/DBFunctions\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport ButtonWithPlus from \"../../GeneralComponents/ButtonWithPlus\";\r\n\r\nconst screenHeight = Dimensions.get(\"screen\").height;\r\n\r\ntype BranchesScreenProps = {\r\n  navigation: StackNavigationProp<{}>;\r\n};\r\n\r\nconst BranchesScreen: React.FC<BranchesScreenProps> = ({ navigation }) => {\r\n  const [isDeleteBranchPressed, setIsDeleteBranchPressed] = useState(false);\r\n  const [branchNameToRemove, setBranchNameToRemove] = useState(\"\");\r\n\r\n  const isFocused = useIsFocused();\r\n\r\n  useEffect(() => {}, [isFocused]);\r\n\r\n  return (\r\n    <LinearGradient\r\n      colors={[\"#cf9b95\", \"#c98bb8\", \"#c37adb\"]}\r\n      style={{ flex: 1 }}\r\n    >\r\n      <Blur\r\n        visibleWhen={isDeleteBranchPressed}\r\n        onPress={() => {\r\n          setIsDeleteBranchPressed(false);\r\n        }}\r\n        style={styles.blurEffect}\r\n      />\r\n      <Header\r\n        primaryTitle=\"Branches\"\r\n        onGoBackPress={() => {\r\n          navigation.goBack();\r\n        }}\r\n      />\r\n      <RemovalApproval\r\n        onAnyPress={() => {\r\n          setIsDeleteBranchPressed(false);\r\n        }}\r\n        onAgreePress={() => {\r\n          const branchToRemoveNow = GetProfile().branchParents.find(\r\n            (branch) => branch.name === branchNameToRemove\r\n          );\r\n\r\n          if (branchToRemoveNow) {\r\n            GetProfile().branchParents.splice(\r\n              GetProfile().branchParents.indexOf(branchToRemoveNow),\r\n              1\r\n            );\r\n          }\r\n\r\n          setBranchNameToRemove(\"\");\r\n        }}\r\n        isVisible={isDeleteBranchPressed}\r\n        text={\"Do you really want to delete \" + branchNameToRemove + \"?\"}\r\n      />\r\n\r\n      <ScrollView>\r\n        <ButtonWithPlus\r\n          text=\"Branch\"\r\n          onPress={() => {\r\n            navigation.navigate(\"NewBranchScreen\" as never);\r\n          }}\r\n        />\r\n\r\n        <View\r\n          style={{\r\n            paddingBottom: 0.09 * screenHeight,\r\n            zIndex: 0,\r\n            top: 0.04 * screenHeight,\r\n          }}\r\n        >\r\n          {GetProfile().branchParents.map((item, index) => {\r\n            return (\r\n              <View key={index}>\r\n                <View\r\n                  style={{\r\n                    height: 0.005 * screenHeight,\r\n                  }}\r\n                />\r\n                <TouchableOpacity\r\n                  onPress={() => {\r\n                    GetProfile().selectedBranchParent = item;\r\n                    navigation.navigate(\"ChangeBranchParentScreen\" as never);\r\n                  }}\r\n                  style={[styles.settingOption, { top: 0 }]}\r\n                >\r\n                  <LinearGradient\r\n                    colors={[\"#cf9b95\", \"#c98bb8\", \"#c37adb\"]}\r\n                    style={[styles.linearGradient, { opacity: 0.7 }]}\r\n                  />\r\n                  <View\r\n                    style={[\r\n                      styles.branchAvatarInList,\r\n                      {\r\n                        backgroundColor: item.color,\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Text style={{ fontSize: 20 }}>{item.emoji}</Text>\r\n                  </View>\r\n\r\n                  <View style={styles.branchTitleContainer}>\r\n                    <Text numberOfLines={1} style={styles.branchTitleInList}>\r\n                      {item.name}\r\n                    </Text>\r\n                  </View>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => {\r\n                      setIsDeleteBranchPressed(true);\r\n                      setBranchNameToRemove(item.name);\r\n                    }}\r\n                    style={styles.binIconContainer}\r\n                  >\r\n                    <BinIcon style={styles.binIcon} />\r\n                  </TouchableOpacity>\r\n                </TouchableOpacity>\r\n              </View>\r\n            );\r\n          })}\r\n        </View>\r\n      </ScrollView>\r\n    </LinearGradient>\r\n  );\r\n};\r\n\r\nexport default BranchesScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}