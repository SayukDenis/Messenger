{"ast":null,"code":"'use strict';\n\nvar warnedKeys = {};\nfunction warnOnce(key, message) {\n  if (warnedKeys[key]) {\n    return;\n  }\n  console.warn(message);\n  warnedKeys[key] = true;\n}\nmodule.exports = warnOnce;","map":{"version":3,"names":["warnedKeys","warnOnce","key","message","console","warn","module","exports"],"sources":["D:/project/try1/Messenger/Messenger/node_modules/react-native/Libraries/Utilities/warnOnce.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict\r\n */\r\n\r\n'use strict';\r\n\r\nconst warnedKeys: {[string]: boolean, ...} = {};\r\n\r\n/**\r\n * A simple function that prints a warning message once per session.\r\n *\r\n * @param {string} key - The key used to ensure the message is printed once.\r\n *                       This should be unique to the callsite.\r\n * @param {string} message - The message to print\r\n */\r\nfunction warnOnce(key: string, message: string) {\r\n  if (warnedKeys[key]) {\r\n    return;\r\n  }\r\n\r\n  console.warn(message);\r\n\r\n  warnedKeys[key] = true;\r\n}\r\n\r\nmodule.exports = warnOnce;\r\n"],"mappings":"AAUA,YAAY;;AAEZ,IAAMA,UAAoC,GAAG,CAAC,CAAC;AAS/C,SAASC,QAAQA,CAACC,GAAW,EAAEC,OAAe,EAAE;EAC9C,IAAIH,UAAU,CAACE,GAAG,CAAC,EAAE;IACnB;EACF;EAEAE,OAAO,CAACC,IAAI,CAACF,OAAO,CAAC;EAErBH,UAAU,CAACE,GAAG,CAAC,GAAG,IAAI;AACxB;AAEAI,MAAM,CAACC,OAAO,GAAGN,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}