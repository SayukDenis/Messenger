{"ast":null,"code":"import React from \"react\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { connect } from \"react-redux\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport SelectForSwipeableSvg from \"../../SVG/SelectForSwipeableSvg\";\nimport { screenHeight, screenWidth } from \"../../../Constants/ConstantsForChatlist\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SelectForLeftChatContainer = function SelectForLeftChatContainer(_ref) {\n  var procentOfSwipe = _ref.procentOfSwipe,\n    scaleForNotRender = _ref.scaleForNotRender;\n  return _jsxs(Animated.View, {\n    style: {\n      position: \"absolute\",\n      overflow: \"hidden\",\n      width: screenWidth * 0.2 * scaleForNotRender.__getValue(),\n      height: screenHeight * 0.08,\n      justifyContent: \"flex-start\",\n      direction: \"rtl\"\n    },\n    children: [_jsx(LinearGradient, {\n      colors: [\"rgba(46, 117, 255, 1)\", \"rgba(46, 117, 255, 0.1)\"],\n      start: {\n        x: 1 - 0.2,\n        y: -2 * procentOfSwipe\n      },\n      end: {\n        x: 1,\n        y: 1.2 * procentOfSwipe\n      },\n      style: {\n        position: \"absolute\",\n        width: screenWidth,\n        height: screenHeight * 0.08\n      }\n    }), _jsx(Animated.View, {\n      style: {\n        width: screenWidth * 0.2,\n        height: screenHeight * 0.08,\n        justifyContent: \"center\",\n        position: \"absolute\"\n      },\n      children: _jsx(Animated.View, {\n        style: {\n          justifyContent: \"center\",\n          flexDirection: \"row-reverse\"\n        },\n        children: _jsxs(Animated.View, {\n          style: {\n            justifyContent: \"center\"\n          },\n          children: [_jsx(Animated.View, {\n            style: {\n              flexDirection: \"row\",\n              justifyContent: \"center\"\n            },\n            children: _jsx(SelectForSwipeableSvg, {\n              width: screenWidth * 0.085,\n              height: screenHeight * 0.05,\n              color: \"white\"\n            })\n          }), _jsx(Animated.Text, {\n            style: {\n              color: \"white\",\n              alignSelf: \"center\"\n            },\n            children: \"Select\"\n          })]\n        })\n      })\n    })]\n  });\n};\nexport default connect(null)(SelectForLeftChatContainer);","map":{"version":3,"names":["React","Animated","connect","LinearGradient","SelectForSwipeableSvg","screenHeight","screenWidth","jsx","_jsx","jsxs","_jsxs","SelectForLeftChatContainer","_ref","procentOfSwipe","scaleForNotRender","View","style","position","overflow","width","__getValue","height","justifyContent","direction","children","colors","start","x","y","end","flexDirection","color","Text","alignSelf"],"sources":["C:/Users/Admin/Project/Messenger/Messenger/Pages/ChatList/Components/List of folders containers/CompontentsForChatListContainer/SelectForLeftChatContainer.tsx"],"sourcesContent":["// SelectForLeftChatContainer.tsx\r\nimport React from \"react\";\r\nimport { Animated } from \"react-native\";\r\nimport { connect } from \"react-redux\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport SelectForSwipeableSvg from \"../../SVG/SelectForSwipeableSvg\";\r\nimport { screenHeight, screenWidth } from \"../../../Constants/ConstantsForChatlist\";\r\n\r\ninterface SelectForLeftChatContainerProps {\r\n  procentOfSwipe: number;\r\n  scaleForNotRender: any;\r\n}\r\n\r\nconst SelectForLeftChatContainer: React.FC<SelectForLeftChatContainerProps> = ({\r\n  procentOfSwipe,\r\n  scaleForNotRender,\r\n}) => {\r\n  return (\r\n    <Animated.View\r\n      style={{\r\n        position: \"absolute\",\r\n        overflow: \"hidden\",\r\n        width: screenWidth * 0.2 * scaleForNotRender.__getValue(),\r\n        height: screenHeight * 0.08,\r\n        justifyContent: \"flex-start\",\r\n        direction: \"rtl\",\r\n      }}\r\n    >\r\n      <LinearGradient\r\n        colors={[\"rgba(46, 117, 255, 1)\", \"rgba(46, 117, 255, 0.1)\"]}\r\n        start={{\r\n          x: 1 - 0.2,\r\n          y: -2 * procentOfSwipe,\r\n        }}\r\n        end={{\r\n          x: 1,\r\n          y: 1.2 * procentOfSwipe,\r\n        }}\r\n        style={{\r\n          position: \"absolute\",\r\n          width: screenWidth,\r\n          height: screenHeight * 0.08,\r\n        }}\r\n      />\r\n      <Animated.View\r\n        style={{\r\n          width: screenWidth * 0.2,\r\n          height: screenHeight * 0.08,\r\n          justifyContent: \"center\",\r\n          position: \"absolute\",\r\n        }}\r\n      >\r\n        <Animated.View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            flexDirection: \"row-reverse\",\r\n          }}\r\n        >\r\n          <Animated.View\r\n            style={{\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Animated.View\r\n              style={{\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <SelectForSwipeableSvg\r\n                width={screenWidth * 0.085}\r\n                height={screenHeight * 0.05}\r\n                color=\"white\"\r\n              />\r\n            </Animated.View>\r\n            <Animated.Text\r\n              style={{\r\n                color: \"white\",\r\n                alignSelf: \"center\",\r\n              }}\r\n            >\r\n              Select\r\n            </Animated.Text>\r\n          </Animated.View>\r\n        </Animated.View>\r\n      </Animated.View>\r\n    </Animated.View>\r\n  );\r\n};\r\n\r\nexport default connect(null)(SelectForLeftChatContainer);\r\n"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,QAAA;AAE1B,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,cAAc,QAAQ,sBAAsB;AACrD,OAAOC,qBAAqB;AAC5B,SAASC,YAAY,EAAEC,WAAW;AAAkD,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAOpF,IAAMC,0BAAqE,GAAG,SAAxEA,0BAAqEA,CAAAC,IAAA,EAGrE;EAAA,IAFJC,cAAc,GAAAD,IAAA,CAAdC,cAAc;IACdC,iBAAiB,GAAAF,IAAA,CAAjBE,iBAAiB;EAEjB,OACEJ,KAAA,CAACT,QAAQ,CAACc,IAAI;IACZC,KAAK,EAAE;MACLC,QAAQ,EAAE,UAAU;MACpBC,QAAQ,EAAE,QAAQ;MAClBC,KAAK,EAAEb,WAAW,GAAG,GAAG,GAAGQ,iBAAiB,CAACM,UAAU,CAAC,CAAC;MACzDC,MAAM,EAAEhB,YAAY,GAAG,IAAI;MAC3BiB,cAAc,EAAE,YAAY;MAC5BC,SAAS,EAAE;IACb,CAAE;IAAAC,QAAA,GAEFhB,IAAA,CAACL,cAAc;MACbsB,MAAM,EAAE,CAAC,uBAAuB,EAAE,yBAAyB,CAAE;MAC7DC,KAAK,EAAE;QACLC,CAAC,EAAE,CAAC,GAAG,GAAG;QACVC,CAAC,EAAE,CAAC,CAAC,GAAGf;MACV,CAAE;MACFgB,GAAG,EAAE;QACHF,CAAC,EAAE,CAAC;QACJC,CAAC,EAAE,GAAG,GAAGf;MACX,CAAE;MACFG,KAAK,EAAE;QACLC,QAAQ,EAAE,UAAU;QACpBE,KAAK,EAAEb,WAAW;QAClBe,MAAM,EAAEhB,YAAY,GAAG;MACzB;IAAE,CACH,CAAC,EACFG,IAAA,CAACP,QAAQ,CAACc,IAAI;MACZC,KAAK,EAAE;QACLG,KAAK,EAAEb,WAAW,GAAG,GAAG;QACxBe,MAAM,EAAEhB,YAAY,GAAG,IAAI;QAC3BiB,cAAc,EAAE,QAAQ;QACxBL,QAAQ,EAAE;MACZ,CAAE;MAAAO,QAAA,EAEFhB,IAAA,CAACP,QAAQ,CAACc,IAAI;QACZC,KAAK,EAAE;UACLM,cAAc,EAAE,QAAQ;UACxBQ,aAAa,EAAE;QACjB,CAAE;QAAAN,QAAA,EAEFd,KAAA,CAACT,QAAQ,CAACc,IAAI;UACZC,KAAK,EAAE;YACLM,cAAc,EAAE;UAClB,CAAE;UAAAE,QAAA,GAEFhB,IAAA,CAACP,QAAQ,CAACc,IAAI;YACZC,KAAK,EAAE;cACLc,aAAa,EAAE,KAAK;cACpBR,cAAc,EAAE;YAClB,CAAE;YAAAE,QAAA,EAEFhB,IAAA,CAACJ,qBAAqB;cACpBe,KAAK,EAAEb,WAAW,GAAG,KAAM;cAC3Be,MAAM,EAAEhB,YAAY,GAAG,IAAK;cAC5B0B,KAAK,EAAC;YAAO,CACd;UAAC,CACW,CAAC,EAChBvB,IAAA,CAACP,QAAQ,CAAC+B,IAAI;YACZhB,KAAK,EAAE;cACLe,KAAK,EAAE,OAAO;cACdE,SAAS,EAAE;YACb,CAAE;YAAAT,QAAA,EACH;UAED,CAAe,CAAC;QAAA,CACH;MAAC,CACH;IAAC,CACH,CAAC;EAAA,CACH,CAAC;AAEpB,CAAC;AAED,eAAetB,OAAO,CAAC,IAAI,CAAC,CAACS,0BAA0B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}