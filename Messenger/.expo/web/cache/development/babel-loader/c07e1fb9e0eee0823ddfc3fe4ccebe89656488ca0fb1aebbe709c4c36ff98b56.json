{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { footerstyles } from \"../../Styles/FooterStyle\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar FolderContainer = function FolderContainer(_ref) {\n  var containerStyle = _ref.containerStyle,\n    textStyle = _ref.textStyle,\n    folder = _ref.folder,\n    isSelected = _ref.isSelected,\n    onPress = _ref.onPress,\n    width = _ref.width;\n  return _jsx(_Fragment, {\n    children: _jsx(TouchableOpacity, {\n      activeOpacity: 1,\n      onPress: onPress,\n      onLongPress: handleLongPress,\n      children: _jsx(View, {\n        style: containerStyle,\n        children: _jsx(Text, {\n          style: isSelected ? footerstyles.selectedText : textStyle,\n          children: folder.name\n        })\n      })\n    })\n  });\n};\nexport default FolderContainer;","map":{"version":3,"names":["React","View","Text","TouchableOpacity","footerstyles","jsx","_jsx","Fragment","_Fragment","FolderContainer","_ref","containerStyle","textStyle","folder","isSelected","onPress","width","children","activeOpacity","onLongPress","handleLongPress","style","selectedText","name"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/ChatList/Components/Footer containers/FolderContainer.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleProp,\r\n  ViewStyle,\r\n  TextStyle,\r\n  TouchableOpacity,\r\n  GestureResponderEvent,\r\n} from \"react-native\";\r\nimport { footerstyles } from \"../../Styles/FooterStyle\";\r\nimport Folder from \"../../1HelpFullFolder/Folder\";\r\nimport FolderModalWindow from \"./FolderModalWindow\";\r\ninterface FolderProps {\r\n  containerStyle?: StyleProp<ViewStyle>; // Стиль для контейнера\r\n  textStyle?: StyleProp<TextStyle>; // Стиль для тексту\r\n  folder: Folder;\r\n  isSelected: boolean; // Додаємо флаг для визначення, чи обрана папка\r\n  onPress: () => void;\r\n  handleLongPress:()=>void;\r\n  width: number; // Додаємо функцію для обробки натискання\r\n}\r\n\r\nconst FolderContainer: React.FC<FolderProps> = ({\r\n  containerStyle,\r\n  textStyle,\r\n  folder,\r\n  isSelected,\r\n  onPress,\r\n  width,\r\n}) => {\r\n  return (\r\n    <>\r\n      \r\n      <TouchableOpacity\r\n        activeOpacity={1}\r\n        onPress={onPress}\r\n        onLongPress={handleLongPress}\r\n      >\r\n        <View style={containerStyle}>\r\n          <Text style={isSelected ? footerstyles.selectedText : textStyle}>\r\n            {folder.name}\r\n          </Text>\r\n        </View>\r\n      </TouchableOpacity>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FolderContainer;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAoB,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAUxC,SAASC,YAAY;AAAmC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAaxD,IAAMC,eAAsC,GAAG,SAAzCA,eAAsCA,CAAAC,IAAA,EAOtC;EAAA,IANJC,cAAc,GAAAD,IAAA,CAAdC,cAAc;IACdC,SAAS,GAAAF,IAAA,CAATE,SAAS;IACTC,MAAM,GAAAH,IAAA,CAANG,MAAM;IACNC,UAAU,GAAAJ,IAAA,CAAVI,UAAU;IACVC,OAAO,GAAAL,IAAA,CAAPK,OAAO;IACPC,KAAK,GAAAN,IAAA,CAALM,KAAK;EAEL,OACEV,IAAA,CAAAE,SAAA;IAAAS,QAAA,EAEEX,IAAA,CAACH,gBAAgB;MACfe,aAAa,EAAE,CAAE;MACjBH,OAAO,EAAEA,OAAQ;MACjBI,WAAW,EAAEC,eAAgB;MAAAH,QAAA,EAE7BX,IAAA,CAACL,IAAI;QAACoB,KAAK,EAAEV,cAAe;QAAAM,QAAA,EAC1BX,IAAA,CAACJ,IAAI;UAACmB,KAAK,EAAEP,UAAU,GAAGV,YAAY,CAACkB,YAAY,GAAGV,SAAU;UAAAK,QAAA,EAC7DJ,MAAM,CAACU;QAAI,CACR;MAAC,CACH;IAAC,CACS;EAAC,CACnB,CAAC;AAEP,CAAC;AAED,eAAed,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}