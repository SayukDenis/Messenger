{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { styles } from \"./../MessageViewsAndTypes/Styles/DefaultTextType\";\nimport React from 'react';\nimport { wrapText } from \"./../MessageViewsAndTypes/HelperFunctions/wrapText\";\nimport { screenHeight, screenWidth } from \"../../../ChatList/Constants/ConstantsForChatlist\";\nimport { CHARS_PER_LINE } from \"../DialogueConstants\";\nimport MessageItemStatusMessageNotReviewed from \"../SVG/MessageItemStatusMessageNotReviewed\";\nimport MessageItemStatusMessageReviewed from \"../SVG/MessageItemStatusMessageReviewed\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DefaultTextDummyMessage = function DefaultTextDummyMessage(_ref) {\n  var _userMessageLastWatch;\n  var message = _ref.message,\n    isUser = _ref.isUser,\n    height = _ref.height,\n    userMessageLastWatched = _ref.userMessageLastWatched;\n  if (!message) return null;\n  return _jsxs(View, {\n    style: [styles.messageBlockContainer, isUser && {\n      justifyContent: 'flex-end'\n    }],\n    children: [_jsx(View, {\n      style: [styles.messageContainer, isUser && {\n        marginRight: 15\n      }],\n      children: _jsxs(View, {\n        style: [isUser ? styles.messageTypeTextUser : styles.messageTypeTextNotUser, message.content.length > CHARS_PER_LINE && styles.longMessage, {\n          overflow: 'hidden'\n        }],\n        children: [_jsx(View, {\n          style: {\n            position: 'absolute',\n            height: screenHeight,\n            width: screenWidth,\n            zIndex: -1,\n            opacity: 1,\n            backgroundColor: isUser ? '#E09EFF' : '#fff'\n          }\n        }), _jsx(Text, {\n          style: {\n            height: Math.floor(height - 11) - (message.content.length > CHARS_PER_LINE ? 9.3 : 0)\n          },\n          children: wrapText(message.content, CHARS_PER_LINE)\n        }), _jsxs(Text, {\n          style: message.content.length > CHARS_PER_LINE ? [styles.messageTimeStamp, styles.longMessageTimeStamp] : styles.messageTimeStamp,\n          children: [message.isEdited ? 'edited ' : '', message.sendingTime.getHours().toString().padStart(2, '0'), \":\", message.sendingTime.getMinutes().toString().padStart(2, '0')]\n        })]\n      })\n    }), isUser && _jsx(View, {\n      style: {\n        position: 'absolute',\n        right: 0,\n        bottom: 0,\n        marginRight: 2.5\n      },\n      children: message.messageId <= (userMessageLastWatched == null ? void 0 : (_userMessageLastWatch = userMessageLastWatched.value) == null ? void 0 : _userMessageLastWatch.messageId) ? _jsx(MessageItemStatusMessageReviewed, {}) : _jsx(MessageItemStatusMessageNotReviewed, {})\n    })]\n  });\n};\nexport default DefaultTextDummyMessage;","map":{"version":3,"names":["styles","React","wrapText","screenHeight","screenWidth","CHARS_PER_LINE","MessageItemStatusMessageNotReviewed","MessageItemStatusMessageReviewed","jsx","_jsx","jsxs","_jsxs","DefaultTextDummyMessage","_ref","_userMessageLastWatch","message","isUser","height","userMessageLastWatched","View","style","messageBlockContainer","justifyContent","children","messageContainer","marginRight","messageTypeTextUser","messageTypeTextNotUser","content","length","longMessage","overflow","position","width","zIndex","opacity","backgroundColor","Text","Math","floor","messageTimeStamp","longMessageTimeStamp","isEdited","sendingTime","getHours","toString","padStart","getMinutes","right","bottom","messageId","value"],"sources":["D:/project/1project/Messenger/Messenger/Pages/Chats/Dialogue/MessageMenuDummyMessages/DefaultTextDummyMessage.tsx"],"sourcesContent":["import { View, Text } from 'react-native';\r\nimport { styles } from './../MessageViewsAndTypes/Styles/DefaultTextType';\r\nimport React from 'react';\r\nimport { wrapText } from './../MessageViewsAndTypes/HelperFunctions/wrapText';\r\nimport { screenHeight, screenWidth } from '../../../ChatList/Constants/ConstantsForChatlist';\r\nimport { DefaultTextMessageProps } from './Interfaces/IDefaultText';\r\nimport { CHARS_PER_LINE } from '../DialogueConstants';\r\nimport MessageItemStatusMessageNotReviewed from '../SVG/MessageItemStatusMessageNotReviewed';\r\nimport MessageItemStatusMessageReviewed from '../SVG/MessageItemStatusMessageReviewed';\r\nconst DefaultTextDummyMessage = ({ message, isUser, height, userMessageLastWatched}:DefaultTextMessageProps) => {\r\n  if(!message) return null;\r\n  return (\r\n    <View style={[styles.messageBlockContainer, isUser&&{ justifyContent:'flex-end' }]}>\r\n      <View style={[styles.messageContainer, isUser&&{ marginRight: 15 }]}>\r\n        <View \r\n          style={[isUser?styles.messageTypeTextUser:styles.messageTypeTextNotUser, message.content.length>CHARS_PER_LINE&&styles.longMessage, { overflow: 'hidden' }]}\r\n        >\r\n          <View style={{ position: 'absolute', height: screenHeight, width: screenWidth, zIndex: -1, opacity: 1, backgroundColor:isUser?'#E09EFF':'#fff' }} /> \r\n          <Text style={{ height: Math.floor(height-11)-(message.content.length>CHARS_PER_LINE?9.3:0) }}>{wrapText(message.content, CHARS_PER_LINE)}</Text>\r\n          <Text style={message.content.length>CHARS_PER_LINE?[styles.messageTimeStamp, styles.longMessageTimeStamp]:styles.messageTimeStamp}>\r\n            {message.isEdited?'edited ':''}\r\n            {message.sendingTime.getHours().toString().padStart(2, '0')}:\r\n            {message.sendingTime.getMinutes().toString().padStart(2, '0')}\r\n          </Text>\r\n        </View> \r\n      </View>\r\n      { isUser && \r\n      <View style={{ position: 'absolute', right: 0, bottom: 0 ,marginRight: 2.5 }}>\r\n        { message.messageId!<=userMessageLastWatched?.value?.messageId!?<MessageItemStatusMessageReviewed />:<MessageItemStatusMessageNotReviewed /> }\r\n      </View> }\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default DefaultTextDummyMessage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}