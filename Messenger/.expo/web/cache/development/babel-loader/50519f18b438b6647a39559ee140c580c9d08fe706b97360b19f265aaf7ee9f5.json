{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { setBooleanForTouchOnHamburgerInHeaderChatList, setCurrentPositionForChatList, setEnumForChatListBlurs, setFolderSelectedArray, setSelectedFolderForChatList } from \"../../../ReducersAndActions/Actions/ChatListActions/ChatListActions\";\nimport ListOfFolder from \"./ListOfFolder\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { setAnimationStateForFolderChatList } from \"../../../ReducersAndActions/Actions/ChatListActions/ChatListActions\";\nimport Footer from \"./Footer\";\nimport ModalWindowFolderState from \"./List of folders containers/ModalWindowFolderState\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { booleanForLogging } from \"../ChatList\";\nimport BlursForChatList from \"./Headers containers/BlursForChatList\";\nimport { EnumForChatListBlurs } from \"./Enums/EnumsForChatListBlurs\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  screenWidth = _Dimensions$get.width,\n  screenHeight = _Dimensions$get.height;\nvar Main = function Main(_ref) {\n  var navigation = _ref.navigation;\n  var selfProfile = useSelector(function (state) {\n    var self = state.selfProfileUser;\n    return self;\n  });\n  var currentTab = useSelector(function (state) {\n    var Tab = state.chatListReducer.currentTab.currentTab;\n    return Tab;\n  });\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedLongPressFolder = _useState2[0],\n    setSelectedLongPressFolder = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    startTime = _useState4[0],\n    setStartTime = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    endDragOfChatList = _useState6[0],\n    setEndDragOfChatList = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    endTime = _useState8[0],\n    setEndTime = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isVisibleForModalFolder = _useState10[0],\n    setisVisibleForModalFolder = _useState10[1];\n  var _useState11 = useState(0),\n    _useState12 = _slicedToArray(_useState11, 2),\n    positionX = _useState12[0],\n    setPositionX = _useState12[1];\n  var _useState13 = useState(0),\n    _useState14 = _slicedToArray(_useState13, 2),\n    positionXInContainer = _useState14[0],\n    setPositionXInContainer = _useState14[1];\n  var dispatch = useDispatch();\n  var animationState = useSelector(function (state) {\n    return state.chatListReducer.animationForChatListFolder.animationForChatListFolder;\n  });\n  var folderSelectedArray = useSelector(function (state) {\n    return state.chatListReducer.folderSelectedArray.folderSelectedArray;\n  });\n  var isTouchableForHeader = useSelector(function (state) {\n    return state.chatListReducer.booleanForHamburgerTouchable.isTouchable;\n  });\n  var selectFolder = useSelector(function (state) {\n    return state.chatListReducer.selectedFolder.selectedFolder;\n  });\n  var scrollViewRef = useRef(null);\n  var scrollViewRefFooter = useRef(null);\n  var widths = useRef(selfProfile.tabs[currentTab].folders.map(function () {\n    return screenWidth * 0.1831;\n  }));\n  var positionsOfFolder = useRef(selfProfile.tabs[currentTab].folders.map(function () {\n    return 0;\n  }));\n  var handleFolderPress = useRef(function (index) {\n    setEndDragOfChatList(false);\n    NewFolderSelect(index);\n    scrollToFolder(index);\n  });\n  var handleHorizontalScroll = function handleHorizontalScroll(event) {\n    var newHorizontalPosition = event.nativeEvent.contentOffset.x;\n    if (newHorizontalPosition < 0) {\n      newHorizontalPosition = 0;\n    } else if (newHorizontalPosition > screenWidth * (selfProfile.tabs[currentTab].folders.length - 1)) {\n      newHorizontalPosition = screenWidth * (selfProfile.tabs[currentTab].folders.length - 1);\n    }\n    dispatch(setCurrentPositionForChatList(newHorizontalPosition));\n    var newFolder = Math.round(newHorizontalPosition / screenWidth);\n    scrollToPosition(newHorizontalPosition);\n    if (newFolder != selectFolder) {\n      if (!endDragOfChatList) {\n        return;\n      }\n      NewFolderSelect(newFolder);\n    }\n  };\n  useEffect(function () {\n    var _scrollViewRef$curren;\n    (_scrollViewRef$curren = scrollViewRef.current) == null ? void 0 : _scrollViewRef$curren.scrollToOffset({\n      offset: 0,\n      animated: false\n    });\n  }, [currentTab]);\n  var NewFolderSelect = function NewFolderSelect(newFolder) {\n    dispatch(setSelectedFolderForChatList(newFolder));\n    var bufferFolderSelectedArray = _toConsumableArray(folderSelectedArray);\n    bufferFolderSelectedArray[selectFolder] = false;\n    bufferFolderSelectedArray[newFolder] = true;\n    dispatch(setFolderSelectedArray(bufferFolderSelectedArray));\n  };\n  var scrollToFolder = function () {\n    var _ref2 = _asyncToGenerator(function* (folderId) {\n      var _scrollViewRef$curren2;\n      yield (_scrollViewRef$curren2 = scrollViewRef.current) == null ? void 0 : _scrollViewRef$curren2.scrollToIndex({\n        index: folderId,\n        animated: true\n      });\n    });\n    return function scrollToFolder(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var scrollToPosition = function scrollToPosition(currentPosition) {\n    var _scrollViewRefFooter$;\n    (_scrollViewRefFooter$ = scrollViewRefFooter.current) == null ? void 0 : _scrollViewRefFooter$.scrollTo({\n      x: -(screenWidth * 0.92) / 2 + widths.current[Math.round(currentPosition / screenWidth)] / 2 + ((currentPosition - screenWidth * Math.round(currentPosition / screenWidth)) % screenWidth / screenWidth * widths.current[Math.round(currentPosition / screenWidth)] + positionsOfFolder.current[Math.round(currentPosition / screenWidth)]),\n      animated: false\n    });\n  };\n  var handleLayout = useRef(function (event, index) {\n    var width = event.nativeEvent.layout.width;\n    var position = event.nativeEvent.layout.x;\n    var updatePosition = _toConsumableArray(positionsOfFolder.current);\n    updatePosition[index] = position;\n    positionsOfFolder.current = updatePosition;\n    var updatedWidths = _toConsumableArray(widths.current);\n    updatedWidths[index] = width;\n    widths.current = updatedWidths;\n  });\n  useEffect(function () {\n    if (booleanForLogging) {\n      console.log(\"RERENDER MAIN\");\n    }\n  }, [booleanForLogging]);\n  var handleLongPress = useRef(function (e, index) {\n    setSelectedLongPressFolder(index);\n    var target = e.nativeEvent;\n    setPositionX(target.pageX);\n    setPositionXInContainer(target.locationX);\n    if (target.pageX - target.locationX + widths.current[index] > screenWidth * 0.98) {\n      var _scrollViewRefFooter$2;\n      (_scrollViewRefFooter$2 = scrollViewRefFooter.current) == null ? void 0 : _scrollViewRefFooter$2.scrollTo({\n        x: positionsOfFolder.current[index] - screenWidth * 0.92 + widths.current[index],\n        animated: false\n      });\n      setPositionX(screenWidth * 0.964 - widths.current[index]);\n      setPositionXInContainer(0);\n    } else if (target.pageX - target.locationX < screenWidth * 0.04) {\n      var _scrollViewRefFooter$3;\n      (_scrollViewRefFooter$3 = scrollViewRefFooter.current) == null ? void 0 : _scrollViewRefFooter$3.scrollTo({\n        x: positionsOfFolder.current[index],\n        animated: false\n      });\n      setPositionX(screenWidth * 0.044);\n      setPositionXInContainer(0);\n    }\n    setisVisibleForModalFolder(true);\n    dispatch(setAnimationStateForFolderChatList(true));\n  });\n  var handlePress = function handlePress() {\n    setStartTime(Date.now());\n  };\n  function handlePressOut() {\n    setEndTime(Date.now());\n    var duration = startTime - endTime;\n    if (duration < 16) {\n      dispatch(setEnumForChatListBlurs(EnumForChatListBlurs.None));\n      setisVisibleForModalFolder(false);\n      return;\n    }\n    setStartTime(Date.now());\n  }\n  var setAnimation = function setAnimation() {\n    dispatch(setAnimationStateForFolderChatList(false));\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(ModalWindowFolderState, {\n      isVisibleForModalFolder: isVisibleForModalFolder,\n      animationState: animationState,\n      selectedLongPressFolder: selectedLongPressFolder,\n      selectedFolder: selectFolder,\n      positionX: positionX,\n      positionXInContainer: positionXInContainer,\n      widths: widths,\n      setAnimation: setAnimation,\n      handlePress: handlePress,\n      handlePressOut: handlePressOut\n    }), _jsx(BlursForChatList, {\n      handlePress: handlePress,\n      handlePressOut: handlePressOut\n    }), _jsx(FlatList, {\n      data: selfProfile.tabs[currentTab].folders,\n      horizontal: true,\n      pagingEnabled: true,\n      ref: scrollViewRef,\n      showsHorizontalScrollIndicator: false,\n      onMomentumScrollEnd: function onMomentumScrollEnd() {\n        setEndDragOfChatList(true);\n      },\n      scrollEventThrottle: 1,\n      nestedScrollEnabled: true,\n      keyExtractor: function keyExtractor(item, index) {\n        return index.toString();\n      },\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item,\n          index = _ref3.index;\n        return _jsx(ListOfFolder, {\n          currentFolder: index,\n          navigation: navigation\n        }, index);\n      },\n      onScroll: handleHorizontalScroll,\n      windowSize: 10,\n      initialNumToRender: 1\n    }), _jsx(Footer, {\n      isTouchableForHeader: isTouchableForHeader,\n      scrollViewRefFooter: scrollViewRefFooter,\n      handleLayout: handleLayout,\n      isVisibleForModalFolder: isVisibleForModalFolder,\n      handleFolderPress: handleFolderPress,\n      handleLongPress: handleLongPress,\n      positionsOfFolder: positionsOfFolder,\n      widths: widths\n    }), isTouchableForHeader ? _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return dispatch(setBooleanForTouchOnHamburgerInHeaderChatList(!isTouchableForHeader));\n      },\n      style: {\n        height: screenHeight,\n        width: screenWidth,\n        position: \"absolute\",\n        zIndex: 4\n      }\n    }) : null]\n  });\n};\nexport default connect(null)(Main);","map":{"version":3,"names":["React","useRef","useState","useEffect","Dimensions","TouchableOpacity","setBooleanForTouchOnHamburgerInHeaderChatList","setCurrentPositionForChatList","setEnumForChatListBlurs","setFolderSelectedArray","setSelectedFolderForChatList","ListOfFolder","connect","useDispatch","useSelector","setAnimationStateForFolderChatList","Footer","ModalWindowFolderState","FlatList","booleanForLogging","BlursForChatList","EnumForChatListBlurs","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","_Dimensions$get","get","screenWidth","width","screenHeight","height","Main","_ref","navigation","selfProfile","state","self","selfProfileUser","currentTab","Tab","chatListReducer","_useState","_useState2","_slicedToArray","selectedLongPressFolder","setSelectedLongPressFolder","_useState3","_useState4","startTime","setStartTime","_useState5","_useState6","endDragOfChatList","setEndDragOfChatList","_useState7","_useState8","endTime","setEndTime","_useState9","_useState10","isVisibleForModalFolder","setisVisibleForModalFolder","_useState11","_useState12","positionX","setPositionX","_useState13","_useState14","positionXInContainer","setPositionXInContainer","dispatch","animationState","animationForChatListFolder","folderSelectedArray","isTouchableForHeader","booleanForHamburgerTouchable","isTouchable","selectFolder","selectedFolder","scrollViewRef","scrollViewRefFooter","widths","tabs","folders","map","positionsOfFolder","handleFolderPress","index","NewFolderSelect","scrollToFolder","handleHorizontalScroll","event","newHorizontalPosition","nativeEvent","contentOffset","x","length","newFolder","Math","round","scrollToPosition","_scrollViewRef$curren","current","scrollToOffset","offset","animated","bufferFolderSelectedArray","_toConsumableArray","_ref2","_asyncToGenerator","folderId","_scrollViewRef$curren2","scrollToIndex","_x","apply","arguments","currentPosition","_scrollViewRefFooter$","scrollTo","handleLayout","layout","position","updatePosition","updatedWidths","console","log","handleLongPress","e","target","pageX","locationX","_scrollViewRefFooter$2","_scrollViewRefFooter$3","handlePress","Date","now","handlePressOut","duration","None","setAnimation","children","data","horizontal","pagingEnabled","ref","showsHorizontalScrollIndicator","onMomentumScrollEnd","scrollEventThrottle","nestedScrollEnabled","keyExtractor","item","toString","renderItem","_ref3","currentFolder","onScroll","windowSize","initialNumToRender","onPress","style","zIndex"],"sources":["D:/project/1project/Messenger/Messenger/Pages/ChatList/Components/Main.tsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport {\r\n  ScrollView,\r\n  Dimensions,\r\n  LayoutChangeEvent,\r\n  GestureResponderEvent,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport {\r\n  setBooleanForTouchOnHamburgerInHeaderChatList,\r\n  setCurrentPositionForChatList,\r\n  setEnumForChatListBlurs,\r\n  setFolderSelectedArray,\r\n  setSelectedFolderForChatList,\r\n} from \"../../../ReducersAndActions/Actions/ChatListActions/ChatListActions\";\r\n\r\nimport ListOfFolder from \"./ListOfFolder\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { setAnimationStateForFolderChatList } from \"../../../ReducersAndActions/Actions/ChatListActions/ChatListActions\";\r\nimport Footer from \"./Footer\";\r\nimport ModalWindowFolderState from \"./List of folders containers/ModalWindowFolderState\";\r\nimport { FlatList } from \"react-native\";\r\nimport SelfProfile from \"../../../dao/Models/SelfProfile\";\r\nimport { booleanForLogging } from \"../ChatList\";\r\nimport BlursForChatList from \"./Headers containers/BlursForChatList\";\r\nimport { EnumForChatListBlurs } from \"./Enums/EnumsForChatListBlurs\";\r\ninterface MainProps {\r\n  navigation:any\r\n}\r\n\r\nconst { width: screenWidth, height: screenHeight } = Dimensions.get(\"window\");\r\n\r\nconst Main: React.FC<MainProps> = ({navigation}) => {\r\n  const selfProfile: SelfProfile = useSelector((state: any) => {\r\n    const self: SelfProfile = state.selfProfileUser;\r\n    return self;\r\n  });\r\n  const currentTab = useSelector((state: any) => {\r\n    let Tab = state.chatListReducer.currentTab.currentTab;\r\n    return Tab;\r\n  });\r\n\r\n  const [selectedLongPressFolder, setSelectedLongPressFolder] =\r\n    useState<number>(0);\r\n  const [startTime, setStartTime] = useState(0);\r\n  const [endDragOfChatList, setEndDragOfChatList] = useState(true);\r\n  const [endTime, setEndTime] = useState(0);\r\n  const [isVisibleForModalFolder, setisVisibleForModalFolder] = useState(false);\r\n  const [positionX, setPositionX] = useState<number>(0);\r\n  const [positionXInContainer, setPositionXInContainer] = useState<number>(0);\r\n  const dispatch = useDispatch();\r\n  const animationState = useSelector((state: any) => {\r\n    return state.chatListReducer.animationForChatListFolder\r\n      .animationForChatListFolder;\r\n  });\r\n  const folderSelectedArray = useSelector((state: any) => {\r\n    return state.chatListReducer.folderSelectedArray.folderSelectedArray;\r\n  });\r\n  const isTouchableForHeader = useSelector((state: any) => {\r\n    // console.log(state.chatListReducer.booleanForHamburgerTouchable.isTouchable)\r\n    return state.chatListReducer.booleanForHamburgerTouchable.isTouchable;\r\n  });\r\n\r\n  const selectFolder = useSelector((state: any) => {\r\n    //console.log(selfProfile.tabs[currentTab].folders[state.chatListReducer.selectedFolder.selectedFolder].folderName)\r\n    return state.chatListReducer.selectedFolder.selectedFolder;\r\n  });\r\n\r\n  const scrollViewRef = useRef<FlatList | null>(null);\r\n  const scrollViewRefFooter = useRef<ScrollView | null>(null);\r\n\r\n  const widths = useRef<number[]>(\r\n    selfProfile.tabs[currentTab].folders.map(() => screenWidth * 0.1831)\r\n  );\r\n\r\n  const positionsOfFolder = useRef<number[]>(\r\n    selfProfile.tabs[currentTab].folders.map(() => 0)\r\n  );\r\n\r\n  const handleFolderPress = useRef((index: number) => {\r\n    setEndDragOfChatList(false);\r\n    NewFolderSelect(index);\r\n    scrollToFolder(index);\r\n  });\r\n\r\n  const handleHorizontalScroll = (event: any) => {\r\n    let newHorizontalPosition = event.nativeEvent.contentOffset.x;\r\n    if (newHorizontalPosition < 0) {\r\n      newHorizontalPosition = 0;\r\n    } else if (\r\n      newHorizontalPosition >\r\n      screenWidth * (selfProfile.tabs[currentTab].folders.length - 1)\r\n    ) {\r\n      newHorizontalPosition =\r\n        screenWidth * (selfProfile.tabs[currentTab].folders.length - 1);\r\n    }\r\n    dispatch(setCurrentPositionForChatList(newHorizontalPosition));\r\n    const newFolder: number = Math.round(newHorizontalPosition / screenWidth);\r\n\r\n    scrollToPosition(newHorizontalPosition);\r\n    if (newFolder != selectFolder) {\r\n      if (!endDragOfChatList) {\r\n        return;\r\n      }\r\n      NewFolderSelect(newFolder);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    scrollViewRef.current?.scrollToOffset({ offset: 0, animated: false });\r\n  }, [currentTab]);\r\n  const NewFolderSelect = (newFolder: number) => {\r\n    dispatch(setSelectedFolderForChatList(newFolder));\r\n    let bufferFolderSelectedArray = [...folderSelectedArray];\r\n    bufferFolderSelectedArray[selectFolder] = false;\r\n    bufferFolderSelectedArray[newFolder] = true;\r\n    dispatch(setFolderSelectedArray(bufferFolderSelectedArray));\r\n  };\r\n  const scrollToFolder = async (folderId: number) => {\r\n    await scrollViewRef.current?.scrollToIndex({\r\n      index: folderId,\r\n      animated: true,\r\n    });\r\n\r\n    //scrollToIconOnTouch(folderId)\r\n  };\r\n  const scrollToPosition = (currentPosition: number) => {\r\n    scrollViewRefFooter.current?.scrollTo({\r\n      x:\r\n        -(screenWidth * 0.92) / 2 +\r\n        widths.current[Math.round(currentPosition / screenWidth)] / 2 +\r\n        ((((currentPosition -\r\n          screenWidth * Math.round(currentPosition / screenWidth)) %\r\n          screenWidth) /\r\n          screenWidth) *\r\n          widths.current[Math.round(currentPosition / screenWidth)] +\r\n          positionsOfFolder.current[Math.round(currentPosition / screenWidth)]),\r\n      animated: false,\r\n    });\r\n  };\r\n\r\n  const handleLayout = useRef((event: LayoutChangeEvent, index: number) => {\r\n    const { width } = event.nativeEvent.layout;\r\n    const position = event.nativeEvent.layout.x;\r\n    const updatePosition = [...positionsOfFolder.current];\r\n    updatePosition[index] = position;\r\n    positionsOfFolder.current = updatePosition;\r\n    const updatedWidths = [...widths.current];\r\n    updatedWidths[index] = width;\r\n    widths.current = updatedWidths;\r\n\r\n  });\r\n  useEffect(() => {\r\n    if (booleanForLogging) {\r\n      console.log(\"RERENDER MAIN\");\r\n    }\r\n  }, [booleanForLogging]);\r\n\r\n  const handleLongPress = useRef((e: GestureResponderEvent, index: number) => {\r\n    setSelectedLongPressFolder(index);\r\n    const target = e.nativeEvent;\r\n    setPositionX(target.pageX);\r\n    setPositionXInContainer(target.locationX);\r\n    if (target.pageX - target.locationX + widths.current[index] > screenWidth * 0.98) {\r\n      scrollViewRefFooter.current?.scrollTo({\r\n        x: positionsOfFolder.current[index] - screenWidth * 0.92 + widths.current[index],\r\n        animated: false,\r\n      });\r\n      setPositionX(screenWidth * 0.964 - widths.current[index]);\r\n      setPositionXInContainer(0);\r\n    } else if (target.pageX - target.locationX < screenWidth * 0.04) {\r\n      scrollViewRefFooter.current?.scrollTo({\r\n        x: positionsOfFolder.current[index],\r\n        animated: false,\r\n      });\r\n      setPositionX(screenWidth * 0.044);\r\n      setPositionXInContainer(0);\r\n    }\r\n    setisVisibleForModalFolder(true);\r\n    dispatch(setAnimationStateForFolderChatList(true));\r\n  });\r\n  const handlePress = () => {\r\n    setStartTime(Date.now());\r\n  };\r\n\r\n  function handlePressOut() {\r\n    setEndTime(Date.now());\r\n    const duration = startTime - endTime;\r\n    if (duration < 16) {\r\n      dispatch(setEnumForChatListBlurs(EnumForChatListBlurs.None));\r\n      setisVisibleForModalFolder(false);\r\n      return;\r\n    }\r\n    setStartTime(Date.now());\r\n  }\r\n\r\n  const setAnimation = () => {\r\n    dispatch(setAnimationStateForFolderChatList(false));\r\n  };\r\n  return (\r\n    <>\r\n      <ModalWindowFolderState\r\n        isVisibleForModalFolder={isVisibleForModalFolder}\r\n        animationState={animationState}\r\n        selectedLongPressFolder={selectedLongPressFolder}\r\n        selectedFolder={selectFolder}\r\n        positionX={positionX}\r\n        positionXInContainer={positionXInContainer}\r\n        widths={widths}\r\n        setAnimation={setAnimation}\r\n        handlePress={handlePress}\r\n        handlePressOut={handlePressOut}\r\n      />\r\n      <BlursForChatList\r\n        handlePress={handlePress}\r\n        handlePressOut={handlePressOut}\r\n      />\r\n      <FlatList\r\n        data={selfProfile.tabs[currentTab].folders}\r\n        /*onContentSizeChange={(width,height)=>{\r\n          console.log(width+\":\"+height)\r\n        }}\r\n        */\r\n        horizontal\r\n        pagingEnabled\r\n        ref={scrollViewRef}\r\n        showsHorizontalScrollIndicator={false}\r\n        onMomentumScrollEnd={() => {\r\n          setEndDragOfChatList(true);\r\n        }}\r\n        scrollEventThrottle={1}\r\n        nestedScrollEnabled={true}\r\n        keyExtractor={(item, index) => index.toString()}\r\n        renderItem={({ item, index }) => (\r\n          <ListOfFolder key={index} currentFolder={index} navigation={navigation} />\r\n        )}\r\n        onScroll={handleHorizontalScroll}\r\n        windowSize={10}\r\n        initialNumToRender={1}\r\n      />\r\n      <Footer\r\n        isTouchableForHeader={isTouchableForHeader}\r\n        scrollViewRefFooter={scrollViewRefFooter}\r\n        handleLayout={handleLayout}\r\n        isVisibleForModalFolder={isVisibleForModalFolder}\r\n        handleFolderPress={handleFolderPress}\r\n        handleLongPress={handleLongPress}\r\n        positionsOfFolder={positionsOfFolder}\r\n        widths={widths}\r\n      />\r\n\r\n      {isTouchableForHeader ? (\r\n        <TouchableOpacity\r\n          onPress={() =>\r\n            dispatch(\r\n              setBooleanForTouchOnHamburgerInHeaderChatList(\r\n                !isTouchableForHeader\r\n              )\r\n            )\r\n          }\r\n          style={{\r\n            height: screenHeight,\r\n            width: screenWidth,\r\n            position: \"absolute\",\r\n            zIndex: 4,\r\n          }}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(null)(Main);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAQ3D,SACEC,6CAA6C,EAC7CC,6BAA6B,EAC7BC,uBAAuB,EACvBC,sBAAsB,EACtBC,4BAA4B;AAG9B,OAAOC,YAAY;AACnB,SAASC,OAAO,EAAEC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAC/D,SAASC,kCAAkC;AAC3C,OAAOC,MAAM;AACb,OAAOC,sBAAsB;AAA4D,OAAAC,QAAA;AAGzF,SAASC,iBAAiB;AAC1B,OAAOC,gBAAgB;AACvB,SAASC,oBAAoB;AAAwC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAKrE,IAAAC,eAAA,GAAqDxB,UAAU,CAACyB,GAAG,CAAC,QAAQ,CAAC;EAA9DC,WAAW,GAAAF,eAAA,CAAlBG,KAAK;EAAuBC,YAAY,GAAAJ,eAAA,CAApBK,MAAM;AAElC,IAAMC,IAAyB,GAAG,SAA5BA,IAAyBA,CAAAC,IAAA,EAAqB;EAAA,IAAhBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC5C,IAAMC,WAAwB,GAAGvB,WAAW,CAAC,UAACwB,KAAU,EAAK;IAC3D,IAAMC,IAAiB,GAAGD,KAAK,CAACE,eAAe;IAC/C,OAAOD,IAAI;EACb,CAAC,CAAC;EACF,IAAME,UAAU,GAAG3B,WAAW,CAAC,UAACwB,KAAU,EAAK;IAC7C,IAAII,GAAG,GAAGJ,KAAK,CAACK,eAAe,CAACF,UAAU,CAACA,UAAU;IACrD,OAAOC,GAAG;EACZ,CAAC,CAAC;EAEF,IAAAE,SAAA,GACE1C,QAAQ,CAAS,CAAC,CAAC;IAAA2C,UAAA,GAAAC,cAAA,CAAAF,SAAA;IADdG,uBAAuB,GAAAF,UAAA;IAAEG,0BAA0B,GAAAH,UAAA;EAE1D,IAAAI,UAAA,GAAkC/C,QAAQ,CAAC,CAAC,CAAC;IAAAgD,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAtCE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAC9B,IAAAG,UAAA,GAAkDnD,QAAQ,CAAC,IAAI,CAAC;IAAAoD,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAzDE,iBAAiB,GAAAD,UAAA;IAAEE,oBAAoB,GAAAF,UAAA;EAC9C,IAAAG,UAAA,GAA8BvD,QAAQ,CAAC,CAAC,CAAC;IAAAwD,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAAlCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAC1B,IAAAG,UAAA,GAA8D3D,QAAQ,CAAC,KAAK,CAAC;IAAA4D,WAAA,GAAAhB,cAAA,CAAAe,UAAA;IAAtEE,uBAAuB,GAAAD,WAAA;IAAEE,0BAA0B,GAAAF,WAAA;EAC1D,IAAAG,WAAA,GAAkC/D,QAAQ,CAAS,CAAC,CAAC;IAAAgE,WAAA,GAAApB,cAAA,CAAAmB,WAAA;IAA9CE,SAAS,GAAAD,WAAA;IAAEE,YAAY,GAAAF,WAAA;EAC9B,IAAAG,WAAA,GAAwDnE,QAAQ,CAAS,CAAC,CAAC;IAAAoE,WAAA,GAAAxB,cAAA,CAAAuB,WAAA;IAApEE,oBAAoB,GAAAD,WAAA;IAAEE,uBAAuB,GAAAF,WAAA;EACpD,IAAMG,QAAQ,GAAG5D,WAAW,CAAC,CAAC;EAC9B,IAAM6D,cAAc,GAAG5D,WAAW,CAAC,UAACwB,KAAU,EAAK;IACjD,OAAOA,KAAK,CAACK,eAAe,CAACgC,0BAA0B,CACpDA,0BAA0B;EAC/B,CAAC,CAAC;EACF,IAAMC,mBAAmB,GAAG9D,WAAW,CAAC,UAACwB,KAAU,EAAK;IACtD,OAAOA,KAAK,CAACK,eAAe,CAACiC,mBAAmB,CAACA,mBAAmB;EACtE,CAAC,CAAC;EACF,IAAMC,oBAAoB,GAAG/D,WAAW,CAAC,UAACwB,KAAU,EAAK;IAEvD,OAAOA,KAAK,CAACK,eAAe,CAACmC,4BAA4B,CAACC,WAAW;EACvE,CAAC,CAAC;EAEF,IAAMC,YAAY,GAAGlE,WAAW,CAAC,UAACwB,KAAU,EAAK;IAE/C,OAAOA,KAAK,CAACK,eAAe,CAACsC,cAAc,CAACA,cAAc;EAC5D,CAAC,CAAC;EAEF,IAAMC,aAAa,GAAGjF,MAAM,CAAkB,IAAI,CAAC;EACnD,IAAMkF,mBAAmB,GAAGlF,MAAM,CAAoB,IAAI,CAAC;EAE3D,IAAMmF,MAAM,GAAGnF,MAAM,CACnBoC,WAAW,CAACgD,IAAI,CAAC5C,UAAU,CAAC,CAAC6C,OAAO,CAACC,GAAG,CAAC;IAAA,OAAMzD,WAAW,GAAG,MAAM;EAAA,EACrE,CAAC;EAED,IAAM0D,iBAAiB,GAAGvF,MAAM,CAC9BoC,WAAW,CAACgD,IAAI,CAAC5C,UAAU,CAAC,CAAC6C,OAAO,CAACC,GAAG,CAAC;IAAA,OAAM,CAAC;EAAA,EAClD,CAAC;EAED,IAAME,iBAAiB,GAAGxF,MAAM,CAAC,UAACyF,KAAa,EAAK;IAClDlC,oBAAoB,CAAC,KAAK,CAAC;IAC3BmC,eAAe,CAACD,KAAK,CAAC;IACtBE,cAAc,CAACF,KAAK,CAAC;EACvB,CAAC,CAAC;EAEF,IAAMG,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAIC,KAAU,EAAK;IAC7C,IAAIC,qBAAqB,GAAGD,KAAK,CAACE,WAAW,CAACC,aAAa,CAACC,CAAC;IAC7D,IAAIH,qBAAqB,GAAG,CAAC,EAAE;MAC7BA,qBAAqB,GAAG,CAAC;IAC3B,CAAC,MAAM,IACLA,qBAAqB,GACrBjE,WAAW,IAAIO,WAAW,CAACgD,IAAI,CAAC5C,UAAU,CAAC,CAAC6C,OAAO,CAACa,MAAM,GAAG,CAAC,CAAC,EAC/D;MACAJ,qBAAqB,GACnBjE,WAAW,IAAIO,WAAW,CAACgD,IAAI,CAAC5C,UAAU,CAAC,CAAC6C,OAAO,CAACa,MAAM,GAAG,CAAC,CAAC;IACnE;IACA1B,QAAQ,CAAClE,6BAA6B,CAACwF,qBAAqB,CAAC,CAAC;IAC9D,IAAMK,SAAiB,GAAGC,IAAI,CAACC,KAAK,CAACP,qBAAqB,GAAGjE,WAAW,CAAC;IAEzEyE,gBAAgB,CAACR,qBAAqB,CAAC;IACvC,IAAIK,SAAS,IAAIpB,YAAY,EAAE;MAC7B,IAAI,CAACzB,iBAAiB,EAAE;QACtB;MACF;MACAoC,eAAe,CAACS,SAAS,CAAC;IAC5B;EACF,CAAC;EACDjG,SAAS,CAAC,YAAM;IAAA,IAAAqG,qBAAA;IACd,CAAAA,qBAAA,GAAAtB,aAAa,CAACuB,OAAO,qBAArBD,qBAAA,CAAuBE,cAAc,CAAC;MAAEC,MAAM,EAAE,CAAC;MAAEC,QAAQ,EAAE;IAAM,CAAC,CAAC;EACvE,CAAC,EAAE,CAACnE,UAAU,CAAC,CAAC;EAChB,IAAMkD,eAAe,GAAG,SAAlBA,eAAeA,CAAIS,SAAiB,EAAK;IAC7C3B,QAAQ,CAAC/D,4BAA4B,CAAC0F,SAAS,CAAC,CAAC;IACjD,IAAIS,yBAAyB,GAAAC,kBAAA,CAAOlC,mBAAmB,CAAC;IACxDiC,yBAAyB,CAAC7B,YAAY,CAAC,GAAG,KAAK;IAC/C6B,yBAAyB,CAACT,SAAS,CAAC,GAAG,IAAI;IAC3C3B,QAAQ,CAAChE,sBAAsB,CAACoG,yBAAyB,CAAC,CAAC;EAC7D,CAAC;EACD,IAAMjB,cAAc;IAAA,IAAAmB,KAAA,GAAAC,iBAAA,CAAG,WAAOC,QAAgB,EAAK;MAAA,IAAAC,sBAAA;MACjD,OAAAA,sBAAA,GAAMhC,aAAa,CAACuB,OAAO,qBAArBS,sBAAA,CAAuBC,aAAa,CAAC;QACzCzB,KAAK,EAAEuB,QAAQ;QACfL,QAAQ,EAAE;MACZ,CAAC,CAAC;IAGJ,CAAC;IAAA,gBAPKhB,cAAcA,CAAAwB,EAAA;MAAA,OAAAL,KAAA,CAAAM,KAAA,OAAAC,SAAA;IAAA;EAAA,GAOnB;EACD,IAAMf,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIgB,eAAuB,EAAK;IAAA,IAAAC,qBAAA;IACpD,CAAAA,qBAAA,GAAArC,mBAAmB,CAACsB,OAAO,qBAA3Be,qBAAA,CAA6BC,QAAQ,CAAC;MACpCvB,CAAC,EACC,EAAEpE,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,GACzBsD,MAAM,CAACqB,OAAO,CAACJ,IAAI,CAACC,KAAK,CAACiB,eAAe,GAAGzF,WAAW,CAAC,CAAC,GAAG,CAAC,IAC1D,CAACyF,eAAe,GACjBzF,WAAW,GAAGuE,IAAI,CAACC,KAAK,CAACiB,eAAe,GAAGzF,WAAW,CAAC,IACvDA,WAAW,GACXA,WAAW,GACXsD,MAAM,CAACqB,OAAO,CAACJ,IAAI,CAACC,KAAK,CAACiB,eAAe,GAAGzF,WAAW,CAAC,CAAC,GACzD0D,iBAAiB,CAACiB,OAAO,CAACJ,IAAI,CAACC,KAAK,CAACiB,eAAe,GAAGzF,WAAW,CAAC,CAAC,CAAC;MACzE8E,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC;EAED,IAAMc,YAAY,GAAGzH,MAAM,CAAC,UAAC6F,KAAwB,EAAEJ,KAAa,EAAK;IACvE,IAAQ3D,KAAK,GAAK+D,KAAK,CAACE,WAAW,CAAC2B,MAAM,CAAlC5F,KAAK;IACb,IAAM6F,QAAQ,GAAG9B,KAAK,CAACE,WAAW,CAAC2B,MAAM,CAACzB,CAAC;IAC3C,IAAM2B,cAAc,GAAAf,kBAAA,CAAOtB,iBAAiB,CAACiB,OAAO,CAAC;IACrDoB,cAAc,CAACnC,KAAK,CAAC,GAAGkC,QAAQ;IAChCpC,iBAAiB,CAACiB,OAAO,GAAGoB,cAAc;IAC1C,IAAMC,aAAa,GAAAhB,kBAAA,CAAO1B,MAAM,CAACqB,OAAO,CAAC;IACzCqB,aAAa,CAACpC,KAAK,CAAC,GAAG3D,KAAK;IAC5BqD,MAAM,CAACqB,OAAO,GAAGqB,aAAa;EAEhC,CAAC,CAAC;EACF3H,SAAS,CAAC,YAAM;IACd,IAAIgB,iBAAiB,EAAE;MACrB4G,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC9B;EACF,CAAC,EAAE,CAAC7G,iBAAiB,CAAC,CAAC;EAEvB,IAAM8G,eAAe,GAAGhI,MAAM,CAAC,UAACiI,CAAwB,EAAExC,KAAa,EAAK;IAC1E1C,0BAA0B,CAAC0C,KAAK,CAAC;IACjC,IAAMyC,MAAM,GAAGD,CAAC,CAAClC,WAAW;IAC5B5B,YAAY,CAAC+D,MAAM,CAACC,KAAK,CAAC;IAC1B5D,uBAAuB,CAAC2D,MAAM,CAACE,SAAS,CAAC;IACzC,IAAIF,MAAM,CAACC,KAAK,GAAGD,MAAM,CAACE,SAAS,GAAGjD,MAAM,CAACqB,OAAO,CAACf,KAAK,CAAC,GAAG5D,WAAW,GAAG,IAAI,EAAE;MAAA,IAAAwG,sBAAA;MAChF,CAAAA,sBAAA,GAAAnD,mBAAmB,CAACsB,OAAO,qBAA3B6B,sBAAA,CAA6Bb,QAAQ,CAAC;QACpCvB,CAAC,EAAEV,iBAAiB,CAACiB,OAAO,CAACf,KAAK,CAAC,GAAG5D,WAAW,GAAG,IAAI,GAAGsD,MAAM,CAACqB,OAAO,CAACf,KAAK,CAAC;QAChFkB,QAAQ,EAAE;MACZ,CAAC,CAAC;MACFxC,YAAY,CAACtC,WAAW,GAAG,KAAK,GAAGsD,MAAM,CAACqB,OAAO,CAACf,KAAK,CAAC,CAAC;MACzDlB,uBAAuB,CAAC,CAAC,CAAC;IAC5B,CAAC,MAAM,IAAI2D,MAAM,CAACC,KAAK,GAAGD,MAAM,CAACE,SAAS,GAAGvG,WAAW,GAAG,IAAI,EAAE;MAAA,IAAAyG,sBAAA;MAC/D,CAAAA,sBAAA,GAAApD,mBAAmB,CAACsB,OAAO,qBAA3B8B,sBAAA,CAA6Bd,QAAQ,CAAC;QACpCvB,CAAC,EAAEV,iBAAiB,CAACiB,OAAO,CAACf,KAAK,CAAC;QACnCkB,QAAQ,EAAE;MACZ,CAAC,CAAC;MACFxC,YAAY,CAACtC,WAAW,GAAG,KAAK,CAAC;MACjC0C,uBAAuB,CAAC,CAAC,CAAC;IAC5B;IACAR,0BAA0B,CAAC,IAAI,CAAC;IAChCS,QAAQ,CAAC1D,kCAAkC,CAAC,IAAI,CAAC,CAAC;EACpD,CAAC,CAAC;EACF,IAAMyH,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxBpF,YAAY,CAACqF,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;EAC1B,CAAC;EAED,SAASC,cAAcA,CAAA,EAAG;IACxB/E,UAAU,CAAC6E,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;IACtB,IAAME,QAAQ,GAAGzF,SAAS,GAAGQ,OAAO;IACpC,IAAIiF,QAAQ,GAAG,EAAE,EAAE;MACjBnE,QAAQ,CAACjE,uBAAuB,CAACa,oBAAoB,CAACwH,IAAI,CAAC,CAAC;MAC5D7E,0BAA0B,CAAC,KAAK,CAAC;MACjC;IACF;IACAZ,YAAY,CAACqF,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;EAC1B;EAEA,IAAMI,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzBrE,QAAQ,CAAC1D,kCAAkC,CAAC,KAAK,CAAC,CAAC;EACrD,CAAC;EACD,OACEY,KAAA,CAAAF,SAAA;IAAAsH,QAAA,GACExH,IAAA,CAACN,sBAAsB;MACrB8C,uBAAuB,EAAEA,uBAAwB;MACjDW,cAAc,EAAEA,cAAe;MAC/B3B,uBAAuB,EAAEA,uBAAwB;MACjDkC,cAAc,EAAED,YAAa;MAC7Bb,SAAS,EAAEA,SAAU;MACrBI,oBAAoB,EAAEA,oBAAqB;MAC3Ca,MAAM,EAAEA,MAAO;MACf0D,YAAY,EAAEA,YAAa;MAC3BN,WAAW,EAAEA,WAAY;MACzBG,cAAc,EAAEA;IAAe,CAChC,CAAC,EACFpH,IAAA,CAACH,gBAAgB;MACfoH,WAAW,EAAEA,WAAY;MACzBG,cAAc,EAAEA;IAAe,CAChC,CAAC,EACFpH,IAAA,CAACL,QAAQ;MACP8H,IAAI,EAAE3G,WAAW,CAACgD,IAAI,CAAC5C,UAAU,CAAC,CAAC6C,OAAQ;MAK3C2D,UAAU;MACVC,aAAa;MACbC,GAAG,EAAEjE,aAAc;MACnBkE,8BAA8B,EAAE,KAAM;MACtCC,mBAAmB,EAAE,SAAAA,oBAAA,EAAM;QACzB7F,oBAAoB,CAAC,IAAI,CAAC;MAC5B,CAAE;MACF8F,mBAAmB,EAAE,CAAE;MACvBC,mBAAmB,EAAE,IAAK;MAC1BC,YAAY,EAAE,SAAAA,aAACC,IAAI,EAAE/D,KAAK;QAAA,OAAKA,KAAK,CAACgE,QAAQ,CAAC,CAAC;MAAA,CAAC;MAChDC,UAAU,EAAE,SAAAA,WAAAC,KAAA;QAAA,IAAGH,IAAI,GAAAG,KAAA,CAAJH,IAAI;UAAE/D,KAAK,GAAAkE,KAAA,CAALlE,KAAK;QAAA,OACxBnE,IAAA,CAACZ,YAAY;UAAakJ,aAAa,EAAEnE,KAAM;UAACtD,UAAU,EAAEA;QAAW,GAApDsD,KAAsD,CAAC;MAAA,CAC1E;MACFoE,QAAQ,EAAEjE,sBAAuB;MACjCkE,UAAU,EAAE,EAAG;MACfC,kBAAkB,EAAE;IAAE,CACvB,CAAC,EACFzI,IAAA,CAACP,MAAM;MACL6D,oBAAoB,EAAEA,oBAAqB;MAC3CM,mBAAmB,EAAEA,mBAAoB;MACzCuC,YAAY,EAAEA,YAAa;MAC3B3D,uBAAuB,EAAEA,uBAAwB;MACjD0B,iBAAiB,EAAEA,iBAAkB;MACrCwC,eAAe,EAAEA,eAAgB;MACjCzC,iBAAiB,EAAEA,iBAAkB;MACrCJ,MAAM,EAAEA;IAAO,CAChB,CAAC,EAEDP,oBAAoB,GACnBtD,IAAA,CAAClB,gBAAgB;MACf4J,OAAO,EAAE,SAAAA,QAAA;QAAA,OACPxF,QAAQ,CACNnE,6CAA6C,CAC3C,CAACuE,oBACH,CACF,CAAC;MAAA,CACF;MACDqF,KAAK,EAAE;QACLjI,MAAM,EAAED,YAAY;QACpBD,KAAK,EAAED,WAAW;QAClB8F,QAAQ,EAAE,UAAU;QACpBuC,MAAM,EAAE;MACV;IAAE,CACH,CAAC,GACA,IAAI;EAAA,CACR,CAAC;AAEP,CAAC;AAED,eAAevJ,OAAO,CAAC,IAAI,CAAC,CAACsB,IAAI,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}