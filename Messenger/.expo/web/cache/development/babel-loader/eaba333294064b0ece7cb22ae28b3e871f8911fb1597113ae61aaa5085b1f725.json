{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { footerstyles } from \"../../Styles/FooterStyle\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Folder = function Folder(_ref) {\n  var containerStyle = _ref.containerStyle,\n    textStyle = _ref.textStyle,\n    text = _ref.text,\n    isSelected = _ref.isSelected,\n    onPress = _ref.onPress;\n  var handleLongPress = function handleLongPress(e) {\n    var target = e.nativeEvent;\n    console.log(target.locationX);\n  };\n  return _jsx(TouchableOpacity, {\n    activeOpacity: 1,\n    onPress: onPress,\n    onLongPress: handleLongPress,\n    children: _jsx(View, {\n      style: containerStyle,\n      children: _jsx(Text, {\n        style: isSelected ? footerstyles.selectedText : textStyle,\n        children: text\n      })\n    })\n  });\n};\nexport default Folder;","map":{"version":3,"names":["React","View","Text","TouchableOpacity","footerstyles","jsx","_jsx","Folder","_ref","containerStyle","textStyle","text","isSelected","onPress","handleLongPress","e","target","nativeEvent","console","log","locationX","activeOpacity","onLongPress","children","style","selectedText"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/ChatList/Components/Footer containers/Folder.tsx"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, StyleSheet, StyleProp, ViewStyle, TextStyle, ScrollView, TouchableOpacity, GestureResponderEvent } from 'react-native';\r\nimport { footerstyles } from '../../Styles/FooterStyle';\r\ninterface FolderProps {\r\n  containerStyle?: StyleProp<ViewStyle>; // Стиль для контейнера\r\n  textStyle?: StyleProp<TextStyle>; // Стиль для тексту\r\n  text: string;\r\n  isSelected: boolean; // Додаємо флаг для визначення, чи обрана папка\r\n  onPress: () => void; // Додаємо функцію для обробки натискання\r\n}\r\n\r\nconst Folder: React.FC<FolderProps> = ({ containerStyle, textStyle, text, isSelected, onPress }) => {\r\n  const handleLongPress=(e:GestureResponderEvent)=>{\r\n    const target=e.nativeEvent;\r\n    console.log(target.locationX);\r\n\r\n  }\r\n  return (\r\n    <TouchableOpacity activeOpacity={1} onPress={onPress} onLongPress={handleLongPress} >\r\n      <View style={containerStyle}>\r\n        <Text style={ isSelected ? footerstyles.selectedText :textStyle}>{text}</Text>\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\n\r\nexport default Folder;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAE1B,SAASC,YAAY;AAAmC,SAAAC,GAAA,IAAAC,IAAA;AASxD,IAAMC,MAA6B,GAAG,SAAhCA,MAA6BA,CAAAC,IAAA,EAAiE;EAAA,IAA3DC,cAAc,GAAAD,IAAA,CAAdC,cAAc;IAAEC,SAAS,GAAAF,IAAA,CAATE,SAAS;IAAEC,IAAI,GAAAH,IAAA,CAAJG,IAAI;IAAEC,UAAU,GAAAJ,IAAA,CAAVI,UAAU;IAAEC,OAAO,GAAAL,IAAA,CAAPK,OAAO;EAC3F,IAAMC,eAAe,GAAC,SAAhBA,eAAeA,CAAEC,CAAuB,EAAG;IAC/C,IAAMC,MAAM,GAACD,CAAC,CAACE,WAAW;IAC1BC,OAAO,CAACC,GAAG,CAACH,MAAM,CAACI,SAAS,CAAC;EAE/B,CAAC;EACD,OACEd,IAAA,CAACH,gBAAgB;IAACkB,aAAa,EAAE,CAAE;IAACR,OAAO,EAAEA,OAAQ;IAACS,WAAW,EAAER,eAAgB;IAAAS,QAAA,EACjFjB,IAAA,CAACL,IAAI;MAACuB,KAAK,EAAEf,cAAe;MAAAc,QAAA,EAC1BjB,IAAA,CAACJ,IAAI;QAACsB,KAAK,EAAGZ,UAAU,GAAGR,YAAY,CAACqB,YAAY,GAAEf,SAAU;QAAAa,QAAA,EAAEZ;MAAI,CAAO;IAAC,CAC1E;EAAC,CACS,CAAC;AAEvB,CAAC;AAGD,eAAeJ,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}