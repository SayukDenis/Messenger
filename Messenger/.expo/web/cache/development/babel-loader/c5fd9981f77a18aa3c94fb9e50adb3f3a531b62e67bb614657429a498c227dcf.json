{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { styles } from \"./Styles\";\nimport { useIsFocused } from \"@react-navigation/native\";\nimport TopToolBar from \"./TopToolBar\";\nimport AvatarWithCallingButtons from \"./AvatarWithCallingButtons\";\nimport Multimedia from \"./Multimedia/Multimedia\";\nimport Blur from \"../../GeneralComponents/Blur\";\nimport ElseFeaturesButtons from \"./ElseFeaturesButtons\";\nimport RemovalApproval from \"../../GeneralComponents/RemovalApproval\";\nimport { Album } from \"../../DatabaseSimulation/DBClasses\";\nimport { GetProfile } from \"../../DatabaseSimulation/DBFunctions\";\nimport AlbumLongPressedMenu from \"./Multimedia/AlbumLongPressedMenu\";\nimport BottomToolBar from \"./ButtomToolBar\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { forwardMode, pickedProfile } from \"../../DatabaseSimulation/DBVariables\";\nimport { user } from \"../../DatabaseSimulation/DBUser\";\nimport { group } from \"../../DatabaseSimulation/DBGroup\";\nimport { channel } from \"../../DatabaseSimulation/DBChannel\";\nimport TypeChannelMenu from \"./TypeChannelMenu\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar screenHeight = Dimensions.get(\"screen\").height;\nvar MainScreen = function MainScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    removalApprovalText = _useState2[0],\n    setRemovalApprovalText = _useState2[1];\n  var _useState3 = useState(\"Photos\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    pressedMultimediaButton = _useState4[0],\n    _setPressedMultimediaButton = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isElseFeaturesVisible = _useState6[0],\n    setIsElseFeaturesVisible = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isPhotoAlbumSelectionVisible = _useState8[0],\n    _setIsPhotoAlbumSelectionVisible = _useState8[1];\n  var _useState9 = useState(GetProfile().isMuted),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isMuted = _useState10[0],\n    setIsMuted = _useState10[1];\n  var _useState11 = useState(pickedProfile.current == \"user\" ? GetProfile().isBlocked : false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isBlocked = _useState12[0],\n    setIsBlocked = _useState12[1];\n  var _useState13 = useState(null),\n    _useState14 = _slicedToArray(_useState13, 2),\n    longPressedAlbum = _useState14[0],\n    setLongPressedAlbum = _useState14[1];\n  var _useState15 = useState(0),\n    _useState16 = _slicedToArray(_useState15, 2),\n    positionYOfLongPressedAlbum = _useState16[0],\n    setPositionYOfLongPressedAlbum = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    isMultimediaSelectionVisible = _useState18[0],\n    setIsMultimediaSelectionVisible = _useState18[1];\n  var _useState19 = useState([]),\n    _useState20 = _slicedToArray(_useState19, 2),\n    selectedMultimedia = _useState20[0],\n    setSelectedMultimedia = _useState20[1];\n  var _useState21 = useState(false),\n    _useState22 = _slicedToArray(_useState21, 2),\n    isTypeChannelPressed = _useState22[0],\n    setIsTypeChannelPressed = _useState22[1];\n  var isFocused = useIsFocused();\n  useEffect(function () {}, [isFocused]);\n  var removalApprovalsTexts = [\"clear the chat\", \"delete an album\", \"delete all albums\", \"delete selected albums\"];\n  var removalApprovalsOnPress = [function () {\n    alert(\"Agree\");\n  }, function () {\n    GetProfile().albums.splice(GetProfile().albums.indexOf(longPressedAlbum), 1);\n    setLongPressedAlbum(null);\n  }, function () {\n    GetProfile().albums = Array();\n    setIsMultimediaSelectionVisible(false);\n  }, function () {\n    selectedMultimedia.forEach(function (album) {\n      if (album instanceof Album) {\n        GetProfile().albums.splice(GetProfile().albums.indexOf(album), 1);\n      }\n    });\n    setSelectedMultimedia([]);\n    setIsMultimediaSelectionVisible(false);\n  }];\n  var HandleMultimediaLongPress = function HandleMultimediaLongPress(value) {\n    setIsMultimediaSelectionVisible(true);\n    if (!selectedMultimedia.includes(value)) {\n      setSelectedMultimedia(selectedMultimedia.concat([value]));\n    } else {\n      setSelectedMultimedia(selectedMultimedia.filter(function (photoOrVideo) {\n        return photoOrVideo !== value;\n      }));\n    }\n  };\n  return _jsxs(LinearGradient, {\n    colors: [\"#cf9b95\", \"#c98bb8\", \"#c37adb\"],\n    style: {\n      flex: 1\n    },\n    children: [_jsx(Blur, {\n      visibleWhen: isElseFeaturesVisible || longPressedAlbum != null || isPhotoAlbumSelectionVisible || isTypeChannelPressed,\n      onPress: function onPress() {\n        setIsElseFeaturesVisible(false);\n        setLongPressedAlbum(null);\n        _setIsPhotoAlbumSelectionVisible(false);\n        setIsTypeChannelPressed(false);\n      },\n      style: styles.blurEffect\n    }), _jsx(Blur, {\n      visibleWhen: removalApprovalText != \"\",\n      onPress: function onPress() {\n        setRemovalApprovalText(\"\");\n      },\n      style: [styles.blurEffect, {\n        zIndex: 3\n      }]\n    }), removalApprovalsTexts.map(function (item, index) {\n      return _jsx(RemovalApproval, {\n        isVisible: removalApprovalText == item,\n        onAnyPress: function onAnyPress() {\n          setRemovalApprovalText(\"\");\n        },\n        onAgreePress: function onAgreePress() {\n          removalApprovalsOnPress[index]();\n        },\n        text: \"Do you really want to \" + item + \"?\"\n      }, item);\n    }), _jsx(TopToolBar, {\n      primaryTitle: GetProfile().profileName,\n      secondaryTitle: pickedProfile.current == \"user\" ? user.lastTimeOnline : pickedProfile.current == \"group\" ? group.members.length.toString() + \" members\" : channel.subscribers.length.toString() + \" subscribers\",\n      onElseFeaturesPress: function onElseFeaturesPress() {\n        setIsElseFeaturesVisible(true);\n      },\n      isMuted: isMuted,\n      isBlocked: isBlocked,\n      isSearchButtonVisible: true,\n      onGoBackPress: function onGoBackPress() {\n        navigation.goBack();\n      },\n      isMultimediaSelectionVisible: isMultimediaSelectionVisible,\n      quantityOfSelectedItems: selectedMultimedia.length,\n      onCancelPress: function onCancelPress() {\n        setSelectedMultimedia([]);\n        setIsMultimediaSelectionVisible(false);\n      },\n      onDeleteAllPress: function onDeleteAllPress() {\n        setRemovalApprovalText(\"delete all albums\");\n      }\n    }), _jsx(ElseFeaturesButtons, {\n      isVisible: isElseFeaturesVisible,\n      setIsVisible: function setIsVisible(value) {\n        return setIsElseFeaturesVisible(value);\n      },\n      isMuted: isMuted,\n      onMutePress: function onMutePress(value) {\n        setIsMuted(value);\n      },\n      isBlocked: isBlocked,\n      onBlockPress: function onBlockPress(value) {\n        setIsBlocked(value);\n      },\n      onClearChatPress: function onClearChatPress() {\n        setRemovalApprovalText(\"clear the chat\");\n      },\n      onSettingsPress: function onSettingsPress() {\n        return navigation.navigate(\"SettingsScreen\");\n      },\n      onForwardPress: function onForwardPress() {\n        navigation.navigate(\"ForwardToChatsScreen\");\n      },\n      onTypeChannelPress: function onTypeChannelPress() {\n        setIsElseFeaturesVisible(false);\n        setIsTypeChannelPressed(true);\n      },\n      mode: pickedProfile.current\n    }), _jsx(AlbumLongPressedMenu, {\n      isVisible: longPressedAlbum != null,\n      longPressedAlbum: longPressedAlbum,\n      positionYOfLongPressedAlbum: positionYOfLongPressedAlbum,\n      onDeleteAlbumPress: function onDeleteAlbumPress() {\n        setRemovalApprovalText(\"delete an album\");\n      },\n      onSelectAlbumPress: function onSelectAlbumPress() {\n        setIsMultimediaSelectionVisible(true);\n        setSelectedMultimedia(selectedMultimedia.concat([longPressedAlbum]));\n        setLongPressedAlbum(null);\n      }\n    }), _jsx(TypeChannelMenu, {\n      isVisible: isTypeChannelPressed,\n      onPrivatePress: function onPrivatePress() {\n        alert(\"private\");\n      },\n      onPublicPress: function onPublicPress() {\n        alert(\"public\");\n      }\n    }), _jsx(BottomToolBar, {\n      isVisible: isMultimediaSelectionVisible,\n      onDeletePress: function onDeletePress() {\n        setRemovalApprovalText(\"delete selected albums\");\n      },\n      onForwardPress: function onForwardPress() {\n        forwardMode.current = \"albums\";\n        navigation.navigate(\"ForwardToChatsScreen\");\n      }\n    }), _jsxs(ScrollView, {\n      style: {\n        flex: 1,\n        zIndex: isPhotoAlbumSelectionVisible ? 2 : 0\n      },\n      contentContainerStyle: {\n        zIndex: isPhotoAlbumSelectionVisible ? 2 : 0\n      },\n      showsVerticalScrollIndicator: false,\n      onScroll: function onScroll() {\n        _setIsPhotoAlbumSelectionVisible(false);\n      },\n      children: [_jsx(Blur, {\n        visibleWhen: isPhotoAlbumSelectionVisible,\n        onPress: function onPress() {\n          _setIsPhotoAlbumSelectionVisible(false);\n        },\n        style: [styles.blurEffect, {\n          zIndex: 3\n        }]\n      }), _jsx(AvatarWithCallingButtons, {\n        avatarURL: GetProfile().avatars[0].url,\n        onAvatarPress: function onAvatarPress() {\n          navigation.navigate(\"AvatarsAndInfoScreen\");\n        }\n      }), _jsx(Multimedia, {\n        isPhotoAlbumSelectionVisible: isPhotoAlbumSelectionVisible,\n        setIsPhotoAlbumSelectionVisible: function setIsPhotoAlbumSelectionVisible(value) {\n          return _setIsPhotoAlbumSelectionVisible(value);\n        },\n        pressedMultimediaButton: pressedMultimediaButton,\n        setPressedMultimediaButton: function setPressedMultimediaButton(value) {\n          _setPressedMultimediaButton(value);\n        },\n        onAnyPressWhileSelection: function onAnyPressWhileSelection(value) {\n          if (isMultimediaSelectionVisible) {\n            if (!selectedMultimedia.includes(value)) {\n              setSelectedMultimedia(selectedMultimedia.concat([value]));\n            } else {\n              setSelectedMultimedia(selectedMultimedia.filter(function (item) {\n                return item !== value;\n              }));\n            }\n          }\n        },\n        onPhotoPress: function onPhotoPress(value) {\n          GetProfile().selectedPhoto = value;\n          navigation.navigate(\"PhotoScreen\");\n        },\n        onAlbumPress: function onAlbumPress(value) {\n          GetProfile().selectedAlbum = value;\n          navigation.navigate(\"Album\");\n        },\n        onNewAlbumPress: function onNewAlbumPress() {\n          navigation.navigate(\"NewAlbumScreen\");\n        },\n        onAnyLongPressExceptAlbum: function onAnyLongPressExceptAlbum(value) {\n          HandleMultimediaLongPress(value);\n        },\n        onAlbumLongPress: function onAlbumLongPress(value, event) {\n          if (!isMultimediaSelectionVisible) {\n            setLongPressedAlbum(value);\n            setPositionYOfLongPressedAlbum(event.nativeEvent.pageY + 0.05 * screenHeight);\n          } else {\n            HandleMultimediaLongPress(value);\n          }\n        },\n        isMultimediaSelectionVisible: isMultimediaSelectionVisible,\n        isCheckMarkVisible: function isCheckMarkVisible(value) {\n          return selectedMultimedia.includes(value);\n        }\n      })]\n    })]\n  });\n};\nexport default MainScreen;","map":{"version":3,"names":["React","useState","useEffect","ScrollView","Dimensions","styles","useIsFocused","TopToolBar","AvatarWithCallingButtons","Multimedia","Blur","ElseFeaturesButtons","RemovalApproval","Album","GetProfile","AlbumLongPressedMenu","BottomToolBar","LinearGradient","forwardMode","pickedProfile","user","group","channel","TypeChannelMenu","jsx","_jsx","jsxs","_jsxs","screenHeight","get","height","MainScreen","_ref","navigation","_useState","_useState2","_slicedToArray","removalApprovalText","setRemovalApprovalText","_useState3","_useState4","pressedMultimediaButton","setPressedMultimediaButton","_useState5","_useState6","isElseFeaturesVisible","setIsElseFeaturesVisible","_useState7","_useState8","isPhotoAlbumSelectionVisible","setIsPhotoAlbumSelectionVisible","_useState9","isMuted","_useState10","setIsMuted","_useState11","current","isBlocked","_useState12","setIsBlocked","_useState13","_useState14","longPressedAlbum","setLongPressedAlbum","_useState15","_useState16","positionYOfLongPressedAlbum","setPositionYOfLongPressedAlbum","_useState17","_useState18","isMultimediaSelectionVisible","setIsMultimediaSelectionVisible","_useState19","_useState20","selectedMultimedia","setSelectedMultimedia","_useState21","_useState22","isTypeChannelPressed","setIsTypeChannelPressed","isFocused","removalApprovalsTexts","removalApprovalsOnPress","alert","albums","splice","indexOf","Array","forEach","album","HandleMultimediaLongPress","value","includes","concat","filter","photoOrVideo","colors","style","flex","children","visibleWhen","onPress","blurEffect","zIndex","map","item","index","isVisible","onAnyPress","onAgreePress","text","primaryTitle","profileName","secondaryTitle","lastTimeOnline","members","length","toString","subscribers","onElseFeaturesPress","isSearchButtonVisible","onGoBackPress","goBack","quantityOfSelectedItems","onCancelPress","onDeleteAllPress","setIsVisible","onMutePress","onBlockPress","onClearChatPress","onSettingsPress","navigate","onForwardPress","onTypeChannelPress","mode","onDeleteAlbumPress","onSelectAlbumPress","onPrivatePress","onPublicPress","onDeletePress","contentContainerStyle","showsVerticalScrollIndicator","onScroll","avatarURL","avatars","url","onAvatarPress","onAnyPressWhileSelection","onPhotoPress","selectedPhoto","onAlbumPress","selectedAlbum","onNewAlbumPress","onAnyLongPressExceptAlbum","onAlbumLongPress","event","nativeEvent","pageY","isCheckMarkVisible"],"sources":["C:/Users/T480/source/repos/Messenger/Messenger/Pages/Profiles/SemiComponents/Screens/MainScreen/MainScreen.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { ScrollView, Dimensions } from \"react-native\";\r\nimport { styles } from \"./Styles\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport TopToolBar from \"./TopToolBar\";\r\nimport AvatarWithCallingButtons from \"./AvatarWithCallingButtons\";\r\nimport Multimedia from \"./Multimedia/Multimedia\";\r\nimport Blur from \"../../GeneralComponents/Blur\";\r\nimport ElseFeaturesButtons from \"./ElseFeaturesButtons\";\r\nimport RemovalApproval from \"../../GeneralComponents/RemovalApproval\";\r\nimport {\r\n  Album,\r\n  PhotoOrVideo,\r\n  Voice,\r\n  File,\r\n  Link,\r\n} from \"../../DatabaseSimulation/DBClasses\";\r\nimport { GetProfile } from \"../../DatabaseSimulation/DBFunctions\";\r\nimport AlbumLongPressedMenu from \"./Multimedia/AlbumLongPressedMenu\";\r\nimport BottomToolBar from \"./ButtomToolBar\";\r\nimport { GestureResponderEvent } from \"react-native-modal\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport {\r\n  forwardMode,\r\n  pickedProfile,\r\n} from \"../../DatabaseSimulation/DBVariables\";\r\nimport { user } from \"../../DatabaseSimulation/DBUser\";\r\nimport { group } from \"../../DatabaseSimulation/DBGroup\";\r\nimport { channel } from \"../../DatabaseSimulation/DBChannel\";\r\nimport TypeChannelMenu from \"./TypeChannelMenu\";\r\n\r\nconst screenHeight = Dimensions.get(\"screen\").height;\r\n\r\ntype MainScreenProps = {\r\n  navigation: StackNavigationProp<{}>;\r\n};\r\n\r\nconst MainScreen: React.FC<MainScreenProps> = ({ navigation }) => {\r\n  const [removalApprovalText, setRemovalApprovalText] = useState(\"\");\r\n  const [pressedMultimediaButton, setPressedMultimediaButton] =\r\n    useState(\"Photos\");\r\n  const [isElseFeaturesVisible, setIsElseFeaturesVisible] = useState(false);\r\n  const [isPhotoAlbumSelectionVisible, setIsPhotoAlbumSelectionVisible] =\r\n    useState(false);\r\n  const [isMuted, setIsMuted] = useState(GetProfile().isMuted);\r\n  const [isBlocked, setIsBlocked] = useState(\r\n    pickedProfile.current == \"user\" ? GetProfile().isBlocked : false\r\n  );\r\n  const [longPressedAlbum, setLongPressedAlbum] = useState(null);\r\n  const [positionYOfLongPressedAlbum, setPositionYOfLongPressedAlbum] =\r\n    useState(0);\r\n  const [isMultimediaSelectionVisible, setIsMultimediaSelectionVisible] =\r\n    useState(false);\r\n  const [selectedMultimedia, setSelectedMultimedia] = useState<\r\n    Array<Album | PhotoOrVideo | File | Voice | Link>\r\n  >([]);\r\n  const [isTypeChannelPressed, setIsTypeChannelPressed] = useState(false);\r\n\r\n  const isFocused = useIsFocused();\r\n\r\n  useEffect(() => {}, [isFocused]);\r\n\r\n  const removalApprovalsTexts: string[] = [\r\n    \"clear the chat\",\r\n    \"delete an album\",\r\n    \"delete all albums\",\r\n    \"delete selected albums\",\r\n  ];\r\n\r\n  const removalApprovalsOnPress: (() => void)[] = [\r\n    () => {\r\n      alert(\"Agree\");\r\n    },\r\n    () => {\r\n      GetProfile().albums.splice(\r\n        GetProfile().albums.indexOf(longPressedAlbum),\r\n        1\r\n      );\r\n      setLongPressedAlbum(null);\r\n    },\r\n    () => {\r\n      GetProfile().albums = Array<Album>();\r\n      setIsMultimediaSelectionVisible(false);\r\n    },\r\n    () => {\r\n      selectedMultimedia.forEach((album) => {\r\n        if (album instanceof Album) {\r\n          GetProfile().albums.splice(GetProfile().albums.indexOf(album), 1);\r\n        }\r\n      });\r\n      setSelectedMultimedia([]);\r\n      setIsMultimediaSelectionVisible(false);\r\n    },\r\n  ];\r\n\r\n  const HandleMultimediaLongPress = (\r\n    value: PhotoOrVideo | Album | File | Voice | Link\r\n  ) => {\r\n    setIsMultimediaSelectionVisible(true);\r\n    if (!selectedMultimedia.includes(value)) {\r\n      setSelectedMultimedia(selectedMultimedia.concat([value]));\r\n    } else {\r\n      setSelectedMultimedia(\r\n        selectedMultimedia.filter((photoOrVideo) => photoOrVideo !== value)\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <LinearGradient\r\n      colors={[\"#cf9b95\", \"#c98bb8\", \"#c37adb\"]}\r\n      style={{ flex: 1 }}\r\n    >\r\n      {/* General blur with zIndex 1 */}\r\n      <Blur\r\n        visibleWhen={\r\n          isElseFeaturesVisible ||\r\n          longPressedAlbum != null ||\r\n          isPhotoAlbumSelectionVisible ||\r\n          isTypeChannelPressed\r\n        }\r\n        onPress={() => {\r\n          setIsElseFeaturesVisible(false);\r\n          setLongPressedAlbum(null);\r\n          setIsPhotoAlbumSelectionVisible(false);\r\n          setIsTypeChannelPressed(false);\r\n        }}\r\n        style={styles.blurEffect}\r\n      />\r\n\r\n      {/* Blur over blur with zIndex 3 */}\r\n      <Blur\r\n        visibleWhen={removalApprovalText != \"\"}\r\n        onPress={() => {\r\n          setRemovalApprovalText(\"\");\r\n        }}\r\n        style={[\r\n          styles.blurEffect,\r\n          {\r\n            zIndex: 3,\r\n          },\r\n        ]}\r\n      />\r\n\r\n      {removalApprovalsTexts.map((item, index) => {\r\n        return (\r\n          <RemovalApproval\r\n            key={item}\r\n            isVisible={removalApprovalText == item}\r\n            onAnyPress={() => {\r\n              setRemovalApprovalText(\"\");\r\n            }}\r\n            onAgreePress={() => {\r\n              removalApprovalsOnPress[index]();\r\n            }}\r\n            text={\"Do you really want to \" + item + \"?\"}\r\n          />\r\n        );\r\n      })}\r\n\r\n      {/* Top tool bar with buttons*/}\r\n      <TopToolBar\r\n        primaryTitle={GetProfile().profileName}\r\n        secondaryTitle={\r\n          pickedProfile.current == \"user\"\r\n            ? user.lastTimeOnline\r\n            : pickedProfile.current == \"group\"\r\n            ? group.members.length.toString() + \" members\"\r\n            : channel.subscribers.length.toString() + \" subscribers\"\r\n        }\r\n        onElseFeaturesPress={() => {\r\n          setIsElseFeaturesVisible(true);\r\n        }}\r\n        isMuted={isMuted}\r\n        isBlocked={isBlocked}\r\n        isSearchButtonVisible={true}\r\n        onGoBackPress={() => {\r\n          navigation.goBack();\r\n        }}\r\n        isMultimediaSelectionVisible={isMultimediaSelectionVisible}\r\n        quantityOfSelectedItems={selectedMultimedia.length}\r\n        onCancelPress={() => {\r\n          setSelectedMultimedia([]);\r\n          setIsMultimediaSelectionVisible(false);\r\n        }}\r\n        onDeleteAllPress={() => {\r\n          setRemovalApprovalText(\"delete all albums\");\r\n        }}\r\n      />\r\n\r\n      {/* Else features which appear when else features button is pressed*/}\r\n      <ElseFeaturesButtons\r\n        isVisible={isElseFeaturesVisible}\r\n        setIsVisible={(value: boolean) => setIsElseFeaturesVisible(value)}\r\n        isMuted={isMuted}\r\n        onMutePress={(value: boolean) => {\r\n          setIsMuted(value);\r\n        }}\r\n        isBlocked={isBlocked}\r\n        onBlockPress={(value: boolean) => {\r\n          setIsBlocked(value);\r\n        }}\r\n        onClearChatPress={() => {\r\n          setRemovalApprovalText(\"clear the chat\");\r\n        }}\r\n        onSettingsPress={() => navigation.navigate(\"SettingsScreen\" as never)}\r\n        onForwardPress={() => {\r\n          navigation.navigate(\"ForwardToChatsScreen\" as never);\r\n        }}\r\n        onTypeChannelPress={() => {\r\n          setIsElseFeaturesVisible(false);\r\n          setIsTypeChannelPressed(true);\r\n        }}\r\n        mode={pickedProfile.current}\r\n      />\r\n\r\n      <AlbumLongPressedMenu\r\n        isVisible={longPressedAlbum != null}\r\n        longPressedAlbum={longPressedAlbum}\r\n        positionYOfLongPressedAlbum={positionYOfLongPressedAlbum}\r\n        onDeleteAlbumPress={() => {\r\n          setRemovalApprovalText(\"delete an album\");\r\n        }}\r\n        onSelectAlbumPress={() => {\r\n          setIsMultimediaSelectionVisible(true);\r\n          setSelectedMultimedia(selectedMultimedia.concat([longPressedAlbum]));\r\n          setLongPressedAlbum(null);\r\n        }}\r\n      />\r\n\r\n      <TypeChannelMenu\r\n        isVisible={isTypeChannelPressed}\r\n        onPrivatePress={() => {\r\n          alert(\"private\");\r\n        }}\r\n        onPublicPress={() => {\r\n          alert(\"public\");\r\n        }}\r\n      />\r\n\r\n      <BottomToolBar\r\n        isVisible={isMultimediaSelectionVisible}\r\n        onDeletePress={() => {\r\n          setRemovalApprovalText(\"delete selected albums\");\r\n        }}\r\n        onForwardPress={() => {\r\n          forwardMode.current = \"albums\";\r\n          navigation.navigate(\"ForwardToChatsScreen\" as never);\r\n        }}\r\n      />\r\n\r\n      <ScrollView\r\n        style={{\r\n          flex: 1,\r\n          zIndex: isPhotoAlbumSelectionVisible ? 2 : 0,\r\n        }}\r\n        contentContainerStyle={{\r\n          zIndex: isPhotoAlbumSelectionVisible ? 2 : 0,\r\n        }}\r\n        showsVerticalScrollIndicator={false}\r\n        onScroll={() => {\r\n          setIsPhotoAlbumSelectionVisible(false);\r\n        }}\r\n      >\r\n        <Blur\r\n          visibleWhen={isPhotoAlbumSelectionVisible}\r\n          onPress={() => {\r\n            setIsPhotoAlbumSelectionVisible(false);\r\n          }}\r\n          style={[styles.blurEffect, { zIndex: 3 }]}\r\n        />\r\n\r\n        {/* Touchable avatar image with phone and videocamera buttons*/}\r\n        <AvatarWithCallingButtons\r\n          avatarURL={GetProfile().avatars[0].url}\r\n          onAvatarPress={() => {\r\n            navigation.navigate(\"AvatarsAndInfoScreen\" as never);\r\n          }}\r\n        />\r\n\r\n        {/* Multimedia with photo/albums, files, voice, links*/}\r\n        <Multimedia\r\n          isPhotoAlbumSelectionVisible={isPhotoAlbumSelectionVisible}\r\n          setIsPhotoAlbumSelectionVisible={(value: boolean) =>\r\n            setIsPhotoAlbumSelectionVisible(value)\r\n          }\r\n          pressedMultimediaButton={pressedMultimediaButton}\r\n          setPressedMultimediaButton={(value: string) => {\r\n            setPressedMultimediaButton(value);\r\n          }}\r\n          onAnyPressWhileSelection={(\r\n            value: Album | PhotoOrVideo | File | Voice | Link\r\n          ) => {\r\n            if (isMultimediaSelectionVisible) {\r\n              if (!selectedMultimedia.includes(value)) {\r\n                setSelectedMultimedia(selectedMultimedia.concat([value]));\r\n              } else {\r\n                setSelectedMultimedia(\r\n                  selectedMultimedia.filter((item) => item !== value)\r\n                );\r\n              }\r\n            }\r\n          }}\r\n          onPhotoPress={(value: PhotoOrVideo) => {\r\n            GetProfile().selectedPhoto = value;\r\n            navigation.navigate(\"PhotoScreen\" as never);\r\n          }}\r\n          onAlbumPress={(value: Album) => {\r\n            GetProfile().selectedAlbum = value;\r\n            navigation.navigate(\"Album\" as never);\r\n          }}\r\n          onNewAlbumPress={() => {\r\n            navigation.navigate(\"NewAlbumScreen\" as never);\r\n          }}\r\n          onAnyLongPressExceptAlbum={(\r\n            value: PhotoOrVideo | File | Voice | Link\r\n          ) => {\r\n            HandleMultimediaLongPress(value);\r\n          }}\r\n          onAlbumLongPress={(value: Album, event: GestureResponderEvent) => {\r\n            if (!isMultimediaSelectionVisible) {\r\n              setLongPressedAlbum(value);\r\n              setPositionYOfLongPressedAlbum(\r\n                event.nativeEvent.pageY + 0.05 * screenHeight\r\n              );\r\n            } else {\r\n              HandleMultimediaLongPress(value);\r\n            }\r\n          }}\r\n          isMultimediaSelectionVisible={isMultimediaSelectionVisible}\r\n          isCheckMarkVisible={(\r\n            value: Album | PhotoOrVideo | File | Voice | Link\r\n          ) => selectedMultimedia.includes(value)}\r\n        />\r\n      </ScrollView>\r\n    </LinearGradient>\r\n  );\r\n};\r\n\r\nexport default MainScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}