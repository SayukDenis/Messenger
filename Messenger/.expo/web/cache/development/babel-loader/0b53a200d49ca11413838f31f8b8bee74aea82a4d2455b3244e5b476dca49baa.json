{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport React from 'react';\nimport HeaderContainer from \"../../../SemiComponents/HeaderContainer\";\nimport { connect } from 'react-redux';\nimport RightPartOfHeader from \"./HelperComponents/Header/RightPartOfHeader\";\nimport LeftPartOfHeader from \"./HelperComponents/Header/LeftPartOfHeader\";\nimport CenterPartOfHeader from \"./HelperComponents/Header/CenterPartOfHeader\";\nimport PinnedMessageView from \"./HelperComponents/Header/PinnedMessageView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DialogueHeader = function DialogueHeader(_ref) {\n  var counterOfSelectedMessages = _ref.counterOfSelectedMessages,\n    navigation = _ref.navigation,\n    picture = _ref.picture,\n    displayName = _ref.displayName,\n    activityTime = _ref.activityTime,\n    pinnedMessage = _ref.pinnedMessage,\n    selecting = _ref.selecting,\n    cancelSelection = _ref.cancelSelection,\n    currentNumOfPinnedMessage = _ref.currentNumOfPinnedMessage,\n    countOfPinnedMessages = _ref.countOfPinnedMessages;\n  if (selecting && counterOfSelectedMessages <= 0) cancelSelection();\n  return _jsxs(View, {\n    style: {\n      backgroundColor: 'green',\n      zIndex: 10\n    },\n    children: [_jsx(HeaderContainer, {\n      children: _jsx(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'flex-end'\n        },\n        children: _jsxs(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'flex-end',\n            paddingHorizontal: 20,\n            paddingVertical: 10\n          },\n          children: [_jsx(LeftPartOfHeader, {\n            counterOfSelectedMessages: counterOfSelectedMessages,\n            selecting: selecting,\n            navigation: navigation\n          }), _jsx(CenterPartOfHeader, {\n            picture: picture,\n            displayName: displayName,\n            activityTime: activityTime\n          }), _jsx(RightPartOfHeader, {\n            selecting: selecting,\n            cancelSelection: cancelSelection\n          })]\n        })\n      })\n    }), _jsx(PinnedMessageView, {\n      pinnedMessage: pinnedMessage,\n      current: currentNumOfPinnedMessage,\n      total: countOfPinnedMessages\n    })]\n  });\n};\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    counterOfSelectedMessages: state.ChatReducer.counterForSelectedMessages.counterOfSelectedMessages\n  };\n};\nexport default connect(mapStateToProps)(DialogueHeader);","map":{"version":3,"names":["React","HeaderContainer","connect","RightPartOfHeader","LeftPartOfHeader","CenterPartOfHeader","PinnedMessageView","jsx","_jsx","jsxs","_jsxs","DialogueHeader","_ref","counterOfSelectedMessages","navigation","picture","displayName","activityTime","pinnedMessage","selecting","cancelSelection","currentNumOfPinnedMessage","countOfPinnedMessages","View","style","backgroundColor","zIndex","children","flex","justifyContent","flexDirection","alignItems","paddingHorizontal","paddingVertical","current","total","mapStateToProps","state","ChatReducer","counterForSelectedMessages"],"sources":["D:/project/1project/Messenger/Messenger/Pages/Chats/Dialogue/components/DialogueHeader.tsx"],"sourcesContent":["import { View } from 'react-native';\r\nimport React from 'react';\r\nimport HeaderContainer from '../../../SemiComponents/HeaderContainer';\r\nimport { connect } from 'react-redux';\r\nimport { DialogueHeaderProps } from './interfaces/IDialogueHeader';\r\nimport RightPartOfHeader from './HelperComponents/Header/RightPartOfHeader';\r\nimport LeftPartOfHeader from './HelperComponents/Header/LeftPartOfHeader';\r\nimport CenterPartOfHeader from './HelperComponents/Header/CenterPartOfHeader';\r\nimport PinnedMessageView from './HelperComponents/Header/PinnedMessageView';\r\n\r\nconst DialogueHeader = ({ counterOfSelectedMessages, navigation, picture, displayName, activityTime, pinnedMessage, selecting, cancelSelection, currentNumOfPinnedMessage, countOfPinnedMessages }:DialogueHeaderProps) => {\r\n  if(selecting && counterOfSelectedMessages <= 0) cancelSelection();\r\n  return(\r\n    <View style={{ backgroundColor: 'green', zIndex: 10 }}>\r\n      <HeaderContainer>\r\n        <View style={{ flex: 1, justifyContent: 'flex-end' }}>\r\n          <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'flex-end', paddingHorizontal: 20, paddingVertical: 10 }}>\r\n            <LeftPartOfHeader counterOfSelectedMessages={counterOfSelectedMessages} selecting={selecting} navigation={navigation} />\r\n            <CenterPartOfHeader picture={picture} displayName={displayName} activityTime={activityTime} />\r\n            <RightPartOfHeader selecting={selecting} cancelSelection={cancelSelection} />\r\n          </View>\r\n        </View>\r\n      </HeaderContainer>\r\n      <PinnedMessageView pinnedMessage={pinnedMessage} current={currentNumOfPinnedMessage} total={countOfPinnedMessages} />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state:any) => ({\r\n  counterOfSelectedMessages: state.ChatReducer.counterForSelectedMessages.counterOfSelectedMessages,\r\n});\r\n\r\nexport default connect(mapStateToProps)(DialogueHeader);"],"mappings":";AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,eAAe;AACtB,SAASC,OAAO,QAAQ,aAAa;AAErC,OAAOC,iBAAiB;AACxB,OAAOC,gBAAgB;AACvB,OAAOC,kBAAkB;AACzB,OAAOC,iBAAiB;AAAoD,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE5E,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAAC,IAAA,EAAuM;EAAA,IAAjMC,yBAAyB,GAAAD,IAAA,CAAzBC,yBAAyB;IAAEC,UAAU,GAAAF,IAAA,CAAVE,UAAU;IAAEC,OAAO,GAAAH,IAAA,CAAPG,OAAO;IAAEC,WAAW,GAAAJ,IAAA,CAAXI,WAAW;IAAEC,YAAY,GAAAL,IAAA,CAAZK,YAAY;IAAEC,aAAa,GAAAN,IAAA,CAAbM,aAAa;IAAEC,SAAS,GAAAP,IAAA,CAATO,SAAS;IAAEC,eAAe,GAAAR,IAAA,CAAfQ,eAAe;IAAEC,yBAAyB,GAAAT,IAAA,CAAzBS,yBAAyB;IAAEC,qBAAqB,GAAAV,IAAA,CAArBU,qBAAqB;EAC9L,IAAGH,SAAS,IAAIN,yBAAyB,IAAI,CAAC,EAAEO,eAAe,CAAC,CAAC;EACjE,OACEV,KAAA,CAACa,IAAI;IAACC,KAAK,EAAE;MAAEC,eAAe,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAG,CAAE;IAAAC,QAAA,GACpDnB,IAAA,CAACP,eAAe;MAAA0B,QAAA,EACdnB,IAAA,CAACe,IAAI;QAACC,KAAK,EAAE;UAAEI,IAAI,EAAE,CAAC;UAAEC,cAAc,EAAE;QAAW,CAAE;QAAAF,QAAA,EACnDjB,KAAA,CAACa,IAAI;UAACC,KAAK,EAAE;YAAEM,aAAa,EAAE,KAAK;YAAED,cAAc,EAAE,eAAe;YAAEE,UAAU,EAAE,UAAU;YAAEC,iBAAiB,EAAE,EAAE;YAAEC,eAAe,EAAE;UAAG,CAAE;UAAAN,QAAA,GACzInB,IAAA,CAACJ,gBAAgB;YAACS,yBAAyB,EAAEA,yBAA0B;YAACM,SAAS,EAAEA,SAAU;YAACL,UAAU,EAAEA;UAAW,CAAE,CAAC,EACxHN,IAAA,CAACH,kBAAkB;YAACU,OAAO,EAAEA,OAAQ;YAACC,WAAW,EAAEA,WAAY;YAACC,YAAY,EAAEA;UAAa,CAAE,CAAC,EAC9FT,IAAA,CAACL,iBAAiB;YAACgB,SAAS,EAAEA,SAAU;YAACC,eAAe,EAAEA;UAAgB,CAAE,CAAC;QAAA,CACzE;MAAC,CACH;IAAC,CACQ,CAAC,EAClBZ,IAAA,CAACF,iBAAiB;MAACY,aAAa,EAAEA,aAAc;MAACgB,OAAO,EAAEb,yBAA0B;MAACc,KAAK,EAAEb;IAAsB,CAAE,CAAC;EAAA,CACjH,CAAC;AAEX,CAAC;AAED,IAAMc,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,KAAS;EAAA,OAAM;IACtCxB,yBAAyB,EAAEwB,KAAK,CAACC,WAAW,CAACC,0BAA0B,CAAC1B;EAC1E,CAAC;AAAA,CAAC;AAEF,eAAeX,OAAO,CAACkC,eAAe,CAAC,CAACzB,cAAc,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}