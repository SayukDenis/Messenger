{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { styles } from \"./Style/Style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PIN_LENGTH = 6;\nexport default function CodePassword() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    pin = _useState2[0],\n    setPin = _useState2[1];\n  var handleCodeCellPress = function handleCodeCellPress(value) {\n    if (pin.length < PIN_LENGTH) {\n      setPin(pin + value);\n    }\n  };\n  var renderCodeCells = function renderCodeCells() {\n    var codeCells = [];\n    var _loop = function _loop(i) {\n      codeCells.push(_jsx(TouchableOpacity, {\n        style: styles.codeCell,\n        onPress: function onPress() {\n          return handleCodeCellPress(i.toString());\n        },\n        children: _jsx(Text, {\n          children: i\n        })\n      }, i));\n    };\n    for (var i = 1; i <= 9; i++) {\n      _loop(i);\n    }\n    codeCells.push(_jsx(TouchableOpacity, {\n      style: styles.codeCell,\n      onPress: function onPress() {\n        return handleCodeCellPress('0');\n      },\n      children: _jsx(Text, {\n        children: \"0\"\n      })\n    }, 0));\n    return codeCells;\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.header,\n      children: \"Enter the telentic lock code\"\n    }), _jsxs(View, {\n      style: styles.pinContainer,\n      children: [pin.split('').map(function (_, index) {\n        return _jsx(View, {\n          style: [styles.pinDot, styles.activeDot]\n        }, index);\n      }), Array.from({\n        length: PIN_LENGTH - pin.length\n      }).map(function (_, index) {\n        return _jsx(View, {\n          style: styles.pinDot\n        }, index);\n      })]\n    }), _jsx(View, {\n      style: styles.codeInput\n    }), _jsx(View, {\n      style: styles.codeRow,\n      children: renderCodeCells().slice(0, 3)\n    }), _jsx(View, {\n      style: styles.codeRow,\n      children: renderCodeCells().slice(3, 6)\n    }), _jsx(View, {\n      style: styles.codeRow,\n      children: renderCodeCells().slice(6, 9)\n    }), renderCodeCells().slice(9, 10)]\n  });\n}","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","styles","jsx","_jsx","jsxs","_jsxs","PIN_LENGTH","CodePassword","_useState","_useState2","_slicedToArray","pin","setPin","handleCodeCellPress","value","length","renderCodeCells","codeCells","_loop","i","push","style","codeCell","onPress","toString","children","container","header","pinContainer","split","map","_","index","pinDot","activeDot","Array","from","codeInput","codeRow","slice"],"sources":["D:/repo/Messenger/Messenger/Pages/CodePassword/CodePassword.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TouchableOpacity } from 'react-native';\r\nimport { styles } from './Style/Style';\r\n\r\nconst PIN_LENGTH = 6;\r\n\r\nexport default function CodePassword() {\r\n  const [pin, setPin] = useState('');\r\n\r\n  const handleCodeCellPress = (value: string) => {\r\n    if (pin.length < PIN_LENGTH) {\r\n      setPin(pin + value);\r\n    }\r\n  };\r\n\r\n  const renderCodeCells = () => {\r\n    const codeCells = [];\r\n    for (let i = 1; i <= 9; i++) {\r\n      codeCells.push(\r\n        <TouchableOpacity\r\n          key={i}\r\n          style={styles.codeCell}\r\n          onPress={() => handleCodeCellPress(i.toString())}\r\n        >\r\n          <Text>{i}</Text>\r\n        </TouchableOpacity>\r\n      );\r\n    }\r\n    codeCells.push(\r\n      <TouchableOpacity\r\n        key={0}\r\n        style={styles.codeCell}\r\n        onPress={() => handleCodeCellPress('0')}\r\n      >\r\n        <Text>0</Text>\r\n      </TouchableOpacity>\r\n    );\r\n    return codeCells;\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.header}>Enter the telentic lock code</Text>\r\n      <View style={styles.pinContainer}>\r\n  {pin.split('').map((_, index) => (\r\n    <View key={index} style={[styles.pinDot, styles.activeDot]} />\r\n  ))}\r\n  {Array.from({ length: PIN_LENGTH - pin.length }).map((_, index) => (\r\n    <View key={index} style={styles.pinDot} />\r\n  ))}\r\n</View>\r\n\r\n      <View style={styles.codeInput}/>\r\n        <View style={styles.codeRow}>{renderCodeCells().slice(0, 3)}</View>\r\n        <View style={styles.codeRow}>{renderCodeCells().slice(3, 6)}</View>\r\n        <View style={styles.codeRow}>{renderCodeCells().slice(6, 9)}</View>\r\n        {renderCodeCells().slice(9,10)}\r\n \r\n      </View>\r\n      \r\n  );}  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}