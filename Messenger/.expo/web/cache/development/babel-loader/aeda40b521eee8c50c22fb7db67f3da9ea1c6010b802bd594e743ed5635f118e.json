{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport React, { useEffect, useState } from \"react\";\nimport ContainerForButtonForSettings from \"../../../../SemiComponents/ContainerForButtonForSettings\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SwitchButtonContainer = function SwitchButtonContainer(_ref) {\n  var text = _ref.text,\n    switchState = _ref.switchState;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isEnabled = _useState2[0],\n    setIsEnabled = _useState2[1];\n  var toggleSwitch = function toggleSwitch() {\n    setIsEnabled(function (previousState) {\n      return !previousState;\n    });\n    console.log(text);\n  };\n  useEffect(function () {\n    setIsEnabled(switchState);\n  }, [switchState]);\n  return _jsxs(ContainerForButtonForSettings, {\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 16,\n        marginLeft: 15,\n        alignSelf: \"center\",\n        color: \"#6A38AD\"\n      },\n      children: text\n    }), _jsx(View, {\n      style: {\n        alignSelf: \"center\",\n        marginRight: 10,\n        position: \"relative\"\n      },\n      children: _jsx(Switch, {\n        style: {\n          transform: [{\n            scaleX: 0.75\n          }, {\n            scaleY: 0.75\n          }]\n        },\n        trackColor: {\n          false: \"#868686B2\",\n          true: '#2ADF47'\n        },\n        thumbColor: isEnabled ? 'white' : '#white',\n        ios_backgroundColor: \"#3e3e3e\",\n        onValueChange: toggleSwitch,\n        value: isEnabled\n      })\n    })]\n  });\n};\nexport default SwitchButtonContainer;","map":{"version":3,"names":["React","useEffect","useState","ContainerForButtonForSettings","jsx","_jsx","jsxs","_jsxs","SwitchButtonContainer","_ref","text","switchState","_useState","_useState2","_slicedToArray","isEnabled","setIsEnabled","toggleSwitch","previousState","console","log","children","Text","style","fontSize","marginLeft","alignSelf","color","View","marginRight","position","Switch","transform","scaleX","scaleY","trackColor","false","true","thumbColor","ios_backgroundColor","onValueChange","value"],"sources":["D:/project/1project/Messenger/Messenger/Pages/Settings/Notification/NotificationCenter/SwitchButtonContainer/SwitchButtonContainer.tsx"],"sourcesContent":["import { Text, View , Switch } from \"react-native\";\r\nimport { screenHeight,screenWidth } from \"../../../../ChatList/Constants/ConstantsForChatlist\";\r\nimport React , {useEffect, useState} from \"react\";\r\nimport ContainerForButtonForSettings from \"../../../../SemiComponents/ContainerForButtonForSettings\";\r\ninterface SwitchButtonContainerProps {\r\n  text: string;\r\n  switchState:boolean,\r\n}\r\n\r\nconst SwitchButtonContainer: React.FC<SwitchButtonContainerProps> = ({ text,switchState}) => {\r\n    const [isEnabled, setIsEnabled] = useState(false);\r\n    const toggleSwitch = () => {\r\n      setIsEnabled(previousState => !previousState);\r\n      console.log(text)\r\n    };\r\n    useEffect (()=>{\r\n      setIsEnabled(switchState);\r\n    },[switchState])\r\n  return (\r\n    <ContainerForButtonForSettings>\r\n      <Text\r\n        style={{\r\n          fontSize: 16,\r\n          marginLeft: 15,\r\n          alignSelf: \"center\",\r\n          color: \"#6A38AD\",\r\n        }}\r\n      >\r\n        {text}\r\n      </Text>\r\n      <View\r\n        style={{ alignSelf: \"center\", marginRight: 10, position: \"relative\" }}\r\n      >\r\n          <Switch style = {{transform: [{ scaleX: 0.75 }, { scaleY: 0.75 }]}}\r\n        trackColor={{ false: \"#868686B2\", true: '#2ADF47' }}\r\n        thumbColor={isEnabled ? 'white' : '#white'}\r\n        ios_backgroundColor=\"#3e3e3e\"\r\n        onValueChange={toggleSwitch}\r\n        value={isEnabled}\r\n      />\r\n      </View>\r\n    </ContainerForButtonForSettings>\r\n  );\r\n};\r\nexport default SwitchButtonContainer;"],"mappings":";;;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACjD,OAAOC,6BAA6B;AAAiE,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAMrG,IAAMC,qBAA2D,GAAG,SAA9DA,qBAA2DA,CAAAC,IAAA,EAA4B;EAAA,IAAtBC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IAACC,WAAW,GAAAF,IAAA,CAAXE,WAAW;EACnF,IAAAC,SAAA,GAAkCV,QAAQ,CAAC,KAAK,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1CG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAC9B,IAAMI,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzBD,YAAY,CAAC,UAAAE,aAAa;MAAA,OAAI,CAACA,aAAa;IAAA,EAAC;IAC7CC,OAAO,CAACC,GAAG,CAACV,IAAI,CAAC;EACnB,CAAC;EACDT,SAAS,CAAE,YAAI;IACbe,YAAY,CAACL,WAAW,CAAC;EAC3B,CAAC,EAAC,CAACA,WAAW,CAAC,CAAC;EAClB,OACEJ,KAAA,CAACJ,6BAA6B;IAAAkB,QAAA,GAC5BhB,IAAA,CAACiB,IAAI;MACHC,KAAK,EAAE;QACLC,QAAQ,EAAE,EAAE;QACZC,UAAU,EAAE,EAAE;QACdC,SAAS,EAAE,QAAQ;QACnBC,KAAK,EAAE;MACT,CAAE;MAAAN,QAAA,EAEDX;IAAI,CACD,CAAC,EACPL,IAAA,CAACuB,IAAI;MACHL,KAAK,EAAE;QAAEG,SAAS,EAAE,QAAQ;QAAEG,WAAW,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAW,CAAE;MAAAT,QAAA,EAEpEhB,IAAA,CAAC0B,MAAM;QAACR,KAAK,EAAI;UAACS,SAAS,EAAE,CAAC;YAAEC,MAAM,EAAE;UAAK,CAAC,EAAE;YAAEC,MAAM,EAAE;UAAK,CAAC;QAAC,CAAE;QACrEC,UAAU,EAAE;UAAEC,KAAK,EAAE,WAAW;UAAEC,IAAI,EAAE;QAAU,CAAE;QACpDC,UAAU,EAAEvB,SAAS,GAAG,OAAO,GAAG,QAAS;QAC3CwB,mBAAmB,EAAC,SAAS;QAC7BC,aAAa,EAAEvB,YAAa;QAC5BwB,KAAK,EAAE1B;MAAU,CAClB;IAAC,CACI,CAAC;EAAA,CACsB,CAAC;AAEpC,CAAC;AACD,eAAeP,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}