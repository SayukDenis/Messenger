{"ast":null,"code":"import React from \"react\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { connect } from \"react-redux\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport ReadForSwipeableSvg from \"../../SVG/ReadForSwipeableSvg\";\nimport UnReadMessageSvg from \"../../SVG/UnReadMessageSvg\";\nimport { screenHeight, screenWidth } from \"../../../Constants/ConstantsForChatlist\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ReadOrUnreadForSwipeForContainer = function ReadOrUnreadForSwipeForContainer(_ref) {\n  var procentOfSwipe = _ref.procentOfSwipe,\n    haveUnreadMessagesBool = _ref.haveUnreadMessagesBool,\n    scale1ForLeft = _ref.scale1ForLeft;\n  return _jsxs(Animated.View, {\n    style: {\n      width: screenWidth,\n      justifyContent: \"flex-end\",\n      flexDirection: \"row\",\n      zIndex: 1,\n      opacity: 1,\n      transform: [{\n        translateX: scale1ForLeft.current\n      }]\n    },\n    children: [_jsx(LinearGradient, {\n      colors: [\"rgba(15, 255, 197, 1)\", \"rgba(15, 255, 197, 0.1)\"],\n      start: {\n        x: 1 - 0.2,\n        y: -2 * procentOfSwipe\n      },\n      end: {\n        x: 1,\n        y: 1.2 * procentOfSwipe\n      },\n      style: {\n        position: \"absolute\",\n        width: screenWidth,\n        height: screenHeight * 0.08\n      }\n    }), _jsx(Animated.View, {\n      style: {\n        width: screenWidth * 0.2,\n        height: screenHeight * 0.08,\n        justifyContent: \"center\",\n        flexDirection: \"row\"\n      },\n      children: _jsxs(Animated.View, {\n        style: {\n          justifyContent: \"center\"\n        },\n        children: [haveUnreadMessagesBool ? _jsx(ReadForSwipeableSvg, {\n          width: screenWidth * 0.085,\n          height: screenHeight * 0.05,\n          color: \"white\"\n        }) : _jsx(UnReadMessageSvg, {\n          width: screenWidth * 0.085,\n          height: screenHeight * 0.05,\n          color: \"white\"\n        }), _jsx(Animated.Text, {\n          style: {\n            color: \"white\",\n            alignSelf: \"center\"\n          },\n          children: \"Unread\"\n        })]\n      })\n    })]\n  });\n};\nexport default connect(null)(ReadOrUnreadForSwipeForContainer);","map":{"version":3,"names":["React","Animated","connect","LinearGradient","ReadForSwipeableSvg","UnReadMessageSvg","screenHeight","screenWidth","jsx","_jsx","jsxs","_jsxs","ReadOrUnreadForSwipeForContainer","_ref","procentOfSwipe","haveUnreadMessagesBool","scale1ForLeft","View","style","width","justifyContent","flexDirection","zIndex","opacity","transform","translateX","current","children","colors","start","x","y","end","position","height","color","Text","alignSelf"],"sources":["D:/project/1project/Messenger/Messenger/Pages/ChatList/Components/List of folders containers/CompontentsForChatListContainer/ReadOrUnreadForSwipeForContainer.tsx"],"sourcesContent":["\r\nimport React from \"react\";\r\nimport { Animated } from \"react-native\";\r\nimport { connect } from \"react-redux\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport ReadForSwipeableSvg from \"../../SVG/ReadForSwipeableSvg\";\r\nimport UnReadMessageSvg from \"../../SVG/UnReadMessageSvg\";\r\nimport { screenHeight, screenWidth } from \"../../../Constants/ConstantsForChatlist\";\r\n\r\ninterface ReadOrUnreadForSwipeForContainerProps {\r\n  procentOfSwipe: number;\r\n  haveUnreadMessagesBool: boolean;\r\n  scale1ForLeft: any;\r\n}\r\n\r\nconst ReadOrUnreadForSwipeForContainer: React.FC<ReadOrUnreadForSwipeForContainerProps> = ({\r\n  procentOfSwipe,\r\n  haveUnreadMessagesBool,\r\n  scale1ForLeft,\r\n}) => {\r\n  return (\r\n    <Animated.View\r\n      style={{\r\n        width: screenWidth,\r\n        justifyContent: \"flex-end\",\r\n        flexDirection: \"row\",\r\n        zIndex: 1,\r\n        opacity: 1,\r\n        transform: [\r\n          {\r\n            translateX: scale1ForLeft.current,\r\n          },\r\n        ],\r\n      }}\r\n    >\r\n      <LinearGradient\r\n        colors={[\"rgba(15, 255, 197, 1)\", \"rgba(15, 255, 197, 0.1)\"]}\r\n        start={{\r\n          x: 1 - 0.2,\r\n          y: -2 * procentOfSwipe,\r\n        }}\r\n        end={{\r\n          x: 1,\r\n          y: 1.2 * procentOfSwipe,\r\n        }}\r\n        style={{\r\n          position: \"absolute\",\r\n          width: screenWidth,\r\n          height: screenHeight * 0.08,\r\n        }}\r\n      />\r\n      <Animated.View\r\n        style={{\r\n          width: screenWidth * 0.2,\r\n          height: screenHeight * 0.08,\r\n          justifyContent: \"center\",\r\n          flexDirection: \"row\",\r\n        }}\r\n      >\r\n        <Animated.View\r\n          style={{\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          {haveUnreadMessagesBool ? (\r\n            <ReadForSwipeableSvg\r\n              width={screenWidth * 0.085}\r\n              height={screenHeight * 0.05}\r\n              color=\"white\"\r\n            />\r\n          ) : (\r\n            <UnReadMessageSvg\r\n              width={screenWidth * 0.085}\r\n              height={screenHeight * 0.05}\r\n              color=\"white\"\r\n            />\r\n          )}\r\n          <Animated.Text\r\n            style={{\r\n              color: \"white\",\r\n              alignSelf: \"center\",\r\n            }}\r\n          >\r\n            Unread\r\n          </Animated.Text>\r\n        </Animated.View>\r\n      </Animated.View>\r\n    </Animated.View>\r\n  );\r\n};\r\n\r\nexport default connect(null)(ReadOrUnreadForSwipeForContainer);\r\n"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,QAAA;AAE1B,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,cAAc,QAAQ,sBAAsB;AACrD,OAAOC,mBAAmB;AAC1B,OAAOC,gBAAgB;AACvB,SAASC,YAAY,EAAEC,WAAW;AAAkD,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAQpF,IAAMC,gCAAiF,GAAG,SAApFA,gCAAiFA,CAAAC,IAAA,EAIjF;EAAA,IAHJC,cAAc,GAAAD,IAAA,CAAdC,cAAc;IACdC,sBAAsB,GAAAF,IAAA,CAAtBE,sBAAsB;IACtBC,aAAa,GAAAH,IAAA,CAAbG,aAAa;EAEb,OACEL,KAAA,CAACV,QAAQ,CAACgB,IAAI;IACZC,KAAK,EAAE;MACLC,KAAK,EAAEZ,WAAW;MAClBa,cAAc,EAAE,UAAU;MAC1BC,aAAa,EAAE,KAAK;MACpBC,MAAM,EAAE,CAAC;MACTC,OAAO,EAAE,CAAC;MACVC,SAAS,EAAE,CACT;QACEC,UAAU,EAAET,aAAa,CAACU;MAC5B,CAAC;IAEL,CAAE;IAAAC,QAAA,GAEFlB,IAAA,CAACN,cAAc;MACbyB,MAAM,EAAE,CAAC,uBAAuB,EAAE,yBAAyB,CAAE;MAC7DC,KAAK,EAAE;QACLC,CAAC,EAAE,CAAC,GAAG,GAAG;QACVC,CAAC,EAAE,CAAC,CAAC,GAAGjB;MACV,CAAE;MACFkB,GAAG,EAAE;QACHF,CAAC,EAAE,CAAC;QACJC,CAAC,EAAE,GAAG,GAAGjB;MACX,CAAE;MACFI,KAAK,EAAE;QACLe,QAAQ,EAAE,UAAU;QACpBd,KAAK,EAAEZ,WAAW;QAClB2B,MAAM,EAAE5B,YAAY,GAAG;MACzB;IAAE,CACH,CAAC,EACFG,IAAA,CAACR,QAAQ,CAACgB,IAAI;MACZC,KAAK,EAAE;QACLC,KAAK,EAAEZ,WAAW,GAAG,GAAG;QACxB2B,MAAM,EAAE5B,YAAY,GAAG,IAAI;QAC3Bc,cAAc,EAAE,QAAQ;QACxBC,aAAa,EAAE;MACjB,CAAE;MAAAM,QAAA,EAEFhB,KAAA,CAACV,QAAQ,CAACgB,IAAI;QACZC,KAAK,EAAE;UACLE,cAAc,EAAE;QAClB,CAAE;QAAAO,QAAA,GAEDZ,sBAAsB,GACrBN,IAAA,CAACL,mBAAmB;UAClBe,KAAK,EAAEZ,WAAW,GAAG,KAAM;UAC3B2B,MAAM,EAAE5B,YAAY,GAAG,IAAK;UAC5B6B,KAAK,EAAC;QAAO,CACd,CAAC,GAEF1B,IAAA,CAACJ,gBAAgB;UACfc,KAAK,EAAEZ,WAAW,GAAG,KAAM;UAC3B2B,MAAM,EAAE5B,YAAY,GAAG,IAAK;UAC5B6B,KAAK,EAAC;QAAO,CACd,CACF,EACD1B,IAAA,CAACR,QAAQ,CAACmC,IAAI;UACZlB,KAAK,EAAE;YACLiB,KAAK,EAAE,OAAO;YACdE,SAAS,EAAE;UACb,CAAE;UAAAV,QAAA,EACH;QAED,CAAe,CAAC;MAAA,CACH;IAAC,CACH,CAAC;EAAA,CACH,CAAC;AAEpB,CAAC;AAED,eAAezB,OAAO,CAAC,IAAI,CAAC,CAACU,gCAAgC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}