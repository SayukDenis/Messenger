{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { styles } from \"./Style/Style\";\nimport { PIN_LENGTH } from \"./Script/ScriptCodePassword\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function CodePassword(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    pin = _useState2[0],\n    setPin = _useState2[1];\n  var handleCodeCellPress = function handleCodeCellPress(pin, setPin, value) {\n    if (pin.length < PIN_LENGTH) {\n      setPin(pin + value);\n      if (pin.length === PIN_LENGTH) {\n        navigation.navigate('ChatList');\n      }\n    }\n  };\n  var renderCodeCells = function renderCodeCells(pin, setPin) {\n    var codeCells = [];\n    var _loop = function _loop(i) {\n      codeCells.push(_jsx(TouchableOpacity, {\n        style: styles.codeCell,\n        onPress: function onPress() {\n          return handleCodeCellPress(pin, setPin, i.toString());\n        },\n        children: _jsx(Text, {\n          style: styles.codeCellText,\n          children: i\n        })\n      }, i));\n    };\n    for (var i = 1; i <= 9; i++) {\n      _loop(i);\n    }\n    codeCells.push(_jsx(TouchableOpacity, {\n      style: styles.codeCell,\n      onPress: function onPress() {\n        return handleCodeCellPress(pin, setPin, '0');\n      },\n      children: _jsx(Text, {\n        style: styles.codeCellText,\n        children: \"0\"\n      })\n    }, 0));\n    return codeCells;\n  };\n  var handleDeletePress = function handleDeletePress(pin, setPin) {\n    if (pin.length > 0) {\n      setPin(pin.slice(0, -1));\n    }\n  };\n  return _jsxs(ImageBackground, {\n    source: require(\"./Image/Background.png\"),\n    style: styles.backgroundImage,\n    children: [_jsx(Image, {\n      source: require(\"./Image/Vector.png\"),\n      style: styles.imageStyle\n    }), _jsx(Text, {\n      style: styles.header,\n      children: \"Enter the telentic lock code\"\n    }), _jsxs(View, {\n      style: styles.pinContainer,\n      children: [pin.split('').map(function (_, index) {\n        return _jsx(View, {\n          style: [styles.pinDot, styles.activeDot]\n        }, index);\n      }), Array.from({\n        length: PIN_LENGTH - pin.length\n      }).map(function (_, index) {\n        return _jsx(View, {\n          style: styles.pinDot\n        }, index);\n      })]\n    }), _jsxs(View, {\n      style: styles.codeInput,\n      children: [_jsx(View, {\n        style: styles.codeRow,\n        children: renderCodeCells(pin, setPin).slice(0, 3)\n      }), _jsx(View, {\n        style: styles.codeRow,\n        children: renderCodeCells(pin, setPin).slice(3, 6)\n      }), _jsx(View, {\n        style: styles.codeRow,\n        children: renderCodeCells(pin, setPin).slice(6, 9)\n      }), renderCodeCells(pin, setPin).slice(9, 10)]\n    }), _jsx(Text, {\n      style: styles.header,\n      onPress: function onPress(event) {\n        return handleDeletePress(pin, setPin);\n      },\n      children: \"Delete\"\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","ImageBackground","Image","View","Text","TouchableOpacity","styles","PIN_LENGTH","jsx","_jsx","jsxs","_jsxs","CodePassword","_ref","navigation","_useState","_useState2","_slicedToArray","pin","setPin","handleCodeCellPress","value","length","navigate","renderCodeCells","codeCells","_loop","i","push","style","codeCell","onPress","toString","children","codeCellText","handleDeletePress","slice","source","require","backgroundImage","imageStyle","header","pinContainer","split","map","_","index","pinDot","activeDot","Array","from","codeInput","codeRow","event"],"sources":["D:/repo/Messenger/Messenger/Pages/CodePassword/CodePassword.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { ImageBackground, Image, View, Text, TouchableOpacity } from 'react-native';\r\nimport { styles } from './Style/Style';\r\nimport { PIN_LENGTH, renderCodeCells, handleDeletePress } from './Script/ScriptCodePassword';\r\nimport LinearGradient from 'react-native-linear-gradient';\r\n\r\nexport default function CodePassword({ navigation }) {\r\n  const [pin, setPin] = useState(''); \r\n  const handleCodeCellPress = (\r\n    pin: string, \r\n    setPin: React.Dispatch<React.SetStateAction<string>>, \r\n    value: string,\r\n  ) => {\r\n    if (pin.length < PIN_LENGTH) {\r\n      setPin(pin + value);\r\n      if (pin.length === PIN_LENGTH) {\r\n        navigation.navigate('ChatList');\r\n      }\r\n    }\r\n  };\r\n  \r\n  const renderCodeCells = (pin: string, setPin: React.Dispatch<React.SetStateAction<string>>) => {\r\n    const codeCells = [];\r\n    for (let i = 1; i <= 9; i++) {\r\n      codeCells.push(\r\n        <TouchableOpacity\r\n          key={i}\r\n          style={styles.codeCell}\r\n          onPress={() => handleCodeCellPress(pin, setPin, i.toString())}\r\n        >\r\n          <Text style={styles.codeCellText}>{i}</Text>\r\n        </TouchableOpacity>\r\n      );\r\n    }\r\n    codeCells.push(\r\n      <TouchableOpacity\r\n        key={0}\r\n        style={styles.codeCell}\r\n        onPress={() => handleCodeCellPress(pin, setPin, '0')}\r\n      >\r\n        <Text style={styles.codeCellText}>0</Text>\r\n      </TouchableOpacity>\r\n    );\r\n    return codeCells;\r\n  };\r\n  \r\n   const handleDeletePress = (pin: string, setPin: React.Dispatch<React.SetStateAction<string>>) => {\r\n    if (pin.length > 0) {\r\n      setPin(pin.slice(0, -1));\r\n    }\r\n  };\r\n  return (  \r\n    <ImageBackground source={require('./Image/Background.png')} style={styles.backgroundImage}>\r\n    \r\n            <Image source={require('./Image/Vector.png')}\r\n            style={styles.imageStyle}/>\r\n      <Text style={styles.header}>Enter the telentic lock code</Text>\r\n      <View style={styles.pinContainer}>\r\n  {pin.split('').map((_, index) => (\r\n    <View key={index} style={[styles.pinDot, styles.activeDot]} />\r\n  ))}\r\n  {Array.from({ length: PIN_LENGTH - pin.length }).map((_, index) => (\r\n    <View key={index} style={styles.pinDot} />\r\n  ))}\r\n  </View>\r\n  <View style={styles.codeInput}>\r\n        <View style={styles.codeRow}>{renderCodeCells(pin, setPin).slice(0, 3)}</View>\r\n        <View style={styles.codeRow}>{renderCodeCells(pin, setPin).slice(3, 6)}</View>\r\n        <View style={styles.codeRow}>{renderCodeCells(pin, setPin).slice(6, 9)}</View>\r\n        {renderCodeCells(pin, setPin).slice(9, 10)}\r\n      </View>\r\n        <Text style={styles.header} onPress={(event) => handleDeletePress(pin, setPin)}>Delete</Text>\r\n    </ImageBackground>\r\n  );}  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}