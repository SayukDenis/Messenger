{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { user } from \"../DBUser.tsx\";\nimport styles from \"./Styles.tsx\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Links = function Links(props) {\n  return _jsx(View, {\n    style: styles.mediaContainer,\n    children: _jsx(FlatList, {\n      data: user.links,\n      keyExtractor: function keyExtractor(item) {\n        return user.links.indexOf(item).toString();\n      },\n      horizontal: false,\n      numColumns: 1,\n      contentContainerStyle: {\n        paddingBottom: 0.09 * Dimensions.get(\"screen\").height\n      },\n      scrollEnabled: false,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsxs(TouchableOpacity, {\n          style: styles.fileContainer,\n          onPress: function onPress() {\n            alert(item.url + \"'s voice message is pressed...\");\n          },\n          children: [_jsx(View, {\n            style: styles.fileFormatContainer,\n            children: _jsx(Text, {\n              numberOfLines: 1,\n              style: styles.fileFormatText,\n              children: \"png\"\n            })\n          }), _jsx(View, {\n            style: [styles.fileNameContainer, {\n              width: \"95%\",\n              bottom: \"50%\"\n            }],\n            children: _jsx(Text, {\n              numberOfLines: 1,\n              style: styles.fileNameText,\n              children: item.name\n            })\n          }), _jsx(View, {\n            style: [styles.fileNameContainer, {\n              width: \"95%\",\n              top: \"50%\"\n            }],\n            children: _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                Linking.openURL(item.url);\n              },\n              children: _jsx(Text, {\n                numberOfLines: 1,\n                style: [styles.fileNameText, {\n                  color: \"rgb(43, 118, 134)\"\n                }],\n                children: item.url\n              })\n            })\n          })]\n        });\n      }\n    })\n  });\n};\nexport default Links;","map":{"version":3,"names":["React","View","FlatList","Text","Dimensions","TouchableOpacity","Linking","user","styles","jsx","_jsx","jsxs","_jsxs","Links","props","style","mediaContainer","children","data","links","keyExtractor","item","indexOf","toString","horizontal","numColumns","contentContainerStyle","paddingBottom","get","height","scrollEnabled","renderItem","_ref","fileContainer","onPress","alert","url","fileFormatContainer","numberOfLines","fileFormatText","fileNameContainer","width","bottom","fileNameText","name","top","openURL","color"],"sources":["/home/zatibmag/Desktop/Project/Messenger/Messenger/Pages/Profiles/SemiComponents/MainScreen/Links.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React from \"react\";\r\nimport {\r\n  View,\r\n  FlatList,\r\n  Text,\r\n  Dimensions,\r\n  TouchableOpacity,\r\n  Linking,\r\n} from \"react-native\";\r\nimport { user } from \"../DBUser.tsx\";\r\nimport styles from \"./Styles.tsx\";\r\n\r\ninterface LinksProps {}\r\n\r\nconst Links: React.FC<LinksProps> = (props) => {\r\n  return (\r\n    <View style={styles.mediaContainer}>\r\n      <FlatList\r\n        data={user.links}\r\n        keyExtractor={(item) => user.links.indexOf(item).toString()}\r\n        horizontal={false}\r\n        numColumns={1}\r\n        contentContainerStyle={{\r\n          paddingBottom: 0.09 * Dimensions.get(\"screen\").height,\r\n        }}\r\n        scrollEnabled={false}\r\n        renderItem={({ item }) => {\r\n          return (\r\n            <TouchableOpacity\r\n              style={styles.fileContainer}\r\n              onPress={() => {\r\n                alert(item.url + \"'s voice message is pressed...\");\r\n              }}\r\n            >\r\n              <View style={styles.fileFormatContainer}>\r\n                <Text numberOfLines={1} style={styles.fileFormatText}>\r\n                  png\r\n                </Text>\r\n              </View>\r\n              <View\r\n                style={[\r\n                  styles.fileNameContainer,\r\n                  { width: \"95%\", bottom: \"50%\" },\r\n                ]}\r\n              >\r\n                <Text numberOfLines={1} style={styles.fileNameText}>\r\n                  {item.name}\r\n                </Text>\r\n              </View>\r\n              <View\r\n                style={[styles.fileNameContainer, { width: \"95%\", top: \"50%\" }]}\r\n              >\r\n                <TouchableOpacity\r\n                  onPress={() => {\r\n                    Linking.openURL(item.url);\r\n                  }}\r\n                >\r\n                  <Text\r\n                    numberOfLines={1}\r\n                    style={[\r\n                      styles.fileNameText,\r\n                      { color: \"rgb(43, 118, 134)\" },\r\n                    ]}\r\n                  >\r\n                    {item.url}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </TouchableOpacity>\r\n          );\r\n        }}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Links;\r\n"],"mappings":"AAEA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,OAAA;AAS1B,SAASC,IAAI;AACb,OAAOC,MAAM;AAAqB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAIlC,IAAMC,KAA2B,GAAG,SAA9BA,KAA2BA,CAAIC,KAAK,EAAK;EAC7C,OACEJ,IAAA,CAACT,IAAI;IAACc,KAAK,EAAEP,MAAM,CAACQ,cAAe;IAAAC,QAAA,EACjCP,IAAA,CAACR,QAAQ;MACPgB,IAAI,EAAEX,IAAI,CAACY,KAAM;MACjBC,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAKd,IAAI,CAACY,KAAK,CAACG,OAAO,CAACD,IAAI,CAAC,CAACE,QAAQ,CAAC,CAAC;MAAA,CAAC;MAC5DC,UAAU,EAAE,KAAM;MAClBC,UAAU,EAAE,CAAE;MACdC,qBAAqB,EAAE;QACrBC,aAAa,EAAE,IAAI,GAAGvB,UAAU,CAACwB,GAAG,CAAC,QAAQ,CAAC,CAACC;MACjD,CAAE;MACFC,aAAa,EAAE,KAAM;MACrBC,UAAU,EAAE,SAAAA,WAAAC,IAAA,EAAc;QAAA,IAAXX,IAAI,GAAAW,IAAA,CAAJX,IAAI;QACjB,OACET,KAAA,CAACP,gBAAgB;UACfU,KAAK,EAAEP,MAAM,CAACyB,aAAc;UAC5BC,OAAO,EAAE,SAAAA,QAAA,EAAM;YACbC,KAAK,CAACd,IAAI,CAACe,GAAG,GAAG,gCAAgC,CAAC;UACpD,CAAE;UAAAnB,QAAA,GAEFP,IAAA,CAACT,IAAI;YAACc,KAAK,EAAEP,MAAM,CAAC6B,mBAAoB;YAAApB,QAAA,EACtCP,IAAA,CAACP,IAAI;cAACmC,aAAa,EAAE,CAAE;cAACvB,KAAK,EAAEP,MAAM,CAAC+B,cAAe;cAAAtB,QAAA,EAAC;YAEtD,CAAM;UAAC,CACH,CAAC,EACPP,IAAA,CAACT,IAAI;YACHc,KAAK,EAAE,CACLP,MAAM,CAACgC,iBAAiB,EACxB;cAAEC,KAAK,EAAE,KAAK;cAAEC,MAAM,EAAE;YAAM,CAAC,CAC/B;YAAAzB,QAAA,EAEFP,IAAA,CAACP,IAAI;cAACmC,aAAa,EAAE,CAAE;cAACvB,KAAK,EAAEP,MAAM,CAACmC,YAAa;cAAA1B,QAAA,EAChDI,IAAI,CAACuB;YAAI,CACN;UAAC,CACH,CAAC,EACPlC,IAAA,CAACT,IAAI;YACHc,KAAK,EAAE,CAACP,MAAM,CAACgC,iBAAiB,EAAE;cAAEC,KAAK,EAAE,KAAK;cAAEI,GAAG,EAAE;YAAM,CAAC,CAAE;YAAA5B,QAAA,EAEhEP,IAAA,CAACL,gBAAgB;cACf6B,OAAO,EAAE,SAAAA,QAAA,EAAM;gBACb5B,OAAO,CAACwC,OAAO,CAACzB,IAAI,CAACe,GAAG,CAAC;cAC3B,CAAE;cAAAnB,QAAA,EAEFP,IAAA,CAACP,IAAI;gBACHmC,aAAa,EAAE,CAAE;gBACjBvB,KAAK,EAAE,CACLP,MAAM,CAACmC,YAAY,EACnB;kBAAEI,KAAK,EAAE;gBAAoB,CAAC,CAC9B;gBAAA9B,QAAA,EAEDI,IAAI,CAACe;cAAG,CACL;YAAC,CACS;UAAC,CACf,CAAC;QAAA,CACS,CAAC;MAEvB;IAAE,CACH;EAAC,CACE,CAAC;AAEX,CAAC;AAED,eAAevB,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}