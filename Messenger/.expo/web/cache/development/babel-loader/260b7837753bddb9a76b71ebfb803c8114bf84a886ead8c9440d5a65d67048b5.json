{"ast":null,"code":"import BranchesButtonIfExistForChatListContainer from \"./BranchesButtonIfExistForChatListContainer\";\nimport LastMessageContentForChatListContainer from \"./LastMessageContentForChatListContainer\";\nimport HighContainerForChatListCentralContainer from \"./HighContainerForChatListCentralContainer\";\nimport React, { useMemo } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { listOfChatsStyle } from \"../../../Styles/ListOfChatsStyle\";\nimport { connect, useSelector } from \"react-redux\";\nimport getNameOfChat from \"../Functions/GetNameOfChat\";\nimport formattedTime from \"../Functions/TimeOfLastMessage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ChatContentForCentralChat = function ChatContentForCentralChat(_ref) {\n  var chat = _ref.chat,\n    onBranchPress = _ref.onBranchPress;\n  var lastMessage = chat != null && chat.messages ? chat == null ? void 0 : chat.messages[chat.messages.length - 1] : undefined;\n  var selfProfile = useSelector(function (state) {\n    var self = state.selfProfileUser;\n    return self;\n  });\n  var nameOfChat = useMemo(function () {\n    return getNameOfChat(chat, selfProfile);\n  }, [chat]);\n  var time = useMemo(function () {\n    return formattedTime(lastMessage);\n  }, [lastMessage == null ? void 0 : lastMessage.sendingTime]);\n  return _jsxs(View, {\n    style: listOfChatsStyle.containerForOther,\n    children: [_jsx(HighContainerForChatListCentralContainer, {\n      nameOfChat: nameOfChat,\n      chat: chat,\n      time: time\n    }), _jsxs(View, {\n      style: {\n        flexDirection: \"row\"\n      },\n      children: [_jsx(LastMessageContentForChatListContainer, {\n        lastMessage: lastMessage,\n        content: lastMessage == null ? void 0 : lastMessage.content\n      }), _jsx(BranchesButtonIfExistForChatListContainer, {\n        moreThan0Branches: chat.branches.length > 0,\n        onBranchPress: onBranchPress\n      })]\n    })]\n  });\n};\nexport default connect(null)(ChatContentForCentralChat);","map":{"version":3,"names":["BranchesButtonIfExistForChatListContainer","LastMessageContentForChatListContainer","HighContainerForChatListCentralContainer","React","useMemo","View","listOfChatsStyle","connect","useSelector","getNameOfChat","formattedTime","jsx","_jsx","jsxs","_jsxs","ChatContentForCentralChat","_ref","chat","onBranchPress","lastMessage","messages","length","undefined","selfProfile","state","self","selfProfileUser","nameOfChat","time","sendingTime","style","containerForOther","children","flexDirection","content","moreThan0Branches","branches"],"sources":["D:/project/1project/Messenger/Messenger/Pages/ChatList/Components/List of folders containers/CompontentsForChatListContainer/ChatContentForCentralChat.tsx"],"sourcesContent":["import BranchesButtonIfExistForChatListContainer  from './BranchesButtonIfExistForChatListContainer';\r\nimport LastMessageContentForChatListContainer  from './LastMessageContentForChatListContainer';\r\nimport HighContainerForChatListCentralContainer from \"./HighContainerForChatListCentralContainer\";\r\nimport React, { useMemo } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { listOfChatsStyle } from \"../../../Styles/ListOfChatsStyle\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport getNameOfChat from \"../Functions/GetNameOfChat\";\r\nimport Message from \"../../../../../dao/Models/Message\";\r\nimport SelfProfile from \"../../../../../dao/Models/SelfProfile\";\r\nimport formattedTime from \"../Functions/TimeOfLastMessage\";\r\nimport Chat from '../../../../../dao/Models/Chats/Chat';\r\ninterface ChatContentForCentralChatProps {\r\n  chat: Chat;\r\n  onBranchPress: () => void;\r\n}\r\n\r\nconst ChatContentForCentralChat: React.FC<ChatContentForCentralChatProps> = ({ chat, onBranchPress }) => {\r\n  const lastMessage: Message | undefined = chat?.messages\r\n    ? chat?.messages[chat.messages.length - 1]\r\n    : undefined;\r\n  const selfProfile: SelfProfile = useSelector((state: any) => {\r\n    const self: SelfProfile = state.selfProfileUser;\r\n    return self;\r\n  });\r\n  const nameOfChat = useMemo(() => getNameOfChat(chat, selfProfile), [chat]);\r\n  const time = useMemo(\r\n    () => formattedTime(lastMessage),\r\n    [lastMessage?.sendingTime]\r\n  );\r\n  return (\r\n    <View style={listOfChatsStyle.containerForOther}>\r\n      <HighContainerForChatListCentralContainer   nameOfChat={nameOfChat} chat={chat} time={time}  />\r\n      <View\r\n        style={{\r\n          flexDirection: \"row\",\r\n        }}\r\n      >\r\n        <LastMessageContentForChatListContainer   lastMessage={lastMessage} content={lastMessage?.content}  />\r\n        <BranchesButtonIfExistForChatListContainer moreThan0Branches={chat.branches.length>0}  onBranchPress={onBranchPress}  />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\nexport default connect(null)(ChatContentForCentralChat)"],"mappings":"AAAA,OAAOA,yCAAyC;AAChD,OAAOC,sCAAsC;AAC7C,OAAOC,wCAAwC;AAC/C,OAAOC,KAAK,IAAIC,OAAO,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAEvC,SAASC,gBAAgB;AACzB,SAASC,OAAO,EAAEC,WAAW,QAAQ,aAAa;AAClD,OAAOC,aAAa;AAGpB,OAAOC,aAAa;AAAuC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAO3D,IAAMC,yBAAmE,GAAG,SAAtEA,yBAAmEA,CAAAC,IAAA,EAAgC;EAAA,IAA1BC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IAAEC,aAAa,GAAAF,IAAA,CAAbE,aAAa;EAChG,IAAMC,WAAgC,GAAGF,IAAI,YAAJA,IAAI,CAAEG,QAAQ,GACnDH,IAAI,oBAAJA,IAAI,CAAEG,QAAQ,CAACH,IAAI,CAACG,QAAQ,CAACC,MAAM,GAAG,CAAC,CAAC,GACxCC,SAAS;EACb,IAAMC,WAAwB,GAAGf,WAAW,CAAC,UAACgB,KAAU,EAAK;IAC3D,IAAMC,IAAiB,GAAGD,KAAK,CAACE,eAAe;IAC/C,OAAOD,IAAI;EACb,CAAC,CAAC;EACF,IAAME,UAAU,GAAGvB,OAAO,CAAC;IAAA,OAAMK,aAAa,CAACQ,IAAI,EAAEM,WAAW,CAAC;EAAA,GAAE,CAACN,IAAI,CAAC,CAAC;EAC1E,IAAMW,IAAI,GAAGxB,OAAO,CAClB;IAAA,OAAMM,aAAa,CAACS,WAAW,CAAC;EAAA,GAChC,CAACA,WAAW,oBAAXA,WAAW,CAAEU,WAAW,CAC3B,CAAC;EACD,OACEf,KAAA,CAACT,IAAI;IAACyB,KAAK,EAAExB,gBAAgB,CAACyB,iBAAkB;IAAAC,QAAA,GAC9CpB,IAAA,CAACV,wCAAwC;MAAGyB,UAAU,EAAEA,UAAW;MAACV,IAAI,EAAEA,IAAK;MAACW,IAAI,EAAEA;IAAK,CAAG,CAAC,EAC/Fd,KAAA,CAACT,IAAI;MACHyB,KAAK,EAAE;QACLG,aAAa,EAAE;MACjB,CAAE;MAAAD,QAAA,GAEFpB,IAAA,CAACX,sCAAsC;QAAGkB,WAAW,EAAEA,WAAY;QAACe,OAAO,EAAEf,WAAW,oBAAXA,WAAW,CAAEe;MAAQ,CAAG,CAAC,EACtGtB,IAAA,CAACZ,yCAAyC;QAACmC,iBAAiB,EAAElB,IAAI,CAACmB,QAAQ,CAACf,MAAM,GAAC,CAAE;QAAEH,aAAa,EAAEA;MAAc,CAAG,CAAC;IAAA,CACpH,CAAC;EAAA,CACH,CAAC;AAEX,CAAC;AACD,eAAeX,OAAO,CAAC,IAAI,CAAC,CAACQ,yBAAyB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}