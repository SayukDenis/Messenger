{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport styles from \"../Styles\";\nimport CheckMarkIcon from \"../Icons/CheckMarkIcon\";\nimport CrossIcon from \"../Icons/CrossIcon\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar screenWidth = Dimensions.get(\"screen\").width;\nvar screenHeight = Dimensions.get(\"screen\").height;\nvar figmaHeightPixelConverter = screenHeight / 648;\nvar Photos = function Photos(props) {\n  return _jsxs(View, {\n    style: [styles.mediaContainer, {\n      opacity: 1,\n      top: props.isMultimediaBarEnabled ? 25 * figmaHeightPixelConverter : 0\n    }],\n    children: [_jsx(FlatList, {\n      data: props.data,\n      keyExtractor: function keyExtractor(item) {\n        return props.data.indexOf(item).toString();\n      },\n      horizontal: false,\n      numColumns: 3,\n      contentContainerStyle: {\n        gap: 0.002 * screenHeight,\n        paddingBottom: 0.65 * screenHeight\n      },\n      scrollEnabled: false,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            props.onPress(item);\n          },\n          onLongPress: function onLongPress() {\n            props.onLongPress(item);\n          },\n          style: [styles.photo, {\n            left: 0.005 * screenWidth * (props.data.indexOf(item) % 3)\n          }],\n          children: [_jsx(Image, {\n            style: styles.photo,\n            source: {\n              uri: item.url\n            }\n          }), props.isPhotoSelectionVisible && _jsx(View, {\n            style: styles.checkMarkContainerForPhoto,\n            children: props.isCheckMarkVisible(item) && _jsx(CheckMarkIcon, {\n              style: styles.checkMarkIcon\n            })\n          })]\n        });\n      }\n    }), props.hasAddNewPhotoFeature && _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        props.onAddNewPhotoPress();\n      },\n      style: [styles.photo, {\n        position: \"absolute\",\n        top: Math.floor(props.data.length / 3) * 0.162 * screenHeight,\n        left: props.data.length % 3 == 0 ? 0 : props.data.length % 3 == 1 ? 0.335 * screenWidth : 0.67 * screenWidth\n      }],\n      children: _jsx(View, {\n        style: [styles.photo, {\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          backgroundColor: \"rgb(32, 32, 32)\"\n        }],\n        children: _jsx(CrossIcon, {\n          style: styles.plusAlbumIcon\n        })\n      })\n    })]\n  });\n};\nexport default Photos;","map":{"version":3,"names":["React","View","FlatList","TouchableOpacity","Image","Dimensions","styles","CheckMarkIcon","CrossIcon","jsx","_jsx","jsxs","_jsxs","screenWidth","get","width","screenHeight","height","figmaHeightPixelConverter","Photos","props","style","mediaContainer","opacity","top","isMultimediaBarEnabled","children","data","keyExtractor","item","indexOf","toString","horizontal","numColumns","contentContainerStyle","gap","paddingBottom","scrollEnabled","renderItem","_ref","onPress","onLongPress","photo","left","source","uri","url","isPhotoSelectionVisible","checkMarkContainerForPhoto","isCheckMarkVisible","checkMarkIcon","hasAddNewPhotoFeature","onAddNewPhotoPress","position","Math","floor","length","justifyContent","alignItems","backgroundColor","plusAlbumIcon"],"sources":["C:/Users/T480/source/repos/Messenger/Messenger/Pages/Profiles/SemiComponents/Screens/MainScreen/Multimedia/Photos.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React from \"react\";\r\nimport {\r\n  View,\r\n  FlatList,\r\n  TouchableOpacity,\r\n  Image,\r\n  Dimensions,\r\n} from \"react-native\";\r\nimport { PhotoOrVideo } from \"../../../DatabaseSimulation/DBClasses\";\r\nimport styles from \"../Styles\";\r\nimport CheckMarkIcon from \"../Icons/CheckMarkIcon\";\r\nimport CrossIcon from \"../Icons/CrossIcon\";\r\n\r\nconst screenWidth = Dimensions.get(\"screen\").width;\r\nconst screenHeight = Dimensions.get(\"screen\").height;\r\nconst figmaHeightPixelConverter = screenHeight / 648;\r\n\r\ninterface PhotosProps {\r\n  isPhotoSelectionVisible: boolean;\r\n  data: Array<PhotoOrVideo>;\r\n  onPress: (value: PhotoOrVideo) => void;\r\n  onLongPress?: (value: PhotoOrVideo) => void;\r\n  hasAddNewPhotoFeature?: boolean;\r\n  onAddNewPhotoPress?: () => void;\r\n  isMultimediaBarEnabled?: boolean;\r\n  isCheckMarkVisible?: (value: PhotoOrVideo) => boolean;\r\n}\r\n\r\nconst Photos: React.FC<PhotosProps> = (props) => {\r\n  return (\r\n    <View\r\n      style={[\r\n        styles.mediaContainer,\r\n        {\r\n          opacity: 1,\r\n          top: props.isMultimediaBarEnabled\r\n            ? 25 * figmaHeightPixelConverter\r\n            : 0,\r\n        },\r\n      ]}\r\n    >\r\n      <FlatList\r\n        data={props.data}\r\n        keyExtractor={(item) => props.data.indexOf(item).toString()}\r\n        horizontal={false}\r\n        numColumns={3}\r\n        contentContainerStyle={{\r\n          gap: 0.002 * screenHeight,\r\n          paddingBottom: 0.65 * screenHeight,\r\n        }}\r\n        scrollEnabled={false}\r\n        renderItem={({ item }) => {\r\n          return (\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                props.onPress(item);\r\n              }}\r\n              onLongPress={() => {\r\n                props.onLongPress(item);\r\n              }}\r\n              style={[\r\n                styles.photo,\r\n                {\r\n                  left: 0.005 * screenWidth * (props.data.indexOf(item) % 3),\r\n                },\r\n              ]}\r\n            >\r\n              <Image style={styles.photo} source={{ uri: item.url }} />\r\n              {props.isPhotoSelectionVisible && (\r\n                <View style={styles.checkMarkContainerForPhoto}>\r\n                  {props.isCheckMarkVisible(item) && (\r\n                    <CheckMarkIcon style={styles.checkMarkIcon} />\r\n                  )}\r\n                </View>\r\n              )}\r\n            </TouchableOpacity>\r\n          );\r\n        }}\r\n      />\r\n      {props.hasAddNewPhotoFeature && (\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            props.onAddNewPhotoPress();\r\n          }}\r\n          style={[\r\n            styles.photo,\r\n            {\r\n              position: \"absolute\",\r\n              top: Math.floor(props.data.length / 3) * 0.162 * screenHeight,\r\n              left:\r\n                props.data.length % 3 == 0\r\n                  ? 0\r\n                  : props.data.length % 3 == 1\r\n                  ? 0.335 * screenWidth\r\n                  : 0.67 * screenWidth,\r\n            },\r\n          ]}\r\n        >\r\n          <View\r\n            style={[\r\n              styles.photo,\r\n              {\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgb(32, 32, 32)\",\r\n              },\r\n            ]}\r\n          >\r\n            <CrossIcon style={styles.plusAlbumIcon} />\r\n          </View>\r\n        </TouchableOpacity>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Photos;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}