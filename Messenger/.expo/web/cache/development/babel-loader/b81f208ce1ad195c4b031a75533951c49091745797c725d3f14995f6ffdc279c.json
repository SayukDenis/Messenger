{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { dataSource } from \"../../local/database\";\nimport Role from \"../../Models/Chats/Role\";\nvar manager = dataSource.manager;\nexport function roleOperations() {\n  return _roleOperations.apply(this, arguments);\n}\nfunction _roleOperations() {\n  _roleOperations = _asyncToGenerator(function* () {\n    console.log('\\n\\tRoles start\\n');\n    if (!dataSource.isInitialized) yield dataSource.initialize();\n    var role1 = new Role('name1', 'üòä');\n    role1.removeMembers = true;\n    role1.blockMembers = true;\n    role1.manageRoles = true;\n    role1.manageBranches = true;\n    role1.seeAuditLog = true;\n    role1.considerChannels = true;\n    role1.manageServer = true;\n    role1.sendMessage = true;\n    role1.sendVoiceMessage = true;\n    var role2 = new Role('name2', 'üòç');\n    role2.removeMembers = false;\n    role2.blockMembers = false;\n    role2.manageRoles = true;\n    role2.manageBranches = false;\n    role2.seeAuditLog = true;\n    role2.considerChannels = true;\n    role2.manageServer = false;\n    role2.sendMessage = false;\n    role2.sendVoiceMessage = true;\n    var role3 = new Role('name3', 'üëø');\n    yield manager.save([role1, role2, role3]);\n    console.log('Roles have been saved');\n    readRoles();\n    role1.removeMembers = false;\n    role1.blockMembers = false;\n    role2.manageRoles = false;\n    role2.manageBranches = true;\n    role3.removeMembers = true;\n    role3.manageRoles = false;\n    role3.manageBranches = true;\n    yield manager.save([role1, role2, role3]);\n    console.log('Roles have been updated');\n    readRoles();\n    yield manager.remove([role1, role2, role3]);\n    console.log('Roles have been removed');\n    readRoles();\n  });\n  return _roleOperations.apply(this, arguments);\n}\nexport function readRoles() {\n  return _readRoles.apply(this, arguments);\n}\nfunction _readRoles() {\n  _readRoles = _asyncToGenerator(function* () {\n    var savedRoles = yield manager.find(Role);\n    console.log(`Roles quantity: ${savedRoles.length}`);\n    for (var role of savedRoles) {\n      console.log(role);\n    }\n  });\n  return _readRoles.apply(this, arguments);\n}","map":{"version":3,"names":["dataSource","Role","manager","roleOperations","_roleOperations","apply","arguments","_asyncToGenerator","console","log","isInitialized","initialize","role1","removeMembers","blockMembers","manageRoles","manageBranches","seeAuditLog","considerChannels","manageServer","sendMessage","sendVoiceMessage","role2","role3","save","readRoles","remove","_readRoles","savedRoles","find","length","role"],"sources":["C:/Users/T480/source/repos/Messenger/Messenger/dao/test/manualTest/roleOperations.ts"],"sourcesContent":["import { dataSource } from \"../../local/database\";\r\nimport Chat from '../../Models/Chats/Chat';\r\nimport Folder from \"../../Models/Folder\";\r\nimport { readChats } from \"./chatOperations\";\r\nimport Branch from \"../../Models/Chats/Branch\";\r\nimport Role from \"../../Models/Chats/Role\";\r\n\r\nconst manager = dataSource.manager;\r\n\r\nexport async function roleOperations() {\r\n    console.log('\\n\\tRoles start\\n');\r\n\r\n    if (!dataSource.isInitialized) await dataSource.initialize();\r\n\r\n    const role1 = new Role('name1', 'üòä');\r\n    role1.removeMembers = true;\r\n    role1.blockMembers = true;\r\n    role1.manageRoles = true;\r\n    role1.manageBranches = true;\r\n    role1.seeAuditLog = true;\r\n    role1.considerChannels = true;\r\n    role1.manageServer = true;\r\n    role1.sendMessage = true;\r\n    role1.sendVoiceMessage = true;\r\n\r\n    const role2 = new Role('name2', 'üòç');\r\n    role2.removeMembers = false;\r\n    role2.blockMembers = false;\r\n    role2.manageRoles = true;\r\n    role2.manageBranches = false;\r\n    role2.seeAuditLog = true;\r\n    role2.considerChannels = true;\r\n    role2.manageServer = false;\r\n    role2.sendMessage = false;\r\n    role2.sendVoiceMessage = true;\r\n\r\n    const role3 = new Role('name3', 'üëø'); //leave as default\r\n\r\n    //Save\r\n    await manager.save([role1, role2, role3])\r\n    console.log('Roles have been saved')\r\n\r\n    //Read\r\n    readRoles()\r\n\r\n    //Update\r\n    role1.removeMembers = false;\r\n    role1.blockMembers = false;\r\n\r\n    role2.manageRoles = false;\r\n    role2.manageBranches = true;\r\n\r\n    role3.removeMembers = true;\r\n    role3.manageRoles = false;\r\n    role3.manageBranches = true;\r\n\r\n    await manager.save([role1, role2, role3])\r\n    console.log('Roles have been updated')\r\n\r\n    //Read\r\n    readRoles()\r\n\r\n    //Remove\r\n    await manager.remove([role1, role2, role3])\r\n    console.log('Roles have been removed')\r\n\r\n    //Read\r\n    readRoles()\r\n}\r\n\r\nexport async function readRoles() {\r\n    const savedRoles = await manager.find(Role);\r\n    console.log(`Roles quantity: ${savedRoles.length}`);\r\n    for (let role of savedRoles) {\r\n        console.log(role);\r\n    }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}