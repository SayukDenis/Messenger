{"ast":null,"code":"import Animated from \"react-native-web/dist/exports/Animated\";\nvar add = Animated.add,\n  multiply = Animated.multiply;\nexport default function conditional(condition, main, fallback) {\n  return add(multiply(condition, main), multiply(condition.interpolate({\n    inputRange: [0, 1],\n    outputRange: [1, 0]\n  }), fallback));\n}","map":{"version":3,"names":["add","Animated","multiply","conditional","condition","main","fallback","interpolate","inputRange","outputRange"],"sources":["D:\\repo\\Messenger\\Messenger\\node_modules\\@react-navigation\\stack\\src\\utils\\conditional.tsx"],"sourcesContent":["import { Animated } from 'react-native';\r\n\r\nconst { add, multiply } = Animated;\r\n\r\n/**\r\n * Use an Animated Node based on a condition. Similar to Reanimated's `cond`.\r\n *\r\n * @param condition Animated Node representing the condition, must be 0 or 1, 1 means `true`, 0 means `false`\r\n * @param main Animated Node to use if the condition is `true`\r\n * @param fallback Animated Node to use if the condition is `false`\r\n */\r\nexport default function conditional(\r\n  condition: Animated.AnimatedInterpolation<0 | 1>,\r\n  main: Animated.AnimatedInterpolation<number>,\r\n  fallback: Animated.AnimatedInterpolation<number>\r\n) {\r\n  // To implement this behavior, we multiply the main node with the condition.\r\n  // So if condition is 0, result will be 0, and if condition is 1, result will be main node.\r\n  // Then we multiple reverse of the condition (0 if condition is 1) with the fallback.\r\n  // So if condition is 0, result will be fallback node, and if condition is 1, result will be 0,\r\n  // This way, one of them will always be 0, and other one will be the value we need.\r\n  // In the end we add them both together, 0 + value we need = value we need\r\n  return add(\r\n    multiply(condition, main),\r\n    multiply(\r\n      condition.interpolate({\r\n        inputRange: [0, 1],\r\n        outputRange: [1, 0],\r\n      }),\r\n      fallback\r\n    )\r\n  );\r\n}\r\n"],"mappings":";AAEA,IAAQA,GAAG,GAAeC,QAAQ,CAA1BD,GAAG;EAAEE,QAAA,GAAaD,QAAQ,CAArBC,QAAA;AASb,eAAe,SAASC,WAAWA,CACjCC,SAAgD,EAChDC,IAA4C,EAC5CC,QAAgD,EAChD;EAOA,OAAON,GAAG,CACRE,QAAQ,CAACE,SAAS,EAAEC,IAAI,CAAC,EACzBH,QAAQ,CACNE,SAAS,CAACG,WAAW,CAAC;IACpBC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAClBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC;EACpB,CAAC,CAAC,EACFH,QAAQ,CACT,CACF;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}