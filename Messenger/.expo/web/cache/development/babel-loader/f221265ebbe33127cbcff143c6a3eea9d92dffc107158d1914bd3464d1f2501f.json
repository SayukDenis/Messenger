{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { footerstyles } from \"../Styles/FooterStyle\";\nimport Folder from \"./Footer containers/Folder\";\nimport ListOfFolder from \"./ListOfFolder\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Footer = function Footer(_ref) {\n  var user = _ref.user;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedFolder = _useState2[0],\n    setSelectedFolder = _useState2[1];\n  var handleFolderPress = function handleFolderPress(index) {\n    if (selectedFolder === index) {} else {\n      setSelectedFolder(index);\n    }\n  };\n  return _jsxs(View, {\n    children: [_jsx(ScrollView, {\n      horizontal: true,\n      children: _jsx(ScrollView, {\n        showsVerticalScrollIndicator: false,\n        children: _jsx(ListOfFolder, {\n          user: user,\n          selectedFolder: selectedFolder\n        })\n      })\n    }), _jsx(View, {\n      style: footerstyles.container,\n      children: _jsx(ScrollView, {\n        showsHorizontalScrollIndicator: false,\n        horizontal: true,\n        style: footerstyles.scrollView,\n        children: user.folders.map(function (folder, index) {\n          return _jsx(Folder, {\n            text: folder.name,\n            containerStyle: footerstyles.folderContainer,\n            textStyle: footerstyles.folder,\n            isSelected: selectedFolder === index,\n            onPress: function onPress() {\n              return handleFolderPress(index);\n            }\n          }, index);\n        })\n      })\n    })]\n  });\n};\nexport default Footer;","map":{"version":3,"names":["React","useState","View","ScrollView","footerstyles","Folder","ListOfFolder","jsx","_jsx","jsxs","_jsxs","Footer","_ref","user","_useState","_useState2","_slicedToArray","selectedFolder","setSelectedFolder","handleFolderPress","index","children","horizontal","showsVerticalScrollIndicator","style","container","showsHorizontalScrollIndicator","scrollView","folders","map","folder","text","name","containerStyle","folderContainer","textStyle","isSelected","onPress"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/ChatList/Components/Footer.tsx"],"sourcesContent":["import React, { ReactNode, useState } from 'react';\r\nimport { View, ScrollView,StyleSheet,Text } from 'react-native';\r\nimport MySelfUser from '../1HelpFullFolder/MySelfUser';\r\nimport { footerstyles } from '../Styles/FooterStyle';\r\nimport Folder from './Footer containers/Folder';\r\nimport { listOfChatsStyle } from '../Styles/ListOfChatsStyle';\r\nimport ChatContainer from './List of folders containers/ChatContainer';\r\n\r\nimport ListOfFolder from './ListOfFolder';\r\ninterface FooterProps {\r\n  user: MySelfUser;\r\n}\r\n\r\nconst Footer: React.FC<FooterProps> = ({ user }) => {\r\n  const [selectedFolder, setSelectedFolder] = useState<number>(0);\r\n  \r\n  const handleFolderPress = (index: number) => {\r\n    if (selectedFolder === index) {\r\n    } else {\r\n      setSelectedFolder(index); \r\n    }\r\n  };\r\n  \r\n  return (\r\n    <View>\r\n    <ScrollView horizontal={true}>\r\n    <ScrollView showsVerticalScrollIndicator={false}>\r\n      <ListOfFolder user={user} selectedFolder={selectedFolder}  />\r\n    </ScrollView>\r\n    </ScrollView>\r\n\r\n<View style={footerstyles.container}>\r\n      <ScrollView showsHorizontalScrollIndicator={false} horizontal={true} style={footerstyles.scrollView}>\r\n        {user.folders.map((folder, index) => (\r\n          <Folder\r\n            key={index}\r\n            text={folder.name}\r\n            containerStyle={footerstyles.folderContainer}\r\n            textStyle={footerstyles.folder}\r\n            isSelected={selectedFolder === index}\r\n            onPress={() => handleFolderPress(index)}\r\n          />\r\n        ))}\r\n      </ScrollView>\r\n    </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAeC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAGnD,SAASC,YAAY;AACrB,OAAOC,MAAM;AAIb,OAAOC,YAAY;AAAuB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAK1C,IAAMC,MAA6B,GAAG,SAAhCA,MAA6BA,CAAAC,IAAA,EAAiB;EAAA,IAAXC,IAAI,GAAAD,IAAA,CAAJC,IAAI;EAC3C,IAAAC,SAAA,GAA4Cb,QAAQ,CAAS,CAAC,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAxDG,cAAc,GAAAF,UAAA;IAAEG,iBAAiB,GAAAH,UAAA;EAExC,IAAMI,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,KAAa,EAAK;IAC3C,IAAIH,cAAc,KAAKG,KAAK,EAAE,CAC9B,CAAC,MAAM;MACLF,iBAAiB,CAACE,KAAK,CAAC;IAC1B;EACF,CAAC;EAED,OACEV,KAAA,CAACR,IAAI;IAAAmB,QAAA,GACLb,IAAA,CAACL,UAAU;MAACmB,UAAU,EAAE,IAAK;MAAAD,QAAA,EAC7Bb,IAAA,CAACL,UAAU;QAACoB,4BAA4B,EAAE,KAAM;QAAAF,QAAA,EAC9Cb,IAAA,CAACF,YAAY;UAACO,IAAI,EAAEA,IAAK;UAACI,cAAc,EAAEA;QAAe,CAAG;MAAC,CACnD;IAAC,CACD,CAAC,EAEjBT,IAAA,CAACN,IAAI;MAACsB,KAAK,EAAEpB,YAAY,CAACqB,SAAU;MAAAJ,QAAA,EAC9Bb,IAAA,CAACL,UAAU;QAACuB,8BAA8B,EAAE,KAAM;QAACJ,UAAU,EAAE,IAAK;QAACE,KAAK,EAAEpB,YAAY,CAACuB,UAAW;QAAAN,QAAA,EACjGR,IAAI,CAACe,OAAO,CAACC,GAAG,CAAC,UAACC,MAAM,EAAEV,KAAK;UAAA,OAC9BZ,IAAA,CAACH,MAAM;YAEL0B,IAAI,EAAED,MAAM,CAACE,IAAK;YAClBC,cAAc,EAAE7B,YAAY,CAAC8B,eAAgB;YAC7CC,SAAS,EAAE/B,YAAY,CAAC0B,MAAO;YAC/BM,UAAU,EAAEnB,cAAc,KAAKG,KAAM;YACrCiB,OAAO,EAAE,SAAAA,QAAA;cAAA,OAAMlB,iBAAiB,CAACC,KAAK,CAAC;YAAA;UAAC,GALnCA,KAMN,CAAC;QAAA,CACH;MAAC,CACQ;IAAC,CACT,CAAC;EAAA,CACD,CAAC;AAEX,CAAC;AAED,eAAeT,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}