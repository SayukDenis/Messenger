{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { styles } from \"./Styles\";\nimport Header from \"../../SemiComponents/Header\";\nimport PlusIcon from \"../../DialogueProfile/BranchesScreen/Icons/PlusIcon\";\nimport { user } from \"../../SemiComponents/DBUser\";\nimport BinIcon from \"../../SemiComponents/MainScreen/Icons/BinIcon\";\nimport { useIsFocused } from \"@react-navigation/native\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { tempUser } from \"../../SemiComponents/DBUser\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MembersScreen = function MembersScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isDeleteMemberPressed = _useState2[0],\n    setIsDeleteMemberPressed = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    memberNameToRemove = _useState4[0],\n    setMemberNameToRemove = _useState4[1];\n  var isFocused = useIsFocused();\n  useEffect(function () {}, [isFocused]);\n  return _jsxs(View, {\n    style: styles.mainContainer,\n    children: [_jsx(Header, {\n      primaryTitle: \"Members\",\n      onGoBackPress: function onGoBackPress() {\n        navigation.goBack();\n      }\n    }), _jsxs(ScrollView, {\n      children: [_jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          navigation.navigate(\"NewBranchScreen\");\n        },\n        style: styles.memberContainer,\n        children: [_jsx(PlusIcon, {\n          style: styles.plusIcon\n        }), _jsx(Text, {\n          style: styles.plusMemberTitle,\n          children: \"Member\"\n        })]\n      }), _jsx(FlatList, {\n        data: user.branchParents,\n        keyExtractor: function keyExtractor(item) {\n          return user.branchParents.indexOf(item).toString();\n        },\n        horizontal: false,\n        numColumns: 1,\n        scrollEnabled: false,\n        contentContainerStyle: {\n          paddingBottom: 0.07 * Dimensions.get(\"screen\").height,\n          zIndex: 0\n        },\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return _jsxs(TouchableOpacity, {\n            onPress: function onPress() {\n              tempUser.selectedBranchParent = item;\n              navigation.navigate(\"ChangeBranchParentScreen\");\n            },\n            style: styles.memberContainer,\n            children: [_jsx(View, {\n              style: [styles.memberAvatarInList, {\n                backgroundColor: item.color\n              }],\n              children: _jsx(Text, {\n                style: {\n                  fontSize: 20\n                },\n                children: item.emoji\n              })\n            }), _jsx(View, {\n              style: styles.memberTitleContainer,\n              children: _jsx(Text, {\n                numberOfLines: 1,\n                style: styles.memberTitleInList,\n                children: item.name\n              })\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                setIsDeleteMemberPressed(true);\n                setMemberNameToRemove(item.name);\n              },\n              style: styles.binIconContainer,\n              children: _jsx(BinIcon, {\n                style: styles.binIcon\n              })\n            })]\n          });\n        }\n      })]\n    })]\n  });\n};\nexport default MembersScreen;","map":{"version":3,"names":["React","useState","useEffect","View","TouchableOpacity","Text","FlatList","Dimensions","styles","Header","PlusIcon","user","BinIcon","useIsFocused","ScrollView","tempUser","jsx","_jsx","jsxs","_jsxs","MembersScreen","_ref","navigation","_useState","_useState2","_slicedToArray","isDeleteMemberPressed","setIsDeleteMemberPressed","_useState3","_useState4","memberNameToRemove","setMemberNameToRemove","isFocused","style","mainContainer","children","primaryTitle","onGoBackPress","goBack","onPress","navigate","memberContainer","plusIcon","plusMemberTitle","data","branchParents","keyExtractor","item","indexOf","toString","horizontal","numColumns","scrollEnabled","contentContainerStyle","paddingBottom","get","height","zIndex","renderItem","_ref2","selectedBranchParent","memberAvatarInList","backgroundColor","color","fontSize","emoji","memberTitleContainer","numberOfLines","memberTitleInList","name","binIconContainer","binIcon"],"sources":["/home/zatibmag/Desktop/Project/Messenger/Messenger/Pages/Profiles/ChannelProfile/MembersScreen/MembersScreen.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  TouchableOpacity,\r\n  Text,\r\n  FlatList,\r\n  Dimensions,\r\n} from \"react-native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport { styles } from \"./Styles\";\r\nimport Header from \"../../SemiComponents/Header\";\r\nimport PlusIcon from \"../../DialogueProfile/BranchesScreen/Icons/PlusIcon\";\r\nimport { user } from \"../../SemiComponents/DBUser\";\r\nimport BinIcon from \"../../SemiComponents/MainScreen/Icons/BinIcon\";\r\nimport Blur from \"../../SemiComponents/MainScreen/Blur\";\r\nimport RemovalApproval from \"../../SemiComponents/MainScreen/RemovalApproval\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\nimport { tempUser } from \"../../SemiComponents/DBUser\";\r\n\r\ntype MembersScreenProps = {\r\n  navigation: StackNavigationProp<{}>;\r\n};\r\n\r\nconst MembersScreen: React.FC<MembersScreenProps> = ({ navigation }) => {\r\n  const [isDeleteMemberPressed, setIsDeleteMemberPressed] = useState(false);\r\n  const [memberNameToRemove, setMemberNameToRemove] = useState(\"\");\r\n\r\n  const isFocused = useIsFocused();\r\n\r\n  useEffect(() => {}, [isFocused]);\r\n\r\n  return (\r\n    <View style={styles.mainContainer}>\r\n      <Header\r\n        primaryTitle=\"Members\"\r\n        onGoBackPress={() => {\r\n          navigation.goBack();\r\n        }}\r\n      />\r\n\r\n      <ScrollView>\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            navigation.navigate(\"NewBranchScreen\" as never);\r\n          }}\r\n          style={styles.memberContainer}\r\n        >\r\n          <PlusIcon style={styles.plusIcon} />\r\n          <Text style={styles.plusMemberTitle}>Member</Text>\r\n        </TouchableOpacity>\r\n\r\n        <FlatList\r\n          data={user.branchParents}\r\n          keyExtractor={(item) => user.branchParents.indexOf(item).toString()}\r\n          horizontal={false}\r\n          numColumns={1}\r\n          scrollEnabled={false}\r\n          contentContainerStyle={{\r\n            paddingBottom: 0.07 * Dimensions.get(\"screen\").height,\r\n            zIndex: 0,\r\n          }}\r\n          renderItem={({ item }) => (\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                tempUser.selectedBranchParent = item;\r\n                navigation.navigate(\"ChangeBranchParentScreen\" as never);\r\n              }}\r\n              style={styles.memberContainer}\r\n            >\r\n              <View\r\n                style={[\r\n                  styles.memberAvatarInList,\r\n                  {\r\n                    backgroundColor: item.color,\r\n                  },\r\n                ]}\r\n              >\r\n                <Text style={{ fontSize: 20 }}>{item.emoji}</Text>\r\n              </View>\r\n              <View style={styles.memberTitleContainer}>\r\n                <Text numberOfLines={1} style={styles.memberTitleInList}>\r\n                  {item.name}\r\n                </Text>\r\n              </View>\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  setIsDeleteMemberPressed(true);\r\n                  setMemberNameToRemove(item.name);\r\n                }}\r\n                style={styles.binIconContainer}\r\n              >\r\n                <BinIcon style={styles.binIcon} />\r\n              </TouchableOpacity>\r\n            </TouchableOpacity>\r\n          )}\r\n        />\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default MembersScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}