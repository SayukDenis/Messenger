{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { styles } from \"./Style/Style\";\nimport { PIN_LENGTH } from \"./Script/ScriptCodePassword\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function CodePassword() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    pin = _useState2[0],\n    setPin = _useState2[1];\n  var handleCodeCellPress = function handleCodeCellPress(value) {\n    if (pin.length < PIN_LENGTH) {\n      setPin(pin + value);\n    }\n  };\n  var renderCodeCells = function renderCodeCells() {\n    var codeCells = [];\n    var _loop = function _loop(i) {\n      codeCells.push(_jsx(TouchableOpacity, {\n        style: styles.codeCell,\n        onPress: function onPress() {\n          return handleCodeCellPress(i.toString());\n        },\n        children: _jsx(Text, {\n          style: styles.codeCellText,\n          children: i\n        })\n      }, i));\n    };\n    for (var i = 1; i <= 9; i++) {\n      _loop(i);\n    }\n    codeCells.push(_jsx(TouchableOpacity, {\n      style: styles.codeCell,\n      onPress: function onPress() {\n        return handleCodeCellPress('0');\n      },\n      children: _jsx(Text, {\n        style: styles.codeCellText,\n        children: \"0\"\n      })\n    }, 0));\n    return codeCells;\n  };\n  var handleDeletePress = function handleDeletePress() {\n    if (pin.length > 0) {\n      setPin(pin.slice(0, -1));\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      source: require(\"./Image/Vector.png\"),\n      style: styles.imageStyle\n    }), _jsx(Text, {\n      style: styles.header,\n      children: \"Enter the telentic lock code\"\n    }), _jsxs(View, {\n      style: styles.pinContainer,\n      children: [pin.split('').map(function (_, index) {\n        return _jsx(View, {\n          style: [styles.pinDot, styles.activeDot]\n        }, index);\n      }), Array.from({\n        length: PIN_LENGTH - pin.length\n      }).map(function (_, index) {\n        return _jsx(View, {\n          style: styles.pinDot\n        }, index);\n      })]\n    }), _jsxs(View, {\n      style: styles.codeInput,\n      children: [_jsx(View, {\n        style: styles.codeRow,\n        children: renderCodeCells().slice(0, 3)\n      }), _jsx(View, {\n        style: styles.codeRow,\n        children: renderCodeCells().slice(3, 6)\n      }), _jsx(View, {\n        style: styles.codeRow,\n        children: renderCodeCells().slice(6, 9)\n      }), renderCodeCells().slice(9, 10)]\n    }), _jsx(Text, {\n      style: styles.header,\n      onPress: handleDeletePress,\n      children: \"Delete\"\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","Image","View","Text","TouchableOpacity","styles","PIN_LENGTH","jsx","_jsx","jsxs","_jsxs","CodePassword","_useState","_useState2","_slicedToArray","pin","setPin","handleCodeCellPress","value","length","renderCodeCells","codeCells","_loop","i","push","style","codeCell","onPress","toString","children","codeCellText","handleDeletePress","slice","container","source","require","imageStyle","header","pinContainer","split","map","_","index","pinDot","activeDot","Array","from","codeInput","codeRow"],"sources":["D:/repo/Messenger/Messenger/Pages/CodePassword/CodePassword.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Image, View, Text, TouchableOpacity } from 'react-native';\r\nimport { styles } from './Style/Style';\r\nimport { PIN_LENGTH, renderCodeCells, handleDeletePress } from './Script/ScriptCodePassword';\r\n\r\n\r\nexport default function CodePassword() {\r\n  const [pin, setPin] = useState('');\r\n\r\n  const handleCodeCellPress = (value: string) => {\r\n    if (pin.length < PIN_LENGTH) {\r\n      setPin(pin + value);\r\n    }\r\n  };\r\n\r\n  const renderCodeCells = () => {\r\n    const codeCells = [];\r\n    for (let i = 1; i <= 9; i++) {\r\n      codeCells.push(\r\n        <TouchableOpacity\r\n          key={i}\r\n          style={styles.codeCell}\r\n          onPress={() => handleCodeCellPress(i.toString())}\r\n        >\r\n          <Text style={styles.codeCellText}>{i}</Text>\r\n        </TouchableOpacity>\r\n      );\r\n    }\r\n    codeCells.push(\r\n      <TouchableOpacity\r\n        key={0}\r\n        style={styles.codeCell}\r\n        onPress={() => handleCodeCellPress('0')}\r\n      >\r\n        <Text style={styles.codeCellText}>0</Text>\r\n      </TouchableOpacity>\r\n    );\r\n    return codeCells;\r\n  };\r\n\r\n  const handleDeletePress = () => {\r\n    if (pin.length > 0) {\r\n      setPin(pin.slice(0, -1)); \r\n    }\r\n  };\r\n\r\n  return (\r\n   \r\n    <View style={styles.container}>\r\n            <Image source={require('./Image/Vector.png')}\r\n            style={styles.imageStyle}/>\r\n      <Text style={styles.header}>Enter the telentic lock code</Text>\r\n      <View style={styles.pinContainer}>\r\n  {pin.split('').map((_, index) => (\r\n    <View key={index} style={[styles.pinDot, styles.activeDot]} />\r\n  ))}\r\n  {Array.from({ length: PIN_LENGTH - pin.length }).map((_, index) => (\r\n    <View key={index} style={styles.pinDot} />\r\n  ))}\r\n  </View>\r\n\r\n      <View style={styles.codeInput}>\r\n        <View style={styles.codeRow}>{renderCodeCells().slice(0, 3)}</View>\r\n        <View style={styles.codeRow}>{renderCodeCells().slice(3, 6)}</View>\r\n        <View style={styles.codeRow}>{renderCodeCells().slice(6, 9)}</View>\r\n        {renderCodeCells().slice(9,10)}\r\n        </View>\r\n        <Text style={styles.header} onPress={handleDeletePress}>Delete</Text>\r\n    </View>\r\n  );}  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}