{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { user } from \"../../DBUser\";\nimport styles from \"../Styles\";\nimport CrossIcon from \"../Icons/CrossIcon\";\nimport CheckmarkIcon from \"../Icons/CheckmarkIcon\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar screenHeight = Dimensions.get(\"screen\").height;\nvar screenWidth = Dimensions.get(\"screen\").width;\nvar Albums = function Albums(props) {\n  return _jsxs(View, {\n    style: styles.mediaContainer,\n    children: [_jsx(FlatList, {\n      data: user.albums,\n      keyExtractor: function keyExtractor(item) {\n        return user.albums.indexOf(item).toString();\n      },\n      horizontal: false,\n      numColumns: 2,\n      contentContainerStyle: [styles.allAlbumsContainer, {\n        height: user.albums.length < 3 ? user.albums.length == 1 ? 0.8 * screenHeight : 0.7 * screenHeight : Math.ceil(user.albums.length / 2) * 0.355 * screenHeight\n      }],\n      scrollEnabled: false,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            props.onAlbumPress(item);\n          },\n          onLongPress: function onLongPress(event) {\n            props.onAlbumLongPress(item, event);\n          },\n          style: [styles.albumContainer],\n          children: [_jsx(Image, {\n            style: styles.albumMainPhoto,\n            source: {\n              uri: item.mainPhoto.url\n            }\n          }), _jsxs(View, {\n            style: styles.albumInfoContainer,\n            children: [_jsx(Text, {\n              numberOfLines: 1,\n              style: styles.albumNameText,\n              children: item.name\n            }), _jsx(Text, {\n              numberOfLines: 1,\n              style: styles.albumPhotosAndVideosQuantityText,\n              children: item.photosAndVideos.length\n            }), props.areCheckMarksVisible && _jsx(View, {\n              style: styles.checkmarkContainerForAlbum,\n              children: props.isCheckmarkVisible(item) && _jsx(CheckmarkIcon, {\n                style: styles.checkmarkIcon\n              })\n            })]\n          })]\n        });\n      }\n    }), _jsxs(TouchableOpacity, {\n      onPress: function onPress() {\n        props.onNewAlbumPress();\n      },\n      style: [styles.albumContainer, {\n        position: \"absolute\",\n        top: user.albums.length % 2 == 0 ? 0.02 * screenHeight + Math.ceil(user.albums.length / 2) * 0.205 * screenHeight : 0.02 * screenHeight + (Math.ceil(user.albums.length / 2) - 1) * 0.205 * screenHeight,\n        left: user.albums.length % 2 == 0 ? 0.075 * screenWidth : 0.575 * screenWidth\n      }],\n      children: [_jsx(View, {\n        style: [styles.albumMainPhoto, {\n          backgroundColor: \"rgb(32, 32, 32)\"\n        }],\n        children: _jsx(CrossIcon, {\n          style: styles.plusAlbumIcon\n        })\n      }), _jsx(View, {\n        style: styles.albumInfoContainer,\n        children: _jsx(Text, {\n          numberOfLines: 1,\n          style: styles.albumNameText,\n          children: \"New album\"\n        })\n      })]\n    })]\n  });\n};\nexport default Albums;","map":{"version":3,"names":["React","View","FlatList","TouchableOpacity","Image","Dimensions","Text","user","styles","CrossIcon","CheckmarkIcon","jsx","_jsx","jsxs","_jsxs","screenHeight","get","height","screenWidth","width","Albums","props","style","mediaContainer","children","data","albums","keyExtractor","item","indexOf","toString","horizontal","numColumns","contentContainerStyle","allAlbumsContainer","length","Math","ceil","scrollEnabled","renderItem","_ref","onPress","onAlbumPress","onLongPress","event","onAlbumLongPress","albumContainer","albumMainPhoto","source","uri","mainPhoto","url","albumInfoContainer","numberOfLines","albumNameText","name","albumPhotosAndVideosQuantityText","photosAndVideos","areCheckMarksVisible","checkmarkContainerForAlbum","isCheckmarkVisible","checkmarkIcon","onNewAlbumPress","position","top","left","backgroundColor","plusAlbumIcon"],"sources":["/home/zatibmag/Desktop/Project/Messenger/Messenger/Pages/Profiles/SemiComponents/MainScreen/Multimedia/Albums.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React from \"react\";\r\nimport {\r\n  View,\r\n  FlatList,\r\n  TouchableOpacity,\r\n  Image,\r\n  Dimensions,\r\n  Text,\r\n} from \"react-native\";\r\nimport { Album, user } from \"../../DBUser\";\r\nimport styles from \"../Styles\";\r\nimport CrossIcon from \"../Icons/CrossIcon\";\r\nimport CheckmarkIcon from \"../Icons/CheckmarkIcon\";\r\nimport { GestureResponderEvent } from \"react-native-modal\";\r\n\r\ninterface AlbumsProps {\r\n  onNewAlbumPress: () => void;\r\n  onAlbumLongPress: (value: Album, event: GestureResponderEvent) => void;\r\n  onAlbumPress: (value: Album) => void;\r\n  areCheckMarksVisible: boolean;\r\n  isCheckmarkVisible: (value: Album) => boolean;\r\n}\r\n\r\nconst screenHeight: number = Dimensions.get(\"screen\").height;\r\nconst screenWidth: number = Dimensions.get(\"screen\").width;\r\n\r\nconst Albums: React.FC<AlbumsProps> = (props) => {\r\n  return (\r\n    <View style={styles.mediaContainer}>\r\n      <FlatList\r\n        data={user.albums}\r\n        keyExtractor={(item) => user.albums.indexOf(item).toString()}\r\n        horizontal={false}\r\n        numColumns={2}\r\n        contentContainerStyle={[\r\n          styles.allAlbumsContainer,\r\n          {\r\n            height:\r\n              user.albums.length < 3\r\n                ? user.albums.length == 1\r\n                  ? 0.8 * screenHeight\r\n                  : 0.7 * screenHeight\r\n                : Math.ceil(user.albums.length / 2) * 0.355 * screenHeight,\r\n          },\r\n        ]}\r\n        scrollEnabled={false}\r\n        renderItem={({ item }) => {\r\n          return (\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                props.onAlbumPress(item);\r\n              }}\r\n              onLongPress={(event) => {\r\n                props.onAlbumLongPress(item, event);\r\n              }}\r\n              style={[styles.albumContainer]}\r\n            >\r\n              <Image\r\n                style={styles.albumMainPhoto}\r\n                source={{ uri: item.mainPhoto.url }}\r\n              />\r\n              <View style={styles.albumInfoContainer}>\r\n                <Text numberOfLines={1} style={styles.albumNameText}>\r\n                  {item.name}\r\n                </Text>\r\n                <Text\r\n                  numberOfLines={1}\r\n                  style={styles.albumPhotosAndVideosQuantityText}\r\n                >\r\n                  {item.photosAndVideos.length}\r\n                </Text>\r\n                {props.areCheckMarksVisible && (\r\n                  <View style={styles.checkmarkContainerForAlbum}>\r\n                    {props.isCheckmarkVisible(item) && (\r\n                      <CheckmarkIcon style={styles.checkmarkIcon} />\r\n                    )}\r\n                  </View>\r\n                )}\r\n              </View>\r\n            </TouchableOpacity>\r\n          );\r\n        }}\r\n      />\r\n      <TouchableOpacity\r\n        onPress={() => {\r\n          props.onNewAlbumPress();\r\n        }}\r\n        style={[\r\n          styles.albumContainer,\r\n          {\r\n            position: \"absolute\",\r\n            top:\r\n              user.albums.length % 2 == 0\r\n                ? 0.02 * screenHeight +\r\n                  Math.ceil(user.albums.length / 2) * 0.205 * screenHeight\r\n                : 0.02 * screenHeight +\r\n                  (Math.ceil(user.albums.length / 2) - 1) *\r\n                    0.205 *\r\n                    screenHeight,\r\n            left:\r\n              user.albums.length % 2 == 0\r\n                ? 0.075 * screenWidth\r\n                : 0.575 * screenWidth,\r\n          },\r\n        ]}\r\n      >\r\n        <View\r\n          style={[\r\n            styles.albumMainPhoto,\r\n            { backgroundColor: \"rgb(32, 32, 32)\" },\r\n          ]}\r\n        >\r\n          <CrossIcon style={styles.plusAlbumIcon} />\r\n        </View>\r\n        <View style={styles.albumInfoContainer}>\r\n          <Text numberOfLines={1} style={styles.albumNameText}>\r\n            New album\r\n          </Text>\r\n        </View>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Albums;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}