{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { memo, useEffect, useState } from \"react\";\nimport { heightOfHeader, screenHeight, screenWidth } from \"../../../Constants/ConstantsForChatlist\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { connect, useSelector } from \"react-redux\";\nimport SelfProfile from \"../../../../../dao/Models/SelfProfile\";\nimport Dialogue from \"../../../../../dao/Models/Chats/Dialogue\";\nimport AddMemberContainerForUser from \"./AddMemberContainerForUser\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MainForAddMemberPage = function MainForAddMemberPage(_ref) {\n  var selectedUsers = _ref.selectedUsers,\n    setSelectedUsers = _ref.setSelectedUsers;\n  var chats = useSelector(function (state) {\n    var self = state.selfProfileUser;\n    var chats = self.tabs[0].folders[0].chats;\n    return chats;\n  });\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    users = _useState2[0],\n    setUsers = _useState2[1];\n  useEffect(function () {\n    var users = [];\n    for (var i = 0; i < chats.length; i++) {\n      if (chats[i] instanceof Dialogue) {\n        var dialogue = chats[i];\n        for (var _i = 0; _i < dialogue.users.length; _i++) {\n          if (!(dialogue.users[_i] instanceof SelfProfile)) {\n            users.push(dialogue.users[_i]);\n          }\n        }\n      }\n    }\n    setUsers(users);\n  }, []);\n  var onUserPress = function onUserPress(pressedUser) {\n    var userIndex = selectedUsers.findIndex(function (user) {\n      return user.userId === pressedUser.userId;\n    });\n    if (userIndex !== -1) {\n      setSelectedUsers(function (prevArray) {\n        var newArray = _toConsumableArray(prevArray);\n        newArray.splice(userIndex, 1);\n        return newArray;\n      });\n    } else {\n      setSelectedUsers([].concat(_toConsumableArray(selectedUsers), [pressedUser]));\n    }\n  };\n  function isUserInArray(selectedUser) {\n    return selectedUsers.some(function (user) {\n      return user.userId === selectedUser.userId;\n    });\n  }\n  return _jsxs(ScrollView, {\n    style: {\n      marginTop: heightOfHeader\n    },\n    children: [users.map(function (user, index) {\n      return _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          onUserPress(user);\n        },\n        activeOpacity: 0.9,\n        children: _jsx(AddMemberContainerForUser, {\n          user: users[index],\n          isSelected: isUserInArray(user)\n        }, index)\n      }, index);\n    }), _jsx(View, {\n      style: {\n        height: screenHeight * 0.06,\n        width: screenWidth\n      }\n    })]\n  });\n};\nexport default connect(null)(memo(MainForAddMemberPage));","map":{"version":3,"names":["React","memo","useEffect","useState","heightOfHeader","screenHeight","screenWidth","ScrollView","TouchableOpacity","View","connect","useSelector","SelfProfile","Dialogue","AddMemberContainerForUser","jsx","_jsx","jsxs","_jsxs","MainForAddMemberPage","_ref","selectedUsers","setSelectedUsers","chats","state","self","selfProfileUser","tabs","folders","_useState","_useState2","_slicedToArray","users","setUsers","i","length","dialogue","push","onUserPress","pressedUser","userIndex","findIndex","user","userId","prevArray","newArray","_toConsumableArray","splice","concat","isUserInArray","selectedUser","some","style","marginTop","children","map","index","onPress","activeOpacity","isSelected","height","width"],"sources":["D:/project/1project/Messenger/Messenger/Pages/ChatList/Components/CreateChannelAndGroupOrWriteMessage/Add member/MainForAddMemberPage.tsx"],"sourcesContent":["import React, { Dispatch, SetStateAction, memo, useEffect, useState } from \"react\";\r\nimport {\r\n  heightOfHeader,\r\n  screenHeight,\r\n  screenWidth,\r\n} from \"../../../Constants/ConstantsForChatlist\";\r\nimport { ScrollView, TouchableOpacity, View } from \"react-native\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport SelfProfile from \"../../../../../dao/Models/SelfProfile\";\r\nimport Chat from \"../../../../../dao/Models/Chats/Chat\";\r\nimport User from \"../../../../../dao/Models/User\";\r\nimport Dialogue from \"../../../../../dao/Models/Chats/Dialogue\";\r\nimport AddMemberContainerForUser from \"./AddMemberContainerForUser\";\r\n\r\ninterface MainForAddMemberPageProps {\r\n  selectedUsers: User[];\r\n  setSelectedUsers: Dispatch<SetStateAction<User[]>>;\r\n}\r\n\r\nconst MainForAddMemberPage: React.FC<MainForAddMemberPageProps> = ({\r\n  selectedUsers,\r\n  setSelectedUsers,\r\n}) => {\r\n  const chats: Chat[] = useSelector((state: any) => {\r\n    const self: SelfProfile = state.selfProfileUser;\r\n    const chats: Chat[] = self.tabs[0].folders[0].chats;\r\n    //console.log(chats);\r\n    return chats;\r\n  });\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  useEffect(() => {\r\n    let users: User[] = [];\r\n    for (let i = 0; i < chats.length; i++) {\r\n      if (chats[i] instanceof Dialogue) {\r\n        const dialogue: Dialogue = chats[i] as Dialogue;\r\n        for (let i = 0; i < dialogue.users.length; i++) {\r\n          if (!(dialogue.users[i] instanceof SelfProfile)) {\r\n            users.push(dialogue.users[i]);\r\n            // console.log(dialogue.users[i].name);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    setUsers(users);\r\n  }, []);\r\n  const onUserPress = (pressedUser: User) => {\r\n    const userIndex = selectedUsers.findIndex((user:User) => user.userId === pressedUser.userId );\r\n  if (userIndex !== -1) {\r\n    setSelectedUsers((prevArray) => {\r\n      const newArray = [...prevArray];\r\n      newArray.splice(userIndex, 1);\r\n      return newArray;\r\n    });\r\n  } else {\r\n    setSelectedUsers([...selectedUsers,pressedUser])\r\n  }\r\n  };\r\n  function isUserInArray(selectedUser: User): boolean {\r\n    return selectedUsers.some((user) => user.userId === selectedUser.userId);\r\n  }\r\n  return (\r\n    <ScrollView\r\n      //scrollEnabled={false}\r\n      style={{ marginTop: heightOfHeader }}\r\n    >\r\n      {users.map((user: User, index: number) => {\r\n        return (\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              onUserPress(user);\r\n            }}\r\n            activeOpacity={0.9}\r\n            key={index}\r\n          >\r\n            <AddMemberContainerForUser\r\n              user={users[index]}\r\n              key={index}\r\n              isSelected={isUserInArray(user)}\r\n            />\r\n          </TouchableOpacity>\r\n        );\r\n      })}\r\n\r\n      <View style={{ height: screenHeight * 0.06, width: screenWidth }} />\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default connect(null)(memo(MainForAddMemberPage));\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}