{"ast":null,"code":"import React from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { BlurView } from \"expo-blur\";\nimport { connect } from \"react-redux\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  screenHeight = _Dimensions$get.height;\nvar BlurAll = function BlurAll(_ref) {\n  var children = _ref.children,\n    handlePress = _ref.handlePress,\n    handlePressOut = _ref.handlePressOut;\n  return _jsxs(TouchableOpacity, {\n    style: {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      zIndex: 10\n    },\n    onPress: handlePress,\n    onPressOut: handlePressOut,\n    onLongPress: handlePress,\n    activeOpacity: 1,\n    children: [_jsx(StatusBar, {\n      hidden: true\n    }), Platform.OS === 'android' ? _jsx(View, {\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: \"black\",\n        opacity: 0.3\n      }\n    }) : _jsx(BlurView, {\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0\n      },\n      intensity: 10\n    }), _jsx(StatusBar, {\n      hidden: true\n    }), children]\n  });\n};\nexport default connect(null)(BlurAll);","map":{"version":3,"names":["React","TouchableOpacity","StatusBar","Dimensions","Platform","View","BlurView","connect","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","screenHeight","height","BlurAll","_ref","children","handlePress","handlePressOut","style","position","top","left","right","bottom","zIndex","onPress","onPressOut","onLongPress","activeOpacity","hidden","OS","backgroundColor","opacity","intensity"],"sources":["C:/Users/Admin/Project/Messenger/Messenger/Pages/SemiComponents/BlurAll.tsx"],"sourcesContent":["\r\n\r\nimport React, { ReactNode } from \"react\";\r\nimport {\r\n  TouchableOpacity,\r\n  StatusBar,\r\n  Text,\r\n  Dimensions,\r\n  Platform,\r\n  View,\r\n} from \"react-native\";\r\nimport { BlurView } from \"expo-blur\";\r\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport SelfProfile from \"../../dao/Models/SelfProfile\";\r\nconst { height: screenHeight } = Dimensions.get(\"window\");\r\n\r\ninterface BlurAllProps {\r\n  \r\n  handlePress: () => void;\r\n  handlePressOut: () => void;\r\n  children:ReactNode;\r\n\r\n\r\n}\r\n\r\nconst BlurAll: React.FC<BlurAllProps> = ({\r\n  children,\r\n  handlePress,\r\n  handlePressOut,\r\n  \r\n  \r\n}) => {\r\n  \r\n  \r\n\r\n  return (\r\n    <TouchableOpacity\r\n      style={{\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        zIndex: 10,\r\n      }}\r\n      onPress={handlePress}\r\n      onPressOut={handlePressOut}\r\n      onLongPress={handlePress}\r\n      activeOpacity={1}\r\n    >\r\n      <StatusBar hidden />\r\n      {Platform.OS === 'android' ? (\r\n        <View style={{\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          bottom: 0,\r\n          backgroundColor:\"black\",\r\n          opacity:0.3\r\n        }}/>\r\n      ) : (\r\n        <BlurView\r\n          style={{\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n          }}\r\n          intensity={10}\r\n        />\r\n      )}\r\n      <StatusBar hidden/>\r\n        {children}\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nexport default connect(null)(BlurAll);\r\n"],"mappings":"AAEA,OAAOA,KAAK,MAAqB,OAAO;AAAC,OAAAC,gBAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,IAAA;AASzC,SAASC,QAAQ,QAAQ,WAAW;AAEpC,SAASC,OAAO,QAAqB,aAAa;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEnD,IAAAC,eAAA,GAAiCT,UAAU,CAACU,GAAG,CAAC,QAAQ,CAAC;EAAzCC,YAAY,GAAAF,eAAA,CAApBG,MAAM;AAWd,IAAMC,OAA+B,GAAG,SAAlCA,OAA+BA,CAAAC,IAAA,EAM/B;EAAA,IALJC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IACRC,WAAW,GAAAF,IAAA,CAAXE,WAAW;IACXC,cAAc,GAAAH,IAAA,CAAdG,cAAc;EAOd,OACET,KAAA,CAACV,gBAAgB;IACfoB,KAAK,EAAE;MACLC,QAAQ,EAAE,UAAU;MACpBC,GAAG,EAAE,CAAC;MACNC,IAAI,EAAE,CAAC;MACPC,KAAK,EAAE,CAAC;MACRC,MAAM,EAAE,CAAC;MACTC,MAAM,EAAE;IACV,CAAE;IACFC,OAAO,EAAET,WAAY;IACrBU,UAAU,EAAET,cAAe;IAC3BU,WAAW,EAAEX,WAAY;IACzBY,aAAa,EAAE,CAAE;IAAAb,QAAA,GAEjBT,IAAA,CAACP,SAAS;MAAC8B,MAAM;IAAA,CAAE,CAAC,EACnB5B,QAAQ,CAAC6B,EAAE,KAAK,SAAS,GACxBxB,IAAA,CAACJ,IAAI;MAACgB,KAAK,EAAE;QACXC,QAAQ,EAAE,UAAU;QACpBC,GAAG,EAAE,CAAC;QACNC,IAAI,EAAE,CAAC;QACPC,KAAK,EAAE,CAAC;QACRC,MAAM,EAAE,CAAC;QACTQ,eAAe,EAAC,OAAO;QACvBC,OAAO,EAAC;MACV;IAAE,CAAC,CAAC,GAEJ1B,IAAA,CAACH,QAAQ;MACPe,KAAK,EAAE;QACLC,QAAQ,EAAE,UAAU;QACpBC,GAAG,EAAE,CAAC;QACNC,IAAI,EAAE,CAAC;QACPC,KAAK,EAAE,CAAC;QACRC,MAAM,EAAE;MACV,CAAE;MACFU,SAAS,EAAE;IAAG,CACf,CACF,EACD3B,IAAA,CAACP,SAAS;MAAC8B,MAAM;IAAA,CAAC,CAAC,EAChBd,QAAQ;EAAA,CACK,CAAC;AAEvB,CAAC;AAED,eAAeX,OAAO,CAAC,IAAI,CAAC,CAACS,OAAO,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}