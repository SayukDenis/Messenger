{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport MuteForSwipeableSvg from \"../SVG/MuteForSwipeableSvg\";\nimport UnMuteForSwipeableSvg from \"../SVG/UnMuteForSwipeableSvg\";\nimport DeleteForSwipeableSvg from \"../SVG/DeleteForSwipeableSvg\";\nimport { connect } from \"react-redux\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  screenWidth = _Dimensions$get.width,\n  screenHeight = _Dimensions$get.height;\nvar RightContainersForSwipe = function RightContainersForSwipe(_ref) {\n  var randomBoolean = _ref.randomBoolean,\n    rightDragXposition = _ref.rightDragXposition;\n  var scale1ForRight = rightDragXposition.interpolate({\n    inputRange: [0, screenWidth, screenWidth * 1.4, screenWidth * 1.6, screenWidth * 2],\n    outputRange: [-screenWidth * 0.2, -screenWidth * 0.2, 0, -screenWidth * 0.2, -screenWidth * 0.2],\n    extrapolateLeft: \"clamp\"\n  });\n  useEffect(function () {\n    randomBoolean.current = Math.random() < 0.5;\n  }, []);\n  return _jsxs(View, {\n    style: {\n      height: screenHeight * 0.08,\n      width: screenWidth,\n      backgroundColor: \"#F79747\",\n      flexDirection: \"row\"\n    },\n    children: [_jsx(Animated.View, {\n      style: {\n        width: screenWidth * 0.2,\n        height: screenHeight * 0.08,\n        justifyContent: \"center\"\n      },\n      children: _jsx(Animated.View, {\n        style: {\n          justifyContent: \"center\",\n          flexDirection: \"row\"\n        },\n        children: _jsxs(Animated.View, {\n          style: {\n            justifyContent: \"center\"\n          },\n          children: [_jsx(Animated.View, {\n            style: {\n              flexDirection: \"row\",\n              justifyContent: \"center\"\n            },\n            children: randomBoolean.current ? _jsx(MuteForSwipeableSvg, {\n              width: screenWidth * 0.085,\n              height: screenHeight * 0.05,\n              color: \"white\"\n            }) : _jsx(UnMuteForSwipeableSvg, {\n              width: screenWidth * 0.085,\n              height: screenHeight * 0.05,\n              color: \"white\"\n            })\n          }), _jsx(Animated.Text, {\n            style: {\n              color: \"white\",\n              alignSelf: \"center\"\n            },\n            children: \"Notification\"\n          })]\n        })\n      })\n    }), _jsx(Animated.View, {\n      style: {\n        width: screenWidth,\n        backgroundColor: \"red\",\n        justifyContent: \"center\",\n        transform: [{\n          translateX: scale1ForRight\n        }]\n      },\n      children: _jsx(Animated.View, {\n        style: {\n          width: screenWidth * 0.2,\n          height: screenHeight * 0.08,\n          justifyContent: \"center\",\n          flexDirection: \"row\"\n        },\n        children: _jsxs(Animated.View, {\n          style: {\n            justifyContent: \"center\"\n          },\n          children: [_jsx(DeleteForSwipeableSvg, {\n            width: screenWidth * 0.085,\n            height: screenHeight * 0.05,\n            color: \"white\"\n          }), _jsx(Animated.Text, {\n            style: {\n              color: \"white\",\n              alignSelf: \"center\"\n            },\n            children: \"Delete\"\n          })]\n        })\n      })\n    })]\n  });\n};\nexport default connect(null)(RightContainersForSwipe);","map":{"version":3,"names":["React","useEffect","View","Animated","Dimensions","MuteForSwipeableSvg","UnMuteForSwipeableSvg","DeleteForSwipeableSvg","connect","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","screenWidth","width","screenHeight","height","RightContainersForSwipe","_ref","randomBoolean","rightDragXposition","scale1ForRight","interpolate","inputRange","outputRange","extrapolateLeft","current","Math","random","style","backgroundColor","flexDirection","children","justifyContent","color","Text","alignSelf","transform","translateX"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/ChatList/Components/List of folders containers/RightContainersForSwipe.tsx"],"sourcesContent":["// RightContainersForSwipe.tsx\r\nimport React, { useRef, useEffect } from \"react\";\r\nimport { View, Text, Animated, Dimensions } from \"react-native\";\r\nimport MuteForSwipeableSvg from \"../SVG/MuteForSwipeableSvg\";\r\nimport UnMuteForSwipeableSvg from \"../SVG/UnMuteForSwipeableSvg\";\r\nimport DeleteForSwipeableSvg from \"../SVG/DeleteForSwipeableSvg\";\r\nimport { connect } from \"react-redux\";\r\n\r\ninterface RightContainersForSwipeProps {\r\n  rightDragXposition:any;\r\n  randomBoolean: React.MutableRefObject<boolean>;\r\n}\r\nconst { width: screenWidth, height: screenHeight } = Dimensions.get(\"window\");\r\nconst RightContainersForSwipe: React.FC<RightContainersForSwipeProps> = ({\r\n  randomBoolean,\r\n  rightDragXposition\r\n}) => {\r\n    const scale1ForRight = rightDragXposition.interpolate({\r\n        inputRange: [\r\n          0,\r\n          screenWidth,\r\n          screenWidth * 1.4,\r\n          screenWidth * 1.6,\r\n          screenWidth * 2,\r\n        ],\r\n        outputRange: [-screenWidth * 0.2,\r\n          -screenWidth * 0.2,\r\n          0,\r\n          -screenWidth * 0.2,\r\n          -screenWidth * 0.2,\r\n        ],\r\n        extrapolateLeft: \"clamp\",\r\n      });\r\n  useEffect(() => {\r\n    randomBoolean.current = Math.random() < 0.5;\r\n  }, []);\r\n  \r\n  return (\r\n    <View\r\n      style={{\r\n        height: screenHeight * 0.08,\r\n        width: screenWidth,\r\n        backgroundColor: \"#F79747\",\r\n        flexDirection: \"row\",\r\n      }}\r\n    >\r\n      <Animated.View\r\n        style={{\r\n          width: screenWidth * 0.2,\r\n          height: screenHeight * 0.08,\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Animated.View\r\n          style={{ justifyContent: \"center\", flexDirection: \"row\" }}\r\n        >\r\n          <Animated.View style={{ justifyContent: \"center\" }}>\r\n            <Animated.View\r\n              style={{ flexDirection: \"row\", justifyContent: \"center\" }}\r\n            >\r\n              {randomBoolean.current ? (\r\n                <MuteForSwipeableSvg\r\n                  width={screenWidth * 0.085}\r\n                  height={screenHeight * 0.05}\r\n                  color=\"white\"\r\n                />\r\n              ) : (\r\n                <UnMuteForSwipeableSvg\r\n                  width={screenWidth * 0.085}\r\n                  height={screenHeight * 0.05}\r\n                  color=\"white\"\r\n                />\r\n              )}\r\n            </Animated.View>\r\n            <Animated.Text style={{ color: \"white\", alignSelf: \"center\" }}>\r\n              Notification\r\n            </Animated.Text>\r\n          </Animated.View>\r\n        </Animated.View>\r\n      </Animated.View>\r\n      <Animated.View\r\n        style={{\r\n          width: screenWidth,\r\n          backgroundColor: \"red\",\r\n          justifyContent: \"center\",\r\n          transform: [{ translateX: scale1ForRight }],\r\n        }}\r\n      >\r\n        <Animated.View\r\n          style={{\r\n            width: screenWidth * 0.2,\r\n            height: screenHeight * 0.08,\r\n            justifyContent: \"center\",\r\n            flexDirection: \"row\",\r\n          }}\r\n        >\r\n          <Animated.View style={{ justifyContent: \"center\" }}>\r\n            <DeleteForSwipeableSvg\r\n              width={screenWidth * 0.085}\r\n              height={screenHeight * 0.05}\r\n              color=\"white\"\r\n            />\r\n            <Animated.Text style={{ color: \"white\", alignSelf: \"center\" }}>\r\n              Delete\r\n            </Animated.Text>\r\n          </Animated.View>\r\n        </Animated.View>\r\n      </Animated.View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default connect(null)( RightContainersForSwipe);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}