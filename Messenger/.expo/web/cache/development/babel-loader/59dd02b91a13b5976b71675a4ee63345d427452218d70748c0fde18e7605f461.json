{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { listOfChatsStyle } from \"../Styles/ListOfChatsStyle\";\nimport ChatContainer from \"./List of folders containers/ChatContainer\";\nimport { SwipeListView } from 'react-native-swipe-list-view';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ListOfFolder = function ListOfFolder(_ref) {\n  var user = _ref.user,\n    selectedFolder = _ref.selectedFolder;\n  var Container = React.forwardRef(function (_ref2, ref) {\n    var item = _ref2.item;\n    if (item.index == 0) {\n      return _jsx(_Fragment, {\n        children: _jsx(ChatContainer, {\n          chat: item\n        })\n      });\n    }\n    return _jsx(ChatContainer, {\n      chat: item\n    });\n  });\n  return _jsxs(_Fragment, {\n    children: [_jsx(SwipeListView, {\n      data: user.folders[selectedFolder].listOfChats,\n      renderItem: function renderItem(data) {\n        return _jsx(Container, {\n          item: data.item\n        });\n      }\n    }), _jsx(View, {\n      style: listOfChatsStyle.gapContainerDown\n    })]\n  });\n};\nexport default ListOfFolder;","map":{"version":3,"names":["React","View","listOfChatsStyle","ChatContainer","SwipeListView","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","ListOfFolder","_ref","user","selectedFolder","Container","forwardRef","_ref2","ref","item","index","children","chat","data","folders","listOfChats","renderItem","style","gapContainerDown"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/ChatList/Components/ListOfFolder.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Animated} from 'react-native';\r\nimport MySelfUser from '../1HelpFullFolder/MySelfUser';\r\nimport { listOfChatsStyle } from '../Styles/ListOfChatsStyle';\r\nimport ChatContainer from './List of folders containers/ChatContainer';\r\nimport { SwipeListView } from 'react-native-swipe-list-view';\r\n\r\ninterface ListOfFolderProps {\r\n  user: MySelfUser;\r\n  selectedFolder:number\r\n}\r\n\r\nconst ListOfFolder: React.FC<ListOfFolderProps> = ({ user,selectedFolder }) => {\r\n  \r\n  const Container = React.forwardRef(({ item}:any, ref) => {\r\n    if(item.index==0){\r\n      return (<>\r\n      <ChatContainer chat={item}/>\r\n      </>)\r\n    }\r\n    return (\r\n      <ChatContainer chat={item}/>\r\n    );});\r\n\r\n  return (\r\n    <>\r\n      <SwipeListView data={user.folders[selectedFolder].listOfChats}\r\n        renderItem={(data:any)=>{return(<Container item={data.item}/>)}}\r\n        />\r\n      <View style={listOfChatsStyle.gapContainerDown} />\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListOfFolder;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAoB,OAAO;AAAC,OAAAC,IAAA;AAGxC,SAASC,gBAAgB;AACzB,OAAOC,aAAa;AACpB,SAASC,aAAa,QAAQ,8BAA8B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAO7D,IAAMC,YAAyC,GAAG,SAA5CA,YAAyCA,CAAAC,IAAA,EAAgC;EAAA,IAA1BC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IAACC,cAAc,GAAAF,IAAA,CAAdE,cAAc;EAEtE,IAAMC,SAAS,GAAGf,KAAK,CAACgB,UAAU,CAAC,UAAAC,KAAA,EAAcC,GAAG,EAAK;IAAA,IAAnBC,IAAI,GAAAF,KAAA,CAAJE,IAAI;IACxC,IAAGA,IAAI,CAACC,KAAK,IAAE,CAAC,EAAC;MACf,OAAQd,IAAA,CAAAE,SAAA;QAAAa,QAAA,EACRf,IAAA,CAACH,aAAa;UAACmB,IAAI,EAAEH;QAAK,CAAC;MAAC,CAC1B,CAAC;IACL;IACA,OACEb,IAAA,CAACH,aAAa;MAACmB,IAAI,EAAEH;IAAK,CAAC,CAAC;EAC5B,CAAC,CAAC;EAEN,OACET,KAAA,CAAAF,SAAA;IAAAa,QAAA,GACEf,IAAA,CAACF,aAAa;MAACmB,IAAI,EAAEV,IAAI,CAACW,OAAO,CAACV,cAAc,CAAC,CAACW,WAAY;MAC5DC,UAAU,EAAE,SAAAA,WAACH,IAAQ,EAAG;QAAC,OAAOjB,IAAA,CAACS,SAAS;UAACI,IAAI,EAAEI,IAAI,CAACJ;QAAK,CAAC,CAAC;MAAC;IAAE,CAC/D,CAAC,EACJb,IAAA,CAACL,IAAI;MAAC0B,KAAK,EAAEzB,gBAAgB,CAAC0B;IAAiB,CAAE,CAAC;EAAA,CAElD,CAAC;AAEP,CAAC;AAED,eAAejB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}