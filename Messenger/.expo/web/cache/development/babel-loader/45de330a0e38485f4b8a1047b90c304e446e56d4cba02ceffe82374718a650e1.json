{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Header from \"./Components/Header\";\nimport Footer from \"./Components/Footer\";\nimport { mySelfUser } from \"./1HelpFullFolder/Initialization\";\nimport React, { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ChatList() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    touchable = _useState2[0],\n    setTouchable = _useState2[1];\n  var onPress = function onPress() {\n    setTouchable(!touchable);\n  };\n  return _jsxs(View, {\n    style: styles.mainContainer,\n    children: [_jsx(Header, {\n      mySelfUser: mySelfUser,\n      onPress: onPress,\n      isTouchableHeader: touchable\n    }), _jsx(Footer, {\n      user: mySelfUser,\n      onPressForTouchableHeader: onPress,\n      isTouchableForHeader: touchable\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  mainContainer: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["Header","Footer","mySelfUser","React","useState","jsx","_jsx","jsxs","_jsxs","ChatList","_useState","_useState2","_slicedToArray","touchable","setTouchable","onPress","View","style","styles","mainContainer","children","isTouchableHeader","user","onPressForTouchableHeader","isTouchableForHeader","StyleSheet","create","flex"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/ChatList/ChatList.tsx"],"sourcesContent":["import { View } from \"react-native\"\r\nimport { Text,StyleSheet,Dimensions} from \"react-native\"\r\nimport Header from \"./Components/Header\";\r\nimport Footer from \"./Components/Footer\";\r\nimport { mySelfUser } from \"./1HelpFullFolder/Initialization\";\r\nimport React, { useState } from 'react';\r\n export default function ChatList(){\r\n   const [touchable,setTouchable]=useState<boolean>(false);\r\n   const onPress=()=>{\r\n    setTouchable(!touchable);\r\n   }\r\n    return(\r\n     <View style={styles.mainContainer}>\r\n        <Header mySelfUser={mySelfUser} onPress={onPress} isTouchableHeader={touchable}/>\r\n        <Footer user={mySelfUser} onPressForTouchableHeader={onPress} isTouchableForHeader={touchable}/>\r\n    </View>);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    mainContainer: {\r\n      //backgroundColor:\"blue\",\r\n      flex:1,\r\n      \r\n    }})"],"mappings":";;;AAEA,OAAOA,MAAM;AACb,OAAOC,MAAM;AACb,SAASC,UAAU;AACnB,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AACvC,eAAe,SAASC,QAAQA,CAAA,EAAE;EAChC,IAAAC,SAAA,GAA+BN,QAAQ,CAAU,KAAK,CAAC;IAAAO,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAhDG,SAAS,GAAAF,UAAA;IAACG,YAAY,GAAAH,UAAA;EAC7B,IAAMI,OAAO,GAAC,SAARA,OAAOA,CAAA,EAAK;IACjBD,YAAY,CAAC,CAACD,SAAS,CAAC;EACzB,CAAC;EACA,OACCL,KAAA,CAACQ,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACC,aAAc;IAAAC,QAAA,GAC/Bd,IAAA,CAACN,MAAM;MAACE,UAAU,EAAEA,UAAW;MAACa,OAAO,EAAEA,OAAQ;MAACM,iBAAiB,EAAER;IAAU,CAAC,CAAC,EACjFP,IAAA,CAACL,MAAM;MAACqB,IAAI,EAAEpB,UAAW;MAACqB,yBAAyB,EAAER,OAAQ;MAACS,oBAAoB,EAAEX;IAAU,CAAC,CAAC;EAAA,CAC9F,CAAC;AACX;AAEA,IAAMK,MAAM,GAAGO,UAAU,CAACC,MAAM,CAAC;EAC7BP,aAAa,EAAE;IAEbQ,IAAI,EAAC;EAEP;AAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}