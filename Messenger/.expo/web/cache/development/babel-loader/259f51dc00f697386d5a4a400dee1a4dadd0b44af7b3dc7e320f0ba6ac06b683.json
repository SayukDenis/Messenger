{"ast":null,"code":"import React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleConfidentialityCenter from \"./StyleConfidentialytiCenter\";\nimport ButtonForSettings from \"../../../../SemiComponents/ButtonForSettings\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Confidentialitycenter = function Confidentialitycenter(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(View, {\n    style: StyleConfidentialityCenter.centerConteiner,\n    children: [_jsx(Text, {\n      style: StyleConfidentialityCenter.textStyle,\n      children: \"User\"\n    }), _jsx(View, {\n      style: StyleConfidentialityCenter.buttonsConteiner,\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('BlockUsers');\n        },\n        children: _jsx(ButtonForSettings, {\n          text: \"Blocked users\"\n        })\n      })\n    }), _jsx(Text, {\n      style: StyleConfidentialityCenter.textStyle,\n      children: \"Privacy\"\n    }), _jsx(View, {\n      style: StyleConfidentialityCenter.buttonsConteiner,\n      children: _jsx(ButtonForSettings, {\n        text: \"Number phone\"\n      })\n    }), _jsx(Text, {\n      style: StyleConfidentialityCenter.textStyle,\n      children: \"Password\"\n    }), _jsx(View, {\n      style: StyleConfidentialityCenter.buttonsConteiner,\n      children: _jsxs(TouchableOpacity, {\n        style: StyleConfidentialityCenter.centerButtons,\n        onPress: function onPress() {\n          return navigation.navigate('PasswordPage');\n        },\n        children: [_jsx(Text, {\n          style: StyleConfidentialityCenter.buttonText,\n          children: \"Password for Telentik\"\n        }), _jsx(TouchableOpacity, {\n          style: StyleConfidentialityCenter.backButton,\n          children: _jsx(Text, {\n            style: StyleConfidentialityCenter.buttonText,\n            children: \"back\"\n          })\n        })]\n      })\n    })]\n  });\n};\nexport default Confidentialitycenter;","map":{"version":3,"names":["React","Text","View","TouchableOpacity","StyleConfidentialityCenter","ButtonForSettings","jsx","_jsx","jsxs","_jsxs","Confidentialitycenter","_ref","navigation","style","centerConteiner","children","textStyle","buttonsConteiner","onPress","navigate","text","centerButtons","buttonText","backButton"],"sources":["D:/project/1project/Messenger/Messenger/Pages/Settings/ConfidentialityPage/MainConfidentiality/Center/ConfidentialityCenter.tsx"],"sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\r\nimport StyleConfidentialityCenter from \"./StyleConfidentialytiCenter\";\r\nimport ButtonForSettings from '../../../../SemiComponents/ButtonForSettings';\r\n\r\nconst Confidentialitycenter : React.FC<any> = ({ navigation })=>{\r\n    return <View style ={StyleConfidentialityCenter.centerConteiner}>\r\n       <Text style ={StyleConfidentialityCenter.textStyle}>User</Text>\r\n       <View style ={StyleConfidentialityCenter.buttonsConteiner}>   \r\n            <TouchableOpacity onPress={() => navigation.navigate('BlockUsers')}>\r\n                <ButtonForSettings text='Blocked users'></ButtonForSettings>\r\n            </TouchableOpacity>\r\n       </View>\r\n       <Text style ={StyleConfidentialityCenter.textStyle}>Privacy</Text>\r\n       <View style ={StyleConfidentialityCenter.buttonsConteiner}>   \r\n            <ButtonForSettings text='Number phone'></ButtonForSettings>\r\n       </View>\r\n       <Text style ={StyleConfidentialityCenter.textStyle}>Password</Text>\r\n       <View style ={StyleConfidentialityCenter.buttonsConteiner}>   \r\n            <TouchableOpacity style ={StyleConfidentialityCenter.centerButtons} onPress={() => navigation.navigate('PasswordPage')}>\r\n                <Text style ={StyleConfidentialityCenter.buttonText}>Password for Telentik</Text>\r\n                <TouchableOpacity style= {StyleConfidentialityCenter.backButton}>\r\n                    <Text style ={StyleConfidentialityCenter.buttonText}>back</Text>\r\n                </TouchableOpacity>\r\n            </TouchableOpacity>\r\n       </View>\r\n    </View>\r\n}\r\n\r\nexport default Confidentialitycenter;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAE1B,OAAOC,0BAA0B;AACjC,OAAOC,iBAAiB;AAAqD,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE7E,IAAMC,qBAAqC,GAAG,SAAxCA,qBAAqCA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EACvD,OAAOH,KAAA,CAACP,IAAI;IAACW,KAAK,EAAGT,0BAA0B,CAACU,eAAgB;IAAAC,QAAA,GAC7DR,IAAA,CAACN,IAAI;MAACY,KAAK,EAAGT,0BAA0B,CAACY,SAAU;MAAAD,QAAA,EAAC;IAAI,CAAM,CAAC,EAC/DR,IAAA,CAACL,IAAI;MAACW,KAAK,EAAGT,0BAA0B,CAACa,gBAAiB;MAAAF,QAAA,EACrDR,IAAA,CAACJ,gBAAgB;QAACe,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMN,UAAU,CAACO,QAAQ,CAAC,YAAY,CAAC;QAAA,CAAC;QAAAJ,QAAA,EAC/DR,IAAA,CAACF,iBAAiB;UAACe,IAAI,EAAC;QAAe,CAAoB;MAAC,CAC9C;IAAC,CAClB,CAAC,EACPb,IAAA,CAACN,IAAI;MAACY,KAAK,EAAGT,0BAA0B,CAACY,SAAU;MAAAD,QAAA,EAAC;IAAO,CAAM,CAAC,EAClER,IAAA,CAACL,IAAI;MAACW,KAAK,EAAGT,0BAA0B,CAACa,gBAAiB;MAAAF,QAAA,EACrDR,IAAA,CAACF,iBAAiB;QAACe,IAAI,EAAC;MAAc,CAAoB;IAAC,CAC1D,CAAC,EACPb,IAAA,CAACN,IAAI;MAACY,KAAK,EAAGT,0BAA0B,CAACY,SAAU;MAAAD,QAAA,EAAC;IAAQ,CAAM,CAAC,EACnER,IAAA,CAACL,IAAI;MAACW,KAAK,EAAGT,0BAA0B,CAACa,gBAAiB;MAAAF,QAAA,EACrDN,KAAA,CAACN,gBAAgB;QAACU,KAAK,EAAGT,0BAA0B,CAACiB,aAAc;QAACH,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMN,UAAU,CAACO,QAAQ,CAAC,cAAc,CAAC;QAAA,CAAC;QAAAJ,QAAA,GACnHR,IAAA,CAACN,IAAI;UAACY,KAAK,EAAGT,0BAA0B,CAACkB,UAAW;UAAAP,QAAA,EAAC;QAAqB,CAAM,CAAC,EACjFR,IAAA,CAACJ,gBAAgB;UAACU,KAAK,EAAGT,0BAA0B,CAACmB,UAAW;UAAAR,QAAA,EAC5DR,IAAA,CAACN,IAAI;YAACY,KAAK,EAAGT,0BAA0B,CAACkB,UAAW;YAAAP,QAAA,EAAC;UAAI,CAAM;QAAC,CAClD,CAAC;MAAA,CACL;IAAC,CAClB,CAAC;EAAA,CACJ,CAAC;AACX,CAAC;AAED,eAAeL,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}