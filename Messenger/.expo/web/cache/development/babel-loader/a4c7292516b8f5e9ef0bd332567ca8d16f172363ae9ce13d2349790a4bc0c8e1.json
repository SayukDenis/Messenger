{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport StylePassCentre from \"./StylePasswordCenter\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MultipleSwitches = function MultipleSwitches() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    switch1 = _useState2[0],\n    setSwitch1 = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    switch2 = _useState4[0],\n    setSwitch2 = _useState4[1];\n  return _jsxs(View, {\n    style: StylePassCentre.passConteiner,\n    children: [_jsxs(TouchableOpacity, {\n      style: StylePassCentre.funcOn,\n      children: [_jsx(Text, {\n        style: StylePassCentre.styleText,\n        children: \"Off lock code\"\n      }), _jsx(Switch, {\n        style: StylePassCentre.styleSwitch,\n        trackColor: {\n          false: \"#767577\",\n          true: \"#81b0ff\"\n        },\n        thumbColor: switch1 ? \"#f5dd4b\" : \"#f4f3f4\",\n        ios_backgroundColor: \"#3e3e3e\",\n        onValueChange: function onValueChange() {\n          return setSwitch1(function (prev) {\n            return !prev;\n          });\n        },\n        value: switch1\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: StylePassCentre.funcOn,\n      children: _jsx(Text, {\n        style: StylePassCentre.styleText,\n        children: \"Edit lock code\"\n      })\n    }), _jsxs(TouchableOpacity, {\n      style: StylePassCentre.funcOn,\n      children: [_jsx(Text, {\n        style: StylePassCentre.styleText,\n        children: \"Unlock to Face or Touch id\"\n      }), _jsx(Switch, {\n        style: StylePassCentre.styleSwitch,\n        trackColor: {\n          false: \"#767577\",\n          true: \"#81b0ff\"\n        },\n        thumbColor: switch2 ? \"#f5dd4b\" : \"#f4f3f4\",\n        ios_backgroundColor: \"#3e3e3e\",\n        onValueChange: function onValueChange() {\n          return setSwitch2(function (prev) {\n            return !prev;\n          });\n        },\n        value: switch2\n      })]\n    })]\n  });\n};\nexport default MultipleSwitches;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","Switch","StylePassCentre","jsx","_jsx","jsxs","_jsxs","MultipleSwitches","_useState","_useState2","_slicedToArray","switch1","setSwitch1","_useState3","_useState4","switch2","setSwitch2","style","passConteiner","children","funcOn","styleText","styleSwitch","trackColor","false","true","thumbColor","ios_backgroundColor","onValueChange","prev","value"],"sources":["D:/project/try1/Messenger/Messenger/Pages/Settings/ConfidentialityPage/Password/PasswordCenter/MultiSwitches/MulitiSwithes.tsx"],"sourcesContent":["import React,{useState} from \"react\";\r\nimport { View, Text, TouchableOpacity, Switch } from \"react-native\";\r\nimport StylePassCentre from \"./StylePasswordCenter\";\r\n\r\nconst MultipleSwitches = () => {\r\n    const [switch1, setSwitch1] = useState(false);\r\n    const [switch2, setSwitch2] = useState(false);\r\n\r\n    return<View style={StylePassCentre.passConteiner}>\r\n    <TouchableOpacity style={StylePassCentre.funcOn} ><Text style={StylePassCentre.styleText} >Off lock code</Text>\r\n    <Switch\r\n      style ={StylePassCentre.styleSwitch}\r\n      trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\r\n      thumbColor={switch1 ? \"#f5dd4b\" : \"#f4f3f4\"}\r\n      ios_backgroundColor=\"#3e3e3e\"\r\n      onValueChange={() => setSwitch1((prev) => !prev)}\r\n      value={switch1}\r\n    /> \r\n   </TouchableOpacity>\r\n    <TouchableOpacity style={StylePassCentre.funcOn} ><Text style={StylePassCentre.styleText} >Edit lock code</Text>\r\n    </TouchableOpacity>\r\n    <TouchableOpacity style={StylePassCentre.funcOn} ><Text style={StylePassCentre.styleText} >Unlock to Face or Touch id</Text>\r\n    <Switch \r\n      style ={StylePassCentre.styleSwitch}\r\n      trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\r\n      thumbColor={switch2 ? \"#f5dd4b\" : \"#f4f3f4\"}\r\n      ios_backgroundColor=\"#3e3e3e\"\r\n      onValueChange={() => setSwitch2((prev) => !prev)}\r\n      value={switch2}\r\n    />\r\n    </TouchableOpacity>\r\n</View>\r\n}\r\n\r\nexport default MultipleSwitches;"],"mappings":";AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,MAAA;AAErC,OAAOC,eAAe;AAA8B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpD,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;EAC3B,IAAAC,SAAA,GAA8BX,QAAQ,CAAC,KAAK,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAtCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC1B,IAAAI,UAAA,GAA8BhB,QAAQ,CAAC,KAAK,CAAC;IAAAiB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAtCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAE1B,OAAMR,KAAA,CAACR,IAAI;IAACmB,KAAK,EAAEf,eAAe,CAACgB,aAAc;IAAAC,QAAA,GACjDb,KAAA,CAACN,gBAAgB;MAACiB,KAAK,EAAEf,eAAe,CAACkB,MAAO;MAAAD,QAAA,GAAEf,IAAA,CAACL,IAAI;QAACkB,KAAK,EAAEf,eAAe,CAACmB,SAAU;QAAAF,QAAA,EAAE;MAAa,CAAM,CAAC,EAC/Gf,IAAA,CAACH,MAAM;QACLgB,KAAK,EAAGf,eAAe,CAACoB,WAAY;QACpCC,UAAU,EAAE;UAAEC,KAAK,EAAE,SAAS;UAAEC,IAAI,EAAE;QAAU,CAAE;QAClDC,UAAU,EAAEf,OAAO,GAAG,SAAS,GAAG,SAAU;QAC5CgB,mBAAmB,EAAC,SAAS;QAC7BC,aAAa,EAAE,SAAAA,cAAA;UAAA,OAAMhB,UAAU,CAAC,UAACiB,IAAI;YAAA,OAAK,CAACA,IAAI;UAAA,EAAC;QAAA,CAAC;QACjDC,KAAK,EAAEnB;MAAQ,CAChB,CAAC;IAAA,CACe,CAAC,EAClBP,IAAA,CAACJ,gBAAgB;MAACiB,KAAK,EAAEf,eAAe,CAACkB,MAAO;MAAAD,QAAA,EAAEf,IAAA,CAACL,IAAI;QAACkB,KAAK,EAAEf,eAAe,CAACmB,SAAU;QAAAF,QAAA,EAAE;MAAc,CAAM;IAAC,CAC9F,CAAC,EACnBb,KAAA,CAACN,gBAAgB;MAACiB,KAAK,EAAEf,eAAe,CAACkB,MAAO;MAAAD,QAAA,GAAEf,IAAA,CAACL,IAAI;QAACkB,KAAK,EAAEf,eAAe,CAACmB,SAAU;QAAAF,QAAA,EAAE;MAA0B,CAAM,CAAC,EAC5Hf,IAAA,CAACH,MAAM;QACLgB,KAAK,EAAGf,eAAe,CAACoB,WAAY;QACpCC,UAAU,EAAE;UAAEC,KAAK,EAAE,SAAS;UAAEC,IAAI,EAAE;QAAU,CAAE;QAClDC,UAAU,EAAEX,OAAO,GAAG,SAAS,GAAG,SAAU;QAC5CY,mBAAmB,EAAC,SAAS;QAC7BC,aAAa,EAAE,SAAAA,cAAA;UAAA,OAAMZ,UAAU,CAAC,UAACa,IAAI;YAAA,OAAK,CAACA,IAAI;UAAA,EAAC;QAAA,CAAC;QACjDC,KAAK,EAAEf;MAAQ,CAChB,CAAC;IAAA,CACgB,CAAC;EAAA,CACjB,CAAC;AACP,CAAC;AAED,eAAeR,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}