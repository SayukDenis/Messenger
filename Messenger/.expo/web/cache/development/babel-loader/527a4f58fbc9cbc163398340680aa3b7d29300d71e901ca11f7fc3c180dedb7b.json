{"ast":null,"code":"import React from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { styles } from \"../Styles\";\nimport SpecialSelectedColorIcon from \"../Icons/SpecialSelectedColorIcon\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar basicColors = [\"(62, 62, 62)\", \"(128, 128, 128)\", \"(165, 42, 42)\", \"(255, 0, 0)\", \"(255, 165, 0)\", \"(255, 255, 0)\", \"(0, 128, 0)\", \"(70, 177, 255)\", \"(0, 0, 255)\", \"(128, 0, 128)\", \"(43, 43, 43)\", \"(100, 100, 100)\", \"(101, 26, 26)\", \"(151, 0, 0)\", \"(195, 126, 0)\", \"(223, 223, 3)\", \"(0, 98, 0)\", \"(57, 141, 201)\", \"(5, 5, 144)\", \"(92, 2, 92)\"];\nvar ColorList = function ColorList(props) {\n  return _jsxs(View, {\n    style: {\n      width: \"100%\",\n      height: \"100%\",\n      justifyContent: \"flex-end\",\n      flexDirection: \"column\"\n    },\n    children: [_jsx(LinearGradient, {\n      colors: [\"#cf9b95\", \"#c98bb8\", \"#c37adb\"],\n      style: [styles.linearGradient, {\n        opacity: 0.7\n      }]\n    }), _jsxs(View, {\n      style: styles.selectedColorOuterContainer,\n      children: [_jsx(View, {\n        style: [styles.selectedColorInnerContainer, {\n          backgroundColor: props.pickedColor\n        }]\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          props.onSpecialColorPress();\n        },\n        children: _jsx(View, {\n          style: styles.specialSelectedColorContainer,\n          children: _jsx(SpecialSelectedColorIcon, {\n            style: styles.specialSelectedColorIcon\n          })\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.basicColorsContainer,\n      children: basicColors.map(function (color, index) {\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            props.onColorPress(\"rgb\" + color);\n          },\n          children: _jsx(View, {\n            style: [styles.oneColorContainer, {\n              backgroundColor: \"rgb\" + basicColors[index]\n            }]\n          }, color)\n        }, index);\n      })\n    })]\n  });\n};\nexport default ColorList;","map":{"version":3,"names":["React","TouchableOpacity","View","styles","SpecialSelectedColorIcon","LinearGradient","jsx","_jsx","jsxs","_jsxs","basicColors","ColorList","props","style","width","height","justifyContent","flexDirection","children","colors","linearGradient","opacity","selectedColorOuterContainer","selectedColorInnerContainer","backgroundColor","pickedColor","onPress","onSpecialColorPress","specialSelectedColorContainer","specialSelectedColorIcon","basicColorsContainer","map","color","index","onColorPress","oneColorContainer"],"sources":["C:/Users/T480/source/repos/Messenger/Messenger/Pages/Profiles/SemiComponents/Screens/BranchesScreen/NewBranchScreen/ColorList.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React from \"react\";\r\nimport { TouchableOpacity, View } from \"react-native\";\r\nimport { styles } from \"../Styles\";\r\nimport SpecialSelectedColorIcon from \"../Icons/SpecialSelectedColorIcon\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\n\r\ninterface ColorListProps {\r\n  pickedColor: string;\r\n  onColorPress: (value: string) => void;\r\n  pickedSpecialColor: string;\r\n  onSpecialColorPress: () => void;\r\n}\r\n\r\nconst basicColors: string[] = [\r\n  \"(62, 62, 62)\",\r\n  \"(128, 128, 128)\",\r\n  \"(165, 42, 42)\",\r\n  \"(255, 0, 0)\",\r\n  \"(255, 165, 0)\",\r\n  \"(255, 255, 0)\",\r\n  \"(0, 128, 0)\",\r\n  \"(70, 177, 255)\",\r\n  \"(0, 0, 255)\",\r\n  \"(128, 0, 128)\",\r\n  \"(43, 43, 43)\",\r\n  \"(100, 100, 100)\",\r\n  \"(101, 26, 26)\",\r\n  \"(151, 0, 0)\",\r\n  \"(195, 126, 0)\",\r\n  \"(223, 223, 3)\",\r\n  \"(0, 98, 0)\",\r\n  \"(57, 141, 201)\",\r\n  \"(5, 5, 144)\",\r\n  \"(92, 2, 92)\",\r\n];\r\nconst ColorList: React.FC<ColorListProps> = (props) => {\r\n  return (\r\n    <View\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        justifyContent: \"flex-end\",\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n      <LinearGradient\r\n        colors={[\"#cf9b95\", \"#c98bb8\", \"#c37adb\"]}\r\n        style={[styles.linearGradient, { opacity: 0.7 }]}\r\n      />\r\n      <View style={styles.selectedColorOuterContainer}>\r\n        {/* Selected color */}\r\n        <View\r\n          style={[\r\n            styles.selectedColorInnerContainer,\r\n            { backgroundColor: props.pickedColor },\r\n          ]}\r\n        />\r\n\r\n        {/* Special color */}\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            props.onSpecialColorPress();\r\n          }}\r\n        >\r\n          <View style={styles.specialSelectedColorContainer}>\r\n            <SpecialSelectedColorIcon style={styles.specialSelectedColorIcon} />\r\n          </View>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      {/* Basic colors */}\r\n      <View style={styles.basicColorsContainer}>\r\n        {basicColors.map((color, index) => {\r\n          return (\r\n            <TouchableOpacity\r\n              key={index}\r\n              onPress={() => {\r\n                props.onColorPress(\"rgb\" + color);\r\n              }}\r\n            >\r\n              <View\r\n                key={color}\r\n                style={[\r\n                  styles.oneColorContainer,\r\n                  { backgroundColor: \"rgb\" + basicColors[index] },\r\n                ]}\r\n              />\r\n            </TouchableOpacity>\r\n          );\r\n        })}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ColorList;\r\n"],"mappings":"AAEA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAE1B,SAASC,MAAM;AACf,OAAOC,wBAAwB;AAC/B,SAASC,cAAc,QAAQ,sBAAsB;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAStD,IAAMC,WAAqB,GAAG,CAC5B,cAAc,EACd,iBAAiB,EACjB,eAAe,EACf,aAAa,EACb,eAAe,EACf,eAAe,EACf,aAAa,EACb,gBAAgB,EAChB,aAAa,EACb,eAAe,EACf,cAAc,EACd,iBAAiB,EACjB,eAAe,EACf,aAAa,EACb,eAAe,EACf,eAAe,EACf,YAAY,EACZ,gBAAgB,EAChB,aAAa,EACb,aAAa,CACd;AACD,IAAMC,SAAmC,GAAG,SAAtCA,SAAmCA,CAAIC,KAAK,EAAK;EACrD,OACEH,KAAA,CAACP,IAAI;IACHW,KAAK,EAAE;MACLC,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE,MAAM;MACdC,cAAc,EAAE,UAAU;MAC1BC,aAAa,EAAE;IACjB,CAAE;IAAAC,QAAA,GAEFX,IAAA,CAACF,cAAc;MACbc,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAE;MAC1CN,KAAK,EAAE,CAACV,MAAM,CAACiB,cAAc,EAAE;QAAEC,OAAO,EAAE;MAAI,CAAC;IAAE,CAClD,CAAC,EACFZ,KAAA,CAACP,IAAI;MAACW,KAAK,EAAEV,MAAM,CAACmB,2BAA4B;MAAAJ,QAAA,GAE9CX,IAAA,CAACL,IAAI;QACHW,KAAK,EAAE,CACLV,MAAM,CAACoB,2BAA2B,EAClC;UAAEC,eAAe,EAAEZ,KAAK,CAACa;QAAY,CAAC;MACtC,CACH,CAAC,EAGFlB,IAAA,CAACN,gBAAgB;QACfyB,OAAO,EAAE,SAAAA,QAAA,EAAM;UACbd,KAAK,CAACe,mBAAmB,CAAC,CAAC;QAC7B,CAAE;QAAAT,QAAA,EAEFX,IAAA,CAACL,IAAI;UAACW,KAAK,EAAEV,MAAM,CAACyB,6BAA8B;UAAAV,QAAA,EAChDX,IAAA,CAACH,wBAAwB;YAACS,KAAK,EAAEV,MAAM,CAAC0B;UAAyB,CAAE;QAAC,CAChE;MAAC,CACS,CAAC;IAAA,CACf,CAAC,EAGPtB,IAAA,CAACL,IAAI;MAACW,KAAK,EAAEV,MAAM,CAAC2B,oBAAqB;MAAAZ,QAAA,EACtCR,WAAW,CAACqB,GAAG,CAAC,UAACC,KAAK,EAAEC,KAAK,EAAK;QACjC,OACE1B,IAAA,CAACN,gBAAgB;UAEfyB,OAAO,EAAE,SAAAA,QAAA,EAAM;YACbd,KAAK,CAACsB,YAAY,CAAC,KAAK,GAAGF,KAAK,CAAC;UACnC,CAAE;UAAAd,QAAA,EAEFX,IAAA,CAACL,IAAI;YAEHW,KAAK,EAAE,CACLV,MAAM,CAACgC,iBAAiB,EACxB;cAAEX,eAAe,EAAE,KAAK,GAAGd,WAAW,CAACuB,KAAK;YAAE,CAAC;UAC/C,GAJGD,KAKN;QAAC,GAXGC,KAYW,CAAC;MAEvB,CAAC;IAAC,CACE,CAAC;EAAA,CACH,CAAC;AAEX,CAAC;AAED,eAAetB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}