{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _excluded = [\"minPointers\", \"maxPointers\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport GestureHandler from \"./GestureHandler\";\nvar IndiscreteGestureHandler = function (_GestureHandler) {\n  function IndiscreteGestureHandler() {\n    _classCallCheck(this, IndiscreteGestureHandler);\n    return _callSuper(this, IndiscreteGestureHandler, arguments);\n  }\n  _inherits(IndiscreteGestureHandler, _GestureHandler);\n  return _createClass(IndiscreteGestureHandler, [{\n    key: \"shouldEnableGestureOnSetup\",\n    get: function get() {\n      return false;\n    }\n  }, {\n    key: \"updateGestureConfig\",\n    value: function updateGestureConfig(_ref) {\n      var _ref$minPointers = _ref.minPointers,\n        minPointers = _ref$minPointers === void 0 ? 2 : _ref$minPointers,\n        _ref$maxPointers = _ref.maxPointers,\n        maxPointers = _ref$maxPointers === void 0 ? 2 : _ref$maxPointers,\n        props = _objectWithoutProperties(_ref, _excluded);\n      return _get(_getPrototypeOf(IndiscreteGestureHandler.prototype), \"updateGestureConfig\", this).call(this, _objectSpread({\n        minPointers: minPointers,\n        maxPointers: maxPointers\n      }, props));\n    }\n  }, {\n    key: \"isGestureEnabledForEvent\",\n    value: function isGestureEnabledForEvent(_ref2, _recognizer, _ref3) {\n      var minPointers = _ref2.minPointers,\n        maxPointers = _ref2.maxPointers;\n      var pointerLength = _ref3.maxPointers;\n      if (pointerLength > maxPointers) {\n        return {\n          failed: true\n        };\n      }\n      var validPointerCount = pointerLength >= minPointers;\n      return {\n        success: validPointerCount\n      };\n    }\n  }]);\n}(GestureHandler);\nexport default IndiscreteGestureHandler;","map":{"version":3,"names":["GestureHandler","IndiscreteGestureHandler","_GestureHandler","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","get","value","updateGestureConfig","_ref","_ref$minPointers","minPointers","_ref$maxPointers","maxPointers","props","_objectWithoutProperties","_excluded","_get","_getPrototypeOf","prototype","call","_objectSpread","isGestureEnabledForEvent","_ref2","_recognizer","_ref3","pointerLength","failed","validPointerCount","success"],"sources":["C:\\Users\\T480\\source\\repos\\Messenger\\Messenger\\node_modules\\react-native-gesture-handler\\lib\\module\\web_hammer\\IndiscreteGestureHandler.ts"],"sourcesContent":["import GestureHandler from './GestureHandler';\n\n/**\n * The base class for **Rotation** and **Pinch** gesture handlers.\n */\nabstract class IndiscreteGestureHandler extends GestureHandler {\n  get shouldEnableGestureOnSetup() {\n    return false;\n  }\n\n  updateGestureConfig({ minPointers = 2, maxPointers = 2, ...props }) {\n    return super.updateGestureConfig({\n      minPointers,\n      maxPointers,\n      ...props,\n    });\n  }\n\n  isGestureEnabledForEvent(\n    { minPointers, maxPointers }: any,\n    _recognizer: any,\n    { maxPointers: pointerLength }: any\n  ) {\n    if (pointerLength > maxPointers) {\n      return { failed: true };\n    }\n    const validPointerCount = pointerLength >= minPointers;\n    return {\n      success: validPointerCount,\n    };\n  }\n}\nexport default IndiscreteGestureHandler;\n"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,cAAP;AAAA,IAKeC,wBAAf,aAAAC,eAAA;EAAA,SAAAD,yBAAA;IAAAE,eAAA,OAAAF,wBAAA;IAAA,OAAAG,UAAA,OAAAH,wBAAA,EAAAI,SAAA;EAAA;EAAAC,SAAA,CAAAL,wBAAA,EAAAC,eAAA;EAAA,OAAAK,YAAA,CAAAN,wBAAA;IAAAO,GAAA;IAAAC,GAAA,EACgC,SAAAA,IAAA,EAAG;MAC/B,OAAO,KAAP;IACD;EAAA;IAAAD,GAAA;IAAAE,KAAA,EAED,SAAAC,oBAAAC,IAAA,EAAoE;MAAA,IAAAC,gBAAA,GAAAD,IAAA,CAA9CE,WAAW;QAAXA,WAAW,GAAAD,gBAAA,cAAG,CAAhB,GAAAA,gBAAA;QAAAE,gBAAA,GAAAH,IAAA,CAAmBI,WAAW;QAAXA,WAAW,GAAAD,gBAAA,cAAG,CAAjC,GAAAA,gBAAA;QAAuCE,KAAA,GAAAC,wBAAA,CAAAN,IAAA,EAAAO,SAAA;MACzD,OAAAC,IAAA,CAAAC,eAAA,CAAApB,wBAAA,CAAAqB,SAAA,gCAAAC,IAAA,OAAAC,aAAA;QACEV,WAD+B,EAC/BA,WAD+B;QAE/BE,WAF+B,EAE/BA;MAF+B,GAG5BC,KAAA;IAEN;EAAA;IAAAT,GAAA;IAAAE,KAAA,EAED,SAAAe,yBAAAC,KAAA,EAEEC,WAFsB,EAAAC,KAAA,EAItB;MAAA,IAHEd,WAAF,GAAAY,KAAA,CAAEZ,WAAF;QAAeE,WAAA,GAAAU,KAAA,CAAAV,WAAA;MAAA,IAEAa,aAAA,GAAAD,KAAA,CAAbZ,WAAW;MAEb,IAAIa,aAAa,GAAGb,WAApB,EAAiC;QAC/B,OAAO;UAAEc,MAAM,EAAE;QAAV,CAAP;MACD;MACD,IAAMC,iBAAiB,GAAGF,aAAa,IAAIf,WAA3C;MACA,OAAO;QACLkB,OAAO,EAAED;MADJ,CAAP;IAGD;EAAA;AAAA,EAzB6C/B,cAAhD;AA2BA,eAAeC,wBAAf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}