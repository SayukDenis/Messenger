{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport StyleAddFolderHeader from \"./StyleAddFolderHeader\";\nimport { addNewFolder } from \"../../../../../ReducersAndActions/Actions/SettingsActions/SettingsActions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AddFolderHeader = function AddFolderHeader(_ref) {\n  var navigation = _ref.navigation;\n  var nameFolder = useSelector(function (state) {\n    console.log(state.settingsPagesReducers.saveInputText.TextInput + \"GlibPitux\");\n    return state.settingsPagesReducers.saveInputText.TextInput;\n  });\n  var dispatch = useDispatch();\n  var addItem = function addItem() {\n    if (nameFolder.trim() != \"\") {\n      dispatch(addNewFolder(nameFolder));\n      console.log(\"dispatch \" + nameFolder);\n    }\n    navigation.goBack();\n  };\n  return _jsx(View, {\n    style: StyleAddFolderHeader.header,\n    children: _jsxs(View, {\n      style: StyleAddFolderHeader.addFolderHeaderConteiner,\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.goBack();\n        },\n        children: _jsx(Text, {\n          children: \"but\"\n        })\n      }), _jsx(Text, {\n        children: \"New folder\"\n      }), _jsx(TouchableOpacity, {\n        onPress: addItem,\n        children: _jsx(Text, {\n          children: \"Done\"\n        })\n      })]\n    })\n  });\n};\nexport default AddFolderHeader;","map":{"version":3,"names":["React","View","TouchableOpacity","Text","useSelector","useDispatch","StyleAddFolderHeader","addNewFolder","jsx","_jsx","jsxs","_jsxs","AddFolderHeader","_ref","navigation","nameFolder","state","console","log","settingsPagesReducers","saveInputText","TextInput","dispatch","addItem","trim","goBack","style","header","children","addFolderHeaderConteiner","onPress"],"sources":["D:/project/1project/Messenger/Messenger/Pages/Settings/ChatFolderPage/AddFolderPage/AddFolderHeadr/AddFolderHeader.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { View, TouchableOpacity, Text } from \"react-native\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport StyleAddFolderHeader from \"./StyleAddFolderHeader\";\r\nimport { useEffect } from \"react\";\r\nimport { State } from \"react-native-gesture-handler\";\r\nimport { addNewFolder } from \"../../../../../ReducersAndActions/Actions/SettingsActions/SettingsActions\";\r\n\r\nconst AddFolderHeader: React.FC<any> = ({ navigation })=>{\r\n\r\n    let nameFolder : string = useSelector((state: any) => {\r\n        console.log(state.settingsPagesReducers.saveInputText.TextInput + \"GlibPitux\")\r\n        return state.settingsPagesReducers.saveInputText.TextInput\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    const addItem = () => {\r\n        if(nameFolder.trim() != \"\"){\r\n            dispatch(addNewFolder(nameFolder)); \r\n            console.log(\"dispatch \" + nameFolder )\r\n        }\r\n        navigation.goBack();\r\n    };\r\n    \r\n    return <View style = {StyleAddFolderHeader.header}>\r\n            <View style = {StyleAddFolderHeader.addFolderHeaderConteiner}>\r\n                <TouchableOpacity onPress={()=>navigation.goBack()} ><Text>but</Text></TouchableOpacity>\r\n                <Text>New folder</Text>\r\n                <TouchableOpacity onPress={addItem} ><Text>Done</Text></TouchableOpacity>\r\n            </View>\r\n    </View>\r\n}\r\n\r\nexport default AddFolderHeader;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAE1B,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,oBAAoB;AAG3B,SAASC,YAAY;AAAoF,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzG,IAAMC,eAA8B,GAAG,SAAjCA,eAA8BA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAEhD,IAAIC,UAAmB,GAAGX,WAAW,CAAC,UAACY,KAAU,EAAK;IAClDC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,qBAAqB,CAACC,aAAa,CAACC,SAAS,GAAG,WAAW,CAAC;IAC9E,OAAOL,KAAK,CAACG,qBAAqB,CAACC,aAAa,CAACC,SAAS;EAC9D,CAAC,CAAC;EACF,IAAMC,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAE9B,IAAMkB,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;IAClB,IAAGR,UAAU,CAACS,IAAI,CAAC,CAAC,IAAI,EAAE,EAAC;MACvBF,QAAQ,CAACf,YAAY,CAACQ,UAAU,CAAC,CAAC;MAClCE,OAAO,CAACC,GAAG,CAAC,WAAW,GAAGH,UAAW,CAAC;IAC1C;IACAD,UAAU,CAACW,MAAM,CAAC,CAAC;EACvB,CAAC;EAED,OAAOhB,IAAA,CAACR,IAAI;IAACyB,KAAK,EAAIpB,oBAAoB,CAACqB,MAAO;IAAAC,QAAA,EAC1CjB,KAAA,CAACV,IAAI;MAACyB,KAAK,EAAIpB,oBAAoB,CAACuB,wBAAyB;MAAAD,QAAA,GACzDnB,IAAA,CAACP,gBAAgB;QAAC4B,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAIhB,UAAU,CAACW,MAAM,CAAC,CAAC;QAAA,CAAC;QAAAG,QAAA,EAAEnB,IAAA,CAACN,IAAI;UAAAyB,QAAA,EAAC;QAAG,CAAM;MAAC,CAAkB,CAAC,EACxFnB,IAAA,CAACN,IAAI;QAAAyB,QAAA,EAAC;MAAU,CAAM,CAAC,EACvBnB,IAAA,CAACP,gBAAgB;QAAC4B,OAAO,EAAEP,OAAQ;QAAAK,QAAA,EAAEnB,IAAA,CAACN,IAAI;UAAAyB,QAAA,EAAC;QAAI,CAAM;MAAC,CAAkB,CAAC;IAAA,CACvE;EAAC,CACT,CAAC;AACX,CAAC;AAED,eAAehB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}