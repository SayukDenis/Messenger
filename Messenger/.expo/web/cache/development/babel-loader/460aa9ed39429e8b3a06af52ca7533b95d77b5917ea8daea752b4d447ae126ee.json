{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport { styles } from \"./Styles/DefaultTextType\";\nimport React from 'react';\nimport { wrapText } from \"./HelperFunctions/wrapText\";\nimport { screenHeight, screenWidth } from \"../../../ChatList/Constants/ConstantsForChatlist\";\nimport MessageItemSwipeToReplyIcon from \"../SVG/MessageItemSwipeToReplyIcon\";\nimport MessageItemStatusMessageReviewed from \"../SVG/MessageItemStatusMessageReviewed\";\nimport MessageItemStatusMessageNotReviewed from \"../SVG/MessageItemStatusMessageNotReviewed\";\nimport { CHARS_PER_LINE } from \"../DialogueConstants\";\nimport SelectButton from \"./SemiComponents/SelectButton\";\nimport { useDispatch } from 'react-redux';\nimport { decrementNumberOfSelectedMessages, incrementNumberOfSelectedMessages, resetNumberOfSelectedMessages } from \"../../../../ReducersAndActions/Actions/ChatActions/ChatActions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar size = [];\nvar DefaultTextType = function DefaultTextType(_ref) {\n  var _userMessageLastWatch;\n  var message = _ref.message,\n    setMessageMenuVisible = _ref.setMessageMenuVisible,\n    id = _ref.id,\n    author = _ref.author,\n    userMessageLastWatched = _ref.userMessageLastWatched,\n    selecting = _ref.selecting;\n  var dispatch = useDispatch();\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    heightOfMessage = _useState2[0],\n    setHeightOfMessage = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selected = _useState4[0],\n    setSelected = _useState4[1];\n  useEffect(function () {\n    if (!selecting) {\n      dispatch(resetNumberOfSelectedMessages());\n      setSelected(false);\n    }\n  }, [selecting]);\n  var onLayout = function onLayout(event) {\n    var _event$nativeEvent$la = event.nativeEvent.layout,\n      width = _event$nativeEvent$la.width,\n      height = _event$nativeEvent$la.height;\n    size = [].concat(_toConsumableArray(size), [{\n      ID: id,\n      layout: {\n        width: width,\n        height: height\n      }\n    }]);\n  };\n  var measureHandler = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      return new Promise(function (resolve) {\n        if (componentRef.current) {\n          componentRef.current.measure(function () {\n            var _ref3 = _asyncToGenerator(function* (x, y, width, height, pageX, pageY) {\n              resolve({\n                X: pageX,\n                Y: pageY\n              });\n            });\n            return function (_x, _x2, _x3, _x4, _x5, _x6) {\n              return _ref3.apply(this, arguments);\n            };\n          }());\n        } else {\n          resolve({\n            X: 0,\n            Y: 0\n          });\n        }\n      });\n    });\n    return function measureHandler() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handlePress = useCallback(function () {\n    var _ref4 = _asyncToGenerator(function* (event) {\n      if (!event) return {\n        ID: id,\n        componentPageX: 0,\n        componentPageY: 0,\n        pageX: 0,\n        pageY: 0,\n        width: 0,\n        height: 0,\n        message: undefined\n      };\n      setSelected(true);\n      dispatch(incrementNumberOfSelectedMessages());\n      var nativeEvent = event.nativeEvent;\n      var pageX = nativeEvent.pageX,\n        pageY = nativeEvent.pageY;\n      var component = size.find(function (c) {\n        return c.ID === id;\n      });\n      var componentPage = yield measureHandler();\n      return {\n        ID: id,\n        componentPageX: componentPage.X,\n        componentPageY: componentPage.Y,\n        pageX: pageX,\n        pageY: pageY,\n        width: component.layout.width,\n        height: component.layout.height,\n        message: message\n      };\n    });\n    return function (_x7) {\n      return _ref4.apply(this, arguments);\n    };\n  }(), []);\n  var onScrollEndDrag = function () {\n    var _ref5 = _asyncToGenerator(function* (event) {\n      var contentOffsetX = event.nativeEvent.contentOffset.x;\n      var contentWidth = event.nativeEvent.contentSize.width;\n      var scrollViewWidth = event.nativeEvent.layoutMeasurement.width;\n      if (Math.round(contentOffsetX + scrollViewWidth) >= Math.round(contentWidth)) {\n        scrollViewRef.current.scrollTo({\n          y: 0,\n          animated: true\n        });\n        yield handlePress(null).then(function (layout) {\n          setMessageMenuVisible(layout, false);\n        });\n      }\n    });\n    return function onScrollEndDrag(_x8) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var scrollViewRef = useRef(null);\n  var _useState5 = useState({}),\n    _useState6 = _slicedToArray(_useState5, 2),\n    pressCoordinations = _useState6[0],\n    setPressCoordinations = _useState6[1];\n  var componentRef = useRef(null);\n  return _jsx(ScrollView, {\n    ref: scrollViewRef,\n    horizontal: true,\n    alwaysBounceHorizontal: false,\n    pagingEnabled: true,\n    bounces: false,\n    overScrollMode: 'never',\n    onScrollEndDrag: onScrollEndDrag,\n    showsHorizontalScrollIndicator: false,\n    style: styles.swipeableContainer,\n    children: _jsxs(TouchableOpacity, {\n      ref: componentRef,\n      style: styles.mainContainer,\n      activeOpacity: 1,\n      onPressIn: function onPressIn(event) {\n        var _event$nativeEvent = event.nativeEvent,\n          locationX = _event$nativeEvent.locationX,\n          locationY = _event$nativeEvent.locationY;\n        setPressCoordinations({\n          locationX_In: locationX,\n          locationY_In: locationY\n        });\n      },\n      onPressOut: (function () {\n        var _ref6 = _asyncToGenerator(function* (event) {\n          var _event$nativeEvent2 = event.nativeEvent,\n            locationX = _event$nativeEvent2.locationX,\n            locationY = _event$nativeEvent2.locationY;\n          var locationX_In = pressCoordinations.locationX_In,\n            locationY_In = pressCoordinations.locationY_In;\n          if (selecting && Math.abs(locationX - locationX_In) < 3 && Math.abs(locationY - locationY_In) < 3) {\n            dispatch(selected ? decrementNumberOfSelectedMessages() : incrementNumberOfSelectedMessages());\n            setSelected(!selected);\n            return;\n          }\n          if (Math.abs(locationX - locationX_In) < 3 && Math.abs(locationY - locationY_In) < 3) {\n            yield handlePress(event).then(function (layout) {\n              setMessageMenuVisible(layout, true);\n            });\n          }\n        });\n        return function (_x9) {\n          return _ref6.apply(this, arguments);\n        };\n      }()),\n      children: [_jsxs(View, {\n        style: [styles.messageBlockContainer, message.author.userId == author.userId && {\n          justifyContent: 'flex-end'\n        }],\n        children: [_jsxs(View, {\n          onLayout: function onLayout(event) {\n            return setHeightOfMessage(event.nativeEvent.layout.height);\n          },\n          style: styles.messageContainer,\n          children: [_jsxs(View, {\n            onLayout: onLayout,\n            style: [message.author.userId == author.userId ? styles.messageTypeTextUser : styles.messageTypeTextNotUser, message.content.length > CHARS_PER_LINE && styles.longMessage, {\n              overflow: 'hidden'\n            }],\n            children: [_jsx(View, {\n              style: {\n                position: 'absolute',\n                height: screenHeight,\n                width: screenWidth,\n                zIndex: -1,\n                opacity: 0.4,\n                backgroundColor: message.author.userId === author.userId ? '#E09EFF' : '#fff'\n              }\n            }), _jsx(Text, {\n              children: wrapText(message.content, CHARS_PER_LINE)\n            }), _jsxs(Text, {\n              style: message.content.length > CHARS_PER_LINE ? [styles.messageTimeStamp, styles.longMessageTimeStamp] : styles.messageTimeStamp,\n              children: [message.isEdited ? 'edited ' : '', message.sendingTime.getHours().toString().padStart(2, '0'), \":\", message.sendingTime.getMinutes().toString().padStart(2, '0')]\n            })]\n          }), selecting && _jsx(SelectButton, {\n            selected: selected,\n            isUser: message.author.userId == author.userId,\n            verticalOffset: heightOfMessage / 2 - 10,\n            horizontalOffset: -(20 + 5)\n          })]\n        }), message.author.userId == author.userId && _jsx(View, {\n          style: {\n            position: 'absolute',\n            right: 0,\n            bottom: 10,\n            marginRight: -2.5\n          },\n          children: message.messageId <= (userMessageLastWatched == null ? void 0 : (_userMessageLastWatch = userMessageLastWatched.value) == null ? void 0 : _userMessageLastWatch.messageId) ? _jsx(MessageItemStatusMessageReviewed, {}) : _jsx(MessageItemStatusMessageNotReviewed, {})\n        })]\n      }), _jsx(View, {\n        style: {\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: 55,\n          paddingRight: 10\n        },\n        children: _jsx(MessageItemSwipeToReplyIcon, {})\n      })]\n    })\n  });\n};\nexport default memo(DefaultTextType);","map":{"version":3,"names":["memo","useCallback","useEffect","useRef","useState","styles","React","wrapText","screenHeight","screenWidth","MessageItemSwipeToReplyIcon","MessageItemStatusMessageReviewed","MessageItemStatusMessageNotReviewed","CHARS_PER_LINE","SelectButton","useDispatch","decrementNumberOfSelectedMessages","incrementNumberOfSelectedMessages","resetNumberOfSelectedMessages","jsx","_jsx","jsxs","_jsxs","size","DefaultTextType","_ref","_userMessageLastWatch","message","setMessageMenuVisible","id","author","userMessageLastWatched","selecting","dispatch","_useState","_useState2","_slicedToArray","heightOfMessage","setHeightOfMessage","_useState3","_useState4","selected","setSelected","onLayout","event","_event$nativeEvent$la","nativeEvent","layout","width","height","concat","_toConsumableArray","ID","measureHandler","_ref2","_asyncToGenerator","Promise","resolve","componentRef","current","measure","_ref3","x","y","pageX","pageY","X","Y","_x","_x2","_x3","_x4","_x5","_x6","apply","arguments","handlePress","_ref4","componentPageX","componentPageY","undefined","component","find","c","componentPage","_x7","onScrollEndDrag","_ref5","contentOffsetX","contentOffset","contentWidth","contentSize","scrollViewWidth","layoutMeasurement","Math","round","scrollViewRef","scrollTo","animated","then","_x8","_useState5","_useState6","pressCoordinations","setPressCoordinations","ScrollView","ref","horizontal","alwaysBounceHorizontal","pagingEnabled","bounces","overScrollMode","showsHorizontalScrollIndicator","style","swipeableContainer","children","TouchableOpacity","mainContainer","activeOpacity","onPressIn","_event$nativeEvent","locationX","locationY","locationX_In","locationY_In","onPressOut","_ref6","_event$nativeEvent2","abs","_x9","View","messageBlockContainer","userId","justifyContent","messageContainer","messageTypeTextUser","messageTypeTextNotUser","content","length","longMessage","overflow","position","zIndex","opacity","backgroundColor","Text","messageTimeStamp","longMessageTimeStamp","isEdited","sendingTime","getHours","toString","padStart","getMinutes","isUser","verticalOffset","horizontalOffset","right","bottom","marginRight","messageId","value","alignItems","paddingRight"],"sources":["D:/project/1project/Messenger/Messenger/Pages/Chats/Dialogue/MessageViewsAndTypes/DefaultTextType.tsx"],"sourcesContent":["import { View, Text, TouchableOpacity, ScrollView } from 'react-native';\r\nimport { memo, useCallback, useEffect, useRef, useState } from 'react';\r\nimport { styles } from './Styles/DefaultTextType';\r\nimport React from 'react';\r\nimport { MessageProps } from '../GeneralInterfaces/IMessage';\r\nimport User from '../../../../dao/Models/User';\r\nimport { wrapText } from './HelperFunctions/wrapText';\r\nimport { screenHeight, screenWidth } from '../../../ChatList/Constants/ConstantsForChatlist';\r\nimport MessageItemSwipeToReplyIcon from '../SVG/MessageItemSwipeToReplyIcon';\r\nimport MessageItemStatusMessageReviewed from '../SVG/MessageItemStatusMessageReviewed';\r\nimport MessageItemStatusMessageNotReviewed from '../SVG/MessageItemStatusMessageNotReviewed';\r\nimport ILastWatchedMessage from '../../../../dao/Models/Chats/ILastWatchedMessage';\r\nimport { Layout } from \"../GeneralInterfaces/ILayout\";\r\nimport { CHARS_PER_LINE } from '../DialogueConstants';\r\nimport SelectButton from './SemiComponents/SelectButton';\r\nimport { useDispatch } from 'react-redux';\r\nimport { decrementNumberOfSelectedMessages, incrementNumberOfSelectedMessages, resetNumberOfSelectedMessages } from '../../../../ReducersAndActions/Actions/ChatActions/ChatActions';\r\n\r\ninterface DefaultTextMessageProps {\r\n  message:MessageProps;\r\n  setMessageMenuVisible:(arg0: Layout, arg1: boolean)=>void;\r\n  id:number;\r\n  author: User;\r\n  userMessageLastWatched: ILastWatchedMessage | undefined;\r\n  selecting: boolean;\r\n}\r\n\r\nlet size:any[] = [];\r\n\r\nconst DefaultTextType = ({ message, setMessageMenuVisible, id, author, userMessageLastWatched, selecting }:DefaultTextMessageProps) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [heightOfMessage, setHeightOfMessage] = useState(0);\r\n  const [selected, setSelected] = useState(false);\r\n  useEffect(() => {\r\n    if(!selecting) {\r\n      dispatch(resetNumberOfSelectedMessages())\r\n      setSelected(false)\r\n    }\r\n  }, [selecting])\r\n\r\n  const onLayout = (event:any) => {\r\n    const { width, height } = event.nativeEvent.layout;\r\n    size = [...size, { ID: id, layout: { width, height }}];\r\n  };\r\n\r\n  const measureHandler = async () => {\r\n    return new Promise((resolve) => {\r\n      if (componentRef.current) {\r\n        componentRef.current.measure(\r\n          async (x: number, y: number, width: number, height: number, pageX: number, pageY: number) => {\r\n            resolve({ X: pageX, Y: pageY });\r\n          }\r\n        );\r\n      } else {\r\n        resolve({ X: 0, Y: 0 });\r\n      }\r\n    });\r\n  };\r\n  \r\n  interface componentPageProps {\r\n    X: number;\r\n    Y: number;\r\n  }\r\n  const handlePress = useCallback(async (event:({ nativeEvent: { pageX: number; pageY: number } } | null)) => {\r\n    if(!event) return { ID: id, componentPageX:0, componentPageY: 0, pageX: 0, pageY: 0, width: 0, height: 0, message: undefined };\r\n\r\n    setSelected(true);\r\n    dispatch(incrementNumberOfSelectedMessages())\r\n\r\n    const { nativeEvent } = event;\r\n    const { pageX, pageY } = nativeEvent;\r\n\r\n    const component = size.find(c => c.ID === id);\r\n\r\n    const componentPage = await measureHandler();\r\n    \r\n    return { \r\n      ID: id,\r\n      componentPageX: (componentPage as componentPageProps).X,\r\n      componentPageY: (componentPage as componentPageProps).Y,\r\n      pageX: pageX,\r\n      pageY: pageY,\r\n      width: component.layout.width,\r\n      height: component.layout.height,\r\n      message: message\r\n    };\r\n  }, []);\r\n\r\n\r\n  const onScrollEndDrag = async (event:any) => {\r\n    const contentOffsetX = event.nativeEvent.contentOffset.x;\r\n    const contentWidth = event.nativeEvent.contentSize.width;\r\n    const scrollViewWidth = event.nativeEvent.layoutMeasurement.width;\r\n\r\n    if (Math.round(contentOffsetX + scrollViewWidth) >= Math.round(contentWidth)) {\r\n      scrollViewRef.current!.scrollTo({y:0,animated:true})\r\n      await handlePress(null).then((layout) => {\r\n        setMessageMenuVisible(layout, false);\r\n      });\r\n    }\r\n  };\r\n  const scrollViewRef = useRef<ScrollView>(null);\r\n\r\n  interface coordProps {\r\n    locationX_In: number;\r\n    locationY_In: number;\r\n  }\r\n  const [pressCoordinations, setPressCoordinations] = useState({} as coordProps);\r\n  const componentRef = useRef<TouchableOpacity>(null);\r\n\r\n  return (\r\n    <ScrollView \r\n      ref={scrollViewRef}\r\n      horizontal={true} \r\n      alwaysBounceHorizontal={false} \r\n      pagingEnabled \r\n      bounces={false}\r\n      overScrollMode={'never'}\r\n      onScrollEndDrag={onScrollEndDrag}\r\n      showsHorizontalScrollIndicator={false}\r\n      style={styles.swipeableContainer}\r\n    >\r\n      <TouchableOpacity \r\n        ref={componentRef}\r\n        style={styles.mainContainer} \r\n        activeOpacity={1} \r\n        onPressIn={(event) => {\r\n          const { locationX, locationY } = event.nativeEvent;\r\n          setPressCoordinations({ locationX_In: locationX, locationY_In: locationY })\r\n        }}\r\n        onPressOut={async (event) => {\r\n          const { locationX, locationY } = event.nativeEvent;\r\n          const { locationX_In, locationY_In } = pressCoordinations;\r\n          \r\n          if(selecting && Math.abs(locationX-locationX_In) < 3 && Math.abs(locationY-locationY_In) < 3) {\r\n            dispatch(selected?decrementNumberOfSelectedMessages():incrementNumberOfSelectedMessages());\r\n            setSelected(!selected);\r\n            return;\r\n          }\r\n            \r\n          if(Math.abs(locationX-locationX_In) < 3 && Math.abs(locationY-locationY_In) < 3) {\r\n            await handlePress(event).then((layout) => {\r\n              setMessageMenuVisible(layout, true);\r\n            });\r\n          }\r\n        }}\r\n      >\r\n        <View \r\n          style={[styles.messageBlockContainer, message.author.userId==author.userId&&{ justifyContent:'flex-end' }]}\r\n        >\r\n          <View \r\n            onLayout={(event) => setHeightOfMessage(event.nativeEvent.layout.height)}\r\n            style={styles.messageContainer}\r\n          >\r\n            <View \r\n              onLayout={onLayout}\r\n              style={[message.author.userId==author.userId?styles.messageTypeTextUser:styles.messageTypeTextNotUser, message.content.length>CHARS_PER_LINE&&styles.longMessage, { overflow: 'hidden' }]}\r\n            >\r\n              <View style={{ position: 'absolute', height: screenHeight, width: screenWidth, zIndex: -1, opacity: 0.4, backgroundColor:message.author.userId===author.userId?'#E09EFF':'#fff' }} /> \r\n              <Text>{wrapText(message.content, CHARS_PER_LINE)}</Text>\r\n              <Text style={message.content.length>CHARS_PER_LINE?[styles.messageTimeStamp, styles.longMessageTimeStamp]:styles.messageTimeStamp}>\r\n                {message.isEdited?'edited ':''}\r\n                {message.sendingTime.getHours().toString().padStart(2, '0')}:\r\n                {message.sendingTime.getMinutes().toString().padStart(2, '0')}\r\n              </Text>\r\n            </View>\r\n            {selecting && <SelectButton \r\n              selected={selected}\r\n              isUser={message.author.userId==author.userId}\r\n              verticalOffset={heightOfMessage/2-10}\r\n              horizontalOffset={-(20+5)}\r\n            />}\r\n          </View>\r\n          { message.author.userId==author.userId && \r\n            <View style={{ position: 'absolute', right: 0, bottom: 10 , marginRight: -2.5 }}>\r\n              { message.messageId!<=userMessageLastWatched?.value?.messageId!?<MessageItemStatusMessageReviewed />:<MessageItemStatusMessageNotReviewed /> }\r\n            </View> }\r\n        </View>\r\n        <View style={{ alignItems: 'center', justifyContent: 'center', width: 55, paddingRight: 10 }}>\r\n          <MessageItemSwipeToReplyIcon />\r\n        </View>\r\n      </TouchableOpacity>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default memo(DefaultTextType);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}