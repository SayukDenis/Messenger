{"ast":null,"code":"import React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { footerstyles } from \"../../Styles/FooterStyle\";\nimport { useSelector } from 'react-redux';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar FolderIndicator = function FolderIndicator(_ref) {\n  var widths = _ref.widths,\n    isVisibleForModalFolder = _ref.isVisibleForModalFolder,\n    positionsOfFolder = _ref.positionsOfFolder,\n    screenWidth = _ref.screenWidth;\n  var selectedFolder = useSelector(function (state) {\n    return state == null ? void 0 : state.selectedFolder.selectedFolder;\n  });\n  var currentPosition = useSelector(function (state) {\n    return state.currentPosition.currentPosition;\n  });\n  var indicatorLeft = new Animated.Value((currentPosition - screenWidth * Math.round(currentPosition / screenWidth)) % screenWidth / screenWidth * widths.current[Math.round(currentPosition / screenWidth)] + positionsOfFolder.current[Math.round(currentPosition / screenWidth)]);\n  Animated.timing(indicatorLeft, {\n    toValue: (currentPosition - screenWidth * Math.round(currentPosition / screenWidth)) % screenWidth / screenWidth * widths.current[Math.round(currentPosition / screenWidth)] + positionsOfFolder.current[Math.round(currentPosition / screenWidth)],\n    duration: 0,\n    useNativeDriver: true\n  }).start();\n  return _jsx(Animated.View, {\n    style: {\n      transform: [{\n        translateX: indicatorLeft\n      }]\n    },\n    children: !isVisibleForModalFolder ? _jsx(Animated.View, {\n      style: [footerstyles.selectedFolder, {\n        width: widths.current[selectedFolder] * 0.8,\n        marginLeft: widths.current[selectedFolder] * 0.1\n      }]\n    }) : null\n  });\n};\nexport default FolderIndicator;","map":{"version":3,"names":["React","Animated","footerstyles","useSelector","jsx","_jsx","FolderIndicator","_ref","widths","isVisibleForModalFolder","positionsOfFolder","screenWidth","selectedFolder","state","currentPosition","indicatorLeft","Value","Math","round","current","timing","toValue","duration","useNativeDriver","start","View","style","transform","translateX","children","width","marginLeft"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/ChatList/Components/Footer containers/FolderIndicator.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Animated, View } from 'react-native';\r\nimport { footerstyles } from '../../Styles/FooterStyle';\r\nimport { useSelector } from 'react-redux';\r\nimport { Easing } from 'react-native-reanimated';\r\n\r\ninterface AnimatedFolderIndicatorProps {\r\n  screenWidth: number;\r\n  widths: any;\r\n  positionsOfFolder: any;\r\n  isVisibleForModalFolder: boolean;\r\n}\r\n\r\nconst FolderIndicator: React.FC<AnimatedFolderIndicatorProps> = ({\r\n  widths,\r\n  isVisibleForModalFolder,\r\n  positionsOfFolder,\r\n  screenWidth,\r\n}) => {\r\n  const selectedFolder = useSelector((state: any) => state?.selectedFolder.selectedFolder);\r\n  const currentPosition = useSelector((state: any) => state.currentPosition.currentPosition);\r\n\r\n  const indicatorLeft = new Animated.Value(\r\n    (((currentPosition - screenWidth * Math.round(currentPosition / screenWidth)) %\r\n      screenWidth) /\r\n      screenWidth) *\r\n      widths.current[Math.round(currentPosition / screenWidth)] +\r\n      positionsOfFolder.current[Math.round(currentPosition / screenWidth)]\r\n  );\r\n\r\n  Animated.timing(indicatorLeft, {\r\n    toValue:\r\n      (((currentPosition - screenWidth * Math.round(currentPosition / screenWidth)) %\r\n        screenWidth) /\r\n        screenWidth) *\r\n        widths.current[Math.round(currentPosition / screenWidth)] +\r\n      positionsOfFolder.current[Math.round(currentPosition / screenWidth)],\r\n    duration:0,\r\n    useNativeDriver: true, \r\n  }).start();\r\n\r\n  return (\r\n    <Animated.View style={{ transform: [{translateX:indicatorLeft}] }}>\r\n      {!isVisibleForModalFolder ? (\r\n        <Animated.View\r\n          style={[\r\n            footerstyles.selectedFolder,\r\n            {\r\n              width: widths.current[selectedFolder] * 0.8,\r\n              marginLeft: widths.current[selectedFolder] * 0.1,\r\n            },\r\n          ]}\r\n        />\r\n      ) : null}\r\n    </Animated.View>\r\n  );\r\n};\r\n\r\nexport default FolderIndicator;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,QAAA;AAE1B,SAASC,YAAY;AACrB,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAU1C,IAAMC,eAAuD,GAAG,SAA1DA,eAAuDA,CAAAC,IAAA,EAKvD;EAAA,IAJJC,MAAM,GAAAD,IAAA,CAANC,MAAM;IACNC,uBAAuB,GAAAF,IAAA,CAAvBE,uBAAuB;IACvBC,iBAAiB,GAAAH,IAAA,CAAjBG,iBAAiB;IACjBC,WAAW,GAAAJ,IAAA,CAAXI,WAAW;EAEX,IAAMC,cAAc,GAAGT,WAAW,CAAC,UAACU,KAAU;IAAA,OAAKA,KAAK,oBAALA,KAAK,CAAED,cAAc,CAACA,cAAc;EAAA,EAAC;EACxF,IAAME,eAAe,GAAGX,WAAW,CAAC,UAACU,KAAU;IAAA,OAAKA,KAAK,CAACC,eAAe,CAACA,eAAe;EAAA,EAAC;EAE1F,IAAMC,aAAa,GAAG,IAAId,QAAQ,CAACe,KAAK,CACpC,CAACF,eAAe,GAAGH,WAAW,GAAGM,IAAI,CAACC,KAAK,CAACJ,eAAe,GAAGH,WAAW,CAAC,IAC1EA,WAAW,GACXA,WAAW,GACXH,MAAM,CAACW,OAAO,CAACF,IAAI,CAACC,KAAK,CAACJ,eAAe,GAAGH,WAAW,CAAC,CAAC,GACzDD,iBAAiB,CAACS,OAAO,CAACF,IAAI,CAACC,KAAK,CAACJ,eAAe,GAAGH,WAAW,CAAC,CACvE,CAAC;EAEDV,QAAQ,CAACmB,MAAM,CAACL,aAAa,EAAE;IAC7BM,OAAO,EACH,CAACP,eAAe,GAAGH,WAAW,GAAGM,IAAI,CAACC,KAAK,CAACJ,eAAe,GAAGH,WAAW,CAAC,IAC1EA,WAAW,GACXA,WAAW,GACXH,MAAM,CAACW,OAAO,CAACF,IAAI,CAACC,KAAK,CAACJ,eAAe,GAAGH,WAAW,CAAC,CAAC,GAC3DD,iBAAiB,CAACS,OAAO,CAACF,IAAI,CAACC,KAAK,CAACJ,eAAe,GAAGH,WAAW,CAAC,CAAC;IACtEW,QAAQ,EAAC,CAAC;IACVC,eAAe,EAAE;EACnB,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC;EAEV,OACEnB,IAAA,CAACJ,QAAQ,CAACwB,IAAI;IAACC,KAAK,EAAE;MAAEC,SAAS,EAAE,CAAC;QAACC,UAAU,EAACb;MAAa,CAAC;IAAE,CAAE;IAAAc,QAAA,EAC/D,CAACpB,uBAAuB,GACvBJ,IAAA,CAACJ,QAAQ,CAACwB,IAAI;MACZC,KAAK,EAAE,CACLxB,YAAY,CAACU,cAAc,EAC3B;QACEkB,KAAK,EAAEtB,MAAM,CAACW,OAAO,CAACP,cAAc,CAAC,GAAG,GAAG;QAC3CmB,UAAU,EAAEvB,MAAM,CAACW,OAAO,CAACP,cAAc,CAAC,GAAG;MAC/C,CAAC;IACD,CACH,CAAC,GACA;EAAI,CACK,CAAC;AAEpB,CAAC;AAED,eAAeN,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}