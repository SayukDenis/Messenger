{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { footerstyles } from \"../Styles/FooterStyle\";\nimport ListOfFolder from \"./ListOfFolder\";\nimport FolderContainer from \"./Footer containers/FolderContainer\";\nimport FolderModalWindow from \"./Footer containers/FolderModalWindow\";\nimport { BlurView } from \"expo-blur\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  screenWidth = _Dimensions$get.width,\n  screenHeight = _Dimensions$get.height;\nvar Footer = function Footer(_ref) {\n  var user = _ref.user,\n    isTouchableForHeader = _ref.isTouchableForHeader,\n    onPressForTouchableHeader = _ref.onPressForTouchableHeader;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedFolder = _useState2[0],\n    setSelectedFolder = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedLongPressFolder = _useState4[0],\n    setSelectedLongPressFolder = _useState4[1];\n  var scrollX = useRef(new Animated.Value(0)).current;\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    currentPosition = _useState6[0],\n    setCurrentPosition = _useState6[1];\n  var handleFolderPress = function handleFolderPress(index) {\n    if (selectedFolder === index) {\n      return;\n    }\n    setSelectedFolder(index);\n    scrollToFolder(index);\n  };\n  var scrollToIcon = function scrollToIcon(index) {\n    var _scrollViewRefFooter$;\n    scrollViewRefFooter == null ? void 0 : (_scrollViewRefFooter$ = scrollViewRefFooter.current) == null ? void 0 : _scrollViewRefFooter$.scrollTo({\n      x: positionsOfFolder[index] - screenWidth * 0.92 / 2 + widths[index] / 2,\n      animated: true\n    });\n  };\n  var updateSelectedFolder = function updateSelectedFolder() {\n    var newSelectedFolder = Math.round(currentPosition / screenWidth);\n    scrollToIcon(newSelectedFolder);\n    setSelectedFolder(newSelectedFolder);\n  };\n  var handleHorizontalScroll = function handleHorizontalScroll(event) {\n    var newHorizontalPosition = event.nativeEvent.contentOffset.x;\n    if (newHorizontalPosition < 0) {\n      newHorizontalPosition = 0;\n    } else if (newHorizontalPosition > screenWidth * (user.folders.length - 1)) {\n      newHorizontalPosition = screenWidth * (user.folders.length - 1);\n    }\n    setCurrentPosition(newHorizontalPosition);\n  };\n  var handleMomentumScrollEnd = function handleMomentumScrollEnd() {\n    updateSelectedFolder();\n  };\n  var scrollToFolder = function scrollToFolder(folderId) {\n    var _scrollViewRef$curren;\n    (_scrollViewRef$curren = scrollViewRef.current) == null ? void 0 : _scrollViewRef$curren.scrollTo({\n      x: folderId * screenWidth,\n      animated: true\n    });\n    scrollToIcon(folderId);\n  };\n  useEffect(function () {\n    scrollX.addListener(function (_ref2) {\n      var value = _ref2.value;\n      setCurrentPosition(value);\n    });\n    return function () {\n      scrollX.removeAllListeners();\n    };\n  }, []);\n  var scrollViewRef = useRef(null);\n  var scrollViewRefFooter = useRef(null);\n  var _useState7 = useState(user.folders.map(function () {\n      return screenWidth * 0.1831;\n    })),\n    _useState8 = _slicedToArray(_useState7, 2),\n    widths = _useState8[0],\n    setWidths = _useState8[1];\n  var viewsRefs = [user.folders.forEach(function () {\n    return useRef(null);\n  })];\n  var _useState9 = useState(user.folders.map(function () {\n      return 0;\n    })),\n    _useState10 = _slicedToArray(_useState9, 2),\n    positionsOfFolder = _useState10[0],\n    setPositionOfFolder = _useState10[1];\n  var handleLayout = function handleLayout(event, index) {\n    var width = event.nativeEvent.layout.width;\n    var position = event.nativeEvent.layout.x;\n    var updatePosition = _toConsumableArray(positionsOfFolder);\n    updatePosition[index] = position;\n    setPositionOfFolder(updatePosition);\n    var updatedWidths = _toConsumableArray(widths);\n    updatedWidths[index] = width;\n    setWidths(updatedWidths);\n  };\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isVisibleForModalFolder = _useState12[0],\n    setisVisibleForModalFolder = _useState12[1];\n  var _useState13 = useState(0),\n    _useState14 = _slicedToArray(_useState13, 2),\n    positionX = _useState14[0],\n    setPositionX = _useState14[1];\n  var _useState15 = useState(0),\n    _useState16 = _slicedToArray(_useState15, 2),\n    positionXInContainer = _useState16[0],\n    setPositionXInContainer = _useState16[1];\n  var _handleLongPress = function handleLongPress(e, index) {\n    setSelectedLongPressFolder(index);\n    var target = e.nativeEvent;\n    setPositionX(target.pageX);\n    setPositionXInContainer(target.locationX);\n    if (target.pageX - target.locationX + widths[index] > screenWidth * 0.98) {\n      var _scrollViewRefFooter$2;\n      (_scrollViewRefFooter$2 = scrollViewRefFooter.current) == null ? void 0 : _scrollViewRefFooter$2.scrollTo({\n        x: positionsOfFolder[index] - screenWidth * 0.92 + widths[index],\n        animated: false\n      });\n      setPositionX(screenWidth * 0.964 - widths[index]);\n      setPositionXInContainer(0);\n    } else if (target.pageX - target.locationX < screenWidth * 0.04) {\n      var _scrollViewRefFooter$3;\n      (_scrollViewRefFooter$3 = scrollViewRefFooter.current) == null ? void 0 : _scrollViewRefFooter$3.scrollTo({\n        x: positionsOfFolder[index],\n        animated: false\n      });\n      setPositionX(screenWidth * 0.044);\n      setPositionXInContainer(0);\n    }\n    setisVisibleForModalFolder(true);\n  };\n  var _useState17 = useState(0),\n    _useState18 = _slicedToArray(_useState17, 2),\n    startTime = _useState18[0],\n    setStartTime = _useState18[1];\n  var _useState19 = useState(0),\n    _useState20 = _slicedToArray(_useState19, 2),\n    endTime = _useState20[0],\n    setEndTime = _useState20[1];\n  var handlePress = function handlePress() {\n    setStartTime(Date.now());\n  };\n  var handlePressOut = function handlePressOut() {\n    setEndTime(Date.now());\n    var duration = startTime - endTime;\n    if (duration < 16) {\n      setisVisibleForModalFolder(false);\n      return;\n    }\n    setStartTime(Date.now());\n  };\n  var _useState21 = useState(false),\n    _useState22 = _slicedToArray(_useState21, 2),\n    animationState = _useState22[0],\n    setAnimationState = _useState22[1];\n  return _jsxs(_Fragment, {\n    children: [isTouchableForHeader ? _jsx(TouchableOpacity, {\n      onPress: onPressForTouchableHeader,\n      style: {\n        height: screenHeight,\n        width: screenWidth,\n        position: \"absolute\",\n        zIndex: 4\n      }\n    }) : null, isVisibleForModalFolder ? _jsxs(TouchableOpacity, {\n      style: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        zIndex: 10\n      },\n      onPress: handlePress,\n      onPressOut: handlePressOut,\n      onLongPress: handlePress,\n      activeOpacity: 1,\n      children: [_jsx(StatusBar, {\n        hidden: true\n      }), _jsx(BlurView, {\n        style: {\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0\n        },\n        intensity: 40\n      }), _jsx(FolderModalWindow, {\n        folder: user.folders[selectedLongPressFolder],\n        positionX: positionX,\n        positionXInContainer: positionXInContainer,\n        widthOfFolder: widths[selectedLongPressFolder],\n        exit: isVisibleForModalFolder\n      }), _jsx(TouchableOpacity, {\n        activeOpacity: 1,\n        style: [footerstyles.folderContainer, {\n          zIndex: 10,\n          position: \"absolute\",\n          left: positionX - positionXInContainer,\n          bottom: screenHeight * 0.032,\n          borderRadius: 100,\n          height: screenHeight * 0.036,\n          backgroundColor: \"#E7E6E4\",\n          shadowColor: \"black\",\n          shadowOffset: {\n            width: 1,\n            height: 1\n          },\n          shadowOpacity: 0.3\n        }],\n        children: _jsx(Text, {\n          style: [selectedLongPressFolder == selectedFolder ? footerstyles.selectedText : footerstyles.folder],\n          children: user.folders[selectedLongPressFolder].name\n        })\n      })]\n    }) : null, _jsx(ScrollView, {\n      horizontal: true,\n      scrollEventThrottle: 16,\n      showsHorizontalScrollIndicator: false,\n      ref: scrollViewRef,\n      pagingEnabled: true,\n      onScroll: handleHorizontalScroll,\n      onMomentumScrollEnd: handleMomentumScrollEnd,\n      nestedScrollEnabled: true,\n      style: {\n        marginTop: screenHeight * 0.05\n      },\n      children: user.folders.map(function (folder, index) {\n        return _jsx(ListOfFolder, {\n          user: user,\n          selectedFolder: index\n        }, index);\n      })\n    }), _jsx(View, {\n      style: [footerstyles.container, {\n        zIndex: isTouchableForHeader ? 3 : 5\n      }],\n      children: _jsx(ScrollView, {\n        showsHorizontalScrollIndicator: false,\n        horizontal: true,\n        style: footerstyles.scrollView,\n        scrollEventThrottle: 1,\n        ref: scrollViewRefFooter,\n        children: _jsxs(View, {\n          children: [_jsx(View, {\n            style: {\n              flexDirection: \"row\"\n            },\n            children: user.folders.map(function (folder, index) {\n              return _jsx(View, {\n                onLayout: function onLayout(event) {\n                  return handleLayout(event, index);\n                },\n                ref: viewsRefs[index],\n                style: [isVisibleForModalFolder ? {\n                  zIndex: 10\n                } : null],\n                children: _jsx(FolderContainer, {\n                  folder: folder,\n                  containerStyle: footerstyles.folderContainer,\n                  textStyle: footerstyles.folder,\n                  isSelected: !isVisibleForModalFolder && index === Math.round(currentPosition / screenWidth),\n                  onPress: function onPress() {\n                    return handleFolderPress(index);\n                  },\n                  width: widths[index],\n                  handleLongPress: function handleLongPress(e) {\n                    return _handleLongPress(e, index);\n                  }\n                }, index)\n              }, index);\n            })\n          }), _jsx(Animated.View, {\n            style: {\n              left: (currentPosition - screenWidth * Math.round(currentPosition / screenWidth)) % screenWidth / screenWidth * widths[Math.round(currentPosition / screenWidth)] + positionsOfFolder[Math.round(currentPosition / screenWidth)]\n            },\n            children: !isVisibleForModalFolder ? _jsx(Animated.View, {\n              style: [footerstyles.selectedFolder, {\n                width: widths[Math.round(currentPosition / screenWidth)] * 0.8,\n                marginLeft: widths[Math.round(currentPosition / screenWidth)] * 0.1\n              }]\n            }) : null\n          })]\n        })\n      })\n    })]\n  });\n};\nexport default Footer;","map":{"version":3,"names":["React","useRef","useState","useEffect","View","ScrollView","Dimensions","Animated","Text","TouchableOpacity","StatusBar","footerstyles","ListOfFolder","FolderContainer","FolderModalWindow","BlurView","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","_Dimensions$get","get","screenWidth","width","screenHeight","height","Footer","_ref","user","isTouchableForHeader","onPressForTouchableHeader","_useState","_useState2","_slicedToArray","selectedFolder","setSelectedFolder","_useState3","_useState4","selectedLongPressFolder","setSelectedLongPressFolder","scrollX","Value","current","_useState5","_useState6","currentPosition","setCurrentPosition","handleFolderPress","index","scrollToFolder","scrollToIcon","_scrollViewRefFooter$","scrollViewRefFooter","scrollTo","x","positionsOfFolder","widths","animated","updateSelectedFolder","newSelectedFolder","Math","round","handleHorizontalScroll","event","newHorizontalPosition","nativeEvent","contentOffset","folders","length","handleMomentumScrollEnd","folderId","_scrollViewRef$curren","scrollViewRef","addListener","_ref2","value","removeAllListeners","_useState7","map","_useState8","setWidths","viewsRefs","forEach","_useState9","_useState10","setPositionOfFolder","handleLayout","layout","position","updatePosition","_toConsumableArray","updatedWidths","_useState11","_useState12","isVisibleForModalFolder","setisVisibleForModalFolder","_useState13","_useState14","positionX","setPositionX","_useState15","_useState16","positionXInContainer","setPositionXInContainer","handleLongPress","e","target","pageX","locationX","_scrollViewRefFooter$2","_scrollViewRefFooter$3","_useState17","_useState18","startTime","setStartTime","_useState19","_useState20","endTime","setEndTime","handlePress","Date","now","handlePressOut","duration","_useState21","_useState22","animationState","setAnimationState","children","onPress","style","zIndex","top","left","right","bottom","onPressOut","onLongPress","activeOpacity","hidden","intensity","folder","widthOfFolder","exit","folderContainer","borderRadius","backgroundColor","shadowColor","shadowOffset","shadowOpacity","selectedText","name","horizontal","scrollEventThrottle","showsHorizontalScrollIndicator","ref","pagingEnabled","onScroll","onMomentumScrollEnd","nestedScrollEnabled","marginTop","container","scrollView","flexDirection","onLayout","containerStyle","textStyle","isSelected","marginLeft"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/ChatList/Components/Footer.tsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  ScrollView,\r\n  Dimensions,\r\n  Animated,\r\n  LayoutChangeEvent,\r\n  GestureResponderEvent,\r\n  Text,\r\n  TouchableOpacity,\r\n  StatusBar,\r\n} from \"react-native\";\r\nimport MySelfUser from \"../1HelpFullFolder/MySelfUser\";\r\nimport { footerstyles } from \"../Styles/FooterStyle\";\r\nimport ListOfFolder from \"./ListOfFolder\";\r\nimport FolderContainer from \"./Footer containers/FolderContainer\";\r\nimport FolderModalWindow from \"./Footer containers/FolderModalWindow\";\r\nimport { BlurView } from \"expo-blur\";\r\ninterface FooterProps {\r\n  user: MySelfUser;\r\n  onPressForTouchableHeader: () => void;\r\n  isTouchableForHeader: boolean;\r\n  \r\n}\r\n\r\nconst { width: screenWidth, height: screenHeight } = Dimensions.get(\"window\");\r\n\r\nconst Footer: React.FC<FooterProps> = ({\r\n  user,\r\n  isTouchableForHeader,\r\n  onPressForTouchableHeader,\r\n  \r\n}) => {\r\n  const [selectedFolder, setSelectedFolder] = useState<number>(0);\r\n  const [selectedLongPressFolder, setSelectedLongPressFolder] =\r\n    useState<number>(0);\r\n  const scrollX = useRef(new Animated.Value(0)).current;\r\n  const [currentPosition, setCurrentPosition] = useState(0);\r\n  const handleFolderPress = (index: number) => {\r\n    if (selectedFolder === index) {\r\n      return;\r\n    }\r\n    setSelectedFolder(index);\r\n    scrollToFolder(index);\r\n  };\r\n  const scrollToIcon = (index: number): void => {\r\n    scrollViewRefFooter?.current?.scrollTo({\r\n      x:\r\n        positionsOfFolder[index] - (screenWidth * 0.92) / 2 + widths[index] / 2,\r\n      animated: true,\r\n    });\r\n  };\r\n  const updateSelectedFolder = () => {\r\n    const newSelectedFolder = Math.round(currentPosition / screenWidth);\r\n    scrollToIcon(newSelectedFolder);\r\n    setSelectedFolder(newSelectedFolder);\r\n  };\r\n\r\n  const handleHorizontalScroll = (event: any) => {\r\n    let newHorizontalPosition = event.nativeEvent.contentOffset.x;\r\n    if (newHorizontalPosition < 0) {\r\n      newHorizontalPosition = 0;\r\n    } else if (\r\n      newHorizontalPosition >\r\n      screenWidth * (user.folders.length - 1)\r\n    ) {\r\n      newHorizontalPosition = screenWidth * (user.folders.length - 1);\r\n    }\r\n    setCurrentPosition(newHorizontalPosition);\r\n  };\r\n\r\n  const handleMomentumScrollEnd = () => {\r\n    updateSelectedFolder();\r\n  };\r\n\r\n  const scrollToFolder = (folderId: number) => {\r\n    scrollViewRef.current?.scrollTo({\r\n      x: folderId * screenWidth,\r\n      animated: true,\r\n    });\r\n    scrollToIcon(folderId);\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollX.addListener(({ value }) => {\r\n      setCurrentPosition(value);\r\n    });\r\n    return () => {\r\n      scrollX.removeAllListeners();\r\n    };\r\n  }, []);\r\n\r\n  const scrollViewRef = useRef<ScrollView | null>(null);\r\n  const scrollViewRefFooter = useRef<ScrollView | null>(null);\r\n  const [widths, setWidths] = useState<number[]>(\r\n    user.folders.map(() => screenWidth * 0.1831)\r\n  );\r\n\r\n  const viewsRefs: any = [user.folders.forEach(() => useRef(null))];\r\n  const [positionsOfFolder, setPositionOfFolder] = useState<number[]>(\r\n    user.folders.map(() => 0)\r\n  );\r\n  const handleLayout = (event: LayoutChangeEvent, index: number) => {\r\n    const { width } = event.nativeEvent.layout;\r\n    const position = event.nativeEvent.layout.x;\r\n    const updatePosition = [...positionsOfFolder];\r\n    updatePosition[index] = position;\r\n    setPositionOfFolder(updatePosition);\r\n    const updatedWidths = [...widths];\r\n    updatedWidths[index] = width;\r\n    setWidths(updatedWidths);\r\n  };\r\n  const [isVisibleForModalFolder, setisVisibleForModalFolder] = useState(false);\r\n  const [positionX, setPositionX] = useState<number>(0);\r\n  const [positionXInContainer, setPositionXInContainer] = useState<number>(0);\r\n  const handleLongPress = (e: GestureResponderEvent, index: number) => {\r\n    setSelectedLongPressFolder(index);\r\n    const target = e.nativeEvent;\r\n    setPositionX(target.pageX);\r\n    setPositionXInContainer(target.locationX);\r\n    if (target.pageX - target.locationX + widths[index] > screenWidth * 0.98) {\r\n      scrollViewRefFooter.current?.scrollTo({\r\n        x: positionsOfFolder[index] - screenWidth * 0.92 + widths[index],\r\n        animated: false,\r\n      });\r\n      setPositionX(screenWidth * 0.964 - widths[index]);\r\n      setPositionXInContainer(0);\r\n    } else if (target.pageX - target.locationX < screenWidth * 0.04) {\r\n      scrollViewRefFooter.current?.scrollTo({\r\n        x: positionsOfFolder[index],\r\n        animated: false,\r\n      });\r\n      setPositionX(screenWidth * 0.044);\r\n      setPositionXInContainer(0);\r\n    }\r\n    setisVisibleForModalFolder(true);\r\n  };\r\n  const [startTime, setStartTime] = useState(0);\r\n  const [endTime, setEndTime] = useState(0);\r\n  const handlePress = () => {\r\n    setStartTime(Date.now());\r\n  };\r\n\r\n  const handlePressOut = () => {\r\n    setEndTime(Date.now());\r\n    const duration = startTime - endTime;\r\n    if (duration < 16) {\r\n      setisVisibleForModalFolder(false);\r\n      return;\r\n    }\r\n    setStartTime(Date.now());\r\n  };\r\n  const [animationState,setAnimationState]=useState(false);\r\n  return (\r\n    <>\r\n      {isTouchableForHeader ? (\r\n        <TouchableOpacity\r\n          onPress={onPressForTouchableHeader}\r\n          style={{\r\n            height: screenHeight,\r\n            width: screenWidth,\r\n            position: \"absolute\",\r\n            zIndex: 4,\r\n          }}\r\n        />\r\n      ) : null}\r\n      {isVisibleForModalFolder ? (\r\n        <TouchableOpacity\r\n          style={{\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            zIndex: 10,\r\n          }}\r\n          onPress={handlePress}\r\n          onPressOut={handlePressOut}\r\n          onLongPress={handlePress}\r\n          activeOpacity={1}\r\n        >\r\n          <StatusBar hidden />\r\n          <BlurView\r\n            style={{\r\n              position: \"absolute\",\r\n              top: 0,\r\n              left: 0,\r\n              right: 0,\r\n              bottom: 0,\r\n            }}\r\n            intensity={40}\r\n          />\r\n          <FolderModalWindow\r\n            folder={user.folders[selectedLongPressFolder]}\r\n            positionX={positionX}\r\n            positionXInContainer={positionXInContainer}\r\n            widthOfFolder={widths[selectedLongPressFolder]}\r\n            exit={isVisibleForModalFolder}\r\n          />\r\n          <TouchableOpacity\r\n            activeOpacity={1}\r\n            style={[\r\n              footerstyles.folderContainer,\r\n              {\r\n                zIndex: 10,\r\n                position: \"absolute\",\r\n                left: positionX - positionXInContainer,\r\n                bottom: screenHeight * 0.032,\r\n                borderRadius: 100,\r\n                height: screenHeight * 0.036,\r\n                backgroundColor: \"#E7E6E4\",\r\n                shadowColor: \"black\",\r\n                shadowOffset: { width: 1, height: 1 },\r\n                shadowOpacity: 0.3,\r\n              },\r\n            ]}\r\n          >\r\n            <Text\r\n              style={[\r\n                selectedLongPressFolder == selectedFolder\r\n                  ? footerstyles.selectedText\r\n                  : footerstyles.folder,\r\n              ]}\r\n            >\r\n              {user.folders[selectedLongPressFolder].name}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </TouchableOpacity>\r\n      ) : null}\r\n      <ScrollView\r\n        horizontal\r\n        scrollEventThrottle={16}\r\n        showsHorizontalScrollIndicator={false}\r\n        ref={scrollViewRef}\r\n        pagingEnabled\r\n        onScroll={handleHorizontalScroll}\r\n        onMomentumScrollEnd={handleMomentumScrollEnd}\r\n        nestedScrollEnabled={true}\r\n        style={{ marginTop: screenHeight * 0.05 }}\r\n      >\r\n        {user.folders.map((folder, index) => (\r\n          <ListOfFolder key={index} user={user} selectedFolder={index} />\r\n        ))}\r\n      </ScrollView>\r\n\r\n      <View\r\n        style={[\r\n          footerstyles.container,\r\n          { zIndex: isTouchableForHeader ? 3 : 5 },\r\n        ]}\r\n      >\r\n        <ScrollView\r\n          showsHorizontalScrollIndicator={false}\r\n          horizontal\r\n          style={footerstyles.scrollView}\r\n          scrollEventThrottle={1}\r\n          ref={scrollViewRefFooter}\r\n        >\r\n          <View>\r\n            <View style={{ flexDirection: \"row\" }}>\r\n              {user.folders.map((folder, index) => {\r\n                return (\r\n                  <View\r\n                    key={index}\r\n                    onLayout={(event) => handleLayout(event, index)}\r\n                    ref={viewsRefs[index]}\r\n                    style={[isVisibleForModalFolder ? { zIndex: 10 } : null]}\r\n                  >\r\n                    <FolderContainer\r\n                      key={index}\r\n                      folder={folder}\r\n                      containerStyle={footerstyles.folderContainer}\r\n                      textStyle={footerstyles.folder}\r\n                      isSelected={\r\n                        !isVisibleForModalFolder &&\r\n                        index === Math.round(currentPosition / screenWidth)\r\n                      }\r\n                      onPress={() => handleFolderPress(index)}\r\n                      width={widths[index]}\r\n                      handleLongPress={(e) => handleLongPress(e, index)}\r\n                    />\r\n                  </View>\r\n                );\r\n              })}\r\n            </View>\r\n            <Animated.View\r\n              style={{\r\n                left:\r\n                  (((currentPosition -\r\n                    screenWidth * Math.round(currentPosition / screenWidth)) %\r\n                    screenWidth) /\r\n                    screenWidth) *\r\n                    widths[Math.round(currentPosition / screenWidth)] +\r\n                  positionsOfFolder[Math.round(currentPosition / screenWidth)],\r\n              }}\r\n            >\r\n              {!isVisibleForModalFolder ? (\r\n                <Animated.View\r\n                  style={[\r\n                    footerstyles.selectedFolder,\r\n                    {\r\n                      width:\r\n                        widths[Math.round(currentPosition / screenWidth)] * 0.8,\r\n                      marginLeft:\r\n                        widths[Math.round(currentPosition / screenWidth)] * 0.1,\r\n                    },\r\n                  ]}\r\n                />\r\n              ) : null}\r\n            </Animated.View>\r\n          </View>\r\n        </ScrollView>\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,SAAA;AAa3D,SAASC,YAAY;AACrB,OAAOC,YAAY;AACnB,OAAOC,eAAe;AACtB,OAAOC,iBAAiB;AACxB,SAASC,QAAQ,QAAQ,WAAW;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAQrC,IAAAC,eAAA,GAAqDhB,UAAU,CAACiB,GAAG,CAAC,QAAQ,CAAC;EAA9DC,WAAW,GAAAF,eAAA,CAAlBG,KAAK;EAAuBC,YAAY,GAAAJ,eAAA,CAApBK,MAAM;AAElC,IAAMC,MAA6B,GAAG,SAAhCA,MAA6BA,CAAAC,IAAA,EAK7B;EAAA,IAJJC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IACJC,oBAAoB,GAAAF,IAAA,CAApBE,oBAAoB;IACpBC,yBAAyB,GAAAH,IAAA,CAAzBG,yBAAyB;EAGzB,IAAAC,SAAA,GAA4C/B,QAAQ,CAAS,CAAC,CAAC;IAAAgC,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAxDG,cAAc,GAAAF,UAAA;IAAEG,iBAAiB,GAAAH,UAAA;EACxC,IAAAI,UAAA,GACEpC,QAAQ,CAAS,CAAC,CAAC;IAAAqC,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IADdE,uBAAuB,GAAAD,UAAA;IAAEE,0BAA0B,GAAAF,UAAA;EAE1D,IAAMG,OAAO,GAAGzC,MAAM,CAAC,IAAIM,QAAQ,CAACoC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO;EACrD,IAAAC,UAAA,GAA8C3C,QAAQ,CAAC,CAAC,CAAC;IAAA4C,UAAA,GAAAX,cAAA,CAAAU,UAAA;IAAlDE,eAAe,GAAAD,UAAA;IAAEE,kBAAkB,GAAAF,UAAA;EAC1C,IAAMG,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,KAAa,EAAK;IAC3C,IAAId,cAAc,KAAKc,KAAK,EAAE;MAC5B;IACF;IACAb,iBAAiB,CAACa,KAAK,CAAC;IACxBC,cAAc,CAACD,KAAK,CAAC;EACvB,CAAC;EACD,IAAME,YAAY,GAAG,SAAfA,YAAYA,CAAIF,KAAa,EAAW;IAAA,IAAAG,qBAAA;IAC5CC,mBAAmB,qBAAAD,qBAAA,GAAnBC,mBAAmB,CAAEV,OAAO,qBAA5BS,qBAAA,CAA8BE,QAAQ,CAAC;MACrCC,CAAC,EACCC,iBAAiB,CAACP,KAAK,CAAC,GAAI1B,WAAW,GAAG,IAAI,GAAI,CAAC,GAAGkC,MAAM,CAACR,KAAK,CAAC,GAAG,CAAC;MACzES,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC;EACD,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAA,EAAS;IACjC,IAAMC,iBAAiB,GAAGC,IAAI,CAACC,KAAK,CAAChB,eAAe,GAAGvB,WAAW,CAAC;IACnE4B,YAAY,CAACS,iBAAiB,CAAC;IAC/BxB,iBAAiB,CAACwB,iBAAiB,CAAC;EACtC,CAAC;EAED,IAAMG,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAIC,KAAU,EAAK;IAC7C,IAAIC,qBAAqB,GAAGD,KAAK,CAACE,WAAW,CAACC,aAAa,CAACZ,CAAC;IAC7D,IAAIU,qBAAqB,GAAG,CAAC,EAAE;MAC7BA,qBAAqB,GAAG,CAAC;IAC3B,CAAC,MAAM,IACLA,qBAAqB,GACrB1C,WAAW,IAAIM,IAAI,CAACuC,OAAO,CAACC,MAAM,GAAG,CAAC,CAAC,EACvC;MACAJ,qBAAqB,GAAG1C,WAAW,IAAIM,IAAI,CAACuC,OAAO,CAACC,MAAM,GAAG,CAAC,CAAC;IACjE;IACAtB,kBAAkB,CAACkB,qBAAqB,CAAC;EAC3C,CAAC;EAED,IAAMK,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAAA,EAAS;IACpCX,oBAAoB,CAAC,CAAC;EACxB,CAAC;EAED,IAAMT,cAAc,GAAG,SAAjBA,cAAcA,CAAIqB,QAAgB,EAAK;IAAA,IAAAC,qBAAA;IAC3C,CAAAA,qBAAA,GAAAC,aAAa,CAAC9B,OAAO,qBAArB6B,qBAAA,CAAuBlB,QAAQ,CAAC;MAC9BC,CAAC,EAAEgB,QAAQ,GAAGhD,WAAW;MACzBmC,QAAQ,EAAE;IACZ,CAAC,CAAC;IACFP,YAAY,CAACoB,QAAQ,CAAC;EACxB,CAAC;EAEDrE,SAAS,CAAC,YAAM;IACduC,OAAO,CAACiC,WAAW,CAAC,UAAAC,KAAA,EAAe;MAAA,IAAZC,KAAK,GAAAD,KAAA,CAALC,KAAK;MAC1B7B,kBAAkB,CAAC6B,KAAK,CAAC;IAC3B,CAAC,CAAC;IACF,OAAO,YAAM;MACXnC,OAAO,CAACoC,kBAAkB,CAAC,CAAC;IAC9B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMJ,aAAa,GAAGzE,MAAM,CAAoB,IAAI,CAAC;EACrD,IAAMqD,mBAAmB,GAAGrD,MAAM,CAAoB,IAAI,CAAC;EAC3D,IAAA8E,UAAA,GAA4B7E,QAAQ,CAClC4B,IAAI,CAACuC,OAAO,CAACW,GAAG,CAAC;MAAA,OAAMxD,WAAW,GAAG,MAAM;IAAA,EAC7C,CAAC;IAAAyD,UAAA,GAAA9C,cAAA,CAAA4C,UAAA;IAFMrB,MAAM,GAAAuB,UAAA;IAAEC,SAAS,GAAAD,UAAA;EAIxB,IAAME,SAAc,GAAG,CAACrD,IAAI,CAACuC,OAAO,CAACe,OAAO,CAAC;IAAA,OAAMnF,MAAM,CAAC,IAAI,CAAC;EAAA,EAAC,CAAC;EACjE,IAAAoF,UAAA,GAAiDnF,QAAQ,CACvD4B,IAAI,CAACuC,OAAO,CAACW,GAAG,CAAC;MAAA,OAAM,CAAC;IAAA,EAC1B,CAAC;IAAAM,WAAA,GAAAnD,cAAA,CAAAkD,UAAA;IAFM5B,iBAAiB,GAAA6B,WAAA;IAAEC,mBAAmB,GAAAD,WAAA;EAG7C,IAAME,YAAY,GAAG,SAAfA,YAAYA,CAAIvB,KAAwB,EAAEf,KAAa,EAAK;IAChE,IAAQzB,KAAK,GAAKwC,KAAK,CAACE,WAAW,CAACsB,MAAM,CAAlChE,KAAK;IACb,IAAMiE,QAAQ,GAAGzB,KAAK,CAACE,WAAW,CAACsB,MAAM,CAACjC,CAAC;IAC3C,IAAMmC,cAAc,GAAAC,kBAAA,CAAOnC,iBAAiB,CAAC;IAC7CkC,cAAc,CAACzC,KAAK,CAAC,GAAGwC,QAAQ;IAChCH,mBAAmB,CAACI,cAAc,CAAC;IACnC,IAAME,aAAa,GAAAD,kBAAA,CAAOlC,MAAM,CAAC;IACjCmC,aAAa,CAAC3C,KAAK,CAAC,GAAGzB,KAAK;IAC5ByD,SAAS,CAACW,aAAa,CAAC;EAC1B,CAAC;EACD,IAAAC,WAAA,GAA8D5F,QAAQ,CAAC,KAAK,CAAC;IAAA6F,WAAA,GAAA5D,cAAA,CAAA2D,WAAA;IAAtEE,uBAAuB,GAAAD,WAAA;IAAEE,0BAA0B,GAAAF,WAAA;EAC1D,IAAAG,WAAA,GAAkChG,QAAQ,CAAS,CAAC,CAAC;IAAAiG,WAAA,GAAAhE,cAAA,CAAA+D,WAAA;IAA9CE,SAAS,GAAAD,WAAA;IAAEE,YAAY,GAAAF,WAAA;EAC9B,IAAAG,WAAA,GAAwDpG,QAAQ,CAAS,CAAC,CAAC;IAAAqG,WAAA,GAAApE,cAAA,CAAAmE,WAAA;IAApEE,oBAAoB,GAAAD,WAAA;IAAEE,uBAAuB,GAAAF,WAAA;EACpD,IAAMG,gBAAe,GAAG,SAAlBA,eAAeA,CAAIC,CAAwB,EAAEzD,KAAa,EAAK;IACnET,0BAA0B,CAACS,KAAK,CAAC;IACjC,IAAM0D,MAAM,GAAGD,CAAC,CAACxC,WAAW;IAC5BkC,YAAY,CAACO,MAAM,CAACC,KAAK,CAAC;IAC1BJ,uBAAuB,CAACG,MAAM,CAACE,SAAS,CAAC;IACzC,IAAIF,MAAM,CAACC,KAAK,GAAGD,MAAM,CAACE,SAAS,GAAGpD,MAAM,CAACR,KAAK,CAAC,GAAG1B,WAAW,GAAG,IAAI,EAAE;MAAA,IAAAuF,sBAAA;MACxE,CAAAA,sBAAA,GAAAzD,mBAAmB,CAACV,OAAO,qBAA3BmE,sBAAA,CAA6BxD,QAAQ,CAAC;QACpCC,CAAC,EAAEC,iBAAiB,CAACP,KAAK,CAAC,GAAG1B,WAAW,GAAG,IAAI,GAAGkC,MAAM,CAACR,KAAK,CAAC;QAChES,QAAQ,EAAE;MACZ,CAAC,CAAC;MACF0C,YAAY,CAAC7E,WAAW,GAAG,KAAK,GAAGkC,MAAM,CAACR,KAAK,CAAC,CAAC;MACjDuD,uBAAuB,CAAC,CAAC,CAAC;IAC5B,CAAC,MAAM,IAAIG,MAAM,CAACC,KAAK,GAAGD,MAAM,CAACE,SAAS,GAAGtF,WAAW,GAAG,IAAI,EAAE;MAAA,IAAAwF,sBAAA;MAC/D,CAAAA,sBAAA,GAAA1D,mBAAmB,CAACV,OAAO,qBAA3BoE,sBAAA,CAA6BzD,QAAQ,CAAC;QACpCC,CAAC,EAAEC,iBAAiB,CAACP,KAAK,CAAC;QAC3BS,QAAQ,EAAE;MACZ,CAAC,CAAC;MACF0C,YAAY,CAAC7E,WAAW,GAAG,KAAK,CAAC;MACjCiF,uBAAuB,CAAC,CAAC,CAAC;IAC5B;IACAR,0BAA0B,CAAC,IAAI,CAAC;EAClC,CAAC;EACD,IAAAgB,WAAA,GAAkC/G,QAAQ,CAAC,CAAC,CAAC;IAAAgH,WAAA,GAAA/E,cAAA,CAAA8E,WAAA;IAAtCE,SAAS,GAAAD,WAAA;IAAEE,YAAY,GAAAF,WAAA;EAC9B,IAAAG,WAAA,GAA8BnH,QAAQ,CAAC,CAAC,CAAC;IAAAoH,WAAA,GAAAnF,cAAA,CAAAkF,WAAA;IAAlCE,OAAO,GAAAD,WAAA;IAAEE,UAAU,GAAAF,WAAA;EAC1B,IAAMG,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxBL,YAAY,CAACM,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;EAC1B,CAAC;EAED,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;IAC3BJ,UAAU,CAACE,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;IACtB,IAAME,QAAQ,GAAGV,SAAS,GAAGI,OAAO;IACpC,IAAIM,QAAQ,GAAG,EAAE,EAAE;MACjB5B,0BAA0B,CAAC,KAAK,CAAC;MACjC;IACF;IACAmB,YAAY,CAACM,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;EAC1B,CAAC;EACD,IAAAG,WAAA,GAAyC5H,QAAQ,CAAC,KAAK,CAAC;IAAA6H,WAAA,GAAA5F,cAAA,CAAA2F,WAAA;IAAjDE,cAAc,GAAAD,WAAA;IAACE,iBAAiB,GAAAF,WAAA;EACvC,OACE5G,KAAA,CAAAE,SAAA;IAAA6G,QAAA,GACGnG,oBAAoB,GACnBd,IAAA,CAACR,gBAAgB;MACf0H,OAAO,EAAEnG,yBAA0B;MACnCoG,KAAK,EAAE;QACLzG,MAAM,EAAED,YAAY;QACpBD,KAAK,EAAED,WAAW;QAClBkE,QAAQ,EAAE,UAAU;QACpB2C,MAAM,EAAE;MACV;IAAE,CACH,CAAC,GACA,IAAI,EACPrC,uBAAuB,GACtB7E,KAAA,CAACV,gBAAgB;MACf2H,KAAK,EAAE;QACL1C,QAAQ,EAAE,UAAU;QACpB4C,GAAG,EAAE,CAAC;QACNC,IAAI,EAAE,CAAC;QACPC,KAAK,EAAE,CAAC;QACRC,MAAM,EAAE,CAAC;QACTJ,MAAM,EAAE;MACV,CAAE;MACFF,OAAO,EAAEV,WAAY;MACrBiB,UAAU,EAAEd,cAAe;MAC3Be,WAAW,EAAElB,WAAY;MACzBmB,aAAa,EAAE,CAAE;MAAAV,QAAA,GAEjBjH,IAAA,CAACP,SAAS;QAACmI,MAAM;MAAA,CAAE,CAAC,EACpB5H,IAAA,CAACF,QAAQ;QACPqH,KAAK,EAAE;UACL1C,QAAQ,EAAE,UAAU;UACpB4C,GAAG,EAAE,CAAC;UACNC,IAAI,EAAE,CAAC;UACPC,KAAK,EAAE,CAAC;UACRC,MAAM,EAAE;QACV,CAAE;QACFK,SAAS,EAAE;MAAG,CACf,CAAC,EACF7H,IAAA,CAACH,iBAAiB;QAChBiI,MAAM,EAAEjH,IAAI,CAACuC,OAAO,CAAC7B,uBAAuB,CAAE;QAC9C4D,SAAS,EAAEA,SAAU;QACrBI,oBAAoB,EAAEA,oBAAqB;QAC3CwC,aAAa,EAAEtF,MAAM,CAAClB,uBAAuB,CAAE;QAC/CyG,IAAI,EAAEjD;MAAwB,CAC/B,CAAC,EACF/E,IAAA,CAACR,gBAAgB;QACfmI,aAAa,EAAE,CAAE;QACjBR,KAAK,EAAE,CACLzH,YAAY,CAACuI,eAAe,EAC5B;UACEb,MAAM,EAAE,EAAE;UACV3C,QAAQ,EAAE,UAAU;UACpB6C,IAAI,EAAEnC,SAAS,GAAGI,oBAAoB;UACtCiC,MAAM,EAAE/G,YAAY,GAAG,KAAK;UAC5ByH,YAAY,EAAE,GAAG;UACjBxH,MAAM,EAAED,YAAY,GAAG,KAAK;UAC5B0H,eAAe,EAAE,SAAS;UAC1BC,WAAW,EAAE,OAAO;UACpBC,YAAY,EAAE;YAAE7H,KAAK,EAAE,CAAC;YAAEE,MAAM,EAAE;UAAE,CAAC;UACrC4H,aAAa,EAAE;QACjB,CAAC,CACD;QAAArB,QAAA,EAEFjH,IAAA,CAACT,IAAI;UACH4H,KAAK,EAAE,CACL5F,uBAAuB,IAAIJ,cAAc,GACrCzB,YAAY,CAAC6I,YAAY,GACzB7I,YAAY,CAACoI,MAAM,CACvB;UAAAb,QAAA,EAEDpG,IAAI,CAACuC,OAAO,CAAC7B,uBAAuB,CAAC,CAACiH;QAAI,CACvC;MAAC,CACS,CAAC;IAAA,CACH,CAAC,GACjB,IAAI,EACRxI,IAAA,CAACZ,UAAU;MACTqJ,UAAU;MACVC,mBAAmB,EAAE,EAAG;MACxBC,8BAA8B,EAAE,KAAM;MACtCC,GAAG,EAAEnF,aAAc;MACnBoF,aAAa;MACbC,QAAQ,EAAE/F,sBAAuB;MACjCgG,mBAAmB,EAAEzF,uBAAwB;MAC7C0F,mBAAmB,EAAE,IAAK;MAC1B7B,KAAK,EAAE;QAAE8B,SAAS,EAAExI,YAAY,GAAG;MAAK,CAAE;MAAAwG,QAAA,EAEzCpG,IAAI,CAACuC,OAAO,CAACW,GAAG,CAAC,UAAC+D,MAAM,EAAE7F,KAAK;QAAA,OAC9BjC,IAAA,CAACL,YAAY;UAAakB,IAAI,EAAEA,IAAK;UAACM,cAAc,EAAEc;QAAM,GAAzCA,KAA2C,CAAC;MAAA,CAChE;IAAC,CACQ,CAAC,EAEbjC,IAAA,CAACb,IAAI;MACHgI,KAAK,EAAE,CACLzH,YAAY,CAACwJ,SAAS,EACtB;QAAE9B,MAAM,EAAEtG,oBAAoB,GAAG,CAAC,GAAG;MAAE,CAAC,CACxC;MAAAmG,QAAA,EAEFjH,IAAA,CAACZ,UAAU;QACTuJ,8BAA8B,EAAE,KAAM;QACtCF,UAAU;QACVtB,KAAK,EAAEzH,YAAY,CAACyJ,UAAW;QAC/BT,mBAAmB,EAAE,CAAE;QACvBE,GAAG,EAAEvG,mBAAoB;QAAA4E,QAAA,EAEzB/G,KAAA,CAACf,IAAI;UAAA8H,QAAA,GACHjH,IAAA,CAACb,IAAI;YAACgI,KAAK,EAAE;cAAEiC,aAAa,EAAE;YAAM,CAAE;YAAAnC,QAAA,EACnCpG,IAAI,CAACuC,OAAO,CAACW,GAAG,CAAC,UAAC+D,MAAM,EAAE7F,KAAK,EAAK;cACnC,OACEjC,IAAA,CAACb,IAAI;gBAEHkK,QAAQ,EAAE,SAAAA,SAACrG,KAAK;kBAAA,OAAKuB,YAAY,CAACvB,KAAK,EAAEf,KAAK,CAAC;gBAAA,CAAC;gBAChD2G,GAAG,EAAE1E,SAAS,CAACjC,KAAK,CAAE;gBACtBkF,KAAK,EAAE,CAACpC,uBAAuB,GAAG;kBAAEqC,MAAM,EAAE;gBAAG,CAAC,GAAG,IAAI,CAAE;gBAAAH,QAAA,EAEzDjH,IAAA,CAACJ,eAAe;kBAEdkI,MAAM,EAAEA,MAAO;kBACfwB,cAAc,EAAE5J,YAAY,CAACuI,eAAgB;kBAC7CsB,SAAS,EAAE7J,YAAY,CAACoI,MAAO;kBAC/B0B,UAAU,EACR,CAACzE,uBAAuB,IACxB9C,KAAK,KAAKY,IAAI,CAACC,KAAK,CAAChB,eAAe,GAAGvB,WAAW,CACnD;kBACD2G,OAAO,EAAE,SAAAA,QAAA;oBAAA,OAAMlF,iBAAiB,CAACC,KAAK,CAAC;kBAAA,CAAC;kBACxCzB,KAAK,EAAEiC,MAAM,CAACR,KAAK,CAAE;kBACrBwD,eAAe,EAAE,SAAAA,gBAACC,CAAC;oBAAA,OAAKD,gBAAe,CAACC,CAAC,EAAEzD,KAAK,CAAC;kBAAA;gBAAC,GAV7CA,KAWN;cAAC,GAjBGA,KAkBD,CAAC;YAEX,CAAC;UAAC,CACE,CAAC,EACPjC,IAAA,CAACV,QAAQ,CAACH,IAAI;YACZgI,KAAK,EAAE;cACLG,IAAI,EACA,CAACxF,eAAe,GAChBvB,WAAW,GAAGsC,IAAI,CAACC,KAAK,CAAChB,eAAe,GAAGvB,WAAW,CAAC,IACvDA,WAAW,GACXA,WAAW,GACXkC,MAAM,CAACI,IAAI,CAACC,KAAK,CAAChB,eAAe,GAAGvB,WAAW,CAAC,CAAC,GACnDiC,iBAAiB,CAACK,IAAI,CAACC,KAAK,CAAChB,eAAe,GAAGvB,WAAW,CAAC;YAC/D,CAAE;YAAA0G,QAAA,EAED,CAAClC,uBAAuB,GACvB/E,IAAA,CAACV,QAAQ,CAACH,IAAI;cACZgI,KAAK,EAAE,CACLzH,YAAY,CAACyB,cAAc,EAC3B;gBACEX,KAAK,EACHiC,MAAM,CAACI,IAAI,CAACC,KAAK,CAAChB,eAAe,GAAGvB,WAAW,CAAC,CAAC,GAAG,GAAG;gBACzDkJ,UAAU,EACRhH,MAAM,CAACI,IAAI,CAACC,KAAK,CAAChB,eAAe,GAAGvB,WAAW,CAAC,CAAC,GAAG;cACxD,CAAC;YACD,CACH,CAAC,GACA;UAAI,CACK,CAAC;QAAA,CACZ;MAAC,CACG;IAAC,CACT,CAAC;EAAA,CACP,CAAC;AAEP,CAAC;AAED,eAAeI,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}