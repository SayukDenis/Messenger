{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport { styles } from \"./Styles/ReplyTextType\";\nimport React from 'react';\nimport { wrapText } from \"./HelperFunctions/wrapText\";\nimport { screenHeight, screenWidth } from \"../../../ChatList/Constants/ConstantsForChatlist\";\nimport MessageItemSwipeToReplyIcon from \"../SVG/MessageItemSwipeToReplyIcon\";\nimport MessageItemStatusMessageReviewed from \"../SVG/MessageItemStatusMessageReviewed\";\nimport MessageItemStatusMessageNotReviewed from \"../SVG/MessageItemStatusMessageNotReviewed\";\nimport { CHARS_PER_LINE, FONT_SIZE } from \"../DialogueConstants\";\nimport SelectButton from \"./SemiComponents/SelectButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar size = [];\nvar replyTextType = function replyTextType(_ref) {\n  var _replyMessage$content, _userMessageLastWatch;\n  var messages = _ref.messages,\n    message = _ref.message,\n    setMessageMenuVisible = _ref.setMessageMenuVisible,\n    id = _ref.id,\n    scrollView = _ref.scrollView,\n    author = _ref.author,\n    userMessageLastWatched = _ref.userMessageLastWatched,\n    selecting = _ref.selecting;\n  var _useState = useState([0, 0]),\n    _useState2 = _slicedToArray(_useState, 2),\n    sizeOfMessageContainer = _useState2[0],\n    setSizeOfMessageContainer = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    widthOfMessage = _useState4[0],\n    setWidthOfMessage = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    widthOfReply = _useState6[0],\n    setWidthOfReply = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selected = _useState8[0],\n    setSelected = _useState8[1];\n  useEffect(function () {\n    if (!selecting) setSelected(false);\n  }, [selecting]);\n  var _onLayout = function onLayout(event) {\n    var _event$nativeEvent$la = event.nativeEvent.layout,\n      width = _event$nativeEvent$la.width,\n      height = _event$nativeEvent$la.height;\n    size = [].concat(_toConsumableArray(size), [{\n      ID: id,\n      layout: {\n        width: width,\n        height: height\n      }\n    }]);\n    setWidthOfMessage(width);\n  };\n  var measureHandler = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      return new Promise(function (resolve) {\n        if (componentRef.current) {\n          componentRef.current.measure(function () {\n            var _ref3 = _asyncToGenerator(function* (x, y, width, height, pageX, pageY) {\n              resolve({\n                X: pageX,\n                Y: pageY\n              });\n            });\n            return function (_x, _x2, _x3, _x4, _x5, _x6) {\n              return _ref3.apply(this, arguments);\n            };\n          }());\n        } else {\n          resolve({\n            X: 0,\n            Y: 0\n          });\n        }\n      });\n    });\n    return function measureHandler() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handlePress = useCallback(function () {\n    var _ref4 = _asyncToGenerator(function* (event) {\n      if (!event) return {\n        ID: id,\n        componentPageX: 0,\n        componentPageY: 0,\n        pageX: 0,\n        pageY: 0,\n        width: 0,\n        height: 0,\n        message: undefined\n      };\n      setSelected(true);\n      var nativeEvent = event.nativeEvent;\n      var pageX = nativeEvent.pageX,\n        pageY = nativeEvent.pageY;\n      var component = size.find(function (c) {\n        return c.ID === id;\n      });\n      var componentPage = yield measureHandler();\n      return {\n        ID: id,\n        componentPageX: componentPage.X,\n        componentPageY: componentPage.Y,\n        pageX: pageX,\n        pageY: pageY,\n        width: component.layout.width,\n        height: component.layout.height,\n        message: message\n      };\n    });\n    return function (_x7) {\n      return _ref4.apply(this, arguments);\n    };\n  }(), []);\n  var handleLinkTo = useCallback(function (messageID) {\n    if (selecting) {\n      setSelected(!selected);\n      return;\n    }\n    scrollView.current.scrollToIndex({\n      index: messages.length - messageID,\n      animated: true,\n      viewPosition: 0.5\n    });\n  }, []);\n  var replyMessage = messages.find(function (m) {\n    return m.messageId == message.messageResponseId;\n  });\n  var onScrollEndDrag = function () {\n    var _ref5 = _asyncToGenerator(function* (event) {\n      var contentOffsetX = event.nativeEvent.contentOffset.x;\n      var contentWidth = event.nativeEvent.contentSize.width;\n      var scrollViewWidth = event.nativeEvent.layoutMeasurement.width;\n      if (Math.round(contentOffsetX + scrollViewWidth) >= Math.round(contentWidth)) {\n        scrollViewRef.current.scrollTo({\n          y: 0,\n          animated: true\n        });\n        yield handlePress(null).then(function (layout) {\n          setMessageMenuVisible(layout, false);\n        });\n      }\n    });\n    return function onScrollEndDrag(_x8) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var scrollViewRef = useRef(null);\n  var _useState9 = useState({}),\n    _useState10 = _slicedToArray(_useState9, 2),\n    pressCoordinations = _useState10[0],\n    setPressCoordinations = _useState10[1];\n  var componentRef = useRef(null);\n  var onPressIn = function onPressIn(event) {\n    var _event$nativeEvent = event.nativeEvent,\n      locationX = _event$nativeEvent.locationX,\n      locationY = _event$nativeEvent.locationY;\n    setPressCoordinations({\n      locationX_In: locationX,\n      locationY_In: locationY\n    });\n  };\n  var onPressOut = function () {\n    var _ref6 = _asyncToGenerator(function* (event) {\n      var _event$nativeEvent2 = event.nativeEvent,\n        locationX = _event$nativeEvent2.locationX,\n        locationY = _event$nativeEvent2.locationY;\n      var locationX_In = pressCoordinations.locationX_In,\n        locationY_In = pressCoordinations.locationY_In;\n      if (selecting && Math.abs(locationX - locationX_In) < 3 && Math.abs(locationY - locationY_In) < 3) {\n        setSelected(!selected);\n        return;\n      }\n      if (Math.abs(locationX - locationX_In) < 3 && Math.abs(locationY - locationY_In) < 3) {\n        yield handlePress(event).then(function (layout) {\n          setMessageMenuVisible(layout, true);\n        });\n      }\n    });\n    return function onPressOut(_x9) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var getSelectOffsetHorizontal = function getSelectOffsetHorizontal() {\n    return widthOfMessage > widthOfReply ? sizeOfMessageContainer[0] - (20 + 5) - widthOfMessage : sizeOfMessageContainer[0] - (20 + 5) - widthOfReply;\n  };\n  var getSelectOffsetVertical = function getSelectOffsetVertical() {\n    return sizeOfMessageContainer[1] / 2 - 10;\n  };\n  return _jsxs(ScrollView, {\n    horizontal: true,\n    ref: scrollViewRef,\n    alwaysBounceHorizontal: false,\n    pagingEnabled: true,\n    bounces: false,\n    overScrollMode: 'never',\n    showsHorizontalScrollIndicator: false,\n    style: [styles.swipeableContainer, {\n      paddingBottom: 5\n    }],\n    onScrollEndDrag: onScrollEndDrag,\n    children: [_jsxs(View, {\n      style: styles.replyContainer,\n      children: [_jsxs(TouchableOpacity, {\n        ref: componentRef,\n        onLayout: function onLayout(event) {\n          return setSizeOfMessageContainer([event.nativeEvent.layout.width, event.nativeEvent.layout.height]);\n        },\n        style: styles.innerReplyContainer,\n        activeOpacity: 1,\n        onPressIn: onPressIn,\n        onPressOut: onPressOut,\n        children: [_jsx(Text, {\n          style: [styles.replyUserNameFont, message.author.userId == author.userId && {\n            alignSelf: 'flex-end'\n          }],\n          children: message.author.userId == author.userId ? 'You' : 'Denis'\n        }), message.author.userId == author.userId ? _jsxs(View, {\n          onLayout: function onLayout(event) {\n            return setWidthOfReply(event.nativeEvent.layout.width);\n          },\n          style: styles.replyMessageContainer,\n          children: [_jsx(TouchableOpacity, {\n            activeOpacity: 1,\n            onPress: function onPress() {\n              handleLinkTo(message.messageResponseId);\n            },\n            hitSlop: {\n              top: 10,\n              bottom: 10,\n              left: 10,\n              right: 10\n            },\n            children: _jsxs(View, {\n              style: [styles.messageTypeTextUser, styles.replyMessagePos, {\n                overflow: 'hidden'\n              }],\n              children: [_jsx(View, {\n                style: {\n                  position: 'absolute',\n                  height: screenHeight,\n                  width: screenWidth,\n                  zIndex: -1,\n                  opacity: 0.4,\n                  backgroundColor: '#E09EFF'\n                }\n              }), _jsx(Text, {\n                style: styles.replyMessageFont,\n                children: replyMessage != undefined && (replyMessage == null ? void 0 : (_replyMessage$content = replyMessage.content) == null ? void 0 : _replyMessage$content.length) >= CHARS_PER_LINE ? (replyMessage == null ? void 0 : replyMessage.content.replace('\\n', '').slice(0, CHARS_PER_LINE)) + '...' : replyMessage == null ? void 0 : replyMessage.content\n              })]\n            })\n          }), _jsx(View, {\n            style: styles.replyMessageLine\n          })]\n        }) : _jsxs(View, {\n          style: styles.replyMessageContainer,\n          children: [_jsx(View, {\n            style: styles.replyMessageLine\n          }), _jsx(TouchableOpacity, {\n            activeOpacity: 1,\n            style: {\n              flex: 1\n            },\n            onPress: function onPress() {\n              handleLinkTo(message.messageResponseId);\n            },\n            hitSlop: {\n              top: 10,\n              bottom: 10,\n              left: 10,\n              right: 10\n            },\n            children: _jsxs(View, {\n              style: [styles.messageTypeTextNotUser, styles.replyMessagePos, {\n                overflow: 'hidden'\n              }],\n              children: [_jsx(View, {\n                style: {\n                  position: 'absolute',\n                  height: screenHeight,\n                  width: screenWidth,\n                  zIndex: -1,\n                  opacity: 0.4,\n                  backgroundColor: '#fff'\n                }\n              }), _jsx(Text, {\n                style: styles.replyMessageFont,\n                children: replyMessage != undefined && (replyMessage == null ? void 0 : replyMessage.content.length) >= CHARS_PER_LINE ? (replyMessage == null ? void 0 : replyMessage.content.replace('\\n', '').slice(0, CHARS_PER_LINE)) + '...' : replyMessage == null ? void 0 : replyMessage.content\n              })]\n            })\n          })]\n        }), _jsxs(TouchableOpacity, {\n          activeOpacity: 1,\n          onPressIn: onPressIn,\n          onPressOut: onPressOut,\n          children: [_jsxs(View, {\n            onLayout: function onLayout(event) {\n              return _onLayout(event);\n            },\n            style: [message.author.userId == author.userId ? styles.messageTypeTextUser : styles.messageTypeTextNotUser, {\n              marginTop: Math.ceil(FONT_SIZE) + 1\n            }, (message == null ? void 0 : message.content.length) > CHARS_PER_LINE && styles.longMessage, {\n              overflow: 'hidden'\n            }],\n            children: [_jsx(View, {\n              style: {\n                position: 'absolute',\n                height: screenHeight,\n                width: screenWidth,\n                zIndex: -1,\n                opacity: 0.4,\n                backgroundColor: message.author.userId === author.userId ? '#E09EFF' : '#fff'\n              }\n            }), _jsx(Text, {\n              children: wrapText(message.content, CHARS_PER_LINE)\n            }), _jsxs(Text, {\n              style: (message == null ? void 0 : message.content.length) > CHARS_PER_LINE ? [styles.messageTimeStamp, styles.longMessageTimeStamp] : styles.messageTimeStamp,\n              children: [message.isEdited ? 'edited ' : '', new Date(message.sendingTime).getHours().toString().padStart(2, '0'), \":\", new Date(message.sendingTime).getMinutes().toString().padStart(2, '0')]\n            })]\n          }), selecting && _jsx(SelectButton, {\n            selected: selected,\n            isUser: message.author.userId == author.userId,\n            verticalOffset: getSelectOffsetVertical(),\n            horizontalOffset: getSelectOffsetHorizontal()\n          })]\n        })]\n      }), message.author.userId == author.userId && _jsx(View, {\n        style: {\n          position: 'absolute',\n          right: 0,\n          bottom: 5,\n          marginRight: -2.5\n        },\n        children: message.messageId <= (userMessageLastWatched == null ? void 0 : (_userMessageLastWatch = userMessageLastWatched.value) == null ? void 0 : _userMessageLastWatch.messageId) ? _jsx(MessageItemStatusMessageReviewed, {}) : _jsx(MessageItemStatusMessageNotReviewed, {})\n      })]\n    }), _jsx(View, {\n      style: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: 55\n      },\n      children: _jsx(MessageItemSwipeToReplyIcon, {})\n    })]\n  });\n};\nexport default memo(replyTextType);","map":{"version":3,"names":["memo","useCallback","useEffect","useRef","useState","styles","React","wrapText","screenHeight","screenWidth","MessageItemSwipeToReplyIcon","MessageItemStatusMessageReviewed","MessageItemStatusMessageNotReviewed","CHARS_PER_LINE","FONT_SIZE","SelectButton","jsx","_jsx","jsxs","_jsxs","size","replyTextType","_ref","_replyMessage$content","_userMessageLastWatch","messages","message","setMessageMenuVisible","id","scrollView","author","userMessageLastWatched","selecting","_useState","_useState2","_slicedToArray","sizeOfMessageContainer","setSizeOfMessageContainer","_useState3","_useState4","widthOfMessage","setWidthOfMessage","_useState5","_useState6","widthOfReply","setWidthOfReply","_useState7","_useState8","selected","setSelected","onLayout","event","_event$nativeEvent$la","nativeEvent","layout","width","height","concat","_toConsumableArray","ID","measureHandler","_ref2","_asyncToGenerator","Promise","resolve","componentRef","current","measure","_ref3","x","y","pageX","pageY","X","Y","_x","_x2","_x3","_x4","_x5","_x6","apply","arguments","handlePress","_ref4","componentPageX","componentPageY","undefined","component","find","c","componentPage","_x7","handleLinkTo","messageID","scrollToIndex","index","length","animated","viewPosition","replyMessage","m","messageId","messageResponseId","onScrollEndDrag","_ref5","contentOffsetX","contentOffset","contentWidth","contentSize","scrollViewWidth","layoutMeasurement","Math","round","scrollViewRef","scrollTo","then","_x8","_useState9","_useState10","pressCoordinations","setPressCoordinations","onPressIn","_event$nativeEvent","locationX","locationY","locationX_In","locationY_In","onPressOut","_ref6","_event$nativeEvent2","abs","_x9","getSelectOffsetHorizontal","getSelectOffsetVertical","ScrollView","horizontal","ref","alwaysBounceHorizontal","pagingEnabled","bounces","overScrollMode","showsHorizontalScrollIndicator","style","swipeableContainer","paddingBottom","children","View","replyContainer","TouchableOpacity","innerReplyContainer","activeOpacity","Text","replyUserNameFont","userId","alignSelf","replyMessageContainer","onPress","hitSlop","top","bottom","left","right","messageTypeTextUser","replyMessagePos","overflow","position","zIndex","opacity","backgroundColor","replyMessageFont","content","replace","slice","replyMessageLine","flex","messageTypeTextNotUser","marginTop","ceil","longMessage","messageTimeStamp","longMessageTimeStamp","isEdited","Date","sendingTime","getHours","toString","padStart","getMinutes","isUser","verticalOffset","horizontalOffset","marginRight","value","alignItems","justifyContent"],"sources":["D:/project/1project/Messenger/Messenger/Pages/Chats/Dialogue/MessageViewsAndTypes/ReplyTextType.tsx"],"sourcesContent":["import { View, Text, TouchableOpacity, ScrollView } from 'react-native';\r\nimport { MutableRefObject, memo, useCallback, useEffect, useRef, useState, } from 'react';\r\nimport { styles } from './Styles/ReplyTextType';\r\nimport React from 'react';\r\nimport { MessageProps } from '../GeneralInterfaces/IMessage';\r\nimport User from '../../../../dao/Models/User';\r\nimport { wrapText } from './HelperFunctions/wrapText';\r\nimport { screenHeight, screenWidth } from '../../../ChatList/Constants/ConstantsForChatlist';\r\nimport MessageItemSwipeToReplyIcon from '../SVG/MessageItemSwipeToReplyIcon';\r\nimport MessageItemStatusMessageReviewed from '../SVG/MessageItemStatusMessageReviewed';\r\nimport MessageItemStatusMessageNotReviewed from '../SVG/MessageItemStatusMessageNotReviewed';\r\nimport ILastWatchedMessage from '../../../../dao/Models/Chats/ILastWatchedMessage';\r\nimport { Layout } from '../GeneralInterfaces/ILayout';\r\nimport { CHARS_PER_LINE, FONT_SIZE } from '../DialogueConstants';\r\nimport SelectButton from './SemiComponents/SelectButton';\r\n\r\ninterface ReplyTextType {\r\n  messages: MessageProps[];\r\n  message: MessageProps;\r\n  setMessageMenuVisible: (arg0: Layout, arg1: boolean)=>void;\r\n  id: number;\r\n  scrollView: MutableRefObject<any>;\r\n  author: User;\r\n  userMessageLastWatched: ILastWatchedMessage | undefined;\r\n  selecting: boolean;\r\n}\r\n\r\nlet size:any[] = [];\r\n\r\nconst replyTextType = ({messages, message, setMessageMenuVisible, id, scrollView, author, userMessageLastWatched, selecting}:ReplyTextType) => {\r\n\r\n  const [sizeOfMessageContainer, setSizeOfMessageContainer] = useState([0, 0]);\r\n  const [widthOfMessage, setWidthOfMessage] = useState(0);\r\n  const [widthOfReply, setWidthOfReply] = useState(0);\r\n  const [selected, setSelected] = useState(false);\r\n  useEffect(() => {\r\n    if(!selecting) setSelected(false)\r\n  }, [selecting])\r\n\r\n  const onLayout = (event:any) => {\r\n    const { width, height } = event.nativeEvent.layout;\r\n    size = [...size, { ID: id, layout: { width, height }}];\r\n    setWidthOfMessage(width);\r\n  };\r\n\r\n  const measureHandler = async () => {\r\n    return new Promise((resolve) => {\r\n      if (componentRef.current) {\r\n        componentRef.current.measure(\r\n          async (x: number, y: number, width: number, height: number, pageX: number, pageY: number) => {\r\n            resolve({ X: pageX, Y: pageY });\r\n          }\r\n        );\r\n      } else {\r\n        resolve({ X: 0, Y: 0 });\r\n      }\r\n    });\r\n  };\r\n  \r\n  interface componentPageProps {\r\n    X: number;\r\n    Y: number;\r\n  }\r\n  \r\n  const handlePress = useCallback(async (event:({ nativeEvent: { pageX: number; pageY: number } } | null)) => {\r\n    if(!event) return { ID: id, componentPageX:0, componentPageY: 0, pageX: 0, pageY: 0, width: 0, height: 0, message: undefined };\r\n\r\n    setSelected(true);\r\n\r\n    const { nativeEvent } = event;\r\n    const { pageX, pageY } = nativeEvent;\r\n\r\n    const component = size.find(c => c.ID === id);\r\n\r\n    const componentPage = await measureHandler();\r\n    \r\n    return { \r\n      ID: id,\r\n      componentPageX: (componentPage as componentPageProps).X,\r\n      componentPageY: (componentPage as componentPageProps).Y,\r\n      pageX: pageX,\r\n      pageY: pageY,\r\n      width: component.layout.width,\r\n      height: component.layout.height,\r\n      message: message\r\n    };\r\n  }, []);\r\n\r\n  const handleLinkTo = useCallback((messageID:any) => {\r\n    if(selecting) {\r\n      setSelected(!selected) \r\n      return;\r\n    }\r\n    // if(selecting && Math.abs(locationX-locationX_In) < 3 && Math.abs(locationY-locationY_In) < 3) {\r\n    //   setSelected(!selected) \r\n    //   return;\r\n    // }\r\n    scrollView.current.scrollToIndex({ index: messages.length - messageID, animated: true, viewPosition: 0.5 });\r\n  }, []);\r\n \r\n  const replyMessage = messages.find(m => m.messageId==message.messageResponseId);\r\n\r\n  const onScrollEndDrag = async (event:any) => {\r\n    const contentOffsetX = event.nativeEvent.contentOffset.x;\r\n    const contentWidth = event.nativeEvent.contentSize.width;\r\n    const scrollViewWidth = event.nativeEvent.layoutMeasurement.width;\r\n\r\n    if (Math.round(contentOffsetX + scrollViewWidth) >= Math.round(contentWidth)) {\r\n      scrollViewRef.current!.scrollTo({y:0,animated:true})\r\n      await handlePress(null).then((layout) => {\r\n        setMessageMenuVisible(layout, false);\r\n      });\r\n    }\r\n  };\r\n  const scrollViewRef = useRef<ScrollView>(null);\r\n\r\n  interface coordProps {\r\n    locationX_In: number;\r\n    locationY_In: number;\r\n  }\r\n  const [pressCoordinations, setPressCoordinations] = useState({} as coordProps);\r\n  const componentRef = useRef<TouchableOpacity>(null);\r\n\r\n  const onPressIn = (event:any) => {\r\n    const { locationX, locationY } = event.nativeEvent;\r\n    setPressCoordinations({ locationX_In: locationX, locationY_In: locationY })\r\n  }\r\n\r\n  const onPressOut = async (event:any) => {\r\n    const { locationX, locationY } = event.nativeEvent;\r\n    const { locationX_In, locationY_In } = pressCoordinations;\r\n    \r\n    if(selecting && Math.abs(locationX-locationX_In) < 3 && Math.abs(locationY-locationY_In) < 3) {\r\n      setSelected(!selected) \r\n      return;\r\n    }\r\n    \r\n    if(Math.abs(locationX-locationX_In) < 3 && Math.abs(locationY-locationY_In) < 3) {\r\n      await handlePress(event).then((layout) => {\r\n        setMessageMenuVisible(layout, true);\r\n      });\r\n    }\r\n  }\r\n\r\n  const getSelectOffsetHorizontal = () => {\r\n    return widthOfMessage > widthOfReply ? sizeOfMessageContainer[0] -(20+5) - widthOfMessage : sizeOfMessageContainer[0] -(20+5) - widthOfReply;\r\n  }\r\n  const getSelectOffsetVertical = () => {\r\n    return sizeOfMessageContainer[1]/2-10;\r\n  }\r\n\r\n  return (\r\n    <ScrollView \r\n      horizontal={true} \r\n      ref={scrollViewRef}\r\n      alwaysBounceHorizontal={false} \r\n      pagingEnabled \r\n      bounces={false}\r\n      overScrollMode={'never'}\r\n      showsHorizontalScrollIndicator={false}\r\n      style={[styles.swipeableContainer, { paddingBottom: 5 }]}\r\n      onScrollEndDrag={onScrollEndDrag}\r\n    >\r\n      <View style={styles.replyContainer} >\r\n        <TouchableOpacity \r\n          ref={componentRef}\r\n          onLayout={(event) => setSizeOfMessageContainer([event.nativeEvent.layout.width, event.nativeEvent.layout.height])}\r\n          style={styles.innerReplyContainer}\r\n          activeOpacity={1} \r\n          onPressIn={onPressIn}\r\n          onPressOut={onPressOut}\r\n        >\r\n          <Text style={[styles.replyUserNameFont, message.author.userId==author.userId&&{ alignSelf: 'flex-end' }]}>\r\n            {message.author.userId==author.userId?'You':'Denis'}\r\n          </Text>\r\n          {message.author.userId==author.userId?\r\n          <View \r\n            onLayout={(event) => setWidthOfReply(event.nativeEvent.layout.width)}\r\n            style={styles.replyMessageContainer}>\r\n            <TouchableOpacity \r\n              activeOpacity={1} \r\n              onPress={() => {handleLinkTo(message!.messageResponseId)}}\r\n              hitSlop={{ top: 10, bottom: 10, left: 10, right: 10, }}\r\n            >\r\n              <View style={[styles.messageTypeTextUser, styles.replyMessagePos, { overflow: 'hidden' }]}>\r\n                <View style={{ position: 'absolute', height: screenHeight, width: screenWidth, zIndex: -1, opacity: 0.4, backgroundColor:'#E09EFF' }} /> \r\n                <Text style={styles.replyMessageFont}>\r\n                  {replyMessage!=undefined&&replyMessage?.content?.length>=CHARS_PER_LINE?replyMessage?.content.replace('\\n', '').slice(0,CHARS_PER_LINE)+'...':replyMessage?.content}\r\n                </Text>\r\n              </View>\r\n            </TouchableOpacity>\r\n            <View style={styles.replyMessageLine}/>\r\n          </View>\r\n          :\r\n          <View style={styles.replyMessageContainer}>\r\n            <View style={styles.replyMessageLine}/>\r\n            <TouchableOpacity \r\n              activeOpacity={1}\r\n              style={{ flex:1 }}\r\n              onPress={() => {handleLinkTo(message!.messageResponseId)}}\r\n              hitSlop={{ top: 10, bottom: 10, left: 10, right: 10, }}\r\n            >\r\n              <View style={[styles.messageTypeTextNotUser, styles.replyMessagePos, { overflow: 'hidden' }]}>\r\n                <View style={{ position: 'absolute', height: screenHeight, width: screenWidth, zIndex: -1, opacity: 0.4, backgroundColor:'#fff' }} /> \r\n                <Text style={styles.replyMessageFont}>\r\n                  {replyMessage!=undefined&&replyMessage?.content.length>=CHARS_PER_LINE?replyMessage?.content.replace('\\n', '').slice(0,CHARS_PER_LINE)+'...':replyMessage?.content}\r\n                </Text>\r\n              </View>\r\n            </TouchableOpacity>\r\n          </View>}\r\n          <TouchableOpacity \r\n            activeOpacity={1} \r\n            onPressIn={onPressIn}\r\n            onPressOut={onPressOut}\r\n          >\r\n            <View \r\n              onLayout={(event) => onLayout(event)}\r\n              style={[message.author.userId==author.userId?styles.messageTypeTextUser:styles.messageTypeTextNotUser, {marginTop:Math.ceil(FONT_SIZE)+1}, message?.content.length>CHARS_PER_LINE&&styles.longMessage, { overflow: 'hidden' }]}\r\n            >\r\n              <View style={{ position: 'absolute', height: screenHeight, width: screenWidth, zIndex: -1, opacity: 0.4, backgroundColor:message.author.userId===author.userId?'#E09EFF':'#fff' }} /> \r\n              <Text>{wrapText(message.content, CHARS_PER_LINE)}</Text>\r\n              <Text style={message?.content.length>CHARS_PER_LINE?[styles.messageTimeStamp, styles.longMessageTimeStamp]:styles.messageTimeStamp}>\r\n                {message.isEdited?'edited ':''}\r\n                {new Date(message.sendingTime).getHours().toString().padStart(2, '0')}:\r\n                {new Date(message.sendingTime).getMinutes().toString().padStart(2, '0')}\r\n              </Text>\r\n            </View>\r\n            {selecting && <SelectButton \r\n              selected={selected}\r\n              isUser={message.author.userId==author.userId}\r\n              verticalOffset={getSelectOffsetVertical()}\r\n              horizontalOffset={getSelectOffsetHorizontal()}\r\n            />}\r\n          </TouchableOpacity>\r\n        </TouchableOpacity>\r\n        { message.author.userId==author.userId && \r\n          <View style={{ position: 'absolute', right: 0, bottom: 5 , marginRight: -2.5 }}>\r\n            { message.messageId!<=userMessageLastWatched?.value?.messageId!?<MessageItemStatusMessageReviewed />:<MessageItemStatusMessageNotReviewed /> }\r\n          </View> }\r\n      </View>\r\n      <View style={{ alignItems: 'center', justifyContent: 'center', width: 55 }}>\r\n        <MessageItemSwipeToReplyIcon />\r\n      </View>\r\n    </ScrollView>\r\n)};\r\n\r\nexport default memo(replyTextType);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}