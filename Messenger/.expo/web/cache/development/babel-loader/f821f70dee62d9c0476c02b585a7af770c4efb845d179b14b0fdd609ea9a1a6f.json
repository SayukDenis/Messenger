{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { EnumForChatListBlurs } from \"../Enums/EnumsForChatListBlurs\";\nimport { setEnumForChatListBlurs, setStateForEndOfBlurForChatList } from \"../../../../ReducersAndActions/Actions/ChatListActions/ChatListActions\";\nimport ContainerForHeaderModeOfEmploymentWithArrow from \"./ContainerForHeaderModeOfEmploymentWithArrow\";\nimport ContainerForHeaderModeOfEmployment from \"./ContainerForHeaderModeOfEmployment\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  screenWidth = _Dimensions$get.width,\n  screenHeight = _Dimensions$get.height;\nvar ModalWindowOfPressOnHeadersAvatar = function ModalWindowOfPressOnHeadersAvatar() {\n  var blurState = useSelector(function (state) {\n    var blur = state.chatListReducer.enumForChatListBlurs.enumForChatListBlurs;\n    return blur;\n  });\n  var dispatch = useDispatch();\n  var animationDuration = 100;\n  var positionOfFirstContainer = useState(new Animated.Value(0))[0];\n  var positionOfSecondContainer = useState(new Animated.Value(0))[0];\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    stateForFirstAnimation = _useState2[0],\n    setStateForFirstAnimation = _useState2[1];\n  var firstAnimationForFirstContainer = Animated.timing(positionOfFirstContainer, {\n    toValue: stateForFirstAnimation == 0 ? 1 : 0,\n    duration: Platform.OS == \"android\" ? animationDuration * 0.2 : animationDuration,\n    useNativeDriver: false,\n    easing: Easing.linear\n  });\n  var secondAnimationForFirstContainer = Animated.timing(positionOfSecondContainer, {\n    toValue: stateForFirstAnimation == 0 ? 1 : 0,\n    duration: animationDuration,\n    useNativeDriver: false,\n    easing: Easing.linear\n  });\n  var secondContainerForFirstAnimationPositionInterpolate = positionOfSecondContainer.interpolate({\n    inputRange: [0, 1],\n    outputRange: [-screenHeight * 0.05, 0]\n  });\n  var OnPressOnSelectModeOfEmployment = function OnPressOnSelectModeOfEmployment() {\n    startFirstAnimation.start(function () {\n      dispatch(setEnumForChatListBlurs(EnumForChatListBlurs.SelectModeOfEmployment));\n      setStateForFirstAnimation(0);\n    });\n  };\n  useEffect(function () {\n    if (blurState == EnumForChatListBlurs.None && stateForFirstAnimation == 1) {\n      startFirstAnimation.start(function () {\n        dispatch(setStateForEndOfBlurForChatList(false));\n        setStateForFirstAnimation(0);\n      });\n    }\n  }, [blurState]);\n  var OnPressOnSelectActivity = function OnPressOnSelectActivity() {\n    console.log(2);\n  };\n  var startFirstAnimation = Animated.sequence(stateForFirstAnimation == 0 ? [firstAnimationForFirstContainer, secondAnimationForFirstContainer] : [secondAnimationForFirstContainer, firstAnimationForFirstContainer]);\n  useEffect(function () {\n    startFirstAnimation.start(function () {\n      setStateForFirstAnimation(function (prev) {\n        return prev == 0 ? 1 : 0;\n      });\n    });\n  }, []);\n  return _jsxs(_Fragment, {\n    children: [_jsx(TouchableOpacity, {\n      activeOpacity: Platform.OS == \"ios\" ? 0.5 : 1,\n      onPress: OnPressOnSelectModeOfEmployment,\n      children: _jsx(Animated.View, {\n        style: {\n          opacity: positionOfFirstContainer\n        },\n        children: _jsx(ContainerForHeaderModeOfEmploymentWithArrow, {\n          children: _jsx(Text, {\n            style: {\n              marginLeft: 15,\n              fontSize: 13\n            },\n            children: \"Select mode of employment\"\n          })\n        })\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: OnPressOnSelectActivity,\n      activeOpacity: Platform.OS == \"ios\" ? 0.5 : 1,\n      children: _jsx(Animated.View, {\n        style: {\n          opacity: positionOfSecondContainer,\n          transform: [{\n            translateY: secondContainerForFirstAnimationPositionInterpolate\n          }],\n          top: screenHeight * 0.05\n        },\n        children: _jsx(ContainerForHeaderModeOfEmployment, {\n          children: _jsx(Text, {\n            style: {\n              marginLeft: 15,\n              fontSize: 13\n            },\n            children: \"Select an activity\"\n          })\n        })\n      })\n    })]\n  });\n};\nexport default ModalWindowOfPressOnHeadersAvatar;","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","EnumForChatListBlurs","setEnumForChatListBlurs","setStateForEndOfBlurForChatList","ContainerForHeaderModeOfEmploymentWithArrow","ContainerForHeaderModeOfEmployment","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","_Dimensions$get","Dimensions","get","screenWidth","width","screenHeight","height","ModalWindowOfPressOnHeadersAvatar","blurState","state","blur","chatListReducer","enumForChatListBlurs","dispatch","animationDuration","positionOfFirstContainer","Animated","Value","positionOfSecondContainer","_useState","_useState2","_slicedToArray","stateForFirstAnimation","setStateForFirstAnimation","firstAnimationForFirstContainer","timing","toValue","duration","Platform","OS","useNativeDriver","easing","Easing","linear","secondAnimationForFirstContainer","secondContainerForFirstAnimationPositionInterpolate","interpolate","inputRange","outputRange","OnPressOnSelectModeOfEmployment","startFirstAnimation","start","SelectModeOfEmployment","None","OnPressOnSelectActivity","console","log","sequence","prev","children","TouchableOpacity","activeOpacity","onPress","View","style","opacity","Text","marginLeft","fontSize","transform","translateY","top"],"sources":["D:/project/1project/Messenger/Messenger/Pages/ChatList/Components/Headers containers/ModalWindowOfPressOnHeadersAvatar.tsx"],"sourcesContent":["import {\r\n  Animated,\r\n  Dimensions,\r\n  Platform,\r\n  View,\r\n  Text,\r\n  Easing,\r\n} from \"react-native\";\r\nimport { TouchableOpacity } from \"react-native\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { footerstyles } from \"../../Styles/FooterStyle\";\r\nimport { EnumForChatListBlurs } from \"../Enums/EnumsForChatListBlurs\";\r\nimport {\r\n  setEnumForChatListBlurs,\r\n  setStateForEndOfBlurForChatList,\r\n} from \"../../../../ReducersAndActions/Actions/ChatListActions/ChatListActions\";\r\nimport ContainerForHeaderModeOfEmploymentWithArrow from \"./ContainerForHeaderModeOfEmploymentWithArrow\";\r\nimport ContainerForHeaderModeOfEmployment from \"./ContainerForHeaderModeOfEmployment\";\r\n\r\nconst { width: screenWidth, height: screenHeight } = Dimensions.get(\"window\");\r\n\r\nconst ModalWindowOfPressOnHeadersAvatar = () => {\r\n  \r\n  const blurState = useSelector((state: any) => {\r\n    let blur: EnumForChatListBlurs =\r\n      state.chatListReducer.enumForChatListBlurs.enumForChatListBlurs;\r\n    return blur;\r\n  });\r\n  const dispatch = useDispatch();\r\n  const animationDuration = 100;\r\n  const positionOfFirstContainer = useState(new Animated.Value(0))[0];\r\n  const positionOfSecondContainer = useState(new Animated.Value(0))[0];\r\n  const [stateForFirstAnimation, setStateForFirstAnimation] =\r\n    useState<number>(0);\r\n  const firstAnimationForFirstContainer = Animated.timing(\r\n    positionOfFirstContainer,\r\n    {\r\n      toValue: stateForFirstAnimation == 0 ? 1 : 0,\r\n      duration:\r\n        Platform.OS == \"android\" ? animationDuration * 0.2 : animationDuration,\r\n      useNativeDriver: false,\r\n      easing: Easing.linear,\r\n    }\r\n  );\r\n  const secondAnimationForFirstContainer = Animated.timing(\r\n    positionOfSecondContainer,\r\n    {\r\n      toValue: stateForFirstAnimation == 0 ? 1 : 0,\r\n      duration: animationDuration,\r\n      useNativeDriver: false,\r\n      easing: Easing.linear,\r\n    }\r\n  );\r\n  const secondContainerForFirstAnimationPositionInterpolate =\r\n    positionOfSecondContainer.interpolate({\r\n      inputRange: [0, 1],\r\n      outputRange: [-screenHeight * 0.05, 0],\r\n    });\r\n  const OnPressOnSelectModeOfEmployment = () => {\r\n    //console.log(1);\r\n\r\n    startFirstAnimation.start(() => {\r\n      dispatch(\r\n        setEnumForChatListBlurs(EnumForChatListBlurs.SelectModeOfEmployment)\r\n      );\r\n      setStateForFirstAnimation(0)\r\n    });\r\n  };\r\n  useEffect(() => {\r\n   \r\n\r\n    if (blurState == EnumForChatListBlurs.None && stateForFirstAnimation == 1) {\r\n      startFirstAnimation.start(() => {\r\n      \r\n        dispatch(setStateForEndOfBlurForChatList(false));\r\n        setStateForFirstAnimation(0)\r\n      });\r\n    }\r\n  }, [blurState]);\r\n\r\n  const OnPressOnSelectActivity = () => {\r\n    console.log(2);\r\n  };\r\n  const startFirstAnimation = Animated.sequence(\r\n    stateForFirstAnimation == 0\r\n      ? [firstAnimationForFirstContainer, secondAnimationForFirstContainer]\r\n      : [secondAnimationForFirstContainer, firstAnimationForFirstContainer]\r\n  );\r\n\r\n  useEffect(() => {\r\n    startFirstAnimation.start(() => {\r\n      setStateForFirstAnimation((prev) => {\r\n        return prev == 0 ? 1 : 0;\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <TouchableOpacity\r\n        activeOpacity={Platform.OS == \"ios\" ? 0.5 : 1}\r\n        onPress={OnPressOnSelectModeOfEmployment}\r\n      >\r\n        <Animated.View style={{ opacity: positionOfFirstContainer }}>\r\n          <ContainerForHeaderModeOfEmploymentWithArrow>\r\n            <Text style={{ marginLeft: 15, fontSize: 13 }}>\r\n              {\"Select mode of employment\"}\r\n            </Text>\r\n          </ContainerForHeaderModeOfEmploymentWithArrow>\r\n        </Animated.View>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity\r\n        onPress={OnPressOnSelectActivity}\r\n        activeOpacity={Platform.OS == \"ios\" ? 0.5 : 1}\r\n      >\r\n        <Animated.View style={{opacity: positionOfSecondContainer,\r\n              transform: [\r\n                {\r\n                  translateY:\r\n                    secondContainerForFirstAnimationPositionInterpolate,\r\n                },\r\n              ], top: screenHeight * 0.05,}}>\r\n          <ContainerForHeaderModeOfEmployment>\r\n          <Text style={{ marginLeft: 15, fontSize: 13 }}>\r\n              {\"Select an activity\"}\r\n            </Text>\r\n          </ContainerForHeaderModeOfEmployment>\r\n        </Animated.View>\r\n      </TouchableOpacity>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalWindowOfPressOnHeadersAvatar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}