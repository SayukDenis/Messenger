{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { styles } from \"../Styles\";\nimport { useIsFocused } from \"@react-navigation/native\";\nimport BinIcon from \"../../MainScreen/Icons/BinIcon\";\nimport ButtonWithPlus from \"../../../GeneralComponents/ButtonWithPlus\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { GetProfile } from \"../../../DatabaseSimulation/DBFunctions\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar screenHeight = Dimensions.get(\"screen\").height;\nvar BranchChildrenList = function BranchChildrenList(props) {\n  var branchTitle = \"Branch\";\n  var isFocused = useIsFocused();\n  useEffect(function () {}, [isFocused]);\n  return _jsxs(View, {\n    style: {\n      top: props.isSomeSelectionVisible ? 0.03 * screenHeight : 0.07 * screenHeight\n    },\n    children: [_jsx(ButtonWithPlus, {\n      text: \"Branch\",\n      onPress: function onPress() {\n        props.onPlusBranchPress();\n      },\n      style: {\n        top: 0.055 * screenHeight\n      }\n    }), _jsx(View, {\n      style: [styles.emojiAndColorButtonsContainer, {\n        top: -0.055 * screenHeight\n      }],\n      children: _jsx(Text, {\n        style: styles.settingTitle,\n        children: \"Under the branch\"\n      })\n    }), _jsx(View, {\n      style: {\n        paddingBottom: 0.09 * screenHeight,\n        zIndex: 0,\n        top: 0.015 * screenHeight\n      },\n      children: GetProfile().selectedBranchParent.children.map(function (item, index) {\n        return _jsxs(View, {\n          children: [_jsx(View, {\n            style: {\n              height: 0.005 * screenHeight\n            }\n          }), _jsxs(TouchableOpacity, {\n            style: [styles.settingOption, {\n              top: 0\n            }],\n            onPress: function onPress() {\n              props.onChildBranchPress(item);\n            },\n            children: [_jsx(LinearGradient, {\n              colors: [\"#cf9b95\", \"#c98bb8\", \"#c37adb\"],\n              style: [styles.linearGradient, {\n                opacity: 0.7\n              }]\n            }), _jsx(View, {\n              style: [styles.branchAvatarInList, {\n                backgroundColor: item.color\n              }],\n              children: _jsx(Text, {\n                style: {\n                  fontSize: 20\n                },\n                children: item.emoji\n              })\n            }), _jsx(View, {\n              style: styles.branchTitleContainer,\n              children: _jsx(Text, {\n                numberOfLines: 1,\n                style: styles.branchTitleInList,\n                children: item.name\n              })\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                props.onBinPress(item.name);\n              },\n              style: styles.binIconContainer,\n              children: _jsx(BinIcon, {\n                style: styles.binIcon\n              })\n            })]\n          })]\n        }, index);\n      })\n    })]\n  });\n};\nexport default BranchChildrenList;","map":{"version":3,"names":["React","useEffect","View","TouchableOpacity","Text","Dimensions","styles","useIsFocused","BinIcon","ButtonWithPlus","LinearGradient","GetProfile","jsx","_jsx","jsxs","_jsxs","screenHeight","get","height","BranchChildrenList","props","branchTitle","isFocused","style","top","isSomeSelectionVisible","children","text","onPress","onPlusBranchPress","emojiAndColorButtonsContainer","settingTitle","paddingBottom","zIndex","selectedBranchParent","map","item","index","settingOption","onChildBranchPress","colors","linearGradient","opacity","branchAvatarInList","backgroundColor","color","fontSize","emoji","branchTitleContainer","numberOfLines","branchTitleInList","name","onBinPress","binIconContainer","binIcon"],"sources":["C:/Users/T480/source/repos/Messenger/Messenger/Pages/Profiles/SemiComponents/Screens/BranchesScreen/ChangeBranchScreen/BranchChildrenList.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport { View, TouchableOpacity, Text, Dimensions } from \"react-native\";\r\nimport { styles } from \"../Styles\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport PlusIcon from \"../../../Assets/Icons/PlusIcon\";\r\nimport BinIcon from \"../../MainScreen/Icons/BinIcon\";\r\nimport { BranchChild } from \"../../../DatabaseSimulation/DBClasses\";\r\nimport ButtonWithPlus from \"../../../GeneralComponents/ButtonWithPlus\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { GetProfile } from \"../../../DatabaseSimulation/DBFunctions\";\r\n\r\ninterface BranchChildrenListProps {\r\n  onPlusBranchPress: () => void;\r\n  isSomeSelectionVisible: boolean;\r\n  onBinPress: (value: string) => void;\r\n  onChildBranchPress: (child: BranchChild) => void;\r\n}\r\n\r\nconst screenHeight: number = Dimensions.get(\"screen\").height;\r\n\r\nconst BranchChildrenList: React.FC<BranchChildrenListProps> = (props) => {\r\n  const branchTitle: string = \"Branch\";\r\n  const isFocused = useIsFocused();\r\n\r\n  useEffect(() => {}, [isFocused]);\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        top: props.isSomeSelectionVisible\r\n          ? 0.03 * screenHeight\r\n          : 0.07 * screenHeight,\r\n      }}\r\n    >\r\n      <ButtonWithPlus\r\n        text=\"Branch\"\r\n        onPress={() => {\r\n          props.onPlusBranchPress();\r\n        }}\r\n        style={{ top: 0.055 * screenHeight }}\r\n      />\r\n\r\n      <View\r\n        style={[\r\n          styles.emojiAndColorButtonsContainer,\r\n          { top: -0.055 * screenHeight },\r\n        ]}\r\n      >\r\n        <Text style={styles.settingTitle}>Under the branch</Text>\r\n      </View>\r\n\r\n      <View\r\n        style={{\r\n          paddingBottom: 0.09 * screenHeight,\r\n          zIndex: 0,\r\n          top: 0.015 * screenHeight,\r\n        }}\r\n      >\r\n        {GetProfile().selectedBranchParent.children.map((item, index) => {\r\n          return (\r\n            <View key={index}>\r\n              <View\r\n                style={{\r\n                  height: 0.005 * screenHeight,\r\n                }}\r\n              />\r\n              <TouchableOpacity\r\n                style={[styles.settingOption, { top: 0 }]}\r\n                onPress={() => {\r\n                  props.onChildBranchPress(item);\r\n                }}\r\n              >\r\n                <LinearGradient\r\n                  colors={[\"#cf9b95\", \"#c98bb8\", \"#c37adb\"]}\r\n                  style={[styles.linearGradient, { opacity: 0.7 }]}\r\n                />\r\n                <View\r\n                  style={[\r\n                    styles.branchAvatarInList,\r\n                    {\r\n                      backgroundColor: item.color,\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Text style={{ fontSize: 20 }}>{item.emoji}</Text>\r\n                </View>\r\n                <View style={styles.branchTitleContainer}>\r\n                  <Text numberOfLines={1} style={styles.branchTitleInList}>\r\n                    {item.name}\r\n                  </Text>\r\n                </View>\r\n                <TouchableOpacity\r\n                  onPress={() => {\r\n                    props.onBinPress(item.name);\r\n                  }}\r\n                  style={styles.binIconContainer}\r\n                >\r\n                  <BinIcon style={styles.binIcon} />\r\n                </TouchableOpacity>\r\n              </TouchableOpacity>\r\n            </View>\r\n          );\r\n        })}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default BranchChildrenList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}