{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { GetProfile } from \"../../../DatabaseSimulation/DBFunctions\";\nimport styles from \"../Styles\";\nimport MicrophoneIcon from \"../Icons/MicrophoneIcon\";\nimport CheckMarkIcon from \"../Icons/CheckMarkIcon\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Voices = function Voices(props) {\n  return _jsx(View, {\n    style: styles.mediaContainer,\n    children: _jsx(FlatList, {\n      data: GetProfile().voice,\n      keyExtractor: function keyExtractor(item) {\n        return GetProfile().voice.indexOf(item).toString();\n      },\n      horizontal: false,\n      numColumns: 1,\n      contentContainerStyle: {\n        paddingBottom: 0.5 * Dimensions.get(\"screen\").height\n      },\n      scrollEnabled: false,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsxs(TouchableOpacity, {\n          style: styles.fileContainer,\n          onPress: function onPress() {\n            props.onPress(item);\n          },\n          onLongPress: function onLongPress() {\n            props.onLongPress(item);\n          },\n          children: [_jsx(View, {\n            style: styles.fileFormatContainer,\n            children: _jsx(MicrophoneIcon, {\n              style: styles.microphoneIcon\n            })\n          }), _jsxs(View, {\n            style: [styles.fileNameContainer, {\n              width: \"40%\"\n            }],\n            children: [_jsx(Text, {\n              numberOfLines: 1,\n              style: styles.fileVoiceOrLinkTitle,\n              children: item.author\n            }), _jsx(Text, {\n              numberOfLines: 1,\n              style: styles.fileVoiceOrLinkTitle,\n              children: \", \" + item.time + \", \" + item.date\n            })]\n          }), props.isSelectionVisible && _jsx(View, {\n            style: styles.checkMarkContainerForPhoto,\n            children: props.isCheckMarkVisible(item) && _jsx(CheckMarkIcon, {\n              style: styles.checkMarkIcon\n            })\n          })]\n        });\n      }\n    })\n  });\n};\nexport default Voices;","map":{"version":3,"names":["React","View","FlatList","Text","Dimensions","TouchableOpacity","GetProfile","styles","MicrophoneIcon","CheckMarkIcon","jsx","_jsx","jsxs","_jsxs","Voices","props","style","mediaContainer","children","data","voice","keyExtractor","item","indexOf","toString","horizontal","numColumns","contentContainerStyle","paddingBottom","get","height","scrollEnabled","renderItem","_ref","fileContainer","onPress","onLongPress","fileFormatContainer","microphoneIcon","fileNameContainer","width","numberOfLines","fileVoiceOrLinkTitle","author","time","date","isSelectionVisible","checkMarkContainerForPhoto","isCheckMarkVisible","checkMarkIcon"],"sources":["C:/Users/T480/source/repos/Messenger/Messenger/Pages/Profiles/SemiComponents/Screens/MainScreen/Multimedia/Voices.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React from \"react\";\r\nimport {\r\n  View,\r\n  FlatList,\r\n  Text,\r\n  Dimensions,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport { GetProfile } from \"../../../DatabaseSimulation/DBFunctions\";\r\nimport styles from \"../Styles\";\r\nimport MicrophoneIcon from \"../Icons/MicrophoneIcon\";\r\nimport { Voice } from \"../../../DatabaseSimulation/DBClasses\";\r\nimport CheckMarkIcon from \"../Icons/CheckMarkIcon\";\r\n\r\ninterface VoicesProps {\r\n  onPress: (value: Voice) => void;\r\n  onLongPress: (value: Voice) => void;\r\n  isSelectionVisible: boolean;\r\n  isCheckMarkVisible: (value: Voice) => boolean;\r\n}\r\n\r\nconst Voices: React.FC<VoicesProps> = (props) => {\r\n  return (\r\n    <View style={styles.mediaContainer}>\r\n      <FlatList\r\n        data={GetProfile().voice}\r\n        keyExtractor={(item) => GetProfile().voice.indexOf(item).toString()}\r\n        horizontal={false}\r\n        numColumns={1}\r\n        contentContainerStyle={{\r\n          paddingBottom: 0.5 * Dimensions.get(\"screen\").height,\r\n        }}\r\n        scrollEnabled={false}\r\n        renderItem={({ item }) => {\r\n          return (\r\n            <TouchableOpacity\r\n              style={styles.fileContainer}\r\n              onPress={() => {\r\n                props.onPress(item);\r\n              }}\r\n              onLongPress={() => {\r\n                props.onLongPress(item);\r\n              }}\r\n            >\r\n              <View style={styles.fileFormatContainer}>\r\n                <MicrophoneIcon style={styles.microphoneIcon} />\r\n              </View>\r\n              <View style={[styles.fileNameContainer, { width: \"40%\" }]}>\r\n                <Text numberOfLines={1} style={styles.fileVoiceOrLinkTitle}>\r\n                  {item.author}\r\n                </Text>\r\n                <Text numberOfLines={1} style={styles.fileVoiceOrLinkTitle}>\r\n                  {\", \" + item.time + \", \" + item.date}\r\n                </Text>\r\n              </View>\r\n              {props.isSelectionVisible && (\r\n                <View style={styles.checkMarkContainerForPhoto}>\r\n                  {props.isCheckMarkVisible(item) && (\r\n                    <CheckMarkIcon style={styles.checkMarkIcon} />\r\n                  )}\r\n                </View>\r\n              )}\r\n            </TouchableOpacity>\r\n          );\r\n        }}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Voices;\r\n"],"mappings":"AAEA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAQ1B,SAASC,UAAU;AACnB,OAAOC,MAAM;AACb,OAAOC,cAAc;AAErB,OAAOC,aAAa;AAA+B,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AASnD,IAAMC,MAA6B,GAAG,SAAhCA,MAA6BA,CAAIC,KAAK,EAAK;EAC/C,OACEJ,IAAA,CAACV,IAAI;IAACe,KAAK,EAAET,MAAM,CAACU,cAAe;IAAAC,QAAA,EACjCP,IAAA,CAACT,QAAQ;MACPiB,IAAI,EAAEb,UAAU,CAAC,CAAC,CAACc,KAAM;MACzBC,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAKhB,UAAU,CAAC,CAAC,CAACc,KAAK,CAACG,OAAO,CAACD,IAAI,CAAC,CAACE,QAAQ,CAAC,CAAC;MAAA,CAAC;MACpEC,UAAU,EAAE,KAAM;MAClBC,UAAU,EAAE,CAAE;MACdC,qBAAqB,EAAE;QACrBC,aAAa,EAAE,GAAG,GAAGxB,UAAU,CAACyB,GAAG,CAAC,QAAQ,CAAC,CAACC;MAChD,CAAE;MACFC,aAAa,EAAE,KAAM;MACrBC,UAAU,EAAE,SAAAA,WAAAC,IAAA,EAAc;QAAA,IAAXX,IAAI,GAAAW,IAAA,CAAJX,IAAI;QACjB,OACET,KAAA,CAACR,gBAAgB;UACfW,KAAK,EAAET,MAAM,CAAC2B,aAAc;UAC5BC,OAAO,EAAE,SAAAA,QAAA,EAAM;YACbpB,KAAK,CAACoB,OAAO,CAACb,IAAI,CAAC;UACrB,CAAE;UACFc,WAAW,EAAE,SAAAA,YAAA,EAAM;YACjBrB,KAAK,CAACqB,WAAW,CAACd,IAAI,CAAC;UACzB,CAAE;UAAAJ,QAAA,GAEFP,IAAA,CAACV,IAAI;YAACe,KAAK,EAAET,MAAM,CAAC8B,mBAAoB;YAAAnB,QAAA,EACtCP,IAAA,CAACH,cAAc;cAACQ,KAAK,EAAET,MAAM,CAAC+B;YAAe,CAAE;UAAC,CAC5C,CAAC,EACPzB,KAAA,CAACZ,IAAI;YAACe,KAAK,EAAE,CAACT,MAAM,CAACgC,iBAAiB,EAAE;cAAEC,KAAK,EAAE;YAAM,CAAC,CAAE;YAAAtB,QAAA,GACxDP,IAAA,CAACR,IAAI;cAACsC,aAAa,EAAE,CAAE;cAACzB,KAAK,EAAET,MAAM,CAACmC,oBAAqB;cAAAxB,QAAA,EACxDI,IAAI,CAACqB;YAAM,CACR,CAAC,EACPhC,IAAA,CAACR,IAAI;cAACsC,aAAa,EAAE,CAAE;cAACzB,KAAK,EAAET,MAAM,CAACmC,oBAAqB;cAAAxB,QAAA,EACxD,IAAI,GAAGI,IAAI,CAACsB,IAAI,GAAG,IAAI,GAAGtB,IAAI,CAACuB;YAAI,CAChC,CAAC;UAAA,CACH,CAAC,EACN9B,KAAK,CAAC+B,kBAAkB,IACvBnC,IAAA,CAACV,IAAI;YAACe,KAAK,EAAET,MAAM,CAACwC,0BAA2B;YAAA7B,QAAA,EAC5CH,KAAK,CAACiC,kBAAkB,CAAC1B,IAAI,CAAC,IAC7BX,IAAA,CAACF,aAAa;cAACO,KAAK,EAAET,MAAM,CAAC0C;YAAc,CAAE;UAC9C,CACG,CACP;QAAA,CACe,CAAC;MAEvB;IAAE,CACH;EAAC,CACE,CAAC;AAEX,CAAC;AAED,eAAenC,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}