{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useDispatch } from \"react-redux\";\nimport StyleAddFolderCenter from \"./StyleAddFolderCenter\";\nimport { setInputText } from \"../../../../../ReducersAndActions/Actions/SettingsActions/SettingsActions\";\nimport AddExeptions from \"./ComponentsForAddFolderCenter/AddExeptions\";\nimport ConteinerForAddFolderComp from \"./ComponentsForAddFolderCenter/ConteinerForAddFolderComp\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AddFolderCenter = function AddFolderCenter() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    inputText = _useState2[0],\n    setinputText = _useState2[1];\n  var dispatch = useDispatch();\n  var saveText = function saveText() {\n    var text = inputText;\n    if (text.trim() != \"\") {\n      dispatch(setInputText(text));\n    }\n  };\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      style: StyleAddFolderCenter.styleAddFolderText,\n      children: \"Name Folder\"\n    }), _jsx(ConteinerForAddFolderComp, {\n      children: _jsx(TextInput, {\n        placeholder: \"Write name of folder\",\n        value: inputText,\n        onChangeText: setinputText,\n        onBlur: saveText\n      })\n    }), _jsx(Text, {\n      style: StyleAddFolderCenter.styleAddFolderText,\n      children: \"Exceptions\"\n    }), _jsx(TouchableOpacity, {\n      children: _jsx(AddExeptions, {\n        text: \"Exeptions\"\n      })\n    })]\n  });\n};\nexport default AddFolderCenter;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","useDispatch","StyleAddFolderCenter","setInputText","AddExeptions","ConteinerForAddFolderComp","jsx","_jsx","jsxs","_jsxs","AddFolderCenter","_useState","_useState2","_slicedToArray","inputText","setinputText","dispatch","saveText","text","trim","children","style","styleAddFolderText","placeholder","value","onChangeText","onBlur"],"sources":["D:/project/1project/Messenger/Messenger/Pages/Settings/ChatFolderPage/AddFolderPage/AddFolderCenter/AddFolderCenter.tsx"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport { View, Text, TextInput,TouchableOpacity, Button } from \"react-native\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport StyleAddFolderCenter from \"./StyleAddFolderCenter\";\r\nimport { setInputText } from \"../../../../../ReducersAndActions/Actions/SettingsActions/SettingsActions\";\r\nimport AddExeptions from \"./ComponentsForAddFolderCenter/AddExeptions\";\r\nimport ConteinerForAddFolderComp from \"./ComponentsForAddFolderCenter/ConteinerForAddFolderComp\";\r\n\r\nconst AddFolderCenter  = ()=>{\r\n    const [inputText, setinputText] = useState('');\r\n    const dispatch = useDispatch();\r\n  \r\n    const saveText = () => {\r\n        let  text :string = inputText;\r\n       if(text.trim()!=\"\"){\r\n        dispatch(setInputText(text));\r\n       }\r\n    };\r\n\r\n    return <View>\r\n        <Text style ={StyleAddFolderCenter.styleAddFolderText}>Name Folder</Text>\r\n        <ConteinerForAddFolderComp>\r\n        <TextInput placeholder=\"Write name of folder\" value={inputText} onChangeText={setinputText} onBlur={saveText}></TextInput>\r\n        </ConteinerForAddFolderComp>\r\n        <Text style ={StyleAddFolderCenter.styleAddFolderText}>Exceptions</Text>\r\n        <TouchableOpacity><AddExeptions text=\"Exeptions\"></AddExeptions></TouchableOpacity>\r\n    </View>\r\n}\r\n\r\nexport default AddFolderCenter;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAEtC,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,oBAAoB;AAC3B,SAASC,YAAY;AACrB,OAAOC,YAAY;AACnB,OAAOC,yBAAyB;AAAiE,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEjG,IAAMC,eAAe,GAAI,SAAnBA,eAAeA,CAAA,EAAQ;EACzB,IAAAC,SAAA,GAAkCf,QAAQ,CAAC,EAAE,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAC9B,IAAMI,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAE9B,IAAMgB,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;IACnB,IAAKC,IAAY,GAAGJ,SAAS;IAC9B,IAAGI,IAAI,CAACC,IAAI,CAAC,CAAC,IAAE,EAAE,EAAC;MAClBH,QAAQ,CAACb,YAAY,CAACe,IAAI,CAAC,CAAC;IAC7B;EACH,CAAC;EAED,OAAOT,KAAA,CAACZ,IAAI;IAAAuB,QAAA,GACRb,IAAA,CAACT,IAAI;MAACuB,KAAK,EAAGnB,oBAAoB,CAACoB,kBAAmB;MAAAF,QAAA,EAAC;IAAW,CAAM,CAAC,EACzEb,IAAA,CAACF,yBAAyB;MAAAe,QAAA,EAC1Bb,IAAA,CAACR,SAAS;QAACwB,WAAW,EAAC,sBAAsB;QAACC,KAAK,EAAEV,SAAU;QAACW,YAAY,EAAEV,YAAa;QAACW,MAAM,EAAET;MAAS,CAAY;IAAC,CAC/F,CAAC,EAC5BV,IAAA,CAACT,IAAI;MAACuB,KAAK,EAAGnB,oBAAoB,CAACoB,kBAAmB;MAAAF,QAAA,EAAC;IAAU,CAAM,CAAC,EACxEb,IAAA,CAACP,gBAAgB;MAAAoB,QAAA,EAACb,IAAA,CAACH,YAAY;QAACc,IAAI,EAAC;MAAW,CAAe;IAAC,CAAkB,CAAC;EAAA,CACjF,CAAC;AACX,CAAC;AAED,eAAeR,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}