{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useRef, useState } from \"react\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Constants from \"expo-constants\";\nimport { headerstyles } from \"../Styles/HeaderStyle\";\nimport MagnifyingGlass from \"./Headers containers/MagnifyingGlass\";\nimport ModeOfEmployment from \"./Headers containers/ModeOfEmployment\";\nimport { connect } from \"react-redux\";\nimport RightContainer from \"./Headers containers/RightContainer\";\nimport HamburgerSVG from \"./SVG/HamburgerSVG\";\nimport BackButtonForHeaderChatListSVG from \"./SVG/BackButtonForHeaderChatListSVG\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  screenWidth = _Dimensions$get.width,\n  screenHeight = _Dimensions$get.height;\nfunction Header(_ref) {\n  var mySelfUser = _ref.mySelfUser,\n    isTouchableHeader = _ref.isTouchableHeader,\n    onPress = _ref.onPress,\n    navigation = _ref.navigation;\n  var HamburgerAnimationDuration = 150;\n  var _useState = useState(1),\n    _useState2 = _slicedToArray(_useState, 2),\n    animationStateForTouchHamburger = _useState2[0],\n    setAnimationStateForTouchHamburger = _useState2[1];\n  var HamburgerAnimationStatePosition = useRef(new Animated.Value(0));\n  var HamburgerAnimationPosition = HamburgerAnimationStatePosition.current.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, -screenWidth * 0.8]\n  });\n  var onHamburgerPres = function onHamburgerPres() {\n    Animated.timing(HamburgerAnimationStatePosition.current, {\n      toValue: animationStateForTouchHamburger,\n      duration: HamburgerAnimationDuration,\n      useNativeDriver: true\n    }).start();\n    setAnimationStateForTouchHamburger(animationStateForTouchHamburger == 0 ? 1 : 0);\n  };\n  return _jsx(View, {\n    style: [{\n      position: \"absolute\",\n      left: 0,\n      right: 0,\n      zIndex: 5,\n      elevation: 0.001,\n      borderBottomLeftRadius: 30,\n      borderBottomRightRadius: 30,\n      height: Platform.OS == \"android\" ? screenHeight * 0.08 + StatusBar.currentHeight : screenHeight * 0.08 + Constants.statusBarHeight,\n      justifyContent: \"flex-end\",\n      overflow: \"hidden\"\n    }],\n    children: _jsxs(View, {\n      style: headerstyles.container,\n      children: [_jsx(LinearGradient, {\n        colors: [\"#cf9b95\", \"#c98bb8\", \"#c37adb\"],\n        locations: [0.25, 0.5, 0.75],\n        start: {\n          x: 1,\n          y: 0\n        },\n        end: {\n          x: 0,\n          y: 1\n        },\n        style: {\n          opacity: 0.7,\n          top: 0,\n          position: \"absolute\",\n          left: 0,\n          right: 0,\n          height: screenHeight,\n          width: screenWidth\n        }\n      }), _jsxs(Animated.View, {\n        style: [headerstyles.header],\n        children: [_jsx(Animated.View, {\n          style: {\n            flexDirection: \"row\",\n            transform: [{\n              translateX: HamburgerAnimationPosition\n            }]\n          },\n          children: _jsxs(Animated.View, {\n            style: [{\n              justifyContent: \"space-between\",\n              flexDirection: \"row\",\n              width: screenWidth * 0.96\n            }],\n            children: [_jsx(MagnifyingGlass, {\n              style: headerstyles.magnifyingglass\n            }), _jsx(ModeOfEmployment, {}), _jsx(TouchableOpacity, {\n              style: {\n                justifyContent: \"center\"\n              },\n              onPress: onHamburgerPres,\n              children: animationStateForTouchHamburger == 1 ? _jsx(HamburgerSVG, {}) : _jsx(BackButtonForHeaderChatListSVG, {})\n            })]\n          })\n        }), _jsx(Animated.View, {\n          style: [{\n            transform: [{\n              translateX: HamburgerAnimationPosition\n            }]\n          }],\n          children: _jsx(RightContainer, {\n            navigation: navigation\n          })\n        })]\n      })]\n    })\n  });\n}\nexport default connect(null)(Header);","map":{"version":3,"names":["useRef","useState","React","View","TouchableOpacity","Animated","Dimensions","Platform","StatusBar","Constants","headerstyles","MagnifyingGlass","ModeOfEmployment","connect","RightContainer","HamburgerSVG","BackButtonForHeaderChatListSVG","LinearGradient","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","screenWidth","width","screenHeight","height","Header","_ref","mySelfUser","isTouchableHeader","onPress","navigation","HamburgerAnimationDuration","_useState","_useState2","_slicedToArray","animationStateForTouchHamburger","setAnimationStateForTouchHamburger","HamburgerAnimationStatePosition","Value","HamburgerAnimationPosition","current","interpolate","inputRange","outputRange","onHamburgerPres","timing","toValue","duration","useNativeDriver","start","style","position","left","right","zIndex","elevation","borderBottomLeftRadius","borderBottomRightRadius","OS","currentHeight","statusBarHeight","justifyContent","overflow","children","container","colors","locations","x","y","end","opacity","top","header","flexDirection","transform","translateX","magnifyingglass"],"sources":["D:/project/1project/Messenger/Messenger/Pages/ChatList/Components/Header.tsx"],"sourcesContent":["import { createRef, useDebugValue, useEffect, useRef, useState } from \"react\";\r\nimport React from \"react\";\r\nimport {\r\n  View,\r\n  TouchableOpacity,\r\n  Animated,\r\n  Dimensions,\r\n  SafeAreaView,\r\n  Platform,\r\n  StatusBar,\r\n} from \"react-native\";\r\nimport Constants from \"expo-constants\";\r\nimport { headerstyles } from \"../Styles/HeaderStyle\";\r\nimport MagnifyingGlass from \"./Headers containers/MagnifyingGlass\";\r\nimport ModeOfEmployment from \"./Headers containers/ModeOfEmployment\";\r\n\r\nimport MySelfUser from \"../1HelpFullFolder/MySelfUser\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport RightContainer from \"./Headers containers/RightContainer\";\r\nimport HamburgerSVG from \"./SVG/HamburgerSVG\";\r\nimport BackButtonForHeaderChatListSVG from \"./SVG/BackButtonForHeaderChatListSVG\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nconst { width: screenWidth, height: screenHeight } = Dimensions.get(\"window\");\r\n\r\nfunction Header({\r\n  mySelfUser,\r\n  isTouchableHeader,\r\n  onPress,\r\n  navigation,\r\n}: {\r\n  mySelfUser: MySelfUser;\r\n  isTouchableHeader: boolean;\r\n  onPress: () => void;\r\n  navigation: any;\r\n}) {\r\n  const HamburgerAnimationDuration = 150;\r\n  const [animationStateForTouchHamburger, setAnimationStateForTouchHamburger] =\r\n    useState(1);\r\n  const HamburgerAnimationStatePosition = useRef(new Animated.Value(0));\r\n  const HamburgerAnimationPosition =\r\n    HamburgerAnimationStatePosition.current.interpolate({\r\n      inputRange: [0, 1],\r\n      outputRange: [0, -screenWidth * 0.8],\r\n    });\r\n\r\n  const onHamburgerPres = () => {\r\n    Animated.timing(HamburgerAnimationStatePosition.current, {\r\n      toValue: animationStateForTouchHamburger,\r\n      duration: HamburgerAnimationDuration,\r\n      useNativeDriver: true,\r\n    }).start();\r\n    setAnimationStateForTouchHamburger(\r\n      animationStateForTouchHamburger == 0 ? 1 : 0\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View\r\n      style={[\r\n        {\r\n          position: \"absolute\",\r\n          //top: Platform.OS == \"android\" ? 100 : 0,\r\n          left: 0,\r\n          right: 0,\r\n          zIndex: 5,\r\n          elevation: 0.001,\r\n          borderBottomLeftRadius: 30,\r\n          borderBottomRightRadius: 30,\r\n          //backgroundColor:\"black\",\r\n          height:\r\n            Platform.OS == \"android\"\r\n              ? screenHeight * 0.08 + StatusBar.currentHeight\r\n              : screenHeight * 0.08 + Constants.statusBarHeight,\r\n          justifyContent: \"flex-end\",\r\n          overflow:\"hidden\",\r\n        },\r\n      ]}\r\n    >\r\n      \r\n      <View style={headerstyles.container}>\r\n      <LinearGradient\r\n        colors={[\"#cf9b95\", \"#c98bb8\", \"#c37adb\"]}\r\n        locations={[0.25, 0.5, 0.75]}\r\n        start={{ x: 1, y: 0 }}\r\n        end={{ x: 0, y: 1 }}\r\n        style={{\r\n          opacity:0.7,\r\n          top: 0,\r\n          position:\"absolute\",\r\n          left: 0,\r\n          right: 0,\r\n          height: screenHeight,\r\n          width: screenWidth,\r\n\r\n        \r\n        }}\r\n      />\r\n        <Animated.View style={[headerstyles.header]}>\r\n          <Animated.View\r\n            style={{\r\n              flexDirection: \"row\",\r\n              transform: [{ translateX: HamburgerAnimationPosition }],\r\n            }}\r\n          >\r\n            <Animated.View\r\n              style={[\r\n                {\r\n                  justifyContent: \"space-between\",\r\n                  flexDirection: \"row\",\r\n                  width: screenWidth * 0.96,\r\n                },\r\n              ]}\r\n            >\r\n              <MagnifyingGlass style={headerstyles.magnifyingglass} />\r\n              <ModeOfEmployment />\r\n              <TouchableOpacity\r\n                style={{ justifyContent: \"center\" }}\r\n                onPress={onHamburgerPres}\r\n              >\r\n                {animationStateForTouchHamburger == 1 ? (\r\n                  <HamburgerSVG />\r\n                ) : (\r\n                  <BackButtonForHeaderChatListSVG />\r\n                )}\r\n              </TouchableOpacity>\r\n            </Animated.View>\r\n          </Animated.View>\r\n          <Animated.View\r\n            style={[\r\n              { transform: [{ translateX: HamburgerAnimationPosition }] },\r\n            ]}\r\n          >\r\n            <RightContainer navigation={navigation} />\r\n          </Animated.View>\r\n        </Animated.View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\nexport default connect(null)(Header);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}