{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleButtonList from \"./StyleButtonLIst\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ButtonList = function ButtonList(_ref) {\n  var navigation = _ref.navigation;\n  var items = [\"Saved message\", \"Look\", \"Notification\", \"Chat folders\", \"Confidentiality\", \"Language\"];\n  return _jsxs(View, {\n    children: [items.map(function (item, index) {\n      return _jsx(View, {\n        children: _jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate(item);\n          },\n          children: [_jsx(View, {\n            style: StyleButtonList.button\n          }), _jsx(View, {\n            style: {\n              position: 'absolute',\n              alignItems: 'center',\n              justifyContent: 'center',\n              width: '100%',\n              height: '100%'\n            },\n            children: _jsx(Text, {\n              style: StyleButtonList.buttonTextStyle,\n              children: item\n            })\n          })]\n        })\n      }, index);\n    }), _jsx(Text, {\n      style: StyleButtonList.styleButListText,\n      children: \"FAQ\"\n    }), _jsxs(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Question page');\n      },\n      children: [_jsx(View, {\n        style: StyleButtonList.button\n      }), _jsx(Text, {\n        style: StyleButtonList.buttonTextStyle,\n        children: \"Question in Telintik\"\n      })]\n    }), _jsxs(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Ask a question');\n      },\n      children: [_jsx(View, {\n        style: StyleButtonList.button\n      }), _jsx(Text, {\n        style: StyleButtonList.buttonTextStyle,\n        children: \"Ask a Question\"\n      })]\n    })]\n  });\n};\nexport default ButtonList;","map":{"version":3,"names":["React","View","TouchableOpacity","Text","StyleButtonList","jsx","_jsx","jsxs","_jsxs","ButtonList","_ref","navigation","items","children","map","item","index","onPress","navigate","style","button","position","alignItems","justifyContent","width","height","buttonTextStyle","styleButListText"],"sources":["D:/project/1project/Messenger/Messenger/Pages/Settings/MainSettingPage/settingsPage/Center/ButtonLIst/Buttonlist.tsx"],"sourcesContent":["import React from 'react';\r\nimport { View, TouchableOpacity, Text } from 'react-native';\r\nimport StyleButtonList from './StyleButtonLIst';\r\nimport StyleCentre from '../StyleCenter';\r\n\r\n\r\n\r\nconst ButtonList: React.FC<any> = ({ navigation }) => {\r\n    let items: string[] =[\"Saved message\",\"Look\",\"Notification\",\"Chat folders\",\"Confidentiality\",\"Language\",];\r\n    return <View>\r\n    {items.map((item, index) => (\r\n      <View key={index} >\r\n        <TouchableOpacity onPress={() => navigation.navigate(item)}>\r\n          <View style={StyleButtonList.button}></View>\r\n          <View style={{position: 'absolute', alignItems: 'center', justifyContent: 'center' ,width: '100%', height: '100%' }}><Text style={StyleButtonList.buttonTextStyle}>{item}</Text></View>\r\n        </TouchableOpacity>\r\n      </View>\r\n    ))}\r\n     <Text style= {StyleButtonList.styleButListText}>FAQ</Text>\r\n                                <TouchableOpacity onPress={() => navigation.navigate('Question page')}>\r\n                                        <View style={StyleButtonList.button}></View>\r\n                                        <Text style = {StyleButtonList.buttonTextStyle}>Question in Telintik</Text>\r\n                                </TouchableOpacity>\r\n                                    <TouchableOpacity  onPress={() => navigation.navigate('Ask a question')}>\r\n                                      <View style={StyleButtonList.button}></View>\r\n                                      <Text style = {StyleButtonList.buttonTextStyle}>Ask a Question</Text>\r\n                                    </TouchableOpacity>\r\n    </View>\r\n}\r\n\r\n\r\nexport default ButtonList;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAE1B,OAAOC,eAAe;AAA0B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAKhD,IAAMC,UAAyB,GAAG,SAA5BA,UAAyBA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC3C,IAAIC,KAAe,GAAE,CAAC,eAAe,EAAC,MAAM,EAAC,cAAc,EAAC,cAAc,EAAC,iBAAiB,EAAC,UAAU,CAAE;EACzG,OAAOJ,KAAA,CAACP,IAAI;IAAAY,QAAA,GACXD,KAAK,CAACE,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK;MAAA,OACrBV,IAAA,CAACL,IAAI;QAAAY,QAAA,EACHL,KAAA,CAACN,gBAAgB;UAACe,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMN,UAAU,CAACO,QAAQ,CAACH,IAAI,CAAC;UAAA,CAAC;UAAAF,QAAA,GACzDP,IAAA,CAACL,IAAI;YAACkB,KAAK,EAAEf,eAAe,CAACgB;UAAO,CAAO,CAAC,EAC5Cd,IAAA,CAACL,IAAI;YAACkB,KAAK,EAAE;cAACE,QAAQ,EAAE,UAAU;cAAEC,UAAU,EAAE,QAAQ;cAAEC,cAAc,EAAE,QAAQ;cAAEC,KAAK,EAAE,MAAM;cAAEC,MAAM,EAAE;YAAO,CAAE;YAAAZ,QAAA,EAACP,IAAA,CAACH,IAAI;cAACgB,KAAK,EAAEf,eAAe,CAACsB,eAAgB;cAAAb,QAAA,EAAEE;YAAI,CAAO;UAAC,CAAM,CAAC;QAAA,CACvK;MAAC,GAJVC,KAKL,CAAC;IAAA,CACR,CAAC,EACDV,IAAA,CAACH,IAAI;MAACgB,KAAK,EAAGf,eAAe,CAACuB,gBAAiB;MAAAd,QAAA,EAAC;IAAG,CAAM,CAAC,EAC/BL,KAAA,CAACN,gBAAgB;MAACe,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMN,UAAU,CAACO,QAAQ,CAAC,eAAe,CAAC;MAAA,CAAC;MAAAL,QAAA,GAC9DP,IAAA,CAACL,IAAI;QAACkB,KAAK,EAAEf,eAAe,CAACgB;MAAO,CAAO,CAAC,EAC5Cd,IAAA,CAACH,IAAI;QAACgB,KAAK,EAAIf,eAAe,CAACsB,eAAgB;QAAAb,QAAA,EAAC;MAAoB,CAAM,CAAC;IAAA,CACjE,CAAC,EACfL,KAAA,CAACN,gBAAgB;MAAEe,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMN,UAAU,CAACO,QAAQ,CAAC,gBAAgB,CAAC;MAAA,CAAC;MAAAL,QAAA,GACtEP,IAAA,CAACL,IAAI;QAACkB,KAAK,EAAEf,eAAe,CAACgB;MAAO,CAAO,CAAC,EAC5Cd,IAAA,CAACH,IAAI;QAACgB,KAAK,EAAIf,eAAe,CAACsB,eAAgB;QAAAb,QAAA,EAAC;MAAc,CAAM,CAAC;IAAA,CACrD,CAAC;EAAA,CAC7C,CAAC;AACX,CAAC;AAGD,eAAeJ,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}