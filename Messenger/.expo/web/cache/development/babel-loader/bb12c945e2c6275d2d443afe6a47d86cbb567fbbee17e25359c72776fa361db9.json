{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { styles } from \"./ProfileGroupStyles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var GroupNameInput = function GroupNameInput(props) {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    GroupName = _useState2[0],\n    setGroupName = _useState2[1];\n  useEffect(function () {\n    setGroupHeadName(GroupName);\n  }, [GroupName, setGroupHeadNameExample]);\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      style: {\n        top: \"40%\",\n        left: \"5%\",\n        fontSize: 20\n      },\n      children: \"Group name\"\n    }), _jsx(TextInput, {\n      style: styles.GroupName,\n      onChangeText: function onChangeText(text) {\n        setGroupName(text);\n      },\n      value: GroupName\n    })]\n  });\n};","map":{"version":3,"names":["React","useState","useEffect","Text","View","TextInput","styles","jsx","_jsx","jsxs","_jsxs","GroupNameInput","props","_useState","_useState2","_slicedToArray","GroupName","setGroupName","setGroupHeadName","setGroupHeadNameExample","children","style","top","left","fontSize","onChangeText","text","value"],"sources":["/home/zatibmag/Desktop/Project/Messenger/Messenger/Pages/Profiles/GroupProfile/EditGroup/GroupNameInput.tsx"],"sourcesContent":["// GroupNameInput.tsx\nimport React, { useState, useEffect } from \"react\";\nimport { Text, View, TextInput } from \"react-native\";\nimport { styles } from \"./ProfileGroupStyles\";\n\ninterface GroupNameInputProps {\n  (setGroupHeadName: (value: string) => void);\n}\n\nexport const GroupNameInput: React.FC<GroupNameInputProps> = (props) => {\n  const [GroupName, setGroupName] = useState(\"\");\n\n  useEffect(() => {\n    setGroupHeadName(GroupName);\n  }, [GroupName, setGroupHeadNameExample]);\n\n  return (\n    <View>\n      <Text style={{ top: \"40%\", left: \"5%\", fontSize: 20 }}>Group name</Text>\n      <TextInput\n        style={styles.GroupName}\n        onChangeText={(text) => {\n          setGroupName(text);\n        }}\n        value={GroupName}\n      />\n    </View>\n  );\n};\n"],"mappings":";AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAEnD,SAASC,MAAM;AAA+B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAM9C,OAAO,IAAMC,cAA6C,GAAG,SAAhDA,cAA6CA,CAAIC,KAAK,EAAK;EACtE,IAAAC,SAAA,GAAkCZ,QAAQ,CAAC,EAAE,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAE9BZ,SAAS,CAAC,YAAM;IACdgB,gBAAgB,CAACF,SAAS,CAAC;EAC7B,CAAC,EAAE,CAACA,SAAS,EAAEG,uBAAuB,CAAC,CAAC;EAExC,OACET,KAAA,CAACN,IAAI;IAAAgB,QAAA,GACHZ,IAAA,CAACL,IAAI;MAACkB,KAAK,EAAE;QAAEC,GAAG,EAAE,KAAK;QAAEC,IAAI,EAAE,IAAI;QAAEC,QAAQ,EAAE;MAAG,CAAE;MAAAJ,QAAA,EAAC;IAAU,CAAM,CAAC,EACxEZ,IAAA,CAACH,SAAS;MACRgB,KAAK,EAAEf,MAAM,CAACU,SAAU;MACxBS,YAAY,EAAE,SAAAA,aAACC,IAAI,EAAK;QACtBT,YAAY,CAACS,IAAI,CAAC;MACpB,CAAE;MACFC,KAAK,EAAEX;IAAU,CAClB,CAAC;EAAA,CACE,CAAC;AAEX,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}