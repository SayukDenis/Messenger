{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { styles } from \"./ProfileGroupStyles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var GroupNameInput = function GroupNameInput(_ref) {\n  var setGroupHeadNameExample = _ref.setGroupHeadNameExample;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    GroupName = _useState2[0],\n    setGroupName = _useState2[1];\n  useEffect(function () {\n    setGroupHeadNameExample(GroupName);\n  }, [GroupName, setGroupHeadNameExample]);\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      style: {\n        top: \"40%\",\n        left: \"5%\",\n        fontSize: 20\n      },\n      children: \"Group name\"\n    }), _jsx(TextInput, {\n      style: styles.GroupName,\n      onChangeText: function onChangeText(text) {\n        setGroupName(text);\n      },\n      value: GroupName\n    })]\n  });\n};","map":{"version":3,"names":["React","useState","useEffect","Text","View","TextInput","styles","jsx","_jsx","jsxs","_jsxs","GroupNameInput","_ref","setGroupHeadNameExample","_useState","_useState2","_slicedToArray","GroupName","setGroupName","children","style","top","left","fontSize","onChangeText","text","value"],"sources":["/home/zatibmag/Desktop/Project/Messenger/Messenger/Pages/Profiles/GroupProfile/EditGroup/GroupNameInput.tsx"],"sourcesContent":["// GroupNameInput.tsx\nimport React, { useState, useEffect } from \"react\";\nimport { Text, View, TextInput } from \"react-native\";\nimport { styles } from \"./ProfileGroupStyles\";\n\nexport const GroupNameInput = ({\n  setGroupHeadNameExample,\n}: {\n  setGroupHeadNameExample: React.Dispatch<React.SetStateAction<string>>;\n}) => {\n  const [GroupName, setGroupName] = useState(\"\");\n\n  useEffect(() => {\n    setGroupHeadNameExample(GroupName);\n  }, [GroupName, setGroupHeadNameExample]);\n\n  return (\n    <View>\n      <Text style={{ top: \"40%\", left: \"5%\", fontSize: 20 }}>Group name</Text>\n      <TextInput\n        style={styles.GroupName}\n        onChangeText={(text) => {\n          setGroupName(text);\n        }}\n        value={GroupName}\n      />\n    </View>\n  );\n};\n"],"mappings":";AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAEnD,SAASC,MAAM;AAA+B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE9C,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAAC,IAAA,EAIrB;EAAA,IAHJC,uBAAuB,GAAAD,IAAA,CAAvBC,uBAAuB;EAIvB,IAAAC,SAAA,GAAkCb,QAAQ,CAAC,EAAE,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAE9Bb,SAAS,CAAC,YAAM;IACdW,uBAAuB,CAACI,SAAS,CAAC;EACpC,CAAC,EAAE,CAACA,SAAS,EAAEJ,uBAAuB,CAAC,CAAC;EAExC,OACEH,KAAA,CAACN,IAAI;IAAAe,QAAA,GACHX,IAAA,CAACL,IAAI;MAACiB,KAAK,EAAE;QAAEC,GAAG,EAAE,KAAK;QAAEC,IAAI,EAAE,IAAI;QAAEC,QAAQ,EAAE;MAAG,CAAE;MAAAJ,QAAA,EAAC;IAAU,CAAM,CAAC,EACxEX,IAAA,CAACH,SAAS;MACRe,KAAK,EAAEd,MAAM,CAACW,SAAU;MACxBO,YAAY,EAAE,SAAAA,aAACC,IAAI,EAAK;QACtBP,YAAY,CAACO,IAAI,CAAC;MACpB,CAAE;MACFC,KAAK,EAAET;IAAU,CAClB,CAAC;EAAA,CACE,CAAC;AAEX,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}