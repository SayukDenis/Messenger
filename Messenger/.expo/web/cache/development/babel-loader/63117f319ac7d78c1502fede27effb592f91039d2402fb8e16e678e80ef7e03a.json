{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { connect } from \"react-redux\";\nimport UnViewedMessage from \"../../SVG/UnViewedMessage\";\nimport ViewedMessageIcon from \"../../SVG/ViewedMessageIcon\";\nimport { listOfChatsStyle } from \"../../../Styles/ListOfChatsStyle\";\nimport { CountOfMessages } from \"../Functions/CountOfMessages\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar LastMessageStatus = function LastMessageStatus(_ref) {\n  var chat = _ref.chat,\n    selfProfile = _ref.selfProfile;\n  var id = 0;\n  var content;\n  var dialogue = chat;\n  var lastMessage = chat.messages[chat.messages.length - 1];\n  if (lastMessage.author.userId === selfProfile.userId) {\n    if (id && lastMessage.author.userId < id) {\n      content = _jsx(View, {\n        style: listOfChatsStyle.checkMarkercontainerStyle,\n        children: _jsx(UnViewedMessage, {})\n      });\n    } else if (true) {\n      content = _jsx(View, {\n        style: listOfChatsStyle.checkMarkercontainerStyle,\n        children: _jsx(ViewedMessageIcon, {\n          stylePosition: listOfChatsStyle.positionOfFirstCheckMarkStyle\n        })\n      });\n    }\n  } else if (id) {\n    var countOfMessage = chat.messages.length - id;\n    if (countOfMessage === 0) return null;\n    content = CountOfMessages(countOfMessage);\n  }\n  return content;\n};\nexport default connect(null)(LastMessageStatus);","map":{"version":3,"names":["React","View","connect","UnViewedMessage","ViewedMessageIcon","listOfChatsStyle","CountOfMessages","jsx","_jsx","LastMessageStatus","_ref","chat","selfProfile","id","content","dialogue","lastMessage","messages","length","author","userId","style","checkMarkercontainerStyle","children","stylePosition","positionOfFirstCheckMarkStyle","countOfMessage"],"sources":["C:/Users/Admin/Project/Messenger/Messenger/Pages/ChatList/Components/List of folders containers/CompontentsForChatListContainer/LastMessageStatusContent.tsx"],"sourcesContent":["// LastMessageStatus.tsx\r\nimport React, { ReactNode } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { connect } from \"react-redux\";\r\nimport UnViewedMessage from \"../../SVG/UnViewedMessage\";\r\nimport ViewedMessageIcon from \"../../SVG/ViewedMessageIcon\";\r\n\r\n\r\nimport { listOfChatsStyle } from \"../../../Styles/ListOfChatsStyle\";\r\nimport Chat from \"../../../../../dao/Models/Chats/Chat\";\r\nimport Dialogue from \"../../../../../dao/Models/Chats/Dialogue\";\r\nimport SelfProfile from \"../../../../../dao/Models/SelfProfile\";\r\nimport { CountOfMessages } from \"../Functions/CountOfMessages\";\r\n\r\ninterface LastMessageStatusProps {\r\n  chat: Chat;\r\n  selfProfile:SelfProfile;\r\n}\r\n\r\nconst LastMessageStatus: React.FC<LastMessageStatusProps> = ({ chat,selfProfile }) => {\r\n  const id: number | undefined = 0;\r\n  let content: ReactNode;\r\n\r\n  let dialogue: Dialogue = chat as Dialogue;\r\n  const lastMessage = chat.messages[chat.messages.length - 1];\r\n\r\n  if (lastMessage.author.userId === selfProfile.userId) {\r\n    if (id && lastMessage.author.userId < id) {\r\n      content = (\r\n        <View style={listOfChatsStyle.checkMarkercontainerStyle}>\r\n          <UnViewedMessage />\r\n        </View>\r\n      );\r\n    } else if (true) {\r\n      content = (\r\n        <View style={listOfChatsStyle.checkMarkercontainerStyle}>\r\n          <ViewedMessageIcon\r\n            stylePosition={listOfChatsStyle.positionOfFirstCheckMarkStyle}\r\n          />\r\n        </View>\r\n      );\r\n    }\r\n  } else if (id) {\r\n    const countOfMessage: number = chat.messages.length - id;\r\n    if (countOfMessage === 0) return null;\r\n    content = CountOfMessages(countOfMessage);\r\n  }\r\n\r\n  return content;\r\n};\r\n\r\nexport default connect(null)(LastMessageStatus);\r\n"],"mappings":"AACA,OAAOA,KAAK,MAAqB,OAAO;AAAC,OAAAC,IAAA;AAEzC,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,eAAe;AACtB,OAAOC,iBAAiB;AAGxB,SAASC,gBAAgB;AAIzB,SAASC,eAAe;AAAuC,SAAAC,GAAA,IAAAC,IAAA;AAO/D,IAAMC,iBAAmD,GAAG,SAAtDA,iBAAmDA,CAAAC,IAAA,EAA6B;EAAA,IAAvBC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IAACC,WAAW,GAAAF,IAAA,CAAXE,WAAW;EAC7E,IAAMC,EAAsB,GAAG,CAAC;EAChC,IAAIC,OAAkB;EAEtB,IAAIC,QAAkB,GAAGJ,IAAgB;EACzC,IAAMK,WAAW,GAAGL,IAAI,CAACM,QAAQ,CAACN,IAAI,CAACM,QAAQ,CAACC,MAAM,GAAG,CAAC,CAAC;EAE3D,IAAIF,WAAW,CAACG,MAAM,CAACC,MAAM,KAAKR,WAAW,CAACQ,MAAM,EAAE;IACpD,IAAIP,EAAE,IAAIG,WAAW,CAACG,MAAM,CAACC,MAAM,GAAGP,EAAE,EAAE;MACxCC,OAAO,GACLN,IAAA,CAACP,IAAI;QAACoB,KAAK,EAAEhB,gBAAgB,CAACiB,yBAA0B;QAAAC,QAAA,EACtDf,IAAA,CAACL,eAAe,IAAE;MAAC,CACf,CACP;IACH,CAAC,MAAM,IAAI,IAAI,EAAE;MACfW,OAAO,GACLN,IAAA,CAACP,IAAI;QAACoB,KAAK,EAAEhB,gBAAgB,CAACiB,yBAA0B;QAAAC,QAAA,EACtDf,IAAA,CAACJ,iBAAiB;UAChBoB,aAAa,EAAEnB,gBAAgB,CAACoB;QAA8B,CAC/D;MAAC,CACE,CACP;IACH;EACF,CAAC,MAAM,IAAIZ,EAAE,EAAE;IACb,IAAMa,cAAsB,GAAGf,IAAI,CAACM,QAAQ,CAACC,MAAM,GAAGL,EAAE;IACxD,IAAIa,cAAc,KAAK,CAAC,EAAE,OAAO,IAAI;IACrCZ,OAAO,GAAGR,eAAe,CAACoB,cAAc,CAAC;EAC3C;EAEA,OAAOZ,OAAO;AAChB,CAAC;AAED,eAAeZ,OAAO,CAAC,IAAI,CAAC,CAACO,iBAAiB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}