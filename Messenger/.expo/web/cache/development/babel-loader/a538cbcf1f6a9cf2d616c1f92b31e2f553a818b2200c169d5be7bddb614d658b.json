{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { memo } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar messageMenu = memo(function (_ref) {\n  var isVisible = _ref.isVisible,\n    onOverlayPress = _ref.onOverlayPress,\n    coord = _ref.coord,\n    onReplyPress = _ref.onReplyPress,\n    onEditPress = _ref.onEditPress,\n    isUser = _ref.isUser,\n    onDeletePress = _ref.onDeletePress;\n  if (!isVisible) return null;\n  var buttons = [{\n    text: 'Reply',\n    action: onReplyPress\n  }, {\n    text: 'Edit',\n    action: onEditPress\n  }, {\n    text: 'Copy',\n    action: function action() {}\n  }, {\n    text: 'Pin',\n    action: function action() {}\n  }, {\n    text: 'Forward',\n    action: function action() {}\n  }, {\n    text: 'Delete',\n    color: 'darkred',\n    action: onDeletePress\n  }, {\n    text: 'Select',\n    action: function action() {}\n  }];\n  return _jsx(TouchableOpacity, {\n    activeOpacity: 1,\n    style: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n      backgroundColor: 'rgba(0,0,0,0.15)',\n      flex: 1,\n      zIndex: 2\n    }),\n    onPress: onOverlayPress,\n    children: _jsx(View, {\n      style: {\n        position: 'absolute',\n        top: coord ? coord.y : 0,\n        left: coord ? coord.x : 0\n      },\n      children: buttons.map(function (button, index) {\n        return button.text == 'Edit' && !isUser ? null : _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            button.action();\n            onOverlayPress();\n          },\n          activeOpacity: 1,\n          style: {\n            backgroundColor: 'rgb(231,230,228)',\n            paddingHorizontal: 10,\n            paddingVertical: 5,\n            borderRadius: 15,\n            borderWidth: 0.2,\n            borderColor: 'rgb(83,83,83)',\n            width: width * 0.2\n          },\n          children: _jsx(Text, {\n            style: {\n              color: button.color\n            },\n            children: button.text\n          })\n        }, index);\n      })\n    })\n  });\n});\nexport default messageMenu;","map":{"version":3,"names":["memo","TouchableOpacity","View","StyleSheet","Text","Dimensions","React","jsx","_jsx","_Dimensions$get","get","width","height","messageMenu","_ref","isVisible","onOverlayPress","coord","onReplyPress","onEditPress","isUser","onDeletePress","buttons","text","action","color","activeOpacity","style","_objectSpread","absoluteFillObject","backgroundColor","flex","zIndex","onPress","children","position","top","y","left","x","map","button","index","paddingHorizontal","paddingVertical","borderRadius","borderWidth","borderColor"],"sources":["/home/zatibmag/Desktop/Project/Messenger/Messenger/Pages/Chats/Dialogue/MessageMenu.tsx"],"sourcesContent":["import { Dispatch, SetStateAction, memo } from \"react\";\nimport { TouchableOpacity, View, StyleSheet, Text, Dimensions } from \"react-native\";\nimport React from 'react';\n\nconst {width, height} = Dimensions.get('window');\n\ninterface messageMenuProps {\n  isVisible:boolean;\n  onOverlayPress:()=>void;\n  coord:{x:number;y:number};\n  onReplyPress:()=>void;\n  onEditPress:()=>void;\n  isUser:boolean;\n  onDeletePress:()=>void;\n}\n\nconst messageMenu = memo(({isVisible, onOverlayPress, coord, onReplyPress, onEditPress, isUser, onDeletePress}:messageMenuProps) => {\n  if(!isVisible) \n      return null;\n    \n  const buttons = [\n    {\n      text: 'Reply',\n      action: onReplyPress,\n    },\n    {\n      text: 'Edit',\n      action: onEditPress,\n    },\n    {\n      text: 'Copy',\n      action: () => {},\n    },\n    {\n      text: 'Pin',\n      action: () => {},\n    },\n    {\n      text: 'Forward',\n      action: () => {},\n    },\n    {\n      text: 'Delete',\n      color: 'darkred',\n      action: onDeletePress,\n    },\n    {\n      text: 'Select',\n      action: () => {},\n    },\n  ]\n\n  return (\n    <TouchableOpacity activeOpacity={1} style={{...StyleSheet.absoluteFillObject, backgroundColor:'rgba(0,0,0,0.15)', flex:1, zIndex:2,}} onPress={onOverlayPress}>\n      <View style={{position:'absolute', top:(coord?coord.y:0), left:(coord?coord.x:0)}}>\n        {buttons.map((button, index) => \n         button.text=='Edit'&&!isUser? null: \n          <TouchableOpacity key={index} onPress={() => {button.action(); onOverlayPress()}} activeOpacity={1} style={{backgroundColor:'rgb(231,230,228)', paddingHorizontal:10, paddingVertical:5, borderRadius:15, borderWidth:0.2, borderColor:'rgb(83,83,83)', width:width*0.2}}>\n            <Text style={{color:button.color}}>{button.text}</Text>\n          </TouchableOpacity>\n        )}\n      </View>\n    </TouchableOpacity>\n  );\n})\n\nexport default messageMenu;"],"mappings":";;;AAAA,SAAmCA,IAAI,QAAQ,OAAO;AAAC,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAEvD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAE1B,IAAAC,eAAA,GAAwBJ,UAAU,CAACK,GAAG,CAAC,QAAQ,CAAC;EAAzCC,KAAK,GAAAF,eAAA,CAALE,KAAK;EAAEC,MAAM,GAAAH,eAAA,CAANG,MAAM;AAYpB,IAAMC,WAAW,GAAGb,IAAI,CAAC,UAAAc,IAAA,EAA2G;EAAA,IAAzGC,SAAS,GAAAD,IAAA,CAATC,SAAS;IAAEC,cAAc,GAAAF,IAAA,CAAdE,cAAc;IAAEC,KAAK,GAAAH,IAAA,CAALG,KAAK;IAAEC,YAAY,GAAAJ,IAAA,CAAZI,YAAY;IAAEC,WAAW,GAAAL,IAAA,CAAXK,WAAW;IAAEC,MAAM,GAAAN,IAAA,CAANM,MAAM;IAAEC,aAAa,GAAAP,IAAA,CAAbO,aAAa;EAC3G,IAAG,CAACN,SAAS,EACT,OAAO,IAAI;EAEf,IAAMO,OAAO,GAAG,CACd;IACEC,IAAI,EAAE,OAAO;IACbC,MAAM,EAAEN;EACV,CAAC,EACD;IACEK,IAAI,EAAE,MAAM;IACZC,MAAM,EAAEL;EACV,CAAC,EACD;IACEI,IAAI,EAAE,MAAM;IACZC,MAAM,EAAE,SAAAA,OAAA,EAAM,CAAC;EACjB,CAAC,EACD;IACED,IAAI,EAAE,KAAK;IACXC,MAAM,EAAE,SAAAA,OAAA,EAAM,CAAC;EACjB,CAAC,EACD;IACED,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE,SAAAA,OAAA,EAAM,CAAC;EACjB,CAAC,EACD;IACED,IAAI,EAAE,QAAQ;IACdE,KAAK,EAAE,SAAS;IAChBD,MAAM,EAAEH;EACV,CAAC,EACD;IACEE,IAAI,EAAE,QAAQ;IACdC,MAAM,EAAE,SAAAA,OAAA,EAAM,CAAC;EACjB,CAAC,CACF;EAED,OACEhB,IAAA,CAACP,gBAAgB;IAACyB,aAAa,EAAE,CAAE;IAACC,KAAK,EAAAC,aAAA,CAAAA,aAAA,KAAMzB,UAAU,CAAC0B,kBAAkB;MAAEC,eAAe,EAAC,kBAAkB;MAAEC,IAAI,EAAC,CAAC;MAAEC,MAAM,EAAC;IAAC,EAAG;IAACC,OAAO,EAAEjB,cAAe;IAAAkB,QAAA,EAC5J1B,IAAA,CAACN,IAAI;MAACyB,KAAK,EAAE;QAACQ,QAAQ,EAAC,UAAU;QAAEC,GAAG,EAAEnB,KAAK,GAACA,KAAK,CAACoB,CAAC,GAAC,CAAE;QAAEC,IAAI,EAAErB,KAAK,GAACA,KAAK,CAACsB,CAAC,GAAC;MAAE,CAAE;MAAAL,QAAA,EAC/EZ,OAAO,CAACkB,GAAG,CAAC,UAACC,MAAM,EAAEC,KAAK;QAAA,OAC1BD,MAAM,CAAClB,IAAI,IAAE,MAAM,IAAE,CAACH,MAAM,GAAE,IAAI,GACjCZ,IAAA,CAACP,gBAAgB;UAAagC,OAAO,EAAE,SAAAA,QAAA,EAAM;YAACQ,MAAM,CAACjB,MAAM,CAAC,CAAC;YAAER,cAAc,CAAC,CAAC;UAAA,CAAE;UAACU,aAAa,EAAE,CAAE;UAACC,KAAK,EAAE;YAACG,eAAe,EAAC,kBAAkB;YAAEa,iBAAiB,EAAC,EAAE;YAAEC,eAAe,EAAC,CAAC;YAAEC,YAAY,EAAC,EAAE;YAAEC,WAAW,EAAC,GAAG;YAAEC,WAAW,EAAC,eAAe;YAAEpC,KAAK,EAACA,KAAK,GAAC;UAAG,CAAE;UAAAuB,QAAA,EACvQ1B,IAAA,CAACJ,IAAI;YAACuB,KAAK,EAAE;cAACF,KAAK,EAACgB,MAAM,CAAChB;YAAK,CAAE;YAAAS,QAAA,EAAEO,MAAM,CAAClB;UAAI,CAAO;QAAC,GADlCmB,KAEL,CAAC;MAAA,CACrB;IAAC,CACG;EAAC,CACS,CAAC;AAEvB,CAAC,CAAC;AAEF,eAAe7B,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}