{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { dataSource } from \"../../local/database\";\nimport Branch from \"../../Models/Chats/Branch\";\nvar manager = dataSource.manager;\nexport function branchTreeOperations() {\n  return _branchTreeOperations.apply(this, arguments);\n}\nfunction _branchTreeOperations() {\n  _branchTreeOperations = _asyncToGenerator(function* () {\n    console.log('\\n\\tBranches Tree start\\n');\n    if (!dataSource.isInitialized) yield dataSource.initialize();\n    var branch1 = new Branch('branch1');\n    yield manager.save(branch1);\n    console.log('Branch1 has been saved');\n    var branch2 = new Branch('branch2');\n    yield manager.save(branch2);\n    console.log('Branch2 has been saved');\n    var branch3 = new Branch('branch3');\n    yield manager.save(branch3);\n    console.log('Branch3 has been saved');\n    var internalBranch1 = new Branch('internalBranch1');\n    internalBranch1.parent = branch1;\n    yield manager.save(internalBranch1);\n    var internalBranch2 = new Branch('internalBranch2');\n    internalBranch2.parent = branch1;\n    yield manager.save(internalBranch2);\n    var internalBranch3 = new Branch('internalBranch3');\n    internalBranch3.parent = branch2;\n    yield manager.save(internalBranch3);\n    var internalBranch4 = new Branch('internalBranch4');\n    internalBranch4.parent = branch2;\n    yield manager.save(internalBranch4);\n    var internalBranch5 = new Branch('internalBranch5');\n    internalBranch5.parent = branch3;\n    yield manager.save(internalBranch5);\n    var internalBranch6 = new Branch('internalBranch6');\n    internalBranch6.parent = branch3;\n    yield manager.save(internalBranch6);\n    console.log('Children of branches have been saved');\n    var internalInternalBranch1 = new Branch('internalInternalBranch1');\n    internalInternalBranch1.parent = internalBranch5;\n    var internalInternalBranch2 = new Branch('internalInternalBranch2');\n    internalInternalBranch2.parent = internalBranch5;\n    yield manager.save([internalInternalBranch1, internalInternalBranch2]);\n    console.log('Children of children of branches have been saved');\n    yield readTree(3);\n    yield manager.remove([internalBranch5, internalBranch6]);\n    console.log('Children have been removed');\n    yield readTree(2);\n    yield manager.remove([branch1, branch2, branch3]);\n    console.log('Branches have been removed');\n    yield readTree();\n  });\n  return _branchTreeOperations.apply(this, arguments);\n}\nexport function readTree(_x) {\n  return _readTree.apply(this, arguments);\n}\nfunction _readTree() {\n  _readTree = _asyncToGenerator(function* (depth) {\n    var savedTree = yield manager.getTreeRepository(Branch).findTrees({\n      depth: depth\n    });\n    console.log(`Branches quantity: ${savedTree.length}`);\n    for (var branch of savedTree) {\n      console.log(branch);\n      if (branch.branches.length > 0) {\n        console.log('Internal branches: ');\n        console.log(branch.branches);\n      }\n    }\n  });\n  return _readTree.apply(this, arguments);\n}","map":{"version":3,"names":["dataSource","Branch","manager","branchTreeOperations","_branchTreeOperations","apply","arguments","_asyncToGenerator","console","log","isInitialized","initialize","branch1","save","branch2","branch3","internalBranch1","parent","internalBranch2","internalBranch3","internalBranch4","internalBranch5","internalBranch6","internalInternalBranch1","internalInternalBranch2","readTree","remove","_x","_readTree","depth","savedTree","getTreeRepository","findTrees","length","branch","branches"],"sources":["C:/Users/T480/source/repos/Messenger/Messenger/dao/test/manualTest/branchTreeOperations.ts"],"sourcesContent":["import { dataSource } from \"../../local/database\";\r\nimport Branch from \"../../Models/Chats/Branch\";\r\n\r\nconst manager = dataSource.manager;\r\n\r\nexport async function branchTreeOperations() {\r\n\r\n    console.log('\\n\\tBranches Tree start\\n');\r\n\r\n    if (!dataSource.isInitialized) await dataSource.initialize();\r\n\r\n    //Save\r\n    const branch1 = new Branch('branch1');\r\n    await manager.save(branch1);\r\n    console.log('Branch1 has been saved')\r\n\r\n    const branch2 = new Branch('branch2');\r\n    await manager.save(branch2);\r\n    console.log('Branch2 has been saved')\r\n\r\n    const branch3 = new Branch('branch3');\r\n    await manager.save(branch3);\r\n    console.log('Branch3 has been saved')\r\n\r\n    //Save children\r\n    const internalBranch1 = new Branch('internalBranch1');\r\n    internalBranch1.parent = branch1;\r\n    await manager.save(internalBranch1);\r\n\r\n    const internalBranch2 = new Branch('internalBranch2');\r\n    internalBranch2.parent = branch1;\r\n    await manager.save(internalBranch2);\r\n\r\n    const internalBranch3 = new Branch('internalBranch3');\r\n    internalBranch3.parent = branch2;\r\n    await manager.save(internalBranch3);\r\n\r\n    const internalBranch4 = new Branch('internalBranch4');\r\n    internalBranch4.parent = branch2;\r\n    await manager.save(internalBranch4);\r\n\r\n    const internalBranch5 = new Branch('internalBranch5');\r\n    internalBranch5.parent = branch3;\r\n    await manager.save(internalBranch5);\r\n\r\n    const internalBranch6 = new Branch('internalBranch6');\r\n    internalBranch6.parent = branch3;\r\n    await manager.save(internalBranch6);\r\n\r\n    console.log('Children of branches have been saved')\r\n\r\n    //Save children of children    \r\n    const internalInternalBranch1 = new Branch('internalInternalBranch1');\r\n    internalInternalBranch1.parent = internalBranch5;\r\n\r\n    const internalInternalBranch2 = new Branch('internalInternalBranch2');\r\n    internalInternalBranch2.parent = internalBranch5;\r\n\r\n    await manager.save([internalInternalBranch1, internalInternalBranch2])\r\n    console.log('Children of children of branches have been saved')\r\n\r\n    //Read\r\n    await readTree(3);\r\n\r\n    //Remove children\r\n    await manager.remove([internalBranch5, internalBranch6])\r\n    console.log('Children have been removed')\r\n\r\n    //Read\r\n    await readTree(2);\r\n\r\n    await manager.remove([branch1, branch2, branch3]);\r\n    console.log('Branches have been removed')\r\n\r\n    //Read\r\n    await readTree();\r\n}\r\n\r\nexport async function readTree(depth?: number) {\r\n    const savedTree = await manager.getTreeRepository(Branch).findTrees({ depth: depth });\r\n    console.log(`Branches quantity: ${savedTree.length}`);\r\n    for (let branch of savedTree) {\r\n        console.log(branch)\r\n        if (branch.branches.length > 0) {\r\n            console.log('Internal branches: ')\r\n            console.log(branch.branches)\r\n        }\r\n    }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}