{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport Group from \"../../Models/Chats/Group\";\nimport { dataSource } from \"../../local/database\";\nimport { EMessageType } from \"../../Models/EMessageType\";\nimport Message from \"../../Models/Message\";\nimport User from \"../../Models/User\";\nimport { readChats } from \"./chatOperations\";\nimport { readMessages } from \"./messageOperations\";\nimport { readUsers } from \"./usersOperations\";\nimport { saveSelfProfile } from \"./selfProfileOperations\";\nvar manager = dataSource.manager;\nexport function groupOperations() {\n  return _groupOperations.apply(this, arguments);\n}\nfunction _groupOperations() {\n  _groupOperations = _asyncToGenerator(function* () {\n    console.log('\\n\\tGroups start\\n');\n    if (!dataSource.isInitialized) yield dataSource.initialize();\n    var selfProfile = yield saveSelfProfile();\n    var user1 = new User('User1', 'nickname1');\n    user1.numberPhone = '123-456-7890';\n    user1.description = 'This is User1';\n    user1.linkToPhoto = 'https://example.com/user1photo.jpg';\n    var user2 = new User('User2', 'nickname2');\n    user2.numberPhone = '987-654-3210';\n    user2.description = 'This is User2';\n    user2.linkToPhoto = undefined;\n    var user3 = new User('User3', 'nickname3');\n    user3.numberPhone = '555-9999';\n    user3.description = undefined;\n    user3.linkToPhoto = undefined;\n    yield manager.save([user1, user2, user3]);\n    console.log('Users have been saved');\n    var group1 = new Group('group1');\n    group1.linkToPhoto = 'someLink';\n    group1.lastWatchedMessage = [{\n      userId: user1.userId,\n      messageId: undefined\n    }];\n    group1.auditLog = [{\n      sendTime: new Date(),\n      message: 'log1'\n    }, {\n      sendTime: new Date(),\n      message: 'log2'\n    }];\n    group1.users = [selfProfile, user1, user2];\n    yield manager.save(group1);\n    console.log('Group1 has been saved');\n    var group2 = new Group('group2');\n    ;\n    group2.linkToPhoto = 'someLink';\n    group2.lastWatchedMessage = [{\n      userId: user2.userId,\n      messageId: undefined\n    }];\n    group2.auditLog = [{\n      sendTime: new Date(),\n      message: 'log1'\n    }];\n    group2.users = [selfProfile, user2, user3];\n    yield manager.save(group2);\n    console.log('Group2 has been saved');\n    var group3 = new Group('group3');\n    ;\n    group3.linkToPhoto = 'someLink';\n    group3.lastWatchedMessage = [{\n      userId: user3.userId,\n      messageId: undefined\n    }];\n    group3.auditLog = [];\n    group3.users = [selfProfile, user1, user2, user3];\n    yield manager.save(group3);\n    console.log('Group3 has been saved');\n    yield readChats();\n    var message1 = new Message(user1, 'content1', EMessageType.text);\n    message1.numberInChat = 1;\n    message1.chat = group1;\n    yield manager.insert(Message, message1);\n    var message2 = new Message(user1, 'content2', EMessageType.img);\n    message2.numberInChat = 2;\n    message2.chat = group1;\n    yield manager.insert(Message, message2);\n    var message3 = new Message(selfProfile, 'content3', EMessageType.text);\n    message3.numberInChat = 3;\n    message3.chat = group1;\n    yield manager.insert(Message, message3);\n    var message4 = new Message(user2, 'content4', EMessageType.text);\n    message4.numberInChat = 1;\n    message4.chat = group2;\n    yield manager.insert(Message, message4);\n    var message5 = new Message(selfProfile, 'content5', EMessageType.img);\n    message5.numberInChat = 2;\n    message5.chat = group2;\n    yield manager.insert(Message, message5);\n    var message6 = new Message(selfProfile, 'content6', EMessageType.text);\n    message6.numberInChat = 3;\n    message6.chat = group2;\n    yield manager.insert(Message, message6);\n    var message7 = new Message(selfProfile, 'content7', EMessageType.text);\n    message7.numberInChat = 1;\n    message7.chat = group3;\n    yield manager.insert(Message, message7);\n    var message8 = new Message(selfProfile, 'content8', EMessageType.img);\n    message8.numberInChat = 2;\n    message8.chat = group3;\n    yield manager.insert(Message, message8);\n    var message9 = new Message(selfProfile, 'content9', EMessageType.text);\n    message9.numberInChat = 3;\n    message9.chat = group3;\n    yield manager.insert(Message, message9);\n    console.log('Groups have been updated');\n    yield readChats();\n    yield readMessages();\n    yield manager.remove([group1, group2, group3]);\n    console.log('Groups have been deleted');\n    yield readGroups();\n    yield readChats();\n    yield readMessages();\n    yield readUsers();\n  });\n  return _groupOperations.apply(this, arguments);\n}\nexport function readGroups() {\n  return _readGroups.apply(this, arguments);\n}\nfunction _readGroups() {\n  _readGroups = _asyncToGenerator(function* () {\n    var savedGroups = yield manager.find(Group);\n    console.log(`Groups quantity: ${savedGroups.length}`);\n    for (var group of savedGroups) {\n      console.log(group);\n    }\n  });\n  return _readGroups.apply(this, arguments);\n}","map":{"version":3,"names":["Group","dataSource","EMessageType","Message","User","readChats","readMessages","readUsers","saveSelfProfile","manager","groupOperations","_groupOperations","apply","arguments","_asyncToGenerator","console","log","isInitialized","initialize","selfProfile","user1","numberPhone","description","linkToPhoto","user2","undefined","user3","save","group1","lastWatchedMessage","userId","messageId","auditLog","sendTime","Date","message","users","group2","group3","message1","text","numberInChat","chat","insert","message2","img","message3","message4","message5","message6","message7","message8","message9","remove","readGroups","_readGroups","savedGroups","find","length","group"],"sources":["C:/Users/T480/source/repos/Messenger/Messenger/dao/test/manualTest/groupOperations.ts"],"sourcesContent":["import Group from \"../../Models/Chats/Group\";\r\nimport { dataSource } from \"../../local/database\";\r\nimport Channel from \"../../Models/Chats/Channel\";\r\nimport { EMessageType } from \"../../Models/EMessageType\";\r\nimport Message from \"../../Models/Message\";\r\nimport User from \"../../Models/User\";\r\nimport { readChats } from \"./chatOperations\";\r\nimport { readMessages } from \"./messageOperations\";\r\nimport { readUsers } from \"./usersOperations\";\r\nimport { saveSelfProfile } from \"./selfProfileOperations\";\r\n\r\nconst manager = dataSource.manager;\r\n\r\nexport async function groupOperations() {\r\n\r\n    console.log('\\n\\tGroups start\\n');\r\n\r\n    if (!dataSource.isInitialized) await dataSource.initialize();\r\n\r\n    const selfProfile = await saveSelfProfile();\r\n\r\n    //Save Users\r\n    const user1 = new User('User1', 'nickname1');\r\n    user1.numberPhone = '123-456-7890';\r\n    user1.description = 'This is User1';\r\n    user1.linkToPhoto = 'https://example.com/user1photo.jpg';\r\n\r\n    const user2 = new User('User2', 'nickname2');\r\n    user2.numberPhone = '987-654-3210';\r\n    user2.description = 'This is User2';\r\n    user2.linkToPhoto = undefined;\r\n\r\n    const user3 = new User('User3', 'nickname3');\r\n    user3.numberPhone = '555-9999';\r\n    user3.description = undefined;\r\n    user3.linkToPhoto = undefined;\r\n    await manager.save([user1, user2, user3]);\r\n    console.log('Users have been saved');\r\n\r\n    //Save Dialogues\r\n    const group1 = new Group('group1');\r\n    group1.linkToPhoto = 'someLink';\r\n    group1.lastWatchedMessage = [{ userId: user1.userId, messageId: undefined }];\r\n    group1.auditLog = [{ sendTime: new Date(), message: 'log1' }, { sendTime: new Date(), message: 'log2' }];\r\n    group1.users = [selfProfile, user1, user2];\r\n    await manager.save(group1);\r\n    console.log('Group1 has been saved');\r\n\r\n    const group2 = new Group('group2');;\r\n    group2.linkToPhoto = 'someLink';\r\n    group2.lastWatchedMessage = [{ userId: user2.userId, messageId: undefined }];\r\n    group2.auditLog = [{ sendTime: new Date(), message: 'log1' }];\r\n    group2.users = [selfProfile, user2, user3];\r\n    await manager.save(group2);\r\n    console.log('Group2 has been saved');\r\n\r\n    const group3 = new Group('group3');;\r\n    group3.linkToPhoto = 'someLink';\r\n    group3.lastWatchedMessage = [{ userId: user3.userId, messageId: undefined }];\r\n    group3.auditLog = [];\r\n    group3.users = [selfProfile, user1, user2, user3];\r\n    await manager.save(group3);\r\n    console.log('Group3 has been saved');\r\n\r\n    //Read\r\n    await readChats();\r\n\r\n    //Update\r\n    let message1 = new Message(user1, 'content1', EMessageType.text);\r\n    message1.numberInChat = 1;\r\n    message1.chat = group1;\r\n    await manager.insert(Message, message1);\r\n\r\n    let message2 = new Message(user1, 'content2', EMessageType.img);\r\n    message2.numberInChat = 2;\r\n    message2.chat = group1;\r\n    await manager.insert(Message, message2);\r\n\r\n    let message3 = new Message(selfProfile, 'content3', EMessageType.text);\r\n    message3.numberInChat = 3;\r\n    message3.chat = group1;\r\n    await manager.insert(Message, message3);\r\n\r\n\r\n    let message4 = new Message(user2, 'content4', EMessageType.text);\r\n    message4.numberInChat = 1;\r\n    message4.chat = group2;\r\n    await manager.insert(Message, message4);\r\n\r\n    let message5 = new Message(selfProfile, 'content5', EMessageType.img);\r\n    message5.numberInChat = 2;\r\n    message5.chat = group2;\r\n    await manager.insert(Message, message5);\r\n\r\n    let message6 = new Message(selfProfile, 'content6', EMessageType.text);\r\n    message6.numberInChat = 3;\r\n    message6.chat = group2;\r\n    await manager.insert(Message, message6);\r\n\r\n\r\n    let message7 = new Message(selfProfile, 'content7', EMessageType.text);\r\n    message7.numberInChat = 1;\r\n    message7.chat = group3;\r\n    await manager.insert(Message, message7);\r\n\r\n    let message8 = new Message(selfProfile, 'content8', EMessageType.img);\r\n    message8.numberInChat = 2;\r\n    message8.chat = group3;\r\n    await manager.insert(Message, message8);\r\n\r\n    let message9 = new Message(selfProfile, 'content9', EMessageType.text);\r\n    message9.numberInChat = 3;\r\n    message9.chat = group3;\r\n    await manager.insert(Message, message9);\r\n\r\n    console.log('Groups have been updated');\r\n\r\n    //Read \r\n    await readChats();\r\n    await readMessages();\r\n\r\n    //Delete\r\n    await manager.remove([group1, group2, group3]);\r\n    console.log('Groups have been deleted');\r\n\r\n    //Read \r\n    await readGroups();\r\n    await readChats();\r\n    await readMessages();\r\n    await readUsers();\r\n}\r\n\r\nexport async function readGroups() {\r\n    const savedGroups = await manager.find(Group);\r\n    console.log(`Groups quantity: ${savedGroups.length}`);\r\n    for (let group of savedGroups) {\r\n        console.log(group);\r\n    }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}