{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { styles } from \"./Styles\";\nimport OffNotificationIcon from \"./Icons/OffNotificationIcon\";\nimport OnNotificationIcon from \"./Icons/OnNotificationIcon\";\nimport BinIcon from \"./Icons/BinIcon\";\nimport SettingsIcon from \"./Icons/SettingsIcon\";\nimport ForwardContactIcon from \"./Icons/ForwardContactIcon\";\nimport BlockIcon from \"./Icons/BlockIcon\";\nimport UnblockIcon from \"./Icons/UnblockIcon\";\nimport EyeIcon from \"./Icons/EyeIcon\";\nimport ExitDoorIcon from \"./Icons/ExitIcon\";\nimport ClearChatIcon from \"./Icons/ClearChatIcon\";\nimport LockIcon from \"./Icons/LockIcon\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar ElseFeaturesButtons = function ElseFeaturesButtons(props) {\n  return _jsx(_Fragment, {\n    children: props.isVisible && _jsxs(View, {\n      style: styles.elseFeaturesButtonsContainer,\n      children: [_jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          props.settingsPress();\n          props.setIsVisible(false);\n        },\n        style: styles.additionalFeatureButton,\n        children: [_jsx(SettingsIcon, {\n          style: styles.additionalFeatureIcon\n        }), _jsx(Text, {\n          style: styles.additionalFeatureTitle,\n          children: \"Settings\"\n        })]\n      }), _jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          props.onMutePress(!props.isMuted);\n          props.setIsVisible(false);\n        },\n        style: styles.additionalFeatureButton,\n        children: [props.isMuted ? _jsx(OnNotificationIcon, {\n          style: styles.additionalFeatureIcon\n        }) : _jsx(OffNotificationIcon, {\n          style: styles.additionalFeatureIcon\n        }), _jsx(Text, {\n          style: styles.additionalFeatureTitle,\n          children: props.isMuted ? \"On notification\" : \"Off notification\"\n        })]\n      }), _jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          props.onClearChatPress();\n        },\n        style: styles.additionalFeatureButton,\n        children: [_jsx(ClearChatIcon, {\n          style: styles.additionalFeatureIcon\n        }), _jsx(Text, {\n          style: styles.additionalFeatureTitle,\n          children: \"Clear chat\"\n        })]\n      }), props.mode === \"user\" && _jsxs(_Fragment, {\n        children: [_jsxs(TouchableOpacity, {\n          style: styles.additionalFeatureButton,\n          children: [_jsx(ForwardContactIcon, {\n            style: styles.additionalFeatureIcon\n          }), _jsx(Text, {\n            style: styles.additionalFeatureTitle,\n            children: \"Forward contact\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            if (props.onBlockPress !== undefined) {\n              props.onBlockPress(!props.isBlocked);\n            }\n            props.setIsVisible(false);\n          },\n          style: styles.additionalFeatureButton,\n          children: [props.isBlocked ? _jsx(UnblockIcon, {\n            style: styles.additionalFeatureIcon\n          }) : _jsx(BlockIcon, {\n            style: styles.additionalFeatureIcon\n          }), _jsx(Text, {\n            style: styles.blockButtonTitle,\n            children: props.isBlocked ? \"Unblock\" : \"Block\"\n          })]\n        })]\n      }), props.mode === \"group\" && _jsxs(_Fragment, {\n        children: [_jsxs(TouchableOpacity, {\n          style: styles.additionalFeatureButton,\n          children: [_jsx(EyeIcon, {\n            style: styles.additionalFeatureIcon\n          }), _jsx(Text, {\n            style: styles.additionalFeatureTitle,\n            children: \"View member\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.additionalFeatureButton,\n          children: [_jsx(BinIcon, {\n            style: styles.additionalFeatureIcon\n          }), _jsx(Text, {\n            style: [styles.additionalFeatureTitle, {\n              color: \"red\"\n            }],\n            children: \"Delete group\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.additionalFeatureButton,\n          children: [_jsx(ExitDoorIcon, {\n            style: styles.additionalFeatureIcon\n          }), _jsx(Text, {\n            style: [styles.additionalFeatureTitle, {\n              color: \"red\"\n            }],\n            children: \"Leave group\"\n          })]\n        })]\n      }), props.mode === \"channel\" && _jsxs(_Fragment, {\n        children: [_jsxs(TouchableOpacity, {\n          style: styles.additionalFeatureButton,\n          children: [_jsx(LockIcon, {\n            style: styles.additionalFeatureIcon\n          }), _jsx(Text, {\n            style: styles.additionalFeatureTitle,\n            children: \"Type channel\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.additionalFeatureButton,\n          children: [_jsx(BinIcon, {\n            style: styles.additionalFeatureIcon\n          }), _jsx(Text, {\n            style: [styles.additionalFeatureTitle, {\n              color: \"red\"\n            }],\n            children: \"Delete channel\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.additionalFeatureButton,\n          children: [_jsx(ExitDoorIcon, {\n            style: styles.additionalFeatureIcon\n          }), _jsx(Text, {\n            style: [styles.additionalFeatureTitle, {\n              color: \"red\"\n            }],\n            children: \"Leave channel\"\n          })]\n        })]\n      })]\n    })\n  });\n};\nexport default ElseFeaturesButtons;","map":{"version":3,"names":["React","View","TouchableOpacity","Text","styles","OffNotificationIcon","OnNotificationIcon","BinIcon","SettingsIcon","ForwardContactIcon","BlockIcon","UnblockIcon","EyeIcon","ExitDoorIcon","ClearChatIcon","LockIcon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ElseFeaturesButtons","props","children","isVisible","style","elseFeaturesButtonsContainer","onPress","settingsPress","setIsVisible","additionalFeatureButton","additionalFeatureIcon","additionalFeatureTitle","onMutePress","isMuted","onClearChatPress","mode","onBlockPress","undefined","isBlocked","blockButtonTitle","color"],"sources":["/home/zatibmag/Desktop/Project/Messenger/Messenger/Pages/Profiles/SemiComponents/MainScreen/ElseFeaturesButtons.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React from \"react\";\r\nimport { View, TouchableOpacity, Text } from \"react-native\";\r\nimport { styles } from \"./Styles\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport OffNotificationIcon from \"./Icons/OffNotificationIcon\";\r\nimport OnNotificationIcon from \"./Icons/OnNotificationIcon\";\r\nimport BinIcon from \"./Icons/BinIcon\";\r\nimport SettingsIcon from \"./Icons/SettingsIcon\";\r\nimport ForwardContactIcon from \"./Icons/ForwardContactIcon\";\r\nimport BlockIcon from \"./Icons/BlockIcon\";\r\nimport UnblockIcon from \"./Icons/UnblockIcon\";\r\nimport EyeIcon from \"./Icons/EyeIcon\";\r\nimport ExitDoorIcon from \"./Icons/ExitIcon\";\r\nimport ClearChatIcon from \"./Icons/ClearChatIcon\";\r\nimport LockIcon from \"./Icons/LockIcon\";\r\n\r\ninterface ElseFeaturesButtonsProps {\r\n  setIsVisible: (value: boolean) => void;\r\n  isVisible: boolean;\r\n  onMutePress: (value: boolean) => void;\r\n  isMuted: boolean;\r\n  onBlockPress?: (value: boolean) => void;\r\n  isBlocked?: boolean;\r\n  onClearChatPress: () => void;\r\n  settingsPress: () => void;\r\n  mode: string;\r\n}\r\n\r\nconst ElseFeaturesButtons: React.FC<ElseFeaturesButtonsProps> = (props) => {\r\n  return (\r\n    <>\r\n      {props.isVisible && (\r\n        <View style={styles.elseFeaturesButtonsContainer}>\r\n          {/* Settings button */}\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              props.settingsPress();\r\n              props.setIsVisible(false);\r\n            }}\r\n            style={styles.additionalFeatureButton}\r\n          >\r\n            <SettingsIcon style={styles.additionalFeatureIcon} />\r\n            <Text style={styles.additionalFeatureTitle}>Settings</Text>\r\n          </TouchableOpacity>\r\n\r\n          {/* Toggle Notification button */}\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              props.onMutePress(!props.isMuted);\r\n              props.setIsVisible(false);\r\n            }}\r\n            style={styles.additionalFeatureButton}\r\n          >\r\n            {props.isMuted ? (\r\n              <OnNotificationIcon style={styles.additionalFeatureIcon} />\r\n            ) : (\r\n              <OffNotificationIcon style={styles.additionalFeatureIcon} />\r\n            )}\r\n            <Text style={styles.additionalFeatureTitle}>\r\n              {props.isMuted ? \"On notification\" : \"Off notification\"}\r\n            </Text>\r\n          </TouchableOpacity>\r\n\r\n          {/* Clear chat button */}\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              props.onClearChatPress();\r\n            }}\r\n            style={styles.additionalFeatureButton}\r\n          >\r\n            <ClearChatIcon style={styles.additionalFeatureIcon} />\r\n            <Text style={styles.additionalFeatureTitle}>Clear chat</Text>\r\n          </TouchableOpacity>\r\n\r\n          {/* For user */}\r\n          {props.mode === \"user\" && (\r\n            <>\r\n              {/* Forward contact button */}\r\n              <TouchableOpacity style={styles.additionalFeatureButton}>\r\n                <ForwardContactIcon style={styles.additionalFeatureIcon} />\r\n                <Text style={styles.additionalFeatureTitle}>\r\n                  Forward contact\r\n                </Text>\r\n              </TouchableOpacity>\r\n\r\n              {/* Toggle block button */}\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  if (props.onBlockPress !== undefined) {\r\n                    props.onBlockPress(!props.isBlocked);\r\n                  }\r\n                  props.setIsVisible(false);\r\n                }}\r\n                style={styles.additionalFeatureButton}\r\n              >\r\n                {props.isBlocked ? (\r\n                  <UnblockIcon style={styles.additionalFeatureIcon} />\r\n                ) : (\r\n                  <BlockIcon style={styles.additionalFeatureIcon} />\r\n                )}\r\n                <Text style={styles.blockButtonTitle}>\r\n                  {props.isBlocked ? \"Unblock\" : \"Block\"}\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </>\r\n          )}\r\n\r\n          {/* For group */}\r\n          {props.mode === \"group\" && (\r\n            <>\r\n              {/* View member button */}\r\n              <TouchableOpacity style={styles.additionalFeatureButton}>\r\n                <EyeIcon style={styles.additionalFeatureIcon} />\r\n                <Text style={styles.additionalFeatureTitle}>View member</Text>\r\n              </TouchableOpacity>\r\n\r\n              {/* Delete group button */}\r\n              <TouchableOpacity style={styles.additionalFeatureButton}>\r\n                <BinIcon style={styles.additionalFeatureIcon} />\r\n                <Text style={[styles.additionalFeatureTitle, { color: \"red\" }]}>\r\n                  Delete group\r\n                </Text>\r\n              </TouchableOpacity>\r\n\r\n              {/* Leave group button */}\r\n              <TouchableOpacity style={styles.additionalFeatureButton}>\r\n                <ExitDoorIcon style={styles.additionalFeatureIcon} />\r\n                <Text style={[styles.additionalFeatureTitle, { color: \"red\" }]}>\r\n                  Leave group\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </>\r\n          )}\r\n\r\n          {/* For channel */}\r\n          {props.mode === \"channel\" && (\r\n            <>\r\n              {/* Type channel button */}\r\n              <TouchableOpacity style={styles.additionalFeatureButton}>\r\n                <LockIcon style={styles.additionalFeatureIcon} />\r\n                <Text style={styles.additionalFeatureTitle}>Type channel</Text>\r\n              </TouchableOpacity>\r\n\r\n              {/* Delete channel button */}\r\n              <TouchableOpacity style={styles.additionalFeatureButton}>\r\n                <BinIcon style={styles.additionalFeatureIcon} />\r\n                <Text style={[styles.additionalFeatureTitle, { color: \"red\" }]}>\r\n                  Delete channel\r\n                </Text>\r\n              </TouchableOpacity>\r\n\r\n              {/* Leave channel button */}\r\n              <TouchableOpacity style={styles.additionalFeatureButton}>\r\n                <ExitDoorIcon style={styles.additionalFeatureIcon} />\r\n                <Text style={[styles.additionalFeatureTitle, { color: \"red\" }]}>\r\n                  Leave channel\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </>\r\n          )}\r\n        </View>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ElseFeaturesButtons;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}