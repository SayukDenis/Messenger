{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _reactJsxRuntime = require(\"react/jsx-runtime\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar React = require(\"react\");\nvar react_native_1 = require(\"react-native-web/dist/index\");\nvar image_zoom_style_1 = require(\"./image-zoom.style\");\nvar image_zoom_type_1 = require(\"./image-zoom.type\");\nvar ImageViewer = function (_super) {\n  __extends(ImageViewer, _super);\n  function ImageViewer() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.state = new image_zoom_type_1.ImageZoomState();\n    _this.lastPositionX = null;\n    _this.positionX = 0;\n    _this.animatedPositionX = new react_native_1.Animated.Value(0);\n    _this.lastPositionY = null;\n    _this.positionY = 0;\n    _this.animatedPositionY = new react_native_1.Animated.Value(0);\n    _this.scale = 1;\n    _this.animatedScale = new react_native_1.Animated.Value(1);\n    _this.zoomLastDistance = null;\n    _this.zoomCurrentDistance = 0;\n    _this.lastTouchStartTime = 0;\n    _this.horizontalWholeOuterCounter = 0;\n    _this.swipeDownOffset = 0;\n    _this.horizontalWholeCounter = 0;\n    _this.verticalWholeCounter = 0;\n    _this.centerDiffX = 0;\n    _this.centerDiffY = 0;\n    _this.lastClickTime = 0;\n    _this.doubleClickX = 0;\n    _this.doubleClickY = 0;\n    _this.isDoubleClick = false;\n    _this.isLongPress = false;\n    _this.isHorizontalWrap = false;\n    _this.imagePanResponder = react_native_1.PanResponder.create({\n      onStartShouldSetPanResponder: _this.props.onStartShouldSetPanResponder,\n      onPanResponderTerminationRequest: _this.props.onPanResponderTerminationRequest,\n      onMoveShouldSetPanResponder: _this.props.onMoveShouldSetPanResponder,\n      onPanResponderGrant: function onPanResponderGrant(evt) {\n        _this.lastPositionX = null;\n        _this.lastPositionY = null;\n        _this.zoomLastDistance = null;\n        _this.horizontalWholeCounter = 0;\n        _this.verticalWholeCounter = 0;\n        _this.lastTouchStartTime = new Date().getTime();\n        _this.isDoubleClick = false;\n        _this.isLongPress = false;\n        _this.isHorizontalWrap = false;\n        if (_this.singleClickTimeout) {\n          clearTimeout(_this.singleClickTimeout);\n        }\n        if (evt.nativeEvent.changedTouches.length > 1) {\n          var centerX = (evt.nativeEvent.changedTouches[0].pageX + evt.nativeEvent.changedTouches[1].pageX) / 2;\n          _this.centerDiffX = centerX - _this.props.cropWidth / 2;\n          var centerY = (evt.nativeEvent.changedTouches[0].pageY + evt.nativeEvent.changedTouches[1].pageY) / 2;\n          _this.centerDiffY = centerY - _this.props.cropHeight / 2;\n        }\n        if (_this.longPressTimeout) {\n          clearTimeout(_this.longPressTimeout);\n        }\n        var _a = evt.nativeEvent,\n          locationX = _a.locationX,\n          locationY = _a.locationY,\n          pageX = _a.pageX,\n          pageY = _a.pageY;\n        _this.longPressTimeout = setTimeout(function () {\n          _this.isLongPress = true;\n          if (_this.props.onLongPress) {\n            _this.props.onLongPress({\n              locationX: locationX,\n              locationY: locationY,\n              pageX: pageX,\n              pageY: pageY\n            });\n          }\n        }, _this.props.longPressTime);\n        if (evt.nativeEvent.changedTouches.length <= 1) {\n          if (new Date().getTime() - _this.lastClickTime < (_this.props.doubleClickInterval || 0)) {\n            _this.lastClickTime = 0;\n            _this.doubleClickX = evt.nativeEvent.changedTouches[0].pageX;\n            _this.doubleClickY = evt.nativeEvent.changedTouches[0].pageY;\n            if (_this.props.onDoubleClick) {\n              _this.props.onDoubleClick({\n                locationX: evt.nativeEvent.changedTouches[0].locationX,\n                locationY: evt.nativeEvent.changedTouches[0].locationY,\n                pageX: _this.doubleClickX,\n                pageY: _this.doubleClickY\n              });\n            }\n            clearTimeout(_this.longPressTimeout);\n            _this.isDoubleClick = true;\n            if (_this.props.enableDoubleClickZoom) {\n              if (_this.scale > 1 || _this.scale < 1) {\n                _this.scale = 1;\n                _this.positionX = 0;\n                _this.positionY = 0;\n              } else {\n                var beforeScale = _this.scale;\n                _this.scale = 2;\n                var diffScale = _this.scale - beforeScale;\n                _this.positionX = (_this.props.cropWidth / 2 - _this.doubleClickX) * diffScale / _this.scale;\n                _this.positionY = (_this.props.cropHeight / 2 - _this.doubleClickY) * diffScale / _this.scale;\n              }\n              _this.imageDidMove('centerOn');\n              react_native_1.Animated.parallel([react_native_1.Animated.timing(_this.animatedScale, {\n                toValue: _this.scale,\n                duration: 100,\n                useNativeDriver: !!_this.props.useNativeDriver\n              }), react_native_1.Animated.timing(_this.animatedPositionX, {\n                toValue: _this.positionX,\n                duration: 100,\n                useNativeDriver: !!_this.props.useNativeDriver\n              }), react_native_1.Animated.timing(_this.animatedPositionY, {\n                toValue: _this.positionY,\n                duration: 100,\n                useNativeDriver: !!_this.props.useNativeDriver\n              })]).start();\n            }\n          } else {\n            _this.lastClickTime = new Date().getTime();\n          }\n        }\n      },\n      onPanResponderMove: function onPanResponderMove(evt, gestureState) {\n        if (_this.isDoubleClick) {\n          return;\n        }\n        if (evt.nativeEvent.changedTouches.length <= 1) {\n          var diffX = gestureState.dx - (_this.lastPositionX || 0);\n          if (_this.lastPositionX === null) {\n            diffX = 0;\n          }\n          var diffY = gestureState.dy - (_this.lastPositionY || 0);\n          if (_this.lastPositionY === null) {\n            diffY = 0;\n          }\n          _this.lastPositionX = gestureState.dx;\n          _this.lastPositionY = gestureState.dy;\n          _this.horizontalWholeCounter += diffX;\n          _this.verticalWholeCounter += diffY;\n          if (Math.abs(_this.horizontalWholeCounter) > 5 || Math.abs(_this.verticalWholeCounter) > 5) {\n            clearTimeout(_this.longPressTimeout);\n          }\n          if (_this.props.panToMove) {\n            if (_this.swipeDownOffset === 0) {\n              if (Math.abs(diffX) > Math.abs(diffY)) {\n                _this.isHorizontalWrap = true;\n              }\n              if (_this.props.imageWidth * _this.scale > _this.props.cropWidth) {\n                if (_this.horizontalWholeOuterCounter > 0) {\n                  if (diffX < 0) {\n                    if (_this.horizontalWholeOuterCounter > Math.abs(diffX)) {\n                      _this.horizontalWholeOuterCounter += diffX;\n                      diffX = 0;\n                    } else {\n                      diffX += _this.horizontalWholeOuterCounter;\n                      _this.horizontalWholeOuterCounter = 0;\n                      if (_this.props.horizontalOuterRangeOffset) {\n                        _this.props.horizontalOuterRangeOffset(0);\n                      }\n                    }\n                  } else {\n                    _this.horizontalWholeOuterCounter += diffX;\n                  }\n                } else if (_this.horizontalWholeOuterCounter < 0) {\n                  if (diffX > 0) {\n                    if (Math.abs(_this.horizontalWholeOuterCounter) > diffX) {\n                      _this.horizontalWholeOuterCounter += diffX;\n                      diffX = 0;\n                    } else {\n                      diffX += _this.horizontalWholeOuterCounter;\n                      _this.horizontalWholeOuterCounter = 0;\n                      if (_this.props.horizontalOuterRangeOffset) {\n                        _this.props.horizontalOuterRangeOffset(0);\n                      }\n                    }\n                  } else {\n                    _this.horizontalWholeOuterCounter += diffX;\n                  }\n                } else {}\n                _this.positionX += diffX / _this.scale;\n                var horizontalMax = (_this.props.imageWidth * _this.scale - _this.props.cropWidth) / 2 / _this.scale;\n                if (_this.positionX < -horizontalMax) {\n                  _this.positionX = -horizontalMax;\n                  _this.horizontalWholeOuterCounter += -1 / 1e10;\n                } else if (_this.positionX > horizontalMax) {\n                  _this.positionX = horizontalMax;\n                  _this.horizontalWholeOuterCounter += 1 / 1e10;\n                }\n                _this.animatedPositionX.setValue(_this.positionX);\n              } else {\n                _this.horizontalWholeOuterCounter += diffX;\n              }\n              if (_this.horizontalWholeOuterCounter > (_this.props.maxOverflow || 0)) {\n                _this.horizontalWholeOuterCounter = _this.props.maxOverflow || 0;\n              } else if (_this.horizontalWholeOuterCounter < -(_this.props.maxOverflow || 0)) {\n                _this.horizontalWholeOuterCounter = -(_this.props.maxOverflow || 0);\n              }\n              if (_this.horizontalWholeOuterCounter !== 0) {\n                if (_this.props.horizontalOuterRangeOffset) {\n                  _this.props.horizontalOuterRangeOffset(_this.horizontalWholeOuterCounter);\n                }\n              }\n            }\n            if (_this.props.imageHeight * _this.scale > _this.props.cropHeight) {\n              _this.positionY += diffY / _this.scale;\n              _this.animatedPositionY.setValue(_this.positionY);\n            } else {\n              if (_this.props.enableSwipeDown && !_this.isHorizontalWrap) {\n                _this.swipeDownOffset += diffY;\n                if (_this.swipeDownOffset > 0) {\n                  _this.positionY += diffY / _this.scale;\n                  _this.animatedPositionY.setValue(_this.positionY);\n                  _this.scale = _this.scale - diffY / 1000;\n                  _this.animatedScale.setValue(_this.scale);\n                }\n              }\n            }\n          }\n        } else {\n          if (_this.longPressTimeout) {\n            clearTimeout(_this.longPressTimeout);\n          }\n          if (_this.props.pinchToZoom) {\n            var minX = void 0;\n            var maxX = void 0;\n            if (evt.nativeEvent.changedTouches[0].locationX > evt.nativeEvent.changedTouches[1].locationX) {\n              minX = evt.nativeEvent.changedTouches[1].pageX;\n              maxX = evt.nativeEvent.changedTouches[0].pageX;\n            } else {\n              minX = evt.nativeEvent.changedTouches[0].pageX;\n              maxX = evt.nativeEvent.changedTouches[1].pageX;\n            }\n            var minY = void 0;\n            var maxY = void 0;\n            if (evt.nativeEvent.changedTouches[0].locationY > evt.nativeEvent.changedTouches[1].locationY) {\n              minY = evt.nativeEvent.changedTouches[1].pageY;\n              maxY = evt.nativeEvent.changedTouches[0].pageY;\n            } else {\n              minY = evt.nativeEvent.changedTouches[0].pageY;\n              maxY = evt.nativeEvent.changedTouches[1].pageY;\n            }\n            var widthDistance = maxX - minX;\n            var heightDistance = maxY - minY;\n            var diagonalDistance = Math.sqrt(widthDistance * widthDistance + heightDistance * heightDistance);\n            _this.zoomCurrentDistance = Number(diagonalDistance.toFixed(1));\n            if (_this.zoomLastDistance !== null) {\n              var distanceDiff = (_this.zoomCurrentDistance - _this.zoomLastDistance) / 200;\n              var zoom = _this.scale + distanceDiff;\n              if (zoom < (_this.props.minScale || 0)) {\n                zoom = _this.props.minScale || 0;\n              }\n              if (zoom > (_this.props.maxScale || 0)) {\n                zoom = _this.props.maxScale || 0;\n              }\n              var beforeScale = _this.scale;\n              _this.scale = zoom;\n              _this.animatedScale.setValue(_this.scale);\n              var diffScale = _this.scale - beforeScale;\n              _this.positionX -= _this.centerDiffX * diffScale / _this.scale;\n              _this.positionY -= _this.centerDiffY * diffScale / _this.scale;\n              _this.animatedPositionX.setValue(_this.positionX);\n              _this.animatedPositionY.setValue(_this.positionY);\n            }\n            _this.zoomLastDistance = _this.zoomCurrentDistance;\n          }\n        }\n        _this.imageDidMove('onPanResponderMove');\n      },\n      onPanResponderRelease: function onPanResponderRelease(evt, gestureState) {\n        if (_this.longPressTimeout) {\n          clearTimeout(_this.longPressTimeout);\n        }\n        if (_this.isDoubleClick) {\n          return;\n        }\n        if (_this.isLongPress) {\n          return;\n        }\n        var moveDistance = Math.sqrt(gestureState.dx * gestureState.dx + gestureState.dy * gestureState.dy);\n        var _a = evt.nativeEvent,\n          locationX = _a.locationX,\n          locationY = _a.locationY,\n          pageX = _a.pageX,\n          pageY = _a.pageY;\n        if (evt.nativeEvent.changedTouches.length === 1 && moveDistance < (_this.props.clickDistance || 0)) {\n          _this.singleClickTimeout = setTimeout(function () {\n            if (_this.props.onClick) {\n              _this.props.onClick({\n                locationX: locationX,\n                locationY: locationY,\n                pageX: pageX,\n                pageY: pageY\n              });\n            }\n          }, _this.props.doubleClickInterval);\n        } else {\n          if (_this.props.responderRelease) {\n            _this.props.responderRelease(gestureState.vx, _this.scale);\n          }\n          _this.panResponderReleaseResolve();\n        }\n      },\n      onPanResponderTerminate: function onPanResponderTerminate() {}\n    });\n    _this.resetScale = function () {\n      _this.positionX = 0;\n      _this.positionY = 0;\n      _this.scale = 1;\n      _this.animatedScale.setValue(1);\n    };\n    _this.panResponderReleaseResolve = function () {\n      if (_this.props.enableSwipeDown && _this.props.swipeDownThreshold) {\n        if (_this.swipeDownOffset > _this.props.swipeDownThreshold) {\n          if (_this.props.onSwipeDown) {\n            _this.props.onSwipeDown();\n          }\n          return;\n        }\n      }\n      if (_this.props.enableCenterFocus && _this.scale < 1) {\n        _this.scale = 1;\n        react_native_1.Animated.timing(_this.animatedScale, {\n          toValue: _this.scale,\n          duration: 100,\n          useNativeDriver: !!_this.props.useNativeDriver\n        }).start();\n      }\n      if (_this.props.imageWidth * _this.scale <= _this.props.cropWidth) {\n        _this.positionX = 0;\n        react_native_1.Animated.timing(_this.animatedPositionX, {\n          toValue: _this.positionX,\n          duration: 100,\n          useNativeDriver: !!_this.props.useNativeDriver\n        }).start();\n      }\n      if (_this.props.imageHeight * _this.scale <= _this.props.cropHeight) {\n        _this.positionY = 0;\n        react_native_1.Animated.timing(_this.animatedPositionY, {\n          toValue: _this.positionY,\n          duration: 100,\n          useNativeDriver: !!_this.props.useNativeDriver\n        }).start();\n      }\n      if (_this.props.imageHeight * _this.scale > _this.props.cropHeight) {\n        var verticalMax = (_this.props.imageHeight * _this.scale - _this.props.cropHeight) / 2 / _this.scale;\n        if (_this.positionY < -verticalMax) {\n          _this.positionY = -verticalMax;\n        } else if (_this.positionY > verticalMax) {\n          _this.positionY = verticalMax;\n        }\n        react_native_1.Animated.timing(_this.animatedPositionY, {\n          toValue: _this.positionY,\n          duration: 100,\n          useNativeDriver: !!_this.props.useNativeDriver\n        }).start();\n      }\n      if (_this.props.imageWidth * _this.scale > _this.props.cropWidth) {\n        var horizontalMax = (_this.props.imageWidth * _this.scale - _this.props.cropWidth) / 2 / _this.scale;\n        if (_this.positionX < -horizontalMax) {\n          _this.positionX = -horizontalMax;\n        } else if (_this.positionX > horizontalMax) {\n          _this.positionX = horizontalMax;\n        }\n        react_native_1.Animated.timing(_this.animatedPositionX, {\n          toValue: _this.positionX,\n          duration: 100,\n          useNativeDriver: !!_this.props.useNativeDriver\n        }).start();\n      }\n      if (_this.props.enableCenterFocus && _this.scale === 1) {\n        _this.positionX = 0;\n        _this.positionY = 0;\n        react_native_1.Animated.timing(_this.animatedPositionX, {\n          toValue: _this.positionX,\n          duration: 100,\n          useNativeDriver: !!_this.props.useNativeDriver\n        }).start();\n        react_native_1.Animated.timing(_this.animatedPositionY, {\n          toValue: _this.positionY,\n          duration: 100,\n          useNativeDriver: !!_this.props.useNativeDriver\n        }).start();\n      }\n      _this.horizontalWholeOuterCounter = 0;\n      _this.swipeDownOffset = 0;\n      _this.imageDidMove('onPanResponderRelease');\n    };\n    return _this;\n  }\n  ImageViewer.prototype.componentDidMount = function () {\n    if (this.props.centerOn) {\n      this.centerOn(this.props.centerOn);\n    }\n  };\n  ImageViewer.prototype.componentDidUpdate = function (prevProps) {\n    if (this.props.centerOn && !prevProps.centerOn || this.props.centerOn && prevProps.centerOn && this.didCenterOnChange(prevProps.centerOn, this.props.centerOn)) {\n      this.centerOn(this.props.centerOn);\n    }\n  };\n  ImageViewer.prototype.imageDidMove = function (type) {\n    if (this.props.onMove) {\n      this.props.onMove({\n        type: type,\n        positionX: this.positionX,\n        positionY: this.positionY,\n        scale: this.scale,\n        zoomCurrentDistance: this.zoomCurrentDistance\n      });\n    }\n  };\n  ImageViewer.prototype.didCenterOnChange = function (params, paramsNext) {\n    return params.x !== paramsNext.x || params.y !== paramsNext.y || params.scale !== paramsNext.scale;\n  };\n  ImageViewer.prototype.centerOn = function (params) {\n    var _this = this;\n    this.positionX = params.x;\n    this.positionY = params.y;\n    this.scale = params.scale;\n    var duration = params.duration || 300;\n    react_native_1.Animated.parallel([react_native_1.Animated.timing(this.animatedScale, {\n      toValue: this.scale,\n      duration: duration,\n      useNativeDriver: !!this.props.useNativeDriver\n    }), react_native_1.Animated.timing(this.animatedPositionX, {\n      toValue: this.positionX,\n      duration: duration,\n      useNativeDriver: !!this.props.useNativeDriver\n    }), react_native_1.Animated.timing(this.animatedPositionY, {\n      toValue: this.positionY,\n      duration: duration,\n      useNativeDriver: !!this.props.useNativeDriver\n    })]).start(function () {\n      _this.imageDidMove('centerOn');\n    });\n  };\n  ImageViewer.prototype.handleLayout = function (event) {\n    if (this.props.layoutChange) {\n      this.props.layoutChange(event);\n    }\n  };\n  ImageViewer.prototype.reset = function () {\n    this.scale = 1;\n    this.animatedScale.setValue(this.scale);\n    this.positionX = 0;\n    this.animatedPositionX.setValue(this.positionX);\n    this.positionY = 0;\n    this.animatedPositionY.setValue(this.positionY);\n  };\n  ImageViewer.prototype.render = function () {\n    var animateConf = {\n      transform: [{\n        scale: this.animatedScale\n      }, {\n        translateX: this.animatedPositionX\n      }, {\n        translateY: this.animatedPositionY\n      }]\n    };\n    var parentStyles = react_native_1.StyleSheet.flatten(this.props.style);\n    return _reactJsxRuntime.jsx(react_native_1.View, _objectSpread(_objectSpread({\n      style: __assign(__assign(__assign({}, image_zoom_style_1.default.container), parentStyles), {\n        width: this.props.cropWidth,\n        height: this.props.cropHeight\n      })\n    }, this.imagePanResponder.panHandlers), {}, {\n      children: _reactJsxRuntime.jsx(react_native_1.Animated.View, {\n        style: animateConf,\n        renderToHardwareTextureAndroid: this.props.useHardwareTextureAndroid,\n        children: _reactJsxRuntime.jsx(react_native_1.View, {\n          onLayout: this.handleLayout.bind(this),\n          style: {\n            width: this.props.imageWidth,\n            height: this.props.imageHeight\n          },\n          children: this.props.children\n        })\n      })\n    }));\n  };\n  ImageViewer.defaultProps = new image_zoom_type_1.ImageZoomProps();\n  return ImageViewer;\n}(React.Component);\nexports.default = ImageViewer;","map":{"version":3,"names":["React","require","react_native_1","image_zoom_style_1","image_zoom_type_1","ImageViewer","_super","__extends","_this","apply","arguments","state","ImageZoomState","lastPositionX","positionX","animatedPositionX","Animated","Value","lastPositionY","positionY","animatedPositionY","scale","animatedScale","zoomLastDistance","zoomCurrentDistance","lastTouchStartTime","horizontalWholeOuterCounter","swipeDownOffset","horizontalWholeCounter","verticalWholeCounter","centerDiffX","centerDiffY","lastClickTime","doubleClickX","doubleClickY","isDoubleClick","isLongPress","isHorizontalWrap","imagePanResponder","PanResponder","create","onStartShouldSetPanResponder","props","onPanResponderTerminationRequest","onMoveShouldSetPanResponder","onPanResponderGrant","evt","Date","getTime","singleClickTimeout","clearTimeout","nativeEvent","changedTouches","length","centerX","pageX","cropWidth","centerY","pageY","cropHeight","longPressTimeout","_a","locationX","locationY","setTimeout","onLongPress","longPressTime","doubleClickInterval","onDoubleClick","enableDoubleClickZoom","beforeScale","diffScale","imageDidMove","parallel","timing","toValue","duration","useNativeDriver","start","onPanResponderMove","gestureState","diffX","dx","diffY","dy","Math","abs","panToMove","imageWidth","horizontalOuterRangeOffset","horizontalMax","setValue","maxOverflow","imageHeight","enableSwipeDown","pinchToZoom","minX","maxX","minY","maxY","widthDistance","heightDistance","diagonalDistance","sqrt","Number","toFixed","distanceDiff","zoom","minScale","maxScale","onPanResponderRelease","moveDistance","clickDistance","onClick","responderRelease","vx","panResponderReleaseResolve","onPanResponderTerminate","resetScale","swipeDownThreshold","onSwipeDown","enableCenterFocus","verticalMax","prototype","componentDidMount","centerOn","componentDidUpdate","prevProps","didCenterOnChange","type","onMove","params","paramsNext","x","y","handleLayout","event","layoutChange","reset","render","animateConf","transform","translateX","translateY","parentStyles","StyleSheet","flatten","style","_reactJsxRuntime","jsx","View","_objectSpread","__assign","default","container","width","height","panHandlers","children","renderToHardwareTextureAndroid","useHardwareTextureAndroid","onLayout","bind","defaultProps","ImageZoomProps","Component"],"sources":["C:\\Users\\T480\\source\\repos\\Messenger\\Messenger\\node_modules\\react-native-image-pan-zoom\\src\\image-zoom\\image-zoom.component.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { Animated, LayoutChangeEvent, PanResponder, StyleSheet, View } from 'react-native';\r\nimport styles from './image-zoom.style';\r\nimport { ICenterOn, ImageZoomProps, ImageZoomState } from './image-zoom.type';\r\n\r\nexport default class ImageViewer extends React.Component<ImageZoomProps, ImageZoomState> {\r\n  public static defaultProps = new ImageZoomProps();\r\n  public state = new ImageZoomState();\r\n\r\n  // 上次/当前/动画 x 位移\r\n  private lastPositionX: number | null = null;\r\n  private positionX = 0;\r\n  private animatedPositionX = new Animated.Value(0);\r\n\r\n  // 上次/当前/动画 y 位移\r\n  private lastPositionY: number | null = null;\r\n  private positionY = 0;\r\n  private animatedPositionY = new Animated.Value(0);\r\n\r\n  // 缩放大小\r\n  private scale = 1;\r\n  private animatedScale = new Animated.Value(1);\r\n  private zoomLastDistance: number | null = null;\r\n  private zoomCurrentDistance = 0;\r\n\r\n  // 上次手按下去的时间\r\n  private lastTouchStartTime = 0;\r\n\r\n  // 滑动过程中，整体横向过界偏移量\r\n  private horizontalWholeOuterCounter = 0;\r\n\r\n  // 滑动过程中，swipeDown 偏移量\r\n  private swipeDownOffset = 0;\r\n\r\n  // 滑动过程中，x y的总位移\r\n  private horizontalWholeCounter = 0;\r\n  private verticalWholeCounter = 0;\r\n\r\n  // 两手距离中心点位置\r\n  private centerDiffX = 0;\r\n  private centerDiffY = 0;\r\n\r\n  // 触发单击的 timeout\r\n  private singleClickTimeout: number | undefined;\r\n\r\n  // 计算长按的 timeout\r\n  private longPressTimeout: number | undefined;\r\n\r\n  // 上一次点击的时间\r\n  private lastClickTime = 0;\r\n\r\n  // 双击时的位置\r\n  private doubleClickX = 0;\r\n  private doubleClickY = 0;\r\n\r\n  // 是否双击了\r\n  private isDoubleClick = false;\r\n\r\n  // 是否是长按\r\n  private isLongPress = false;\r\n\r\n  // 是否在左右滑\r\n  private isHorizontalWrap = false;\r\n\r\n  // 图片手势处理\r\n  private imagePanResponder = PanResponder.create({\r\n    // 要求成为响应者：\r\n    onStartShouldSetPanResponder: this.props.onStartShouldSetPanResponder,\r\n    onPanResponderTerminationRequest: this.props.onPanResponderTerminationRequest,\r\n    onMoveShouldSetPanResponder: this.props.onMoveShouldSetPanResponder,\r\n\r\n    onPanResponderGrant: (evt) => {\r\n      // 开始手势操作\r\n      this.lastPositionX = null;\r\n      this.lastPositionY = null;\r\n      this.zoomLastDistance = null;\r\n      this.horizontalWholeCounter = 0;\r\n      this.verticalWholeCounter = 0;\r\n      this.lastTouchStartTime = new Date().getTime();\r\n      this.isDoubleClick = false;\r\n      this.isLongPress = false;\r\n      this.isHorizontalWrap = false;\r\n\r\n      // 任何手势开始，都清空单击计时器\r\n      if (this.singleClickTimeout) {\r\n        clearTimeout(this.singleClickTimeout);\r\n      }\r\n\r\n      if (evt.nativeEvent.changedTouches.length > 1) {\r\n        const centerX = (evt.nativeEvent.changedTouches[0].pageX + evt.nativeEvent.changedTouches[1].pageX) / 2;\r\n        this.centerDiffX = centerX - this.props.cropWidth / 2;\r\n\r\n        const centerY = (evt.nativeEvent.changedTouches[0].pageY + evt.nativeEvent.changedTouches[1].pageY) / 2;\r\n        this.centerDiffY = centerY - this.props.cropHeight / 2;\r\n      }\r\n\r\n      // 计算长按\r\n      if (this.longPressTimeout) {\r\n        clearTimeout(this.longPressTimeout);\r\n      }\r\n      const { locationX, locationY, pageX, pageY } = evt.nativeEvent;\r\n      this.longPressTimeout = setTimeout(() => {\r\n        this.isLongPress = true;\r\n        if (this.props.onLongPress) {\r\n          this.props.onLongPress({ locationX, locationY, pageX, pageY });\r\n        }\r\n      }, this.props.longPressTime);\r\n\r\n      if (evt.nativeEvent.changedTouches.length <= 1) {\r\n        // 一个手指的情况\r\n        if (new Date().getTime() - this.lastClickTime < (this.props.doubleClickInterval || 0)) {\r\n          // 认为触发了双击\r\n          this.lastClickTime = 0;\r\n\r\n          // 因为可能触发放大，因此记录双击时的坐标位置\r\n          this.doubleClickX = evt.nativeEvent.changedTouches[0].pageX;\r\n          this.doubleClickY = evt.nativeEvent.changedTouches[0].pageY;\r\n\r\n          if (this.props.onDoubleClick) {\r\n            this.props.onDoubleClick({\r\n              locationX: evt.nativeEvent.changedTouches[0].locationX,\r\n              locationY: evt.nativeEvent.changedTouches[0].locationY,\r\n              pageX: this.doubleClickX,\r\n              pageY: this.doubleClickY,\r\n            });\r\n          }\r\n\r\n          // 取消长按\r\n          clearTimeout(this.longPressTimeout);\r\n\r\n          // 缩放\r\n          this.isDoubleClick = true;\r\n\r\n          if (this.props.enableDoubleClickZoom) {\r\n            if (this.scale > 1 || this.scale < 1) {\r\n              // 回归原位\r\n              this.scale = 1;\r\n\r\n              this.positionX = 0;\r\n              this.positionY = 0;\r\n            } else {\r\n              // 开始在位移地点缩放\r\n              // 记录之前缩放比例\r\n              // 此时 this.scale 一定为 1\r\n              const beforeScale = this.scale;\r\n\r\n              // 开始缩放\r\n              this.scale = 2;\r\n\r\n              // 缩放 diff\r\n              const diffScale = this.scale - beforeScale;\r\n              // 找到两手中心点距离页面中心的位移\r\n              // 移动位置\r\n              this.positionX = ((this.props.cropWidth / 2 - this.doubleClickX) * diffScale) / this.scale;\r\n\r\n              this.positionY = ((this.props.cropHeight / 2 - this.doubleClickY) * diffScale) / this.scale;\r\n            }\r\n\r\n            this.imageDidMove('centerOn');\r\n\r\n            Animated.parallel([\r\n              Animated.timing(this.animatedScale, {\r\n                toValue: this.scale,\r\n                duration: 100,\r\n                useNativeDriver: !!this.props.useNativeDriver,\r\n              }),\r\n              Animated.timing(this.animatedPositionX, {\r\n                toValue: this.positionX,\r\n                duration: 100,\r\n                useNativeDriver: !!this.props.useNativeDriver,\r\n              }),\r\n              Animated.timing(this.animatedPositionY, {\r\n                toValue: this.positionY,\r\n                duration: 100,\r\n                useNativeDriver: !!this.props.useNativeDriver,\r\n              }),\r\n            ]).start();\r\n          }\r\n        } else {\r\n          this.lastClickTime = new Date().getTime();\r\n        }\r\n      }\r\n    },\r\n    onPanResponderMove: (evt, gestureState) => {\r\n      if (this.isDoubleClick) {\r\n        // 有时双击会被当做位移，这里屏蔽掉\r\n        return;\r\n      }\r\n\r\n      if (evt.nativeEvent.changedTouches.length <= 1) {\r\n        // x 位移\r\n        let diffX = gestureState.dx - (this.lastPositionX || 0);\r\n        if (this.lastPositionX === null) {\r\n          diffX = 0;\r\n        }\r\n        // y 位移\r\n        let diffY = gestureState.dy - (this.lastPositionY || 0);\r\n        if (this.lastPositionY === null) {\r\n          diffY = 0;\r\n        }\r\n\r\n        // 保留这一次位移作为下次的上一次位移\r\n        this.lastPositionX = gestureState.dx;\r\n        this.lastPositionY = gestureState.dy;\r\n\r\n        this.horizontalWholeCounter += diffX;\r\n        this.verticalWholeCounter += diffY;\r\n\r\n        if (Math.abs(this.horizontalWholeCounter) > 5 || Math.abs(this.verticalWholeCounter) > 5) {\r\n          // 如果位移超出手指范围，取消长按监听\r\n          clearTimeout(this.longPressTimeout);\r\n        }\r\n\r\n        if (this.props.panToMove) {\r\n          // 处理左右滑，如果正在 swipeDown，左右滑失效\r\n          if (this.swipeDownOffset === 0) {\r\n            if (Math.abs(diffX) > Math.abs(diffY)) {\r\n              this.isHorizontalWrap = true;\r\n            }\r\n\r\n            // diffX > 0 表示手往右滑，图往左移动，反之同理\r\n            // horizontalWholeOuterCounter > 0 表示溢出在左侧，反之在右侧，绝对值越大溢出越多\r\n            if (this.props.imageWidth * this.scale > this.props.cropWidth) {\r\n              // 如果图片宽度大图盒子宽度， 可以横向拖拽\r\n              // 没有溢出偏移量或者这次位移完全收回了偏移量才能拖拽\r\n              if (this.horizontalWholeOuterCounter > 0) {\r\n                // 溢出在右侧\r\n                if (diffX < 0) {\r\n                  // 从右侧收紧\r\n                  if (this.horizontalWholeOuterCounter > Math.abs(diffX)) {\r\n                    // 偏移量还没有用完\r\n                    this.horizontalWholeOuterCounter += diffX;\r\n                    diffX = 0;\r\n                  } else {\r\n                    // 溢出量置为0，偏移量减去剩余溢出量，并且可以被拖动\r\n                    diffX += this.horizontalWholeOuterCounter;\r\n                    this.horizontalWholeOuterCounter = 0;\r\n                    if (this.props.horizontalOuterRangeOffset) {\r\n                      this.props.horizontalOuterRangeOffset(0);\r\n                    }\r\n                  }\r\n                } else {\r\n                  // 向右侧扩增\r\n                  this.horizontalWholeOuterCounter += diffX;\r\n                }\r\n              } else if (this.horizontalWholeOuterCounter < 0) {\r\n                // 溢出在左侧\r\n                if (diffX > 0) {\r\n                  // 从左侧收紧\r\n                  if (Math.abs(this.horizontalWholeOuterCounter) > diffX) {\r\n                    // 偏移量还没有用完\r\n                    this.horizontalWholeOuterCounter += diffX;\r\n                    diffX = 0;\r\n                  } else {\r\n                    // 溢出量置为0，偏移量减去剩余溢出量，并且可以被拖动\r\n                    diffX += this.horizontalWholeOuterCounter;\r\n                    this.horizontalWholeOuterCounter = 0;\r\n                    if (this.props.horizontalOuterRangeOffset) {\r\n                      this.props.horizontalOuterRangeOffset(0);\r\n                    }\r\n                  }\r\n                } else {\r\n                  // 向左侧扩增\r\n                  this.horizontalWholeOuterCounter += diffX;\r\n                }\r\n              } else {\r\n                // 溢出偏移量为0，正常移动\r\n              }\r\n\r\n              // 产生位移\r\n              this.positionX += diffX / this.scale;\r\n\r\n              // 但是横向不能出现黑边\r\n              // 横向能容忍的绝对值\r\n              const horizontalMax = (this.props.imageWidth * this.scale - this.props.cropWidth) / 2 / this.scale;\r\n              if (this.positionX < -horizontalMax) {\r\n                // 超越了左边临界点，还在继续向左移动\r\n                this.positionX = -horizontalMax;\r\n\r\n                // 让其产生细微位移，偏离轨道\r\n                this.horizontalWholeOuterCounter += -1 / 1e10;\r\n              } else if (this.positionX > horizontalMax) {\r\n                // 超越了右侧临界点，还在继续向右移动\r\n                this.positionX = horizontalMax;\r\n\r\n                // 让其产生细微位移，偏离轨道\r\n                this.horizontalWholeOuterCounter += 1 / 1e10;\r\n              }\r\n              this.animatedPositionX.setValue(this.positionX);\r\n            } else {\r\n              // 不能横向拖拽，全部算做溢出偏移量\r\n              this.horizontalWholeOuterCounter += diffX;\r\n            }\r\n\r\n            // 溢出量不会超过设定界限\r\n            if (this.horizontalWholeOuterCounter > (this.props.maxOverflow || 0)) {\r\n              this.horizontalWholeOuterCounter = this.props.maxOverflow || 0;\r\n            } else if (this.horizontalWholeOuterCounter < -(this.props.maxOverflow || 0)) {\r\n              this.horizontalWholeOuterCounter = -(this.props.maxOverflow || 0);\r\n            }\r\n\r\n            if (this.horizontalWholeOuterCounter !== 0) {\r\n              // 如果溢出偏移量不是0，执行溢出回调\r\n              if (this.props.horizontalOuterRangeOffset) {\r\n                this.props.horizontalOuterRangeOffset(this.horizontalWholeOuterCounter);\r\n              }\r\n            }\r\n          }\r\n\r\n          // 如果图片高度大于盒子高度， 可以纵向弹性拖拽\r\n          if (this.props.imageHeight * this.scale > this.props.cropHeight) {\r\n            this.positionY += diffY / this.scale;\r\n            this.animatedPositionY.setValue(this.positionY);\r\n\r\n            // 如果图片上边缘脱离屏幕上边缘，则进入 swipeDown 动作\r\n            // if (\r\n            //   (this.props.imageHeight / 2 - this.positionY) * this.scale <\r\n            //   this.props.cropHeight / 2\r\n            // ) {\r\n            //   if (this.props.enableSwipeDown) {\r\n            //     this.swipeDownOffset += diffY\r\n\r\n            //     // 只要滑动溢出量不小于 0，就可以拖动\r\n            //     if (this.swipeDownOffset > 0) {\r\n            //       this.positionY += diffY / this.scale\r\n            //       this.animatedPositionY.setValue(this.positionY)\r\n\r\n            //       // 越到下方，缩放越小\r\n            //       this.scale = this.scale - diffY / 1000\r\n            //       this.animatedScale.setValue(this.scale)\r\n            //     }\r\n            //   }\r\n            // }\r\n          } else {\r\n            // swipeDown 不允许在已经有横向偏移量时触发\r\n            if (this.props.enableSwipeDown && !this.isHorizontalWrap) {\r\n              // 图片高度小于盒子高度，只能向下拖拽，而且一定是 swipeDown 动作\r\n              this.swipeDownOffset += diffY;\r\n\r\n              // 只要滑动溢出量不小于 0，就可以拖动\r\n              if (this.swipeDownOffset > 0) {\r\n                this.positionY += diffY / this.scale;\r\n                this.animatedPositionY.setValue(this.positionY);\r\n\r\n                // 越到下方，缩放越小\r\n                this.scale = this.scale - diffY / 1000;\r\n                this.animatedScale.setValue(this.scale);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        // 多个手指的情况\r\n        // 取消长按状态\r\n        if (this.longPressTimeout) {\r\n          clearTimeout(this.longPressTimeout);\r\n        }\r\n\r\n        if (this.props.pinchToZoom) {\r\n          // 找最小的 x 和最大的 x\r\n          let minX: number;\r\n          let maxX: number;\r\n          if (evt.nativeEvent.changedTouches[0].locationX > evt.nativeEvent.changedTouches[1].locationX) {\r\n            minX = evt.nativeEvent.changedTouches[1].pageX;\r\n            maxX = evt.nativeEvent.changedTouches[0].pageX;\r\n          } else {\r\n            minX = evt.nativeEvent.changedTouches[0].pageX;\r\n            maxX = evt.nativeEvent.changedTouches[1].pageX;\r\n          }\r\n\r\n          let minY: number;\r\n          let maxY: number;\r\n          if (evt.nativeEvent.changedTouches[0].locationY > evt.nativeEvent.changedTouches[1].locationY) {\r\n            minY = evt.nativeEvent.changedTouches[1].pageY;\r\n            maxY = evt.nativeEvent.changedTouches[0].pageY;\r\n          } else {\r\n            minY = evt.nativeEvent.changedTouches[0].pageY;\r\n            maxY = evt.nativeEvent.changedTouches[1].pageY;\r\n          }\r\n\r\n          const widthDistance = maxX - minX;\r\n          const heightDistance = maxY - minY;\r\n          const diagonalDistance = Math.sqrt(widthDistance * widthDistance + heightDistance * heightDistance);\r\n          this.zoomCurrentDistance = Number(diagonalDistance.toFixed(1));\r\n\r\n          if (this.zoomLastDistance !== null) {\r\n            const distanceDiff = (this.zoomCurrentDistance - this.zoomLastDistance) / 200;\r\n            let zoom = this.scale + distanceDiff;\r\n\r\n            if (zoom < (this.props.minScale || 0)) {\r\n              zoom = this.props.minScale || 0;\r\n            }\r\n            if (zoom > (this.props.maxScale || 0)) {\r\n              zoom = this.props.maxScale || 0;\r\n            }\r\n\r\n            // 记录之前缩放比例\r\n            const beforeScale = this.scale;\r\n\r\n            // 开始缩放\r\n            this.scale = zoom;\r\n            this.animatedScale.setValue(this.scale);\r\n\r\n            // 图片要慢慢往两个手指的中心点移动\r\n            // 缩放 diff\r\n            const diffScale = this.scale - beforeScale;\r\n            // 找到两手中心点距离页面中心的位移\r\n            // 移动位置\r\n            this.positionX -= (this.centerDiffX * diffScale) / this.scale;\r\n            this.positionY -= (this.centerDiffY * diffScale) / this.scale;\r\n            this.animatedPositionX.setValue(this.positionX);\r\n            this.animatedPositionY.setValue(this.positionY);\r\n          }\r\n          this.zoomLastDistance = this.zoomCurrentDistance;\r\n        }\r\n      }\r\n\r\n      this.imageDidMove('onPanResponderMove');\r\n    },\r\n    onPanResponderRelease: (evt, gestureState) => {\r\n      // 取消长按\r\n      if (this.longPressTimeout) {\r\n        clearTimeout(this.longPressTimeout);\r\n      }\r\n\r\n      // 双击结束，结束尾判断\r\n      if (this.isDoubleClick) {\r\n        return;\r\n      }\r\n\r\n      // 长按结束，结束尾判断\r\n      if (this.isLongPress) {\r\n        return;\r\n      }\r\n\r\n      // 如果是单个手指、距离上次按住大于预设秒、滑动距离小于预设值, 则可能是单击（如果后续双击间隔内没有开始手势）\r\n      // const stayTime = new Date().getTime() - this.lastTouchStartTime!\r\n      const moveDistance = Math.sqrt(gestureState.dx * gestureState.dx + gestureState.dy * gestureState.dy);\r\n      const { locationX, locationY, pageX, pageY } = evt.nativeEvent;\r\n\r\n      if (evt.nativeEvent.changedTouches.length === 1 && moveDistance < (this.props.clickDistance || 0)) {\r\n        this.singleClickTimeout = setTimeout(() => {\r\n          if (this.props.onClick) {\r\n            this.props.onClick({ locationX, locationY, pageX, pageY });\r\n          }\r\n        }, this.props.doubleClickInterval);\r\n      } else {\r\n        // 多手势结束，或者滑动结束\r\n        if (this.props.responderRelease) {\r\n          this.props.responderRelease(gestureState.vx, this.scale);\r\n        }\r\n\r\n        this.panResponderReleaseResolve();\r\n      }\r\n    },\r\n    onPanResponderTerminate: () => {\r\n      //\r\n    },\r\n  });\r\n\r\n  public resetScale = (): void => {\r\n    this.positionX = 0;\r\n    this.positionY = 0;\r\n    this.scale = 1;\r\n    this.animatedScale.setValue(1);\r\n  };\r\n\r\n  public panResponderReleaseResolve = (): void => {\r\n    // 判断是否是 swipeDown\r\n    if (this.props.enableSwipeDown && this.props.swipeDownThreshold) {\r\n      if (this.swipeDownOffset > this.props.swipeDownThreshold) {\r\n        if (this.props.onSwipeDown) {\r\n          this.props.onSwipeDown();\r\n        }\r\n        // Stop reset.\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (this.props.enableCenterFocus && this.scale < 1) {\r\n      // 如果缩放小于1，强制重置为 1\r\n      this.scale = 1;\r\n      Animated.timing(this.animatedScale, {\r\n        toValue: this.scale,\r\n        duration: 100,\r\n        useNativeDriver: !!this.props.useNativeDriver,\r\n      }).start();\r\n    }\r\n\r\n    if (this.props.imageWidth * this.scale <= this.props.cropWidth) {\r\n      // 如果图片宽度小于盒子宽度，横向位置重置\r\n      this.positionX = 0;\r\n      Animated.timing(this.animatedPositionX, {\r\n        toValue: this.positionX,\r\n        duration: 100,\r\n        useNativeDriver: !!this.props.useNativeDriver,\r\n      }).start();\r\n    }\r\n\r\n    if (this.props.imageHeight * this.scale <= this.props.cropHeight) {\r\n      // 如果图片高度小于盒子高度，纵向位置重置\r\n      this.positionY = 0;\r\n      Animated.timing(this.animatedPositionY, {\r\n        toValue: this.positionY,\r\n        duration: 100,\r\n        useNativeDriver: !!this.props.useNativeDriver,\r\n      }).start();\r\n    }\r\n\r\n    // 横向肯定不会超出范围，由拖拽时控制\r\n    // 如果图片高度大于盒子高度，纵向不能出现黑边\r\n    if (this.props.imageHeight * this.scale > this.props.cropHeight) {\r\n      // 纵向能容忍的绝对值\r\n      const verticalMax = (this.props.imageHeight * this.scale - this.props.cropHeight) / 2 / this.scale;\r\n      if (this.positionY < -verticalMax) {\r\n        this.positionY = -verticalMax;\r\n      } else if (this.positionY > verticalMax) {\r\n        this.positionY = verticalMax;\r\n      }\r\n      Animated.timing(this.animatedPositionY, {\r\n        toValue: this.positionY,\r\n        duration: 100,\r\n        useNativeDriver: !!this.props.useNativeDriver,\r\n      }).start();\r\n    }\r\n\r\n    if (this.props.imageWidth * this.scale > this.props.cropWidth) {\r\n      // 纵向能容忍的绝对值\r\n      const horizontalMax = (this.props.imageWidth * this.scale - this.props.cropWidth) / 2 / this.scale;\r\n      if (this.positionX < -horizontalMax) {\r\n        this.positionX = -horizontalMax;\r\n      } else if (this.positionX > horizontalMax) {\r\n        this.positionX = horizontalMax;\r\n      }\r\n      Animated.timing(this.animatedPositionX, {\r\n        toValue: this.positionX,\r\n        duration: 100,\r\n        useNativeDriver: !!this.props.useNativeDriver,\r\n      }).start();\r\n    }\r\n\r\n    // 拖拽正常结束后,如果没有缩放,直接回到0,0点\r\n    if (this.props.enableCenterFocus && this.scale === 1) {\r\n      this.positionX = 0;\r\n      this.positionY = 0;\r\n      Animated.timing(this.animatedPositionX, {\r\n        toValue: this.positionX,\r\n        duration: 100,\r\n        useNativeDriver: !!this.props.useNativeDriver,\r\n      }).start();\r\n      Animated.timing(this.animatedPositionY, {\r\n        toValue: this.positionY,\r\n        duration: 100,\r\n        useNativeDriver: !!this.props.useNativeDriver,\r\n      }).start();\r\n    }\r\n\r\n    // 水平溢出量置空\r\n    this.horizontalWholeOuterCounter = 0;\r\n\r\n    // swipeDown 溢出量置空\r\n    this.swipeDownOffset = 0;\r\n\r\n    this.imageDidMove('onPanResponderRelease');\r\n  };\r\n\r\n  public componentDidMount(): void {\r\n    if (this.props.centerOn) {\r\n      this.centerOn(this.props.centerOn);\r\n    }\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: ImageZoomProps): void {\r\n    // Either centerOn has never been called, or it is a repeat and we should ignore it\r\n    if (\r\n      (this.props.centerOn && !prevProps.centerOn) ||\r\n      (this.props.centerOn && prevProps.centerOn && this.didCenterOnChange(prevProps.centerOn, this.props.centerOn))\r\n    ) {\r\n      this.centerOn(this.props.centerOn);\r\n    }\r\n  }\r\n\r\n  public imageDidMove(type: string): void {\r\n    if (this.props.onMove) {\r\n      this.props.onMove({\r\n        type,\r\n        positionX: this.positionX,\r\n        positionY: this.positionY,\r\n        scale: this.scale,\r\n        zoomCurrentDistance: this.zoomCurrentDistance,\r\n      });\r\n    }\r\n  }\r\n\r\n  public didCenterOnChange(\r\n    params: { x: number; y: number; scale: number; duration: number },\r\n    paramsNext: { x: number; y: number; scale: number; duration: number }\r\n  ): boolean {\r\n    return params.x !== paramsNext.x || params.y !== paramsNext.y || params.scale !== paramsNext.scale;\r\n  }\r\n\r\n  public centerOn(params: ICenterOn): void {\r\n    this.positionX = params.x;\r\n    this.positionY = params.y;\r\n    this.scale = params.scale;\r\n    const duration = params.duration || 300;\r\n    Animated.parallel([\r\n      Animated.timing(this.animatedScale, {\r\n        toValue: this.scale,\r\n        duration,\r\n        useNativeDriver: !!this.props.useNativeDriver,\r\n      }),\r\n      Animated.timing(this.animatedPositionX, {\r\n        toValue: this.positionX,\r\n        duration,\r\n        useNativeDriver: !!this.props.useNativeDriver,\r\n      }),\r\n      Animated.timing(this.animatedPositionY, {\r\n        toValue: this.positionY,\r\n        duration,\r\n        useNativeDriver: !!this.props.useNativeDriver,\r\n      }),\r\n    ]).start(() => {\r\n      this.imageDidMove('centerOn');\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 图片区域视图渲染完毕\r\n   */\r\n  public handleLayout(event: LayoutChangeEvent): void {\r\n    if (this.props.layoutChange) {\r\n      this.props.layoutChange(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 重置大小和位置\r\n   */\r\n  public reset(): void {\r\n    this.scale = 1;\r\n    this.animatedScale.setValue(this.scale);\r\n    this.positionX = 0;\r\n    this.animatedPositionX.setValue(this.positionX);\r\n    this.positionY = 0;\r\n    this.animatedPositionY.setValue(this.positionY);\r\n  }\r\n\r\n  public render(): React.ReactNode {\r\n    const animateConf = {\r\n      transform: [\r\n        {\r\n          scale: this.animatedScale,\r\n        },\r\n        {\r\n          translateX: this.animatedPositionX,\r\n        },\r\n        {\r\n          translateY: this.animatedPositionY,\r\n        },\r\n      ],\r\n    };\r\n\r\n    const parentStyles = StyleSheet.flatten(this.props.style);\r\n\r\n    return (\r\n      <View\r\n        style={{\r\n          ...styles.container,\r\n          ...parentStyles,\r\n          width: this.props.cropWidth,\r\n          height: this.props.cropHeight,\r\n        }}\r\n        {...this.imagePanResponder.panHandlers}\r\n      >\r\n        <Animated.View style={animateConf} renderToHardwareTextureAndroid={this.props.useHardwareTextureAndroid}>\r\n          <View\r\n            onLayout={this.handleLayout.bind(this)}\r\n            style={{\r\n              width: this.props.imageWidth,\r\n              height: this.props.imageHeight,\r\n            }}\r\n          >\r\n            {this.props.children}\r\n          </View>\r\n        </Animated.View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}