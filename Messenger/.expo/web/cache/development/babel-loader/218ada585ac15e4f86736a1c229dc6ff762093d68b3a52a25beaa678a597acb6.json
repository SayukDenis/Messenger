{"ast":null,"code":"import React, { useEffect, useState } from \"react\";\nimport ChatContainer from \"./ChatContainer\";\nimport { connect } from \"react-redux\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { screenHeight } from \"../../Constants/ConstantsForChatlist\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ListOfBranches = function ListOfBranches(_ref) {\n  var chat = _ref.chat,\n    nesting = _ref.nesting,\n    setBranchOpen = _ref.setBranchOpen,\n    stateForBranchesShow = _ref.stateForBranchesShow,\n    navigation = _ref.navigation;\n  var arrayOfBranchesValues = Array.from({\n    length: chat.branches.length\n  }, function (_, index) {\n    return useState(new Animated.Value(0));\n  });\n  var durationOfAnimation = 75 * 1;\n  var translateYOfContainers = arrayOfBranchesValues.map(function (animatedValue, index) {\n    return animatedValue[0].interpolate({\n      inputRange: [0, 1],\n      outputRange: [-screenHeight * 0.08, 0]\n    });\n  });\n  var animationsForBranches = arrayOfBranchesValues.map(function (animatedValue, index) {\n    return Animated.timing(animatedValue[0], {\n      toValue: +stateForBranchesShow,\n      easing: Easing.linear,\n      duration: durationOfAnimation,\n      useNativeDriver: false\n    });\n  });\n  useEffect(function () {\n    Animated.sequence(stateForBranchesShow ? animationsForBranches : animationsForBranches.slice().reverse()).start(function () {\n      if (!stateForBranchesShow) {\n        setBranchOpen();\n      }\n    });\n  }, [stateForBranchesShow]);\n  return _jsx(FlatList, {\n    data: chat.branches,\n    keyExtractor: function keyExtractor(item, index) {\n      return index.toString();\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item,\n        index = _ref2.index;\n      return _jsx(Animated.View, {\n        style: {\n          transform: [{\n            translateY: translateYOfContainers[index]\n          }],\n          opacity: arrayOfBranchesValues[index][0]\n        },\n        children: _jsx(ChatContainer, {\n          chat: item,\n          nesting: nesting,\n          navigation: navigation\n        })\n      });\n    }\n  });\n};\nexport default connect(null)(ListOfBranches);","map":{"version":3,"names":["React","useEffect","useState","ChatContainer","connect","Animated","Easing","FlatList","screenHeight","jsx","_jsx","ListOfBranches","_ref","chat","nesting","setBranchOpen","stateForBranchesShow","navigation","arrayOfBranchesValues","Array","from","length","branches","_","index","Value","durationOfAnimation","translateYOfContainers","map","animatedValue","interpolate","inputRange","outputRange","animationsForBranches","timing","toValue","easing","linear","duration","useNativeDriver","sequence","slice","reverse","start","data","keyExtractor","item","toString","renderItem","_ref2","View","style","transform","translateY","opacity","children"],"sources":["D:/project/1project/Messenger/Messenger/Pages/ChatList/Components/List of folders containers/ListOfBranches.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Chat from \"../../../../dao/Models/Chats/Chat\";\r\nimport ChatContainer from \"./ChatContainer\";\r\nimport { connect } from \"react-redux\";\r\nimport { Animated, Easing, Dimensions, FlatList } from \"react-native\";\r\nimport { screenHeight } from \"../../Constants/ConstantsForChatlist\";\r\ninterface ListOfBranchesProps {\r\n  chat: Chat;\r\n  nesting: number;\r\n  setBranchOpen: () => void;\r\n  stateForBranchesShow: boolean;\r\n  navigation: any;\r\n}\r\nconst ListOfBranches: React.FC<ListOfBranchesProps> = ({\r\n  chat,\r\n  nesting,\r\n  setBranchOpen,\r\n  stateForBranchesShow,\r\n  navigation\r\n}) => {\r\n  const arrayOfBranchesValues = Array.from(\r\n    { length: chat.branches.length },\r\n    (_, index) => useState(new Animated.Value(0))\r\n  );\r\n  const durationOfAnimation: number = 75 * 1;\r\n  const translateYOfContainers = arrayOfBranchesValues.map(\r\n    (animatedValue, index) => {\r\n      return animatedValue[0].interpolate({\r\n        inputRange: [0, 1],\r\n        outputRange: [-screenHeight * 0.08, 0],\r\n      });\r\n    }\r\n  );\r\n  const animationsForBranches = arrayOfBranchesValues.map(\r\n    (animatedValue, index) => {\r\n      return Animated.timing(animatedValue[0], {\r\n        toValue: +stateForBranchesShow,\r\n        easing: Easing.linear,\r\n        duration: durationOfAnimation,\r\n        useNativeDriver: false,\r\n      });\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    Animated.sequence(\r\n      stateForBranchesShow\r\n        ? animationsForBranches\r\n        : animationsForBranches.slice().reverse()\r\n    ).start(() => {\r\n      if (!stateForBranchesShow) {\r\n        setBranchOpen();\r\n      }\r\n    });\r\n  }, [stateForBranchesShow]);\r\n\r\n  return (\r\n    <FlatList\r\n      data={chat.branches}\r\n      keyExtractor={(item, index) => index.toString()}\r\n      renderItem={({ item, index }) => (\r\n        <Animated.View\r\n          style={{\r\n            transform: [{ translateY: translateYOfContainers[index] }],\r\n            opacity: arrayOfBranchesValues[index][0],\r\n          }}\r\n        >\r\n          <ChatContainer\r\n            chat={item}\r\n            nesting={nesting}\r\n            navigation={navigation}\r\n          />\r\n        </Animated.View>\r\n      )}\r\n    />\r\n  );\r\n};\r\nexport default connect(null)(ListOfBranches);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}