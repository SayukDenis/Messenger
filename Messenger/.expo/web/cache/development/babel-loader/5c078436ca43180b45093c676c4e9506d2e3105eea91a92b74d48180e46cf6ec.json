{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { styles } from \"./Styles\";\nimport Header from \"../../SemiComponents/Header\";\nimport PlusIcon from \"../../DialogueProfile/BranchesScreen/Icons/PlusIcon\";\nimport { channel } from \"../../SemiComponents/DBUser\";\nimport BinIcon from \"../../SemiComponents/MainScreen/Icons/BinIcon\";\nimport Blur from \"../../SemiComponents/Blur\";\nimport RemovalApproval from \"../../SemiComponents/MainScreen/RemovalApproval\";\nimport { useIsFocused } from \"@react-navigation/native\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SubscribersScreen = function SubscribersScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState({\n      name: null,\n      avatar: null,\n      id: null\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    subscriberToRemove = _useState2[0],\n    setSubscriberToRemove = _useState2[1];\n  var isFocused = useIsFocused();\n  useEffect(function () {}, [isFocused]);\n  return _jsxs(View, {\n    style: styles.mainContainer,\n    children: [_jsx(Header, {\n      primaryTitle: \"Subscribers\",\n      onGoBackPress: function onGoBackPress() {\n        navigation.goBack();\n      }\n    }), _jsxs(ScrollView, {\n      children: [_jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          navigation.navigate(\"AddSubscriberScreen\");\n        },\n        style: styles.subscriberContainer,\n        children: [_jsx(PlusIcon, {\n          style: styles.plusIcon\n        }), _jsx(Text, {\n          style: styles.plusSubscriberTitle,\n          children: \"Member\"\n        })]\n      }), _jsx(View, {\n        style: {\n          paddingBottom: 0.07 * Dimensions.get(\"screen\").height\n        },\n        children: channel.subscribers.map(function (item, index) {\n          return _jsxs(TouchableOpacity, {\n            onPress: function onPress() {\n              alert(item.name + \" is pressed\");\n            },\n            style: styles.subscriberContainer,\n            children: [_jsx(Image, {\n              source: {\n                uri: item.avatar\n              },\n              style: styles.subscriberAvatarInList\n            }), _jsx(View, {\n              style: styles.contactTitleContainer,\n              children: _jsx(Text, {\n                numberOfLines: 1,\n                style: styles.contactTitleInList,\n                children: item.name\n              })\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                setSubscriberToRemove(item);\n              },\n              style: styles.binIconContainer,\n              children: _jsx(BinIcon, {\n                style: styles.binIcon\n              })\n            })]\n          }, index);\n        })\n      })]\n    }), _jsx(Blur, {\n      visibleWhen: (subscriberToRemove == null ? void 0 : subscriberToRemove.name) != null,\n      onPress: function onPress() {\n        setSubscriberToRemove(null);\n      },\n      style: styles.blurEffect\n    }), _jsx(RemovalApproval, {\n      isVisible: (subscriberToRemove == null ? void 0 : subscriberToRemove.name) != null,\n      onAnyPress: function onAnyPress() {\n        setSubscriberToRemove(null);\n      },\n      onAgreePress: function onAgreePress() {\n        channel.subscribers = channel.subscribers.filter(function (item) {\n          return item.id !== subscriberToRemove.id;\n        });\n      },\n      text: \"Do you really want to kick \" + (subscriberToRemove == null ? void 0 : subscriberToRemove.name) + \"?\"\n    })]\n  });\n};\nexport default SubscribersScreen;","map":{"version":3,"names":["React","useState","useEffect","View","TouchableOpacity","Text","Dimensions","Image","styles","Header","PlusIcon","channel","BinIcon","Blur","RemovalApproval","useIsFocused","ScrollView","jsx","_jsx","jsxs","_jsxs","SubscribersScreen","_ref","navigation","_useState","name","avatar","id","_useState2","_slicedToArray","subscriberToRemove","setSubscriberToRemove","isFocused","style","mainContainer","children","primaryTitle","onGoBackPress","goBack","onPress","navigate","subscriberContainer","plusIcon","plusSubscriberTitle","paddingBottom","get","height","subscribers","map","item","index","alert","source","uri","subscriberAvatarInList","contactTitleContainer","numberOfLines","contactTitleInList","binIconContainer","binIcon","visibleWhen","blurEffect","isVisible","onAnyPress","onAgreePress","filter","text"],"sources":["/home/zatibmag/Desktop/Project/Messenger/Messenger/Pages/Profiles/ChannelProfile/SubscribersScreen/SubscribersScreen.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  TouchableOpacity,\r\n  Text,\r\n  FlatList,\r\n  Dimensions,\r\n  Image,\r\n} from \"react-native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport { styles } from \"./Styles\";\r\nimport Header from \"../../SemiComponents/Header\";\r\nimport PlusIcon from \"../../DialogueProfile/BranchesScreen/Icons/PlusIcon\";\r\nimport { channel } from \"../../SemiComponents/DBUser\";\r\nimport BinIcon from \"../../SemiComponents/MainScreen/Icons/BinIcon\";\r\nimport Blur from \"../../SemiComponents/Blur\";\r\nimport RemovalApproval from \"../../SemiComponents/MainScreen/RemovalApproval\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\n\r\ntype SubscribersScreenProps = {\r\n  navigation: StackNavigationProp<{}>;\r\n};\r\n\r\nconst SubscribersScreen: React.FC<SubscribersScreenProps> = ({\r\n  navigation,\r\n}) => {\r\n  const [subscriberToRemove, setSubscriberToRemove] = useState({\r\n    name: null,\r\n    avatar: null,\r\n    id: null,\r\n  });\r\n\r\n  const isFocused = useIsFocused();\r\n\r\n  useEffect(() => {}, [isFocused]);\r\n\r\n  return (\r\n    <View style={styles.mainContainer}>\r\n      <Header\r\n        primaryTitle=\"Subscribers\"\r\n        onGoBackPress={() => {\r\n          navigation.goBack();\r\n        }}\r\n      />\r\n\r\n      <ScrollView>\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            navigation.navigate(\"AddSubscriberScreen\" as never);\r\n          }}\r\n          style={styles.subscriberContainer}\r\n        >\r\n          <PlusIcon style={styles.plusIcon} />\r\n          <Text style={styles.plusSubscriberTitle}>Member</Text>\r\n        </TouchableOpacity>\r\n\r\n        <View style={{ paddingBottom: 0.07 * Dimensions.get(\"screen\").height }}>\r\n          {channel.subscribers.map((item, index) => (\r\n            <TouchableOpacity\r\n              key={index}\r\n              onPress={() => {\r\n                alert(item.name + \" is pressed\");\r\n              }}\r\n              style={styles.subscriberContainer}\r\n            >\r\n              <Image\r\n                source={{ uri: item.avatar }}\r\n                style={styles.subscriberAvatarInList}\r\n              />\r\n              <View style={styles.contactTitleContainer}>\r\n                <Text numberOfLines={1} style={styles.contactTitleInList}>\r\n                  {item.name}\r\n                </Text>\r\n              </View>\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  setSubscriberToRemove(item);\r\n                }}\r\n                style={styles.binIconContainer}\r\n              >\r\n                <BinIcon style={styles.binIcon} />\r\n              </TouchableOpacity>\r\n            </TouchableOpacity>\r\n          ))}\r\n        </View>\r\n      </ScrollView>\r\n\r\n      <Blur\r\n        visibleWhen={subscriberToRemove?.name != null}\r\n        onPress={() => {\r\n          setSubscriberToRemove(null);\r\n        }}\r\n        style={styles.blurEffect}\r\n      />\r\n\r\n      <RemovalApproval\r\n        isVisible={subscriberToRemove?.name != null}\r\n        onAnyPress={() => {\r\n          setSubscriberToRemove(null);\r\n        }}\r\n        onAgreePress={() => {\r\n          channel.subscribers = channel.subscribers.filter(\r\n            (item) => item.id !== subscriberToRemove.id\r\n          );\r\n        }}\r\n        text={\"Do you really want to kick \" + subscriberToRemove?.name + \"?\"}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default SubscribersScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}