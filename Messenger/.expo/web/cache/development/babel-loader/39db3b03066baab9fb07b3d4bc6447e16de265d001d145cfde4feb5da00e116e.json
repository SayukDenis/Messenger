{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport User from \"../User\";\nimport Message from \"../Message\";\nimport MainChat from \"./MainChat\";\nimport Branch from \"./Branch\";\nimport Role from \"./Role\";\nvar Group = function (_MainChat) {\n  _inherits(Group, _MainChat);\n  var _super = _createSuper(Group);\n  function Group(title) {\n    var _this;\n    _classCallCheck(this, Group);\n    _this = _super.call(this);\n    _this.adminUser = new Array();\n    _this.title = title;\n    return _this;\n  }\n  return _createClass(Group);\n}(MainChat);\nGroup.schema = {\n  name: 'groups',\n  properties: {\n    groupId: {\n      type: 'integer',\n      indexed: true\n    },\n    title: 'text',\n    adminUser: {\n      type: 'list',\n      objectType: User\n    },\n    users: {\n      type: 'list',\n      objectType: User\n    },\n    messages: {\n      type: 'list',\n      objectType: Message\n    },\n    pinnedMessage: {\n      type: 'list',\n      objectType: Message\n    },\n    pinnedMessageForAll: {\n      type: 'list',\n      objectType: Message\n    },\n    branches: {\n      type: 'list',\n      objectType: Branch\n    },\n    roles: {\n      type: 'list',\n      objectType: Role\n    },\n    lastWatchedMessage: {\n      type: 'list',\n      objectType: {}\n    },\n    linkToPhoto: 'text?'\n  },\n  primaryKey: 'groupId',\n  embedded: false\n};\nexport { Group as default };","map":{"version":3,"names":["User","Message","MainChat","Branch","Role","Group","_MainChat","_inherits","_super","_createSuper","title","_this","_classCallCheck","call","adminUser","Array","_createClass","schema","name","properties","groupId","type","indexed","objectType","users","messages","pinnedMessage","pinnedMessageForAll","branches","roles","lastWatchedMessage","linkToPhoto","primaryKey","embedded","default"],"sources":["D:/project/1project/Messenger/Messenger/dao/Models/Chats/Group.ts"],"sourcesContent":["import User from '../User';\r\nimport Message from '../Message';\r\nimport MainChat from './MainChat';\r\nimport ILastWatchedMessage from './ILastWatchedMessage';\r\nimport Branch from './Branch';\r\nimport Role from './Role';\r\n\r\nexport default class Group extends MainChat {\r\n    constructor(title: string) {\r\n        super();\r\n        this.title = title;\r\n    }\r\n    groupId?: number;\r\n    title!: string;\r\n    adminUser: Array<User> = new Array;\r\n    //schema\r\n    static schema = {\r\n        name: 'groups',\r\n        properties: {\r\n            groupId: { type: 'integer', indexed: true },\r\n            title: 'text',\r\n            adminUser: { type: 'list', objectType: User },\r\n            users: { type: 'list', objectType: User },\r\n            messages: { type: 'list', objectType: Message },\r\n            pinnedMessage: { type: 'list', objectType: Message },\r\n            pinnedMessageForAll: { type: 'list', objectType: Message },\r\n            branches: { type: 'list', objectType: Branch },\r\n            roles: { type: 'list', objectType: Role },\r\n            lastWatchedMessage: { type: 'list', objectType: {} as ILastWatchedMessage },\r\n            linkToPhoto: 'text?',\r\n        },\r\n        primaryKey: 'groupId',\r\n        embedded: false,\r\n    }\r\n}"],"mappings":";;;;;;;AAAA,OAAOA,IAAI;AACX,OAAOC,OAAO;AACd,OAAOC,QAAQ;AAEf,OAAOC,MAAM;AACb,OAAOC,IAAI;AAAe,IAELC,KAAK,aAAAC,SAAA;EAAAC,SAAA,CAAAF,KAAA,EAAAC,SAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,KAAA;EACtB,SAAAA,MAAYK,KAAa,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAP,KAAA;IACvBM,KAAA,GAAAH,MAAA,CAAAK,IAAA;IAAQF,KAAA,CAKZG,SAAS,GAAgB,IAAIC,KAAK,CAAD,CAAC;IAJ9BJ,KAAA,CAAKD,KAAK,GAAGA,KAAK;IAAC,OAAAC,KAAA;EACvB;EAAC,OAAAK,YAAA,CAAAX,KAAA;AAAA,EAJ8BH,QAAQ;AAAtBG,KAAK,CASfY,MAAM,GAAG;EACZC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACRC,OAAO,EAAE;MAAEC,IAAI,EAAE,SAAS;MAAEC,OAAO,EAAE;IAAK,CAAC;IAC3CZ,KAAK,EAAE,MAAM;IACbI,SAAS,EAAE;MAAEO,IAAI,EAAE,MAAM;MAAEE,UAAU,EAAEvB;IAAK,CAAC;IAC7CwB,KAAK,EAAE;MAAEH,IAAI,EAAE,MAAM;MAAEE,UAAU,EAAEvB;IAAK,CAAC;IACzCyB,QAAQ,EAAE;MAAEJ,IAAI,EAAE,MAAM;MAAEE,UAAU,EAAEtB;IAAQ,CAAC;IAC/CyB,aAAa,EAAE;MAAEL,IAAI,EAAE,MAAM;MAAEE,UAAU,EAAEtB;IAAQ,CAAC;IACpD0B,mBAAmB,EAAE;MAAEN,IAAI,EAAE,MAAM;MAAEE,UAAU,EAAEtB;IAAQ,CAAC;IAC1D2B,QAAQ,EAAE;MAAEP,IAAI,EAAE,MAAM;MAAEE,UAAU,EAAEpB;IAAO,CAAC;IAC9C0B,KAAK,EAAE;MAAER,IAAI,EAAE,MAAM;MAAEE,UAAU,EAAEnB;IAAK,CAAC;IACzC0B,kBAAkB,EAAE;MAAET,IAAI,EAAE,MAAM;MAAEE,UAAU,EAAE,CAAC;IAAyB,CAAC;IAC3EQ,WAAW,EAAE;EACjB,CAAC;EACDC,UAAU,EAAE,SAAS;EACrBC,QAAQ,EAAE;AACd,CAAC;AAAA,SA1BgB5B,KAAK,IAAA6B,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}