{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { styles } from \"./Styles\";\nimport { useIsFocused } from \"@react-navigation/native\";\nimport Multimedia from \"../../SemiComponents/MainScreen/Multimedia/Multimedia\";\nimport Blur from \"../../SemiComponents/MainScreen/Blur\";\nimport RemovalApproval from \"../../SemiComponents/MainScreen/RemovalApproval\";\nimport { tempUser, user } from \"../../SemiComponents/DBUser\";\nimport AlbumLongPressedMenu from \"../../SemiComponents/MainScreen/Multimedia/AlbumLongPressedMenu\";\nimport BottomToolBar from \"../../SemiComponents/MainScreen/ButtomToolBar\";\nimport Avatars from \"./Avatars\";\nimport TopMenuWhenSelection from \"../../SemiComponents/TopMenuWhenSelection\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AvatarsAndInfoScreen = function AvatarsAndInfoScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"Photos\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    pressedMultimediaButton = _useState2[0],\n    _setPressedMultimediaButton = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isPhotoAlbumSelectionVisible = _useState4[0],\n    _setIsPhotoAlbumSelectionVisible = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    longPressedAlbum = _useState6[0],\n    _setLongPressedAlbum = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    positionYOfLongPressedAlbum = _useState8[0],\n    _setPositionYOfLongPressedAlbum = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isDeleteAlbumPressed = _useState10[0],\n    setIsDeleteAlbumPressed = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isAlbumSelectionVisible = _useState12[0],\n    setIsAlbumSelectionVisible = _useState12[1];\n  var _useState13 = useState([]),\n    _useState14 = _slicedToArray(_useState13, 2),\n    selectedAlbums = _useState14[0],\n    _setSelectedAlbums = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    isDeleteAllAlbumsPressed = _useState16[0],\n    setIsDeleteAllAlbumsPressed = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    isDeleteSelectedAlbumsPressed = _useState18[0],\n    setIsDeleteSelectedAlbumsPressed = _useState18[1];\n  var isFocused = useIsFocused();\n  useEffect(function () {}, [isFocused]);\n  var blursConditions = [isPhotoAlbumSelectionVisible, longPressedAlbum != null, isDeleteAlbumPressed, isDeleteAllAlbumsPressed, isDeleteSelectedAlbumsPressed];\n  var blursOnPress = [function () {\n    _setIsPhotoAlbumSelectionVisible(false);\n  }, function () {\n    _setLongPressedAlbum(null);\n  }, function () {\n    setIsDeleteAlbumPressed(false);\n  }, function () {\n    setIsDeleteAllAlbumsPressed(false);\n  }, function () {\n    setIsDeleteSelectedAlbumsPressed(false);\n  }];\n  return _jsxs(View, {\n    style: styles.mainContainer,\n    children: [blursConditions.map(function (item, index) {\n      return _jsx(Blur, {\n        visibleWhen: item,\n        onPress: function onPress() {\n          blursOnPress[index]();\n        },\n        style: [styles.blurEffect, {\n          zIndex: index == 2 || index == 3 || index == 4 ? 3 : 1\n        }]\n      }, index);\n    }), _jsx(RemovalApproval, {\n      isVisible: isDeleteAlbumPressed,\n      onAnyPress: function onAnyPress() {\n        setIsDeleteAlbumPressed(false);\n      },\n      onAgreePress: function onAgreePress() {\n        user.albums.splice(user.albums.indexOf(longPressedAlbum), 1);\n        _setLongPressedAlbum(null);\n      },\n      text: \"Do you really want to delete an album?\"\n    }), _jsx(RemovalApproval, {\n      isVisible: isDeleteAllAlbumsPressed,\n      onAnyPress: function onAnyPress() {\n        setIsDeleteAllAlbumsPressed(false);\n      },\n      onAgreePress: function onAgreePress() {\n        user.albums = Array();\n        setIsAlbumSelectionVisible(false);\n      },\n      text: \"Do you really want to delete all albums?\"\n    }), _jsx(RemovalApproval, {\n      isVisible: isDeleteSelectedAlbumsPressed,\n      onAnyPress: function onAnyPress() {\n        setIsDeleteSelectedAlbumsPressed(false);\n      },\n      onAgreePress: function onAgreePress() {\n        selectedAlbums.forEach(function (album) {\n          user.albums.splice(user.albums.indexOf(album), 1);\n        });\n        _setSelectedAlbums(Array());\n        setIsAlbumSelectionVisible(false);\n      },\n      text: \"Do you really want to delete selected albums?\"\n    }), _jsx(TopMenuWhenSelection, {\n      isVisible: isAlbumSelectionVisible,\n      quantityOfSelectedItems: selectedAlbums.length,\n      onCancelPress: function onCancelPress() {\n        _setSelectedAlbums([]);\n        setIsAlbumSelectionVisible(false);\n      },\n      onDeleteAllPress: function onDeleteAllPress() {\n        setIsDeleteAllAlbumsPressed(true);\n      }\n    }), _jsx(AlbumLongPressedMenu, {\n      isVisible: longPressedAlbum != null,\n      longPressedAlbum: longPressedAlbum,\n      positionYOfLongPressedAlbum: positionYOfLongPressedAlbum,\n      onDeleteAlbumPress: function onDeleteAlbumPress() {\n        setIsDeleteAlbumPressed(true);\n      },\n      onSelectAlbumPress: function onSelectAlbumPress() {\n        setIsAlbumSelectionVisible(true);\n        _setLongPressedAlbum(null);\n      }\n    }), _jsx(BottomToolBar, {\n      isVisible: isAlbumSelectionVisible,\n      onDeletePress: function onDeletePress() {\n        setIsDeleteSelectedAlbumsPressed(true);\n      },\n      onForwardPress: function onForwardPress() {\n        alert(\"Forward album...\");\n      }\n    }), _jsxs(ScrollView, {\n      style: {\n        flex: 1,\n        zIndex: isPhotoAlbumSelectionVisible ? 2 : 0\n      },\n      contentContainerStyle: {\n        zIndex: isPhotoAlbumSelectionVisible ? 2 : 0\n      },\n      overScrollMode: \"never\",\n      showsVerticalScrollIndicator: false,\n      onScroll: function onScroll() {\n        _setIsPhotoAlbumSelectionVisible(false);\n      },\n      children: [_jsx(Blur, {\n        visibleWhen: isPhotoAlbumSelectionVisible,\n        onPress: function onPress() {\n          _setIsPhotoAlbumSelectionVisible(false);\n        },\n        style: [styles.blurEffect, {\n          zIndex: 3\n        }]\n      }), _jsx(Avatars, {\n        onGoBackPress: function onGoBackPress() {\n          navigation.goBack();\n        }\n      }), _jsx(Multimedia, {\n        isPhotoAlbumSelectionVisible: isPhotoAlbumSelectionVisible,\n        setIsPhotoAlbumSelectionVisible: function setIsPhotoAlbumSelectionVisible(value) {\n          return _setIsPhotoAlbumSelectionVisible(value);\n        },\n        pressedMultimediaButton: pressedMultimediaButton,\n        setPressedMultimediaButton: function setPressedMultimediaButton(value) {\n          _setPressedMultimediaButton(value);\n        },\n        onAlbumPress: function onAlbumPress(value) {\n          tempUser.selectedAlbum = value;\n          navigation.navigate(\"AlbumFilling\");\n        },\n        onNewAlbumPress: function onNewAlbumPress() {\n          navigation.navigate(\"NewAlbumScreen\");\n        },\n        setLongPressedAlbum: function setLongPressedAlbum(value) {\n          _setLongPressedAlbum(value);\n        },\n        setPositionYOfLongPressedAlbum: function setPositionYOfLongPressedAlbum(value) {\n          return _setPositionYOfLongPressedAlbum(value);\n        },\n        isAlbumSelectionVisible: isAlbumSelectionVisible,\n        selectedAlbums: selectedAlbums,\n        setSelectedAlbums: function setSelectedAlbums(value) {\n          return _setSelectedAlbums(value);\n        }\n      })]\n    })]\n  });\n};\nexport default AvatarsAndInfoScreen;","map":{"version":3,"names":["React","useState","useEffect","View","ScrollView","styles","useIsFocused","Multimedia","Blur","RemovalApproval","tempUser","user","AlbumLongPressedMenu","BottomToolBar","Avatars","TopMenuWhenSelection","jsx","_jsx","jsxs","_jsxs","AvatarsAndInfoScreen","_ref","navigation","_useState","_useState2","_slicedToArray","pressedMultimediaButton","setPressedMultimediaButton","_useState3","_useState4","isPhotoAlbumSelectionVisible","setIsPhotoAlbumSelectionVisible","_useState5","_useState6","longPressedAlbum","setLongPressedAlbum","_useState7","_useState8","positionYOfLongPressedAlbum","setPositionYOfLongPressedAlbum","_useState9","_useState10","isDeleteAlbumPressed","setIsDeleteAlbumPressed","_useState11","_useState12","isAlbumSelectionVisible","setIsAlbumSelectionVisible","_useState13","_useState14","selectedAlbums","setSelectedAlbums","_useState15","_useState16","isDeleteAllAlbumsPressed","setIsDeleteAllAlbumsPressed","_useState17","_useState18","isDeleteSelectedAlbumsPressed","setIsDeleteSelectedAlbumsPressed","isFocused","blursConditions","blursOnPress","style","mainContainer","children","map","item","index","visibleWhen","onPress","blurEffect","zIndex","isVisible","onAnyPress","onAgreePress","albums","splice","indexOf","text","Array","forEach","album","quantityOfSelectedItems","length","onCancelPress","onDeleteAllPress","onDeleteAlbumPress","onSelectAlbumPress","onDeletePress","onForwardPress","alert","flex","contentContainerStyle","overScrollMode","showsVerticalScrollIndicator","onScroll","onGoBackPress","goBack","value","onAlbumPress","selectedAlbum","navigate","onNewAlbumPress"],"sources":["/home/zatibmag/Desktop/Project/Messenger/Messenger/Pages/Profiles/DialogueProfile/AvatarsAndInfoScreen/AvatarsAndInfoScreen.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { View, ScrollView } from \"react-native\";\r\nimport { styles } from \"./Styles\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport Multimedia from \"../../SemiComponents/MainScreen/Multimedia/Multimedia\";\r\nimport Blur from \"../../SemiComponents/MainScreen/Blur\";\r\nimport RemovalApproval from \"../../SemiComponents/MainScreen/RemovalApproval\";\r\nimport { Album, tempUser, user } from \"../../SemiComponents/DBUser\";\r\nimport AlbumLongPressedMenu from \"../../SemiComponents/MainScreen/Multimedia/AlbumLongPressedMenu\";\r\nimport BottomToolBar from \"../../SemiComponents/MainScreen/ButtomToolBar\";\r\nimport Avatars from \"./Avatars\";\r\nimport TopMenuWhenSelection from \"../../SemiComponents/TopMenuWhenSelection\";\r\n\r\ntype AvatarsAndInfoScreenProps = {\r\n  navigation: StackNavigationProp<{}>; // Встановіть правильний тип для navigation\r\n};\r\n\r\nconst AvatarsAndInfoScreen: React.FC<AvatarsAndInfoScreenProps> = ({\r\n  navigation,\r\n}) => {\r\n  const [pressedMultimediaButton, setPressedMultimediaButton] =\r\n    useState(\"Photos\");\r\n  const [isPhotoAlbumSelectionVisible, setIsPhotoAlbumSelectionVisible] =\r\n    useState(false);\r\n  const [longPressedAlbum, setLongPressedAlbum] = useState(null);\r\n  const [positionYOfLongPressedAlbum, setPositionYOfLongPressedAlbum] =\r\n    useState(0);\r\n  const [isDeleteAlbumPressed, setIsDeleteAlbumPressed] = useState(false);\r\n  const [isAlbumSelectionVisible, setIsAlbumSelectionVisible] = useState(false);\r\n  const [selectedAlbums, setSelectedAlbums] = useState<Array<Album>>([]);\r\n  const [isDeleteAllAlbumsPressed, setIsDeleteAllAlbumsPressed] =\r\n    useState(false);\r\n  const [isDeleteSelectedAlbumsPressed, setIsDeleteSelectedAlbumsPressed] =\r\n    useState(false);\r\n\r\n  const isFocused = useIsFocused();\r\n\r\n  useEffect(() => {}, [isFocused]);\r\n\r\n  var blursConditions: boolean[] = [\r\n    isPhotoAlbumSelectionVisible,\r\n    longPressedAlbum != null,\r\n    isDeleteAlbumPressed,\r\n    isDeleteAllAlbumsPressed,\r\n    isDeleteSelectedAlbumsPressed,\r\n  ];\r\n  var blursOnPress: (() => void)[] = [\r\n    () => {\r\n      setIsPhotoAlbumSelectionVisible(false);\r\n    },\r\n    () => {\r\n      setLongPressedAlbum(null);\r\n    },\r\n    () => {\r\n      setIsDeleteAlbumPressed(false);\r\n    },\r\n    () => {\r\n      setIsDeleteAllAlbumsPressed(false);\r\n    },\r\n    () => {\r\n      setIsDeleteSelectedAlbumsPressed(false);\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <View style={styles.mainContainer}>\r\n      {blursConditions.map((item, index) => (\r\n        <Blur\r\n          key={index}\r\n          visibleWhen={item}\r\n          onPress={() => {\r\n            blursOnPress[index]();\r\n          }}\r\n          style={[\r\n            styles.blurEffect,\r\n            {\r\n              zIndex: index == 2 || index == 3 || index == 4 ? 3 : 1,\r\n            },\r\n          ]}\r\n        />\r\n      ))}\r\n\r\n      {/* Approval to delete an album */}\r\n      <RemovalApproval\r\n        isVisible={isDeleteAlbumPressed}\r\n        onAnyPress={() => {\r\n          setIsDeleteAlbumPressed(false);\r\n        }}\r\n        onAgreePress={() => {\r\n          user.albums.splice(user.albums.indexOf(longPressedAlbum), 1);\r\n          setLongPressedAlbum(null);\r\n        }}\r\n        text=\"Do you really want to delete an album?\"\r\n      />\r\n\r\n      {/* Approval to delete all albums */}\r\n      <RemovalApproval\r\n        isVisible={isDeleteAllAlbumsPressed}\r\n        onAnyPress={() => {\r\n          setIsDeleteAllAlbumsPressed(false);\r\n        }}\r\n        onAgreePress={() => {\r\n          user.albums = Array<Album>();\r\n          setIsAlbumSelectionVisible(false);\r\n        }}\r\n        text=\"Do you really want to delete all albums?\"\r\n      />\r\n\r\n      {/* Approval to delete selected albums */}\r\n      <RemovalApproval\r\n        isVisible={isDeleteSelectedAlbumsPressed}\r\n        onAnyPress={() => {\r\n          setIsDeleteSelectedAlbumsPressed(false);\r\n        }}\r\n        onAgreePress={() => {\r\n          selectedAlbums.forEach((album) => {\r\n            user.albums.splice(user.albums.indexOf(album), 1);\r\n          });\r\n          setSelectedAlbums(Array<Album>());\r\n          setIsAlbumSelectionVisible(false);\r\n        }}\r\n        text=\"Do you really want to delete selected albums?\"\r\n      />\r\n\r\n      <TopMenuWhenSelection\r\n        isVisible={isAlbumSelectionVisible}\r\n        quantityOfSelectedItems={selectedAlbums.length}\r\n        onCancelPress={() => {\r\n          setSelectedAlbums([]);\r\n          setIsAlbumSelectionVisible(false);\r\n        }}\r\n        onDeleteAllPress={() => {\r\n          setIsDeleteAllAlbumsPressed(true);\r\n        }}\r\n      />\r\n\r\n      <AlbumLongPressedMenu\r\n        isVisible={longPressedAlbum != null}\r\n        longPressedAlbum={longPressedAlbum}\r\n        positionYOfLongPressedAlbum={positionYOfLongPressedAlbum}\r\n        onDeleteAlbumPress={() => {\r\n          setIsDeleteAlbumPressed(true);\r\n        }}\r\n        onSelectAlbumPress={() => {\r\n          setIsAlbumSelectionVisible(true);\r\n          setLongPressedAlbum(null);\r\n        }}\r\n      />\r\n\r\n      <BottomToolBar\r\n        isVisible={isAlbumSelectionVisible}\r\n        onDeletePress={() => {\r\n          setIsDeleteSelectedAlbumsPressed(true);\r\n        }}\r\n        onForwardPress={() => {\r\n          alert(\"Forward album...\");\r\n        }}\r\n      />\r\n\r\n      <ScrollView\r\n        style={{\r\n          flex: 1,\r\n          zIndex: isPhotoAlbumSelectionVisible ? 2 : 0,\r\n        }}\r\n        contentContainerStyle={{\r\n          zIndex: isPhotoAlbumSelectionVisible ? 2 : 0,\r\n        }}\r\n        overScrollMode=\"never\"\r\n        showsVerticalScrollIndicator={false}\r\n        onScroll={() => {\r\n          setIsPhotoAlbumSelectionVisible(false);\r\n        }}\r\n      >\r\n        <Blur\r\n          visibleWhen={isPhotoAlbumSelectionVisible}\r\n          onPress={() => {\r\n            setIsPhotoAlbumSelectionVisible(false);\r\n          }}\r\n          style={[styles.blurEffect, { zIndex: 3 }]}\r\n        />\r\n\r\n        <Avatars\r\n          onGoBackPress={() => {\r\n            navigation.goBack();\r\n          }}\r\n        />\r\n\r\n        {/* Multimedia bar with photo/albums, files, voice, links buttons*/}\r\n        <Multimedia\r\n          isPhotoAlbumSelectionVisible={isPhotoAlbumSelectionVisible}\r\n          setIsPhotoAlbumSelectionVisible={(value: boolean) =>\r\n            setIsPhotoAlbumSelectionVisible(value)\r\n          }\r\n          pressedMultimediaButton={pressedMultimediaButton}\r\n          setPressedMultimediaButton={(value: string) => {\r\n            setPressedMultimediaButton(value);\r\n          }}\r\n          onAlbumPress={(value: Album) => {\r\n            tempUser.selectedAlbum = value;\r\n            navigation.navigate(\"AlbumFilling\" as never);\r\n          }}\r\n          onNewAlbumPress={() => {\r\n            navigation.navigate(\"NewAlbumScreen\" as never);\r\n          }}\r\n          setLongPressedAlbum={(value: Album) => {\r\n            setLongPressedAlbum(value);\r\n          }}\r\n          setPositionYOfLongPressedAlbum={(value: number) =>\r\n            setPositionYOfLongPressedAlbum(value)\r\n          }\r\n          isAlbumSelectionVisible={isAlbumSelectionVisible}\r\n          selectedAlbums={selectedAlbums}\r\n          setSelectedAlbums={(value: Array<Album>) => setSelectedAlbums(value)}\r\n        />\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default AvatarsAndInfoScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}