{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useRef, useState } from \"react\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Constants from \"expo-constants\";\nimport { headerstyles } from \"../Styles/HeaderStyle\";\nimport MagnifyingGlass from \"./Headers containers/MagnifyingGlass\";\nimport ModeOfEmployment from \"./Headers containers/ModeOfEmployment\";\nimport { connect } from \"react-redux\";\nimport RightContainer from \"./Headers containers/RightContainer\";\nimport HamburgerSVG from \"./SVG/HamburgerSVG\";\nimport BackButtonForHeaderChatListSVG from \"./SVG/BackButtonForHeaderChatListSVG\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  screenWidth = _Dimensions$get.width,\n  screenHeight = _Dimensions$get.height;\nfunction Header(_ref) {\n  var mySelfUser = _ref.mySelfUser,\n    isTouchableHeader = _ref.isTouchableHeader,\n    onPress = _ref.onPress;\n  var HamburgerAnimationDuration = 100;\n  var _useState = useState(1),\n    _useState2 = _slicedToArray(_useState, 2),\n    animationStateForTouchHamburger = _useState2[0],\n    setAnimationStateForTouchHamburger = _useState2[1];\n  var HamburgerAnimationStatePosition = useRef(new Animated.Value(0));\n  var HamburgerAnimationStateForLines = useRef(new Animated.Value(0));\n  var HamburgerAnimationStateForLinesPosition = useRef(new Animated.Value(0));\n  var HamburgerAnimationPosition = HamburgerAnimationStatePosition.current.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, -screenWidth * 0.8]\n  });\n  var onHamburgerPres = function onHamburgerPres() {\n    Animated.timing(HamburgerAnimationStatePosition.current, {\n      toValue: animationStateForTouchHamburger,\n      duration: HamburgerAnimationDuration,\n      useNativeDriver: true\n    }).start();\n    setAnimationStateForTouchHamburger(animationStateForTouchHamburger == 0 ? 1 : 0);\n  };\n  return _jsx(View, {\n    style: [{\n      position: \"absolute\",\n      top: Platform.OS == \"android\" ? 100 : 0,\n      left: 0,\n      right: 0,\n      zIndex: 5,\n      elevation: 0.001,\n      borderBottomLeftRadius: 30,\n      borderBottomRightRadius: 30,\n      height: Platform.OS == \"android\" ? screenHeight * 0.08 + StatusBar.currentHeight : screenHeight * 0.08 + Constants.statusBarHeight,\n      justifyContent: \"flex-end\"\n    }],\n    children: _jsx(View, {\n      style: headerstyles.container,\n      children: _jsxs(Animated.View, {\n        style: [headerstyles.header],\n        children: [_jsx(Animated.View, {\n          style: {\n            flexDirection: \"row\",\n            transform: [{\n              translateX: HamburgerAnimationPosition\n            }]\n          },\n          children: _jsxs(Animated.View, {\n            style: [{\n              justifyContent: \"space-between\",\n              flexDirection: \"row\",\n              width: screenWidth * 0.96\n            }],\n            children: [_jsx(MagnifyingGlass, {\n              style: headerstyles.magnifyingglass\n            }), _jsx(ModeOfEmployment, {}), _jsx(TouchableOpacity, {\n              style: {\n                justifyContent: \"center\"\n              },\n              onPress: onHamburgerPres,\n              children: animationStateForTouchHamburger == 1 ? _jsx(HamburgerSVG, {}) : _jsx(BackButtonForHeaderChatListSVG, {})\n            })]\n          })\n        }), _jsx(Animated.View, {\n          style: [{\n            transform: [{\n              translateX: HamburgerAnimationPosition\n            }]\n          }],\n          children: _jsx(RightContainer, {})\n        })]\n      })\n    })\n  });\n}\nexport default connect(null)(Header);","map":{"version":3,"names":["useRef","useState","React","View","TouchableOpacity","Animated","Dimensions","Platform","StatusBar","Constants","headerstyles","MagnifyingGlass","ModeOfEmployment","connect","RightContainer","HamburgerSVG","BackButtonForHeaderChatListSVG","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","screenWidth","width","screenHeight","height","Header","_ref","mySelfUser","isTouchableHeader","onPress","HamburgerAnimationDuration","_useState","_useState2","_slicedToArray","animationStateForTouchHamburger","setAnimationStateForTouchHamburger","HamburgerAnimationStatePosition","Value","HamburgerAnimationStateForLines","HamburgerAnimationStateForLinesPosition","HamburgerAnimationPosition","current","interpolate","inputRange","outputRange","onHamburgerPres","timing","toValue","duration","useNativeDriver","start","style","position","top","OS","left","right","zIndex","elevation","borderBottomLeftRadius","borderBottomRightRadius","currentHeight","statusBarHeight","justifyContent","children","container","header","flexDirection","transform","translateX","magnifyingglass"],"sources":["C:/Users/Admin/Project/Messenger/Messenger/Pages/ChatList/Components/Header.tsx"],"sourcesContent":["import { createRef, useDebugValue, useEffect, useRef, useState } from \"react\";\r\nimport React from \"react\";\r\nimport {\r\n  View,\r\n  TouchableOpacity,\r\n  Animated,\r\n  Dimensions,\r\n  SafeAreaView,\r\n  Platform,\r\n  StatusBar,\r\n} from \"react-native\";\r\nimport Constants from \"expo-constants\";\r\nimport { headerstyles } from \"../Styles/HeaderStyle\";\r\nimport MagnifyingGlass from \"./Headers containers/MagnifyingGlass\";\r\nimport ModeOfEmployment from \"./Headers containers/ModeOfEmployment\";\r\nimport Line from \"./Headers containers/Line\";\r\nimport MySelfUser from \"../1HelpFullFolder/MySelfUser\";\r\nimport ContactsSvg from \"./SVG/ContactsSvg\";\r\nimport AddFolderSvg from \"./SVG/AddFolderSvg\";\r\nimport WriteMessageSvg from \"./SVG/WriteMessageSvg\";\r\nimport UserIconSvg from \"./SVG/UserIconSvg\";\r\nimport { connect } from \"react-redux\";\r\nimport RightContainersForSwipe from \"./List of folders containers/RightContainersForSwipe\";\r\nimport RightContainer from \"./Headers containers/RightContainer\";\r\nimport HamburgerSVG from \"./SVG/HamburgerSVG\";\r\nimport BackButtonForHeaderChatListSVG from \"./SVG/BackButtonForHeaderChatListSVG\";\r\nconst { width: screenWidth, height: screenHeight } = Dimensions.get(\"window\");\r\n\r\nfunction Header({\r\n  mySelfUser,\r\n  isTouchableHeader,\r\n  onPress,\r\n}: {\r\n  mySelfUser: MySelfUser;\r\n  isTouchableHeader: boolean;\r\n  onPress: () => void;\r\n}) {\r\n  const HamburgerAnimationDuration = 100;\r\n  const [animationStateForTouchHamburger, setAnimationStateForTouchHamburger] =\r\n    useState(1);\r\n  const HamburgerAnimationStatePosition = useRef(new Animated.Value(0));\r\n  const HamburgerAnimationStateForLines = useRef(new Animated.Value(0));\r\n  const HamburgerAnimationStateForLinesPosition = useRef(new Animated.Value(0));\r\n  const HamburgerAnimationPosition =\r\n    HamburgerAnimationStatePosition.current.interpolate({\r\n      inputRange: [0, 1],\r\n      outputRange: [0, -screenWidth * 0.8],\r\n    });\r\n\r\n  const onHamburgerPres = () => {\r\n    Animated.timing(HamburgerAnimationStatePosition.current, {\r\n      toValue: animationStateForTouchHamburger,\r\n      duration: HamburgerAnimationDuration,\r\n      useNativeDriver: true,\r\n    }).start();\r\n    setAnimationStateForTouchHamburger(\r\n      animationStateForTouchHamburger == 0 ? 1 : 0\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View\r\n      style={[\r\n        {\r\n          position: \"absolute\",\r\n          top: Platform.OS == \"android\" ? 100 : 0,\r\n          left: 0,\r\n          right: 0,\r\n          zIndex: 5,\r\n          elevation: 0.001,\r\n          borderBottomLeftRadius: 30,\r\n          borderBottomRightRadius: 30,\r\n          height:\r\n            Platform.OS == \"android\"\r\n              ? screenHeight * 0.08 + StatusBar.currentHeight\r\n              : screenHeight * 0.08 + Constants.statusBarHeight,\r\n          justifyContent: \"flex-end\",\r\n        },\r\n      ]}\r\n    >\r\n      <View style={headerstyles.container}>\r\n        <Animated.View style={[headerstyles.header]}>\r\n          <Animated.View\r\n            style={{\r\n              flexDirection: \"row\",\r\n              transform: [{ translateX: HamburgerAnimationPosition }],\r\n            }}\r\n          >\r\n            <Animated.View\r\n              style={[\r\n                {\r\n                  justifyContent: \"space-between\",\r\n                  flexDirection: \"row\",\r\n                  width: screenWidth * 0.96,\r\n                },\r\n              ]}\r\n            >\r\n              <MagnifyingGlass style={headerstyles.magnifyingglass} />\r\n              <ModeOfEmployment />\r\n              <TouchableOpacity\r\n                style={{justifyContent:\"center\"}}\r\n                onPress={onHamburgerPres}\r\n              >\r\n               {animationStateForTouchHamburger==1?<HamburgerSVG/>:<BackButtonForHeaderChatListSVG/>} \r\n              </TouchableOpacity>\r\n            </Animated.View>\r\n          </Animated.View>\r\n          <Animated.View\r\n            style={[\r\n              { transform: [{ translateX: HamburgerAnimationPosition }] },\r\n            ]}\r\n          >\r\n            <RightContainer />\r\n          </Animated.View>\r\n        </Animated.View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\nexport default connect(null)(Header);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}