{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { footerstyles } from \"../../Styles/FooterStyle\";\nimport AddChatSvg from \"../SVG/AddChatSvg\";\nimport OnNotifications from \"../SVG/OnNotifications\";\nimport OffNotificationSvg from \"../SVG/OffNotifications\";\nimport EditFolderSvg from \"../SVG/EditFolderSvg\";\nimport DeleteSvg from \"../SVG/Delete\";\nimport SortFoldersSvg from \"../SVG/SortFolders\";\nimport ReadFoldersMessagesSvg from \"../SVG/ReadFoldersMessagesSvg\";\nimport { mySelfUser } from \"../../1HelpFullFolder/Initialization\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  screenWidth = _Dimensions$get.width,\n  screenHeight = _Dimensions$get.height;\nvar FolderModalWindow = function FolderModalWindow(_ref) {\n  var folder = _ref.folder,\n    positionX = _ref.positionX,\n    widthOfFolder = _ref.widthOfFolder,\n    positionXInContainer = _ref.positionXInContainer;\n  var statusNotification = Math.random() < 0.5;\n  var getStylePosition = function getStylePosition(position) {\n    if (position <= screenWidth * 0.5) {\n      return {\n        left: position\n      };\n    } else {\n      return {\n        right: screenWidth - position\n      };\n    }\n    return {};\n  };\n  var haveFolderUnreadMessages = function haveFolderUnreadMessages(folder) {\n    for (var i = 0; i < folder.listOfChats.length; i++) {\n      var _chat$dictionary;\n      var chat = folder.listOfChats[i];\n      var lastMessage = chat.listOfMessages.length > 0 ? chat.listOfMessages[chat.listOfMessages.length - 1] : undefined;\n      var id = (_chat$dictionary = chat.dictionary) == null ? void 0 : _chat$dictionary.get(mySelfUser.id);\n      if (!lastMessage) continue;\n      if (lastMessage.sender !== mySelfUser) {\n        if (id && lastMessage.id > id) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  return _jsxs(TouchableOpacity, {\n    activeOpacity: 1,\n    style: [footerstyles.modalWindowContainerStyle, getStylePosition(positionX - positionXInContainer + widthOfFolder / 2)],\n    children: [_jsxs(View, {\n      style: footerstyles.containerForModalWindowText,\n      children: [_jsx(View, {\n        style: footerstyles.svgContainer,\n        children: _jsx(AddChatSvg, {\n          height: screenHeight * 0.045,\n          width: screenWidth * 0.045\n        })\n      }), _jsx(Text, {\n        style: footerstyles.modalWindowText,\n        children: \"Add chat\"\n      })]\n    }), _jsxs(View, {\n      style: footerstyles.containerForModalWindowText,\n      children: [_jsx(View, {\n        style: footerstyles.svgContainer,\n        children: _jsx(EditFolderSvg, {\n          width: screenWidth * 0.045,\n          height: screenHeight * 0.045\n        })\n      }), _jsx(Text, {\n        style: footerstyles.modalWindowText,\n        children: \"Edit folder\"\n      })]\n    }), _jsxs(View, {\n      style: footerstyles.containerForModalWindowText,\n      children: [_jsx(View, {\n        style: footerstyles.svgContainer,\n        children: statusNotification ? _jsx(OnNotifications, {\n          width: screenWidth * 0.045,\n          height: screenHeight * 0.045\n        }) : _jsx(View, {\n          style: {\n            marginLeft: screenWidth * 0.008\n          },\n          children: _jsx(OffNotificationSvg, {\n            width: screenWidth * 0.033,\n            height: screenHeight * 0.033\n          })\n        })\n      }), !statusNotification ? _jsx(Text, {\n        style: footerstyles.modalWindowText,\n        children: \"On notifications\"\n      }) : _jsx(Text, {\n        style: footerstyles.modalWindowText,\n        children: \"Off notifications\"\n      })]\n    }), _jsxs(View, {\n      style: footerstyles.containerForModalWindowText,\n      children: [_jsx(View, {\n        style: footerstyles.svgContainer,\n        children: _jsx(SortFoldersSvg, {\n          width: screenWidth * 0.045,\n          height: screenHeight * 0.045\n        })\n      }), _jsx(Text, {\n        style: footerstyles.modalWindowText,\n        children: \"Sort folders\"\n      })]\n    }), haveFolderUnreadMessages(folder) ? _jsxs(View, {\n      style: footerstyles.containerForModalWindowText,\n      children: [_jsx(View, {\n        style: footerstyles.svgContainer,\n        children: _jsx(ReadFoldersMessagesSvg, {\n          width: screenWidth * 0.045,\n          height: screenHeight * 0.045\n        })\n      }), _jsx(Text, {\n        style: footerstyles.modalWindowText,\n        children: \"Edit folder\"\n      })]\n    }) : null, _jsxs(View, {\n      style: footerstyles.containerForModalWindowText,\n      children: [_jsx(View, {\n        style: footerstyles.svgContainer,\n        children: _jsx(DeleteSvg, {\n          width: screenWidth * 0.045,\n          height: screenHeight * 0.045\n        })\n      }), _jsx(Text, {\n        style: [footerstyles.modalWindowText, {\n          color: \"red\"\n        }],\n        children: \"Delete\"\n      })]\n    }), _jsx(View, {\n      style: [footerstyles.triangle, positionX - positionXInContainer + widthOfFolder / 2 < screenWidth * 0.5 ? footerstyles.positionOfModalWindowLeft : footerstyles.positionOfModalWindowRight]\n    })]\n  });\n};\nexport default FolderModalWindow;","map":{"version":3,"names":["React","View","Text","Dimensions","TouchableOpacity","footerstyles","AddChatSvg","OnNotifications","OffNotificationSvg","EditFolderSvg","DeleteSvg","SortFoldersSvg","ReadFoldersMessagesSvg","mySelfUser","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","screenWidth","width","screenHeight","height","FolderModalWindow","_ref","folder","positionX","widthOfFolder","positionXInContainer","statusNotification","Math","random","getStylePosition","position","left","right","haveFolderUnreadMessages","i","listOfChats","length","_chat$dictionary","chat","lastMessage","listOfMessages","undefined","id","dictionary","sender","activeOpacity","style","modalWindowContainerStyle","children","containerForModalWindowText","svgContainer","modalWindowText","marginLeft","color","triangle","positionOfModalWindowLeft","positionOfModalWindowRight"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/ChatList/Components/Footer containers/FolderModalWindow.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, Dimensions, TouchableOpacity } from \"react-native\";\r\nimport { footerstyles } from \"../../Styles/FooterStyle\";\r\nimport Folder from \"../../1HelpFullFolder/Folder\";\r\nimport AddChatSvg from \"../SVG/AddChatSvg\";\r\nimport OnNotifications from \"../SVG/OnNotifications\";\r\nimport OffNotificationSvg from \"../SVG/OffNotifications\";\r\nimport EditFolderSvg from \"../SVG/EditFolderSvg\";\r\nimport DeleteSvg from \"../SVG/Delete\";\r\nimport SortFoldersSvg from \"../SVG/SortFolders\";\r\nimport ReadFoldersMessagesSvg from \"../SVG/ReadFoldersMessagesSvg\";\r\nimport Chat from \"../../1HelpFullFolder/Chat\";\r\nimport { mySelfUser } from \"../../1HelpFullFolder/Initialization\";\r\nimport Message from \"../../1HelpFullFolder/Message\";\r\ninterface FolderModalWindowProps {\r\n  folder: Folder;\r\n  positionX: number;\r\n  positionXInContainer: number;\r\n  widthOfFolder: number;\r\n}\r\nconst { width: screenWidth, height: screenHeight } = Dimensions.get(\"window\");\r\nconst FolderModalWindow: React.FC<FolderModalWindowProps> = ({\r\n  folder,\r\n  positionX,\r\n  widthOfFolder,\r\n  positionXInContainer,\r\n}) => {\r\n  const statusNotification: boolean = Math.random() < 0.5;\r\n  const getStylePosition = (position: number) => {\r\n    if (position <= screenWidth * 0.5) {\r\n      return { left: position };\r\n    } else {\r\n      return { right: screenWidth - position };\r\n    }\r\n    return {};\r\n  };\r\n  const haveFolderUnreadMessages = (folder: Folder): boolean => {\r\n    for (let i = 0; i < folder.listOfChats.length; i++) {\r\n      const chat = folder.listOfChats[i];\r\n\r\n      const lastMessage: Message | undefined =\r\n        chat.listOfMessages.length > 0\r\n          ? chat.listOfMessages[chat.listOfMessages.length - 1]\r\n          : undefined;\r\n      const id: number | undefined = chat.dictionary?.get(mySelfUser.id);\r\n      if (!lastMessage) continue;\r\n      if (lastMessage.sender !== mySelfUser) {\r\n        if (id && lastMessage.id > id) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  return (\r\n    <TouchableOpacity\r\n      activeOpacity={1}\r\n      style={[\r\n        footerstyles.modalWindowContainerStyle,\r\n        getStylePosition(positionX - positionXInContainer + widthOfFolder / 2),\r\n      ]}\r\n    >\r\n      <View style={footerstyles.containerForModalWindowText}>\r\n        <View style={footerstyles.svgContainer}>\r\n          <AddChatSvg\r\n            height={screenHeight * 0.045}\r\n            width={screenWidth * 0.045}\r\n          />\r\n        </View>\r\n        <Text style={footerstyles.modalWindowText}>Add chat</Text>\r\n      </View>\r\n      <View style={footerstyles.containerForModalWindowText}>\r\n        <View style={footerstyles.svgContainer}>\r\n          <EditFolderSvg\r\n            width={screenWidth * 0.045}\r\n            height={screenHeight * 0.045}\r\n          />\r\n        </View>\r\n        <Text style={footerstyles.modalWindowText}>Edit folder</Text>\r\n      </View>\r\n      <View style={footerstyles.containerForModalWindowText}>\r\n        <View style={footerstyles.svgContainer}>\r\n          {statusNotification ? (\r\n            <OnNotifications\r\n              width={screenWidth * 0.045}\r\n              height={screenHeight * 0.045}\r\n            />\r\n          ) : (\r\n            <View style={{ marginLeft: screenWidth * 0.008 }}>\r\n              <OffNotificationSvg\r\n                width={screenWidth * 0.033}\r\n                height={screenHeight * 0.033}\r\n              />\r\n            </View>\r\n          )}\r\n        </View>\r\n        {!statusNotification ? (\r\n          <Text style={footerstyles.modalWindowText}>On notifications</Text>\r\n        ) : (\r\n          <Text style={footerstyles.modalWindowText}>Off notifications</Text>\r\n        )}\r\n      </View>\r\n      <View style={footerstyles.containerForModalWindowText}>\r\n        <View style={footerstyles.svgContainer}>\r\n          <SortFoldersSvg\r\n            width={screenWidth * 0.045}\r\n            height={screenHeight * 0.045}\r\n          />\r\n        </View>\r\n        <Text style={footerstyles.modalWindowText}>Sort folders</Text>\r\n      </View>\r\n      {haveFolderUnreadMessages(folder) ? (\r\n        <View style={footerstyles.containerForModalWindowText}>\r\n          <View style={footerstyles.svgContainer}>\r\n            <ReadFoldersMessagesSvg\r\n              width={screenWidth * 0.045}\r\n              height={screenHeight * 0.045}\r\n            />\r\n          </View>\r\n          <Text style={footerstyles.modalWindowText}>Edit folder</Text>\r\n        </View>\r\n      ) : null}\r\n\r\n      <View style={footerstyles.containerForModalWindowText}>\r\n        <View style={footerstyles.svgContainer}>\r\n          <DeleteSvg\r\n            width={screenWidth * 0.045}\r\n            height={screenHeight * 0.045}\r\n          />\r\n        </View>\r\n        <Text style={[footerstyles.modalWindowText, { color: \"red\" }]}>\r\n          Delete\r\n        </Text>\r\n      </View>\r\n      <View\r\n        style={[\r\n          footerstyles.triangle,\r\n          positionX - positionXInContainer + widthOfFolder / 2 <\r\n          screenWidth * 0.5\r\n            ? footerstyles.positionOfModalWindowLeft\r\n            : footerstyles.positionOfModalWindowRight,\r\n        ]}\r\n      />\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nexport default FolderModalWindow;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}