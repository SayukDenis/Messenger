{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { styles } from \"./Styles\";\nimport Header from \"../../SemiComponents/GeneralComponents/Header\";\nimport BinIcon from \"../../SemiComponents/Screens/MainScreen/Icons/BinIcon\";\nimport { channel } from \"../../SemiComponents/DatabaseSimulation/DBChannel\";\nimport { useIsFocused } from \"@react-navigation/native\";\nimport Blur from \"../../SemiComponents/GeneralComponents/Blur\";\nimport RemovalApproval from \"../../SemiComponents/GeneralComponents/RemovalApproval\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport ButtonWithPlus from \"../../SemiComponents/GeneralComponents/ButtonWithPlus\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar screenHeight = Dimensions.get(\"screen\").height;\nvar RolesScreen = function RolesScreen(props) {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    roleToRemove = _useState2[0],\n    setRoleToRemove = _useState2[1];\n  var isFocused = useIsFocused();\n  useEffect(function () {}, [isFocused]);\n  return _jsxs(LinearGradient, {\n    colors: [\"#cf9b95\", \"#c98bb8\", \"#c37adb\"],\n    style: {\n      flex: 1\n    },\n    children: [_jsx(Blur, {\n      visibleWhen: (roleToRemove == null ? void 0 : roleToRemove.name) != null,\n      onPress: function onPress() {\n        setRoleToRemove(null);\n      }\n    }), _jsx(RemovalApproval, {\n      isVisible: (roleToRemove == null ? void 0 : roleToRemove.name) != null,\n      onAnyPress: function onAnyPress() {\n        setRoleToRemove(null);\n      },\n      onAgreePress: function onAgreePress() {\n        channel.roles = channel.roles.filter(function (item) {\n          return item.name !== (roleToRemove == null ? void 0 : roleToRemove.name);\n        });\n      },\n      text: \"Do you really want to delete \" + (roleToRemove == null ? void 0 : roleToRemove.name) + \"?\"\n    }), _jsx(Header, {\n      primaryTitle: \"Roles\",\n      onGoBackPress: function onGoBackPress() {\n        props.navigation.goBack();\n      }\n    }), _jsxs(ScrollView, {\n      children: [_jsx(ButtonWithPlus, {\n        text: \"Role\",\n        onPress: function onPress() {\n          props.navigation.navigate(\"NewRoleScreen\");\n        }\n      }), _jsx(View, {\n        style: {\n          paddingBottom: 0.07 * screenHeight,\n          zIndex: 0,\n          top: 0.04 * screenHeight\n        },\n        children: channel.roles.map(function (item, index) {\n          return _jsxs(View, {\n            children: [_jsx(View, {\n              style: {\n                height: 0.005 * screenHeight\n              }\n            }), _jsxs(TouchableOpacity, {\n              onPress: function onPress() {\n                channel.selectedRole = item;\n                props.navigation.navigate(\"ChangeRoleScreen\");\n              },\n              style: styles.settingOption,\n              children: [_jsx(LinearGradient, {\n                colors: [\"#cf9b95\", \"#c98bb8\", \"#c37adb\"],\n                style: styles.linearGradient\n              }), _jsx(View, {\n                style: [styles.roleTitleContainerWhileCreating, {\n                  left: 0.04 * Dimensions.get(\"screen\").width\n                }],\n                children: _jsx(Text, {\n                  style: {\n                    fontSize: 28\n                  },\n                  children: item.emoji\n                })\n              }), _jsx(View, {\n                style: styles.roleTitleContainerWhileCreating,\n                children: _jsx(Text, {\n                  numberOfLines: 1,\n                  style: [styles.roleTitle, {\n                    color: item.color\n                  }],\n                  children: item.name\n                })\n              }), _jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  setRoleToRemove(item);\n                },\n                style: styles.binIconContainer,\n                children: _jsx(BinIcon, {\n                  style: styles.binIcon\n                })\n              })]\n            })]\n          }, index);\n        })\n      })]\n    })]\n  });\n};\nexport default RolesScreen;","map":{"version":3,"names":["React","useEffect","useState","View","ScrollView","TouchableOpacity","Text","Dimensions","styles","Header","BinIcon","channel","useIsFocused","Blur","RemovalApproval","LinearGradient","ButtonWithPlus","jsx","_jsx","jsxs","_jsxs","screenHeight","get","height","RolesScreen","props","_useState","_useState2","_slicedToArray","roleToRemove","setRoleToRemove","isFocused","colors","style","flex","children","visibleWhen","name","onPress","isVisible","onAnyPress","onAgreePress","roles","filter","item","text","primaryTitle","onGoBackPress","navigation","goBack","navigate","paddingBottom","zIndex","top","map","index","selectedRole","settingOption","linearGradient","roleTitleContainerWhileCreating","left","width","fontSize","emoji","numberOfLines","roleTitle","color","binIconContainer","binIcon"],"sources":["C:/Users/T480/source/repos/Messenger/Messenger/Pages/Profiles/ChannelProfile/RoleScreen/RolesScreen.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  Text,\r\n  Dimensions,\r\n} from \"react-native\";\r\nimport { styles } from \"./Styles\";\r\nimport Header from \"../../SemiComponents/GeneralComponents/Header\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport PlusIcon from \"../../SemiComponents/Assets/Icons/PlusIcon\";\r\nimport BinIcon from \"../../SemiComponents/Screens/MainScreen/Icons/BinIcon\";\r\nimport { channel } from \"../../SemiComponents/DatabaseSimulation/DBChannel\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport Blur from \"../../SemiComponents/GeneralComponents/Blur\";\r\nimport RemovalApproval from \"../../SemiComponents/GeneralComponents/RemovalApproval\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport ButtonWithPlus from \"../../SemiComponents/GeneralComponents/ButtonWithPlus\";\r\n\r\nconst screenHeight: number = Dimensions.get(\"screen\").height;\r\n\r\ninterface RolesScreenProps {\r\n  navigation: StackNavigationProp<{}>;\r\n}\r\n\r\nconst RolesScreen: React.FC<RolesScreenProps> = (props) => {\r\n  const [roleToRemove, setRoleToRemove] = useState(null);\r\n\r\n  const isFocused = useIsFocused();\r\n\r\n  useEffect(() => {}, [isFocused]);\r\n\r\n  return (\r\n    <LinearGradient\r\n      colors={[\"#cf9b95\", \"#c98bb8\", \"#c37adb\"]}\r\n      style={{ flex: 1 }}\r\n    >\r\n      <Blur\r\n        visibleWhen={roleToRemove?.name != null}\r\n        onPress={() => {\r\n          setRoleToRemove(null);\r\n        }}\r\n      />\r\n\r\n      <RemovalApproval\r\n        isVisible={roleToRemove?.name != null}\r\n        onAnyPress={() => {\r\n          setRoleToRemove(null);\r\n        }}\r\n        onAgreePress={() => {\r\n          channel.roles = channel.roles.filter(\r\n            (item) => item.name !== roleToRemove?.name\r\n          );\r\n        }}\r\n        text={\"Do you really want to delete \" + roleToRemove?.name + \"?\"}\r\n      />\r\n\r\n      <Header\r\n        primaryTitle=\"Roles\"\r\n        onGoBackPress={() => {\r\n          props.navigation.goBack();\r\n        }}\r\n      />\r\n\r\n      <ScrollView>\r\n        <ButtonWithPlus\r\n          text=\"Role\"\r\n          onPress={() => {\r\n            props.navigation.navigate(\"NewRoleScreen\" as never);\r\n          }}\r\n        />\r\n\r\n        <View\r\n          style={{\r\n            paddingBottom: 0.07 * screenHeight,\r\n            zIndex: 0,\r\n            top: 0.04 * screenHeight,\r\n          }}\r\n        >\r\n          {channel.roles.map((item, index) => {\r\n            return (\r\n              <View key={index}>\r\n                <View style={{ height: 0.005 * screenHeight }} />\r\n                <TouchableOpacity\r\n                  onPress={() => {\r\n                    channel.selectedRole = item;\r\n                    props.navigation.navigate(\"ChangeRoleScreen\" as never);\r\n                  }}\r\n                  style={styles.settingOption}\r\n                >\r\n                  <LinearGradient\r\n                    colors={[\"#cf9b95\", \"#c98bb8\", \"#c37adb\"]}\r\n                    style={styles.linearGradient}\r\n                  />\r\n                  <View\r\n                    style={[\r\n                      styles.roleTitleContainerWhileCreating,\r\n                      { left: 0.04 * Dimensions.get(\"screen\").width },\r\n                    ]}\r\n                  >\r\n                    <Text style={{ fontSize: 28 }}>{item.emoji}</Text>\r\n                  </View>\r\n                  <View style={styles.roleTitleContainerWhileCreating}>\r\n                    <Text\r\n                      numberOfLines={1}\r\n                      style={[styles.roleTitle, { color: item.color }]}\r\n                    >\r\n                      {item.name}\r\n                    </Text>\r\n                  </View>\r\n                  <TouchableOpacity\r\n                    onPress={() => {\r\n                      setRoleToRemove(item);\r\n                    }}\r\n                    style={styles.binIconContainer}\r\n                  >\r\n                    <BinIcon style={styles.binIcon} />\r\n                  </TouchableOpacity>\r\n                </TouchableOpacity>\r\n              </View>\r\n            );\r\n          })}\r\n        </View>\r\n      </ScrollView>\r\n    </LinearGradient>\r\n  );\r\n};\r\n\r\nexport default RolesScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}