{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { listOfChatsStyle } from \"../../../Styles/ListOfChatsStyle\";\nimport { screenHeight, screenWidth } from \"../../../Constants/ConstantsForChatlist\";\nimport React from \"react\";\nimport { formatNumber } from \"./FormatNumberOfUnreadMessages\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function CountOfMessages(countOfMessage, backgroundColorOfContainer, colorOfText, opacityOfBackgroundContainer, fontSize) {\n  var widthOfContainerForNumberOfUnreadMessages = screenHeight * 0.05;\n  var formatText = formatNumber(countOfMessage);\n  if (formatText.length == 1) widthOfContainerForNumberOfUnreadMessages = screenHeight * 0.018;else if (formatText.length == 2) widthOfContainerForNumberOfUnreadMessages = screenHeight * 0.03;else if (formatText.length == 3) widthOfContainerForNumberOfUnreadMessages = screenHeight * 0.04;\n  return _jsxs(View, {\n    style: [listOfChatsStyle.countOfUnreadMessagescontainer, {\n      width: widthOfContainerForNumberOfUnreadMessages\n    }],\n    children: [_jsx(View, {\n      style: {\n        position: \"absolute\",\n        backgroundColor: backgroundColorOfContainer,\n        opacity: opacityOfBackgroundContainer,\n        height: screenHeight,\n        width: screenWidth\n      }\n    }), _jsx(Text, {\n      style: [listOfChatsStyle.countOfUnReadMessagesContent, {\n        color: colorOfText,\n        fontSize: fontSize\n      }],\n      children: formatText\n    })]\n  });\n}","map":{"version":3,"names":["listOfChatsStyle","screenHeight","screenWidth","React","formatNumber","jsx","_jsx","jsxs","_jsxs","CountOfMessages","countOfMessage","backgroundColorOfContainer","colorOfText","opacityOfBackgroundContainer","fontSize","widthOfContainerForNumberOfUnreadMessages","formatText","length","View","style","countOfUnreadMessagescontainer","width","children","position","backgroundColor","opacity","height","Text","countOfUnReadMessagesContent","color"],"sources":["D:/project/1project/Messenger/Messenger/Pages/ChatList/Components/List of folders containers/Functions/CountOfMessages.tsx"],"sourcesContent":["import { View, ViewStyle,Text } from \"react-native\";\r\nimport { listOfChatsStyle } from \"../../../Styles/ListOfChatsStyle\";\r\nimport { screenHeight, screenWidth } from \"../../../Constants/ConstantsForChatlist\";\r\nimport React, { ReactNode } from \"react\";\r\nimport { formatNumber } from \"./FormatNumberOfUnreadMessages\";\r\nexport function CountOfMessages(countOfMessage: number,backgroundColorOfContainer:string,colorOfText:string,opacityOfBackgroundContainer:number,fontSize:number): ReactNode {\r\n    let widthOfContainerForNumberOfUnreadMessages: number =  screenHeight * 0.05;\r\n    let formatText: string = formatNumber(countOfMessage);\r\n    if (formatText.length == 1)\r\n    widthOfContainerForNumberOfUnreadMessages=screenHeight * 0.018;\r\n    else if (formatText.length == 2)\r\n    widthOfContainerForNumberOfUnreadMessages=screenHeight * 0.03;\r\n    else if (formatText.length == 3)\r\n    widthOfContainerForNumberOfUnreadMessages=screenHeight * 0.04;\r\n\r\n    return (\r\n      <View\r\n        style={[listOfChatsStyle.countOfUnreadMessagescontainer, {width:widthOfContainerForNumberOfUnreadMessages}]}\r\n      >\r\n        <View\r\n          style={{\r\n            position: \"absolute\",\r\n            backgroundColor: backgroundColorOfContainer,\r\n            opacity: opacityOfBackgroundContainer,\r\n            height: screenHeight,\r\n            width: screenWidth,\r\n          }}\r\n        />\r\n        <Text style={[listOfChatsStyle.countOfUnReadMessagesContent,{color:colorOfText,fontSize}]}>\r\n          {formatText}\r\n        </Text>\r\n      </View>\r\n    );\r\n  }"],"mappings":";;AACA,SAASA,gBAAgB;AACzB,SAASC,YAAY,EAAEC,WAAW;AAClC,OAAOC,KAAK,MAAqB,OAAO;AACxC,SAASC,YAAY;AAAyC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAC9D,OAAO,SAASC,eAAeA,CAACC,cAAsB,EAACC,0BAAiC,EAACC,WAAkB,EAACC,4BAAmC,EAACC,QAAe,EAAa;EACxK,IAAIC,yCAAiD,GAAId,YAAY,GAAG,IAAI;EAC5E,IAAIe,UAAkB,GAAGZ,YAAY,CAACM,cAAc,CAAC;EACrD,IAAIM,UAAU,CAACC,MAAM,IAAI,CAAC,EAC1BF,yCAAyC,GAACd,YAAY,GAAG,KAAK,CAAC,KAC1D,IAAIe,UAAU,CAACC,MAAM,IAAI,CAAC,EAC/BF,yCAAyC,GAACd,YAAY,GAAG,IAAI,CAAC,KACzD,IAAIe,UAAU,CAACC,MAAM,IAAI,CAAC,EAC/BF,yCAAyC,GAACd,YAAY,GAAG,IAAI;EAE7D,OACEO,KAAA,CAACU,IAAI;IACHC,KAAK,EAAE,CAACnB,gBAAgB,CAACoB,8BAA8B,EAAE;MAACC,KAAK,EAACN;IAAyC,CAAC,CAAE;IAAAO,QAAA,GAE5GhB,IAAA,CAACY,IAAI;MACHC,KAAK,EAAE;QACLI,QAAQ,EAAE,UAAU;QACpBC,eAAe,EAAEb,0BAA0B;QAC3Cc,OAAO,EAAEZ,4BAA4B;QACrCa,MAAM,EAAEzB,YAAY;QACpBoB,KAAK,EAAEnB;MACT;IAAE,CACH,CAAC,EACFI,IAAA,CAACqB,IAAI;MAACR,KAAK,EAAE,CAACnB,gBAAgB,CAAC4B,4BAA4B,EAAC;QAACC,KAAK,EAACjB,WAAW;QAACE,QAAQ,EAARA;MAAQ,CAAC,CAAE;MAAAQ,QAAA,EACvFN;IAAU,CACP,CAAC;EAAA,CACH,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}