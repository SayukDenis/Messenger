{"ast":null,"code":"import { addWhitelistedNativeProps } from \"../ConfigHelper\";\nexport var createAnimatedPropAdapter = function createAnimatedPropAdapter(adapter, nativeProps) {\n  var nativePropsToAdd = {};\n  nativeProps === null || nativeProps === void 0 ? void 0 : nativeProps.forEach(function (prop) {\n    nativePropsToAdd[prop] = true;\n  });\n  addWhitelistedNativeProps(nativePropsToAdd);\n  return adapter;\n};","map":{"version":3,"names":["addWhitelistedNativeProps","createAnimatedPropAdapter","adapter","nativeProps","nativePropsToAdd","forEach","prop"],"sources":["C:\\Users\\Admin\\Project\\Project\\Messenger\\Messenger\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\PropAdapters.ts"],"sourcesContent":["import { addWhitelistedNativeProps } from '../ConfigHelper';\nimport type { __AdapterWorkletFunction } from './commonTypes';\nimport type { AnimatedPropsAdapterFunction } from './helperTypes';\n\n// TODO TYPESCRIPT This is a temporary type to get rid of .d.ts file.\ntype createAnimatedPropAdapterType = (\n  adapter: AnimatedPropsAdapterFunction,\n  nativeProps?: string[]\n) => AnimatedPropsAdapterFunction;\n\nexport const createAnimatedPropAdapter = ((\n  adapter: __AdapterWorkletFunction,\n  nativeProps?: string[]\n): __AdapterWorkletFunction => {\n  const nativePropsToAdd: { [key: string]: boolean } = {};\n  // eslint-disable-next-line no-unused-expressions\n  nativeProps?.forEach((prop) => {\n    nativePropsToAdd[prop] = true;\n  });\n  addWhitelistedNativeProps(nativePropsToAdd);\n  return adapter;\n}) as createAnimatedPropAdapterType;\n"],"mappings":"AAAA,SAASA,yBAAyB;AAUlC,OAAO,IAAMC,yBAAyB,GAAI,SAA7BA,yBAAyBA,CACpCC,OAAiC,EACjCC,WAAsB,EACO;EAC7B,IAAMC,gBAA4C,GAAG,CAAC,CAAC;EAEvDD,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEE,OAAO,CAAE,UAAAC,IAAI,EAAK;IAC7BF,gBAAgB,CAACE,IAAI,CAAC,GAAG,IAAI;EAC/B,CAAC,CAAC;EACFN,yBAAyB,CAACI,gBAAgB,CAAC;EAC3C,OAAOF,OAAO;AAChB,CAAmC"},"metadata":{},"sourceType":"module","externalDependencies":[]}