{"ast":null,"code":"import * as React from 'react';\nimport CurrentRenderContext from \"./CurrentRenderContext\";\nexport default function useCurrentRender(_ref) {\n  var state = _ref.state,\n    navigation = _ref.navigation,\n    descriptors = _ref.descriptors;\n  var current = React.useContext(CurrentRenderContext);\n  if (current && navigation.isFocused()) {\n    current.options = descriptors[state.routes[state.index].key].options;\n  }\n}","map":{"version":3,"names":["React","CurrentRenderContext","useCurrentRender","_ref","state","navigation","descriptors","current","useContext","isFocused","options","routes","index","key"],"sources":["D:\\repo\\Messenger\\Messenger\\node_modules\\@react-navigation\\core\\src\\useCurrentRender.tsx"],"sourcesContent":["import type { NavigationState, ParamListBase } from '@react-navigation/routers';\r\nimport * as React from 'react';\r\n\r\nimport CurrentRenderContext from './CurrentRenderContext';\r\nimport type {\r\n  Descriptor,\r\n  NavigationHelpers,\r\n  NavigationProp,\r\n  RouteProp,\r\n} from './types';\r\n\r\ntype Options = {\r\n  state: NavigationState;\r\n  navigation: NavigationHelpers<ParamListBase>;\r\n  descriptors: Record<\r\n    string,\r\n    Descriptor<object, NavigationProp<ParamListBase>, RouteProp<ParamListBase>>\r\n  >;\r\n};\r\n\r\n/**\r\n * Write the current options, so that server renderer can get current values\r\n * Mutating values like this is not safe in async mode, but it doesn't apply to SSR\r\n */\r\nexport default function useCurrentRender({\r\n  state,\r\n  navigation,\r\n  descriptors,\r\n}: Options) {\r\n  const current = React.useContext(CurrentRenderContext);\r\n\r\n  if (current && navigation.isFocused()) {\r\n    current.options = descriptors[state.routes[state.index].key].options;\r\n  }\r\n}\r\n"],"mappings":"AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,OAAOC,oBAAoB;AAqB3B,eAAe,SAASC,gBAAgBA,CAAAC,IAAA,EAI5B;EAAA,IAHVC,KAAK,GAGGD,IAAA,CAHRC,KAAK;IACLC,UAAU,GAEFF,IAAA,CAFRE,UAAU;IACVC,WAAA,GACQH,IAAA,CADRG,WAAA;EAEA,IAAMC,OAAO,GAAGP,KAAK,CAACQ,UAAU,CAACP,oBAAoB,CAAC;EAEtD,IAAIM,OAAO,IAAIF,UAAU,CAACI,SAAS,EAAE,EAAE;IACrCF,OAAO,CAACG,OAAO,GAAGJ,WAAW,CAACF,KAAK,CAACO,MAAM,CAACP,KAAK,CAACQ,KAAK,CAAC,CAACC,GAAG,CAAC,CAACH,OAAO;EACtE;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}