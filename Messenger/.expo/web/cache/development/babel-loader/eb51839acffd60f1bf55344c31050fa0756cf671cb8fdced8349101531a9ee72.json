{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport Message from \"../Message\";\nimport Branch from \"./Branch\";\nimport Role from \"./Role\";\nimport User from \"../User\";\nimport Chat from \"./Chat\";\nvar MainChat = function (_Chat) {\n  _inherits(MainChat, _Chat);\n  function MainChat(users, roles, linkToPhoto, messages, branches, pinnedMessage, pinnedMessageForAll, lastWatchedMessage) {\n    var _this;\n    _classCallCheck(this, MainChat);\n    _this = _callSuper(this, MainChat, [linkToPhoto, messages, branches, pinnedMessage, pinnedMessageForAll, lastWatchedMessage]);\n    _this.users = users != null ? users : new Array();\n    _this.roles = roles != null ? roles : new Array();\n    return _this;\n  }\n  return _createClass(MainChat);\n}(Chat);\nMainChat.schema = {\n  name: 'mainChats',\n  properties: {\n    linkToPhoto: 'text?',\n    messages: {\n      type: 'list',\n      objectType: Message\n    },\n    users: {\n      type: 'list',\n      objectType: User\n    },\n    pinnedMessage: {\n      type: 'list',\n      objectType: Message\n    },\n    pinnedMessageForAll: {\n      type: 'list',\n      objectType: Message\n    },\n    branches: {\n      type: 'list',\n      objectType: Branch\n    },\n    roles: {\n      type: 'list',\n      objectType: Role\n    },\n    lastWatchedMessage: {\n      type: 'list',\n      objectType: {}\n    }\n  },\n  embedded: true\n};\nexport { MainChat as default };\n;","map":{"version":3,"names":["Message","Branch","Role","User","Chat","MainChat","_Chat","_inherits","users","roles","linkToPhoto","messages","branches","pinnedMessage","pinnedMessageForAll","lastWatchedMessage","_this","_classCallCheck","_callSuper","Array","_createClass","schema","name","properties","type","objectType","embedded","default"],"sources":["D:/project/1project/Messenger/Messenger/dao/Models/Chats/MainChat.ts"],"sourcesContent":["import Message from '../Message';\r\nimport Branch from './Branch';\r\nimport Role from './Role';\r\nimport ILastWatchedMessage from './ILastWatchedMessage';\r\nimport User from '../User';\r\nimport Chat from './Chat';\r\n\r\nexport default class MainChat extends Chat {\r\n    constructor(users?: Array<User>, roles?: Array<Role>, linkToPhoto?: string, messages?: Array<Message>, branches?: Array<Branch>,\r\n        pinnedMessage?: Array<Message>, pinnedMessageForAll?: Array<Message>,\r\n        lastWatchedMessage?: Array<ILastWatchedMessage>) {\r\n        super(linkToPhoto, messages, branches, pinnedMessage, pinnedMessageForAll, lastWatchedMessage);\r\n        this.users = users ?? new Array;\r\n        this.roles = roles ?? new Array;\r\n    }\r\n    users: Array<User>;\r\n    roles: Array<Role>;\r\n    //schema\r\n    static schema = {\r\n        name: 'mainChats',\r\n        properties: {\r\n            linkToPhoto: 'text?',\r\n            messages: { type: 'list', objectType: Message },\r\n            users: { type: 'list', objectType: User },\r\n            pinnedMessage: { type: 'list', objectType: Message },\r\n            pinnedMessageForAll: { type: 'list', objectType: Message },\r\n            branches: { type: 'list', objectType: Branch },\r\n            roles: { type: 'list', objectType: Role },\r\n            lastWatchedMessage: { type: 'list', objectType: {} as ILastWatchedMessage },\r\n        },\r\n        embedded: true,\r\n    }\r\n};"],"mappings":";;;;;;;AAAA,OAAOA,OAAO;AACd,OAAOC,MAAM;AACb,OAAOC,IAAI;AAEX,OAAOC,IAAI;AACX,OAAOC,IAAI;AAAe,IAELC,QAAQ,aAAAC,KAAA;EAAAC,SAAA,CAAAF,QAAA,EAAAC,KAAA;EACzB,SAAAD,SAAYG,KAAmB,EAAEC,KAAmB,EAAEC,WAAoB,EAAEC,QAAyB,EAAEC,QAAwB,EAC3HC,aAA8B,EAAEC,mBAAoC,EACpEC,kBAA+C,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAZ,QAAA;IACjDW,KAAA,GAAAE,UAAA,OAAAb,QAAA,GAAMK,WAAW,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,aAAa,EAAEC,mBAAmB,EAAEC,kBAAkB;IAC7FC,KAAA,CAAKR,KAAK,GAAGA,KAAK,WAALA,KAAK,GAAI,IAAIW,KAAK,CAAD,CAAC;IAC/BH,KAAA,CAAKP,KAAK,GAAGA,KAAK,WAALA,KAAK,GAAI,IAAIU,KAAK,CAAD,CAAC;IAAC,OAAAH,KAAA;EACpC;EAAC,OAAAI,YAAA,CAAAf,QAAA;AAAA,EAPiCD,IAAI;AAArBC,QAAQ,CAWlBgB,MAAM,GAAG;EACZC,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE;IACRb,WAAW,EAAE,OAAO;IACpBC,QAAQ,EAAE;MAAEa,IAAI,EAAE,MAAM;MAAEC,UAAU,EAAEzB;IAAQ,CAAC;IAC/CQ,KAAK,EAAE;MAAEgB,IAAI,EAAE,MAAM;MAAEC,UAAU,EAAEtB;IAAK,CAAC;IACzCU,aAAa,EAAE;MAAEW,IAAI,EAAE,MAAM;MAAEC,UAAU,EAAEzB;IAAQ,CAAC;IACpDc,mBAAmB,EAAE;MAAEU,IAAI,EAAE,MAAM;MAAEC,UAAU,EAAEzB;IAAQ,CAAC;IAC1DY,QAAQ,EAAE;MAAEY,IAAI,EAAE,MAAM;MAAEC,UAAU,EAAExB;IAAO,CAAC;IAC9CQ,KAAK,EAAE;MAAEe,IAAI,EAAE,MAAM;MAAEC,UAAU,EAAEvB;IAAK,CAAC;IACzCa,kBAAkB,EAAE;MAAES,IAAI,EAAE,MAAM;MAAEC,UAAU,EAAE,CAAC;IAAyB;EAC9E,CAAC;EACDC,QAAQ,EAAE;AACd,CAAC;AAAA,SAxBgBrB,QAAQ,IAAAsB,OAAA;AAyB5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}