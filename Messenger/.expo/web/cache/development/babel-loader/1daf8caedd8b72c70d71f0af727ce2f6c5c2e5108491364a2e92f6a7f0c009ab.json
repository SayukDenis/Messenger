{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"onPress\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport ExpoClipboardPasteButton from \"./ExpoClipboardPasteButton\";\nexport function ClipboardPasteButton(_ref) {\n  var onPress = _ref.onPress,\n    restProps = _objectWithoutProperties(_ref, _excluded);\n  if (!ExpoClipboardPasteButton) {\n    if (__DEV__) {\n      console.warn(\"'ApplePasteButton' is not available.\");\n    }\n    return null;\n  }\n  var onPastePressed = function onPastePressed(_ref2) {\n    var nativeEvent = _ref2.nativeEvent;\n    onPress(nativeEvent);\n  };\n  return React.createElement(ExpoClipboardPasteButton, _objectSpread({\n    onPastePressed: onPastePressed\n  }, restProps));\n}","map":{"version":3,"names":["React","ExpoClipboardPasteButton","ClipboardPasteButton","_ref","onPress","restProps","_objectWithoutProperties","_excluded","__DEV__","console","warn","onPastePressed","_ref2","nativeEvent","createElement","_objectSpread"],"sources":["C:\\Users\\Admin\\Project\\Project\\Messenger\\Messenger\\node_modules\\expo-clipboard\\src\\ClipboardPasteButton.tsx"],"sourcesContent":["import React from 'react';\nimport { NativeSyntheticEvent } from 'react-native';\n\nimport { ClipboardPasteButtonProps, PasteEventPayload } from './Clipboard.types';\nimport ExpoClipboardPasteButton from './ExpoClipboardPasteButton';\n\n// @needsAudit\n/**\n * This component displays the `UIPasteControl` button on your screen. This allows pasting from the clipboard without requesting permission from the user.\n *\n * You should only attempt to render this if [`Clipboard.isPasteButtonAvailable`](#ispastebuttonavailable)\n * is `true`. This component will render nothing if it is not available, and you will get\n * a warning in development mode (`__DEV__ === true`).\n *\n * The properties of this component extend from `View`; however, you should not attempt to set\n * `backgroundColor`, `color` or `borderRadius` with the `style` property. Apple restricts customisation of this view.\n * Instead, you should use the backgroundColor and foregroundColor properties to set the colors of the button, the cornerStyle property to change the border radius,\n * and the displayMode property to change the appearance of the icon and label. The word \"Paste\" is not editable and neither is the icon.\n *\n * Make sure to attach height and width via the style props as without these styles, the button will\n * not appear on the screen.\n *\n * @see [Apple Documentation](https://developer.apple.com/documentation/uikit/uipastecontrol) for more details.\n */\nexport function ClipboardPasteButton({ onPress, ...restProps }: ClipboardPasteButtonProps) {\n  if (!ExpoClipboardPasteButton) {\n    if (__DEV__) {\n      console.warn(\"'ApplePasteButton' is not available.\");\n    }\n    return null;\n  }\n\n  const onPastePressed = ({ nativeEvent }: NativeSyntheticEvent<PasteEventPayload>) => {\n    onPress(nativeEvent);\n  };\n\n  return <ExpoClipboardPasteButton onPastePressed={onPastePressed} {...restProps} />;\n}\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAIzB,OAAOC,wBAAwB;AAoB/B,OAAM,SAAUC,oBAAoBA,CAAAC,IAAA,EAAqD;EAAA,IAAlDC,OAAO,GAAAD,IAAA,CAAPC,OAAO;IAAKC,SAAS,GAAAC,wBAAA,CAAAH,IAAA,EAAAI,SAAA;EAC1D,IAAI,CAACN,wBAAwB,EAAE;IAC7B,IAAIO,OAAO,EAAE;MACXC,OAAO,CAACC,IAAI,CAAC,sCAAsC,CAAC;;IAEtD,OAAO,IAAI;;EAGb,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAAC,KAAA,EAAgE;IAAA,IAA1DC,WAAW,GAAAD,KAAA,CAAXC,WAAW;IACnCT,OAAO,CAACS,WAAW,CAAC;EACtB,CAAC;EAED,OAAOb,KAAA,CAAAc,aAAA,CAACb,wBAAwB,EAAAc,aAAA;IAACJ,cAAc,EAAEA;EAAc,GAAMN,SAAS,EAAI;AACpF"},"metadata":{},"sourceType":"module","externalDependencies":[]}