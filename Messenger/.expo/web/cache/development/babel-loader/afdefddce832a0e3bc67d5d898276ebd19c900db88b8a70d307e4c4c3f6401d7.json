{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nexport function base64toBlob(base64Data, contentType) {\n  contentType = contentType || '';\n  var sliceSize = 1024;\n  var byteCharacters = atob(base64Data);\n  var bytesLength = byteCharacters.length;\n  var slicesCount = Math.ceil(bytesLength / sliceSize);\n  var byteArrays = new Array(slicesCount);\n  for (var sliceIndex = 0; sliceIndex < slicesCount; ++sliceIndex) {\n    var begin = sliceIndex * sliceSize;\n    var end = Math.min(begin + sliceSize, bytesLength);\n    var bytes = new Array(end - begin);\n    for (var offset = begin, i = 0; offset < end; ++i, ++offset) {\n      bytes[i] = byteCharacters[offset].charCodeAt(0);\n    }\n    byteArrays[sliceIndex] = new Uint8Array(bytes);\n  }\n  return new Blob(byteArrays, {\n    type: contentType\n  });\n}\nexport function blobToBase64Async(blob) {\n  return new Promise(function (resolve, _) {\n    var reader = new FileReader();\n    reader.onloadend = function () {\n      return resolve(reader.result);\n    };\n    reader.readAsDataURL(blob);\n  });\n}\nexport function htmlToPlainText(html) {\n  var tempDivElement = document.createElement('div');\n  tempDivElement.innerHTML = html;\n  return tempDivElement.textContent || tempDivElement.innerText || '';\n}\nexport function getImageSizeFromBlobAsync(blob) {\n  return new Promise(function (resolve, _) {\n    var blobUrl = URL.createObjectURL(blob);\n    var img = document.createElement('img');\n    img.src = blobUrl;\n    img.onload = function () {\n      resolve({\n        width: img.width,\n        height: img.height\n      });\n    };\n  });\n}\nexport function findImageInClipboardAsync(_x) {\n  return _findImageInClipboardAsync.apply(this, arguments);\n}\nfunction _findImageInClipboardAsync() {\n  _findImageInClipboardAsync = _asyncToGenerator(function* (items) {\n    for (var clipboardItem of items) {\n      if (clipboardItem.types.some(function (type) {\n        return type === 'image/png';\n      })) {\n        return yield clipboardItem.getType('image/png');\n      }\n      if (clipboardItem.types.some(function (type) {\n        return type === 'image/jpeg';\n      })) {\n        return yield clipboardItem.getType('image/jpeg');\n      }\n    }\n    return null;\n  });\n  return _findImageInClipboardAsync.apply(this, arguments);\n}\nexport function findHtmlInClipboardAsync(_x2) {\n  return _findHtmlInClipboardAsync.apply(this, arguments);\n}\nfunction _findHtmlInClipboardAsync() {\n  _findHtmlInClipboardAsync = _asyncToGenerator(function* (items) {\n    for (var clipboardItem of items) {\n      if (clipboardItem.types.some(function (type) {\n        return type === 'text/html';\n      })) {\n        return yield clipboardItem.getType('text/html');\n      }\n    }\n    return null;\n  });\n  return _findHtmlInClipboardAsync.apply(this, arguments);\n}\nexport function isClipboardPermissionDeniedAsync() {\n  return _isClipboardPermissionDeniedAsync.apply(this, arguments);\n}\nfunction _isClipboardPermissionDeniedAsync() {\n  _isClipboardPermissionDeniedAsync = _asyncToGenerator(function* () {\n    var queryOpts = {\n      name: 'clipboard-read'\n    };\n    var permissionStatus = yield navigator.permissions.query(queryOpts);\n    return permissionStatus.state === 'denied';\n  });\n  return _isClipboardPermissionDeniedAsync.apply(this, arguments);\n}","map":{"version":3,"names":["base64toBlob","base64Data","contentType","sliceSize","byteCharacters","atob","bytesLength","length","slicesCount","Math","ceil","byteArrays","Array","sliceIndex","begin","end","min","bytes","offset","i","charCodeAt","Uint8Array","Blob","type","blobToBase64Async","blob","Promise","resolve","_","reader","FileReader","onloadend","result","readAsDataURL","htmlToPlainText","html","tempDivElement","document","createElement","innerHTML","textContent","innerText","getImageSizeFromBlobAsync","blobUrl","URL","createObjectURL","img","src","onload","width","height","findImageInClipboardAsync","_x","_findImageInClipboardAsync","apply","arguments","_asyncToGenerator","items","clipboardItem","types","some","getType","findHtmlInClipboardAsync","_x2","_findHtmlInClipboardAsync","isClipboardPermissionDeniedAsync","_isClipboardPermissionDeniedAsync","queryOpts","name","permissionStatus","navigator","permissions","query","state"],"sources":["C:\\Users\\Admin\\Project\\Project\\Messenger\\Messenger\\node_modules\\expo-clipboard\\src\\web\\Utils.ts"],"sourcesContent":["/**\n * Converts base64-encoded data to a `Blob` object.\n * @see https://stackoverflow.com/a/20151856\n */\nexport function base64toBlob(base64Data: string, contentType: string): Blob {\n  contentType = contentType || '';\n  const sliceSize = 1024;\n  const byteCharacters = atob(base64Data);\n  const bytesLength = byteCharacters.length;\n  const slicesCount = Math.ceil(bytesLength / sliceSize);\n  const byteArrays = new Array(slicesCount);\n\n  for (let sliceIndex = 0; sliceIndex < slicesCount; ++sliceIndex) {\n    const begin = sliceIndex * sliceSize;\n    const end = Math.min(begin + sliceSize, bytesLength);\n\n    const bytes = new Array(end - begin);\n    for (let offset = begin, i = 0; offset < end; ++i, ++offset) {\n      bytes[i] = byteCharacters[offset].charCodeAt(0);\n    }\n    byteArrays[sliceIndex] = new Uint8Array(bytes);\n  }\n  // I cannot use `@ts-expect-error` here because some environments consider this correct:\n  // expo-module build - OK,\n  // expo-module test - error\n  // @ts-ignore `Blob` from `lib.dom.d.ts` and the one from `@types/react-native` differ somehow\n  return new Blob(byteArrays, { type: contentType });\n}\n\n/**\n * Converts blob to base64-encoded string with Data-URL prefix.\n */\nexport function blobToBase64Async(blob: Blob): Promise<string> {\n  return new Promise((resolve, _) => {\n    const reader = new FileReader();\n    reader.onloadend = () => resolve(reader.result as string);\n    reader.readAsDataURL(blob);\n  });\n}\n\nexport function htmlToPlainText(html: string) {\n  const tempDivElement = document.createElement('div');\n  tempDivElement.innerHTML = html;\n  return tempDivElement.textContent || tempDivElement.innerText || '';\n}\n\nexport function getImageSizeFromBlobAsync(blob: Blob): Promise<{ width: number; height: number }> {\n  return new Promise((resolve, _) => {\n    const blobUrl = URL.createObjectURL(blob);\n    const img = document.createElement('img');\n    img.src = blobUrl;\n    img.onload = function () {\n      resolve({ width: img.width, height: img.height });\n    };\n  });\n}\n\nexport async function findImageInClipboardAsync(items: ClipboardItems): Promise<Blob | null> {\n  for (const clipboardItem of items) {\n    // first look for png\n    if (clipboardItem.types.some((type) => type === 'image/png')) {\n      return await clipboardItem.getType('image/png');\n    }\n\n    // alternatively, an image might be a jpeg\n    // NOTE: Currently, this is not supported by browsers yet. They only support PNG now\n    if (clipboardItem.types.some((type) => type === 'image/jpeg')) {\n      return await clipboardItem.getType('image/jpeg');\n    }\n  }\n  return null;\n}\n\nexport async function findHtmlInClipboardAsync(items: ClipboardItems): Promise<Blob | null> {\n  for (const clipboardItem of items) {\n    if (clipboardItem.types.some((type) => type === 'text/html')) {\n      return await clipboardItem.getType('text/html');\n    }\n  }\n  return null;\n}\n\nexport async function isClipboardPermissionDeniedAsync(): Promise<boolean> {\n  const queryOpts = { name: 'clipboard-read' as PermissionName };\n  const permissionStatus = await navigator.permissions.query(queryOpts);\n  return permissionStatus.state === 'denied';\n}\n"],"mappings":";AAIA,OAAM,SAAUA,YAAYA,CAACC,UAAkB,EAAEC,WAAmB;EAClEA,WAAW,GAAGA,WAAW,IAAI,EAAE;EAC/B,IAAMC,SAAS,GAAG,IAAI;EACtB,IAAMC,cAAc,GAAGC,IAAI,CAACJ,UAAU,CAAC;EACvC,IAAMK,WAAW,GAAGF,cAAc,CAACG,MAAM;EACzC,IAAMC,WAAW,GAAGC,IAAI,CAACC,IAAI,CAACJ,WAAW,GAAGH,SAAS,CAAC;EACtD,IAAMQ,UAAU,GAAG,IAAIC,KAAK,CAACJ,WAAW,CAAC;EAEzC,KAAK,IAAIK,UAAU,GAAG,CAAC,EAAEA,UAAU,GAAGL,WAAW,EAAE,EAAEK,UAAU,EAAE;IAC/D,IAAMC,KAAK,GAAGD,UAAU,GAAGV,SAAS;IACpC,IAAMY,GAAG,GAAGN,IAAI,CAACO,GAAG,CAACF,KAAK,GAAGX,SAAS,EAAEG,WAAW,CAAC;IAEpD,IAAMW,KAAK,GAAG,IAAIL,KAAK,CAACG,GAAG,GAAGD,KAAK,CAAC;IACpC,KAAK,IAAII,MAAM,GAAGJ,KAAK,EAAEK,CAAC,GAAG,CAAC,EAAED,MAAM,GAAGH,GAAG,EAAE,EAAEI,CAAC,EAAE,EAAED,MAAM,EAAE;MAC3DD,KAAK,CAACE,CAAC,CAAC,GAAGf,cAAc,CAACc,MAAM,CAAC,CAACE,UAAU,CAAC,CAAC,CAAC;;IAEjDT,UAAU,CAACE,UAAU,CAAC,GAAG,IAAIQ,UAAU,CAACJ,KAAK,CAAC;;EAMhD,OAAO,IAAIK,IAAI,CAACX,UAAU,EAAE;IAAEY,IAAI,EAAErB;EAAW,CAAE,CAAC;AACpD;AAKA,OAAM,SAAUsB,iBAAiBA,CAACC,IAAU;EAC1C,OAAO,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEC,CAAC,EAAI;IAChC,IAAMC,MAAM,GAAG,IAAIC,UAAU,EAAE;IAC/BD,MAAM,CAACE,SAAS,GAAG;MAAA,OAAMJ,OAAO,CAACE,MAAM,CAACG,MAAgB,CAAC;IAAA;IACzDH,MAAM,CAACI,aAAa,CAACR,IAAI,CAAC;EAC5B,CAAC,CAAC;AACJ;AAEA,OAAM,SAAUS,eAAeA,CAACC,IAAY;EAC1C,IAAMC,cAAc,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EACpDF,cAAc,CAACG,SAAS,GAAGJ,IAAI;EAC/B,OAAOC,cAAc,CAACI,WAAW,IAAIJ,cAAc,CAACK,SAAS,IAAI,EAAE;AACrE;AAEA,OAAM,SAAUC,yBAAyBA,CAACjB,IAAU;EAClD,OAAO,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEC,CAAC,EAAI;IAChC,IAAMe,OAAO,GAAGC,GAAG,CAACC,eAAe,CAACpB,IAAI,CAAC;IACzC,IAAMqB,GAAG,GAAGT,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IACzCQ,GAAG,CAACC,GAAG,GAAGJ,OAAO;IACjBG,GAAG,CAACE,MAAM,GAAG;MACXrB,OAAO,CAAC;QAAEsB,KAAK,EAAEH,GAAG,CAACG,KAAK;QAAEC,MAAM,EAAEJ,GAAG,CAACI;MAAM,CAAE,CAAC;IACnD,CAAC;EACH,CAAC,CAAC;AACJ;AAEA,gBAAsBC,yBAAyBA,CAAAC,EAAA;EAAA,OAAAC,0BAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAc9C,SAAAF,2BAAA;EAAAA,0BAAA,GAAAG,iBAAA,CAdM,WAAyCC,KAAqB;IACnE,KAAK,IAAMC,aAAa,IAAID,KAAK,EAAE;MAEjC,IAAIC,aAAa,CAACC,KAAK,CAACC,IAAI,CAAC,UAACrC,IAAI;QAAA,OAAKA,IAAI,KAAK,WAAW;MAAA,EAAC,EAAE;QAC5D,aAAamC,aAAa,CAACG,OAAO,CAAC,WAAW,CAAC;;MAKjD,IAAIH,aAAa,CAACC,KAAK,CAACC,IAAI,CAAC,UAACrC,IAAI;QAAA,OAAKA,IAAI,KAAK,YAAY;MAAA,EAAC,EAAE;QAC7D,aAAamC,aAAa,CAACG,OAAO,CAAC,YAAY,CAAC;;;IAGpD,OAAO,IAAI;EACb,CAAC;EAAA,OAAAR,0BAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAED,gBAAsBO,wBAAwBA,CAAAC,GAAA;EAAA,OAAAC,yBAAA,CAAAV,KAAA,OAAAC,SAAA;AAAA;AAO7C,SAAAS,0BAAA;EAAAA,yBAAA,GAAAR,iBAAA,CAPM,WAAwCC,KAAqB;IAClE,KAAK,IAAMC,aAAa,IAAID,KAAK,EAAE;MACjC,IAAIC,aAAa,CAACC,KAAK,CAACC,IAAI,CAAC,UAACrC,IAAI;QAAA,OAAKA,IAAI,KAAK,WAAW;MAAA,EAAC,EAAE;QAC5D,aAAamC,aAAa,CAACG,OAAO,CAAC,WAAW,CAAC;;;IAGnD,OAAO,IAAI;EACb,CAAC;EAAA,OAAAG,yBAAA,CAAAV,KAAA,OAAAC,SAAA;AAAA;AAED,gBAAsBU,gCAAgCA,CAAA;EAAA,OAAAC,iCAAA,CAAAZ,KAAA,OAAAC,SAAA;AAAA;AAIrD,SAAAW,kCAAA;EAAAA,iCAAA,GAAAV,iBAAA,CAJM,aAA+C;IACpD,IAAMW,SAAS,GAAG;MAAEC,IAAI,EAAE;IAAkC,CAAE;IAC9D,IAAMC,gBAAgB,SAASC,SAAS,CAACC,WAAW,CAACC,KAAK,CAACL,SAAS,CAAC;IACrE,OAAOE,gBAAgB,CAACI,KAAK,KAAK,QAAQ;EAC5C,CAAC;EAAA,OAAAP,iCAAA,CAAAZ,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}