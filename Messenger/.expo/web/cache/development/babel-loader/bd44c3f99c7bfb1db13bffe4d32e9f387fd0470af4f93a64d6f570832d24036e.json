{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport { withTiming } from \"../../animation\";\nimport { LayoutAnimationType, SharedTransitionType } from \"../animationBuilder/commonTypes\";\nimport { ReduceMotion } from \"../../commonTypes\";\nimport { configureLayoutAnimations } from \"../../core\";\nimport { ProgressTransitionManager } from \"./ProgressTransitionManager\";\nvar SUPPORTED_PROPS = ['width', 'height', 'originX', 'originY', 'transform', 'borderRadius'];\nexport var SharedTransition = function () {\n  function SharedTransition() {\n    _classCallCheck(this, SharedTransition);\n    _defineProperty(this, \"_customAnimationFactory\", null);\n    _defineProperty(this, \"_animation\", null);\n    _defineProperty(this, \"_transitionDuration\", 500);\n    _defineProperty(this, \"_reduceMotion\", ReduceMotion.System);\n    _defineProperty(this, \"_customProgressAnimation\", undefined);\n    _defineProperty(this, \"_progressAnimation\", undefined);\n    _defineProperty(this, \"_defaultTransitionType\", undefined);\n  }\n  _createClass(SharedTransition, [{\n    key: \"custom\",\n    value: function custom(customAnimationFactory) {\n      this._customAnimationFactory = customAnimationFactory;\n      return this;\n    }\n  }, {\n    key: \"progressAnimation\",\n    value: function progressAnimation(progressAnimationCallback) {\n      this._customProgressAnimation = function (viewTag, values, progress) {\n        'worklet';\n\n        var newStyles = progressAnimationCallback(values, progress);\n        _notifyAboutProgress(viewTag, newStyles, true);\n      };\n      return this;\n    }\n  }, {\n    key: \"duration\",\n    value: function duration(_duration) {\n      this._transitionDuration = _duration;\n      return this;\n    }\n  }, {\n    key: \"reduceMotion\",\n    value: function reduceMotion(_reduceMotion) {\n      this._reduceMotion = _reduceMotion;\n      return this;\n    }\n  }, {\n    key: \"defaultTransitionType\",\n    value: function defaultTransitionType(transitionType) {\n      this._defaultTransitionType = transitionType;\n      return this;\n    }\n  }, {\n    key: \"registerTransition\",\n    value: function registerTransition(viewTag, sharedTransitionTag) {\n      var transitionAnimation = this.getTransitionAnimation();\n      var progressAnimation = this.getProgressAnimation();\n      if (!this._defaultTransitionType) {\n        if (this._customAnimationFactory && !this._customProgressAnimation) {\n          this._defaultTransitionType = SharedTransitionType.ANIMATION;\n        } else {\n          this._defaultTransitionType = SharedTransitionType.PROGRESS_ANIMATION;\n        }\n      }\n      var layoutAnimationType = this._defaultTransitionType === SharedTransitionType.ANIMATION ? LayoutAnimationType.SHARED_ELEMENT_TRANSITION : LayoutAnimationType.SHARED_ELEMENT_TRANSITION_PROGRESS;\n      configureLayoutAnimations(viewTag, layoutAnimationType, transitionAnimation, sharedTransitionTag);\n      SharedTransition._progressTransitionManager.addProgressAnimation(viewTag, progressAnimation);\n    }\n  }, {\n    key: \"unregisterTransition\",\n    value: function unregisterTransition(viewTag) {\n      SharedTransition._progressTransitionManager.removeProgressAnimation(viewTag);\n    }\n  }, {\n    key: \"getReduceMotion\",\n    value: function getReduceMotion() {\n      return this._reduceMotion;\n    }\n  }, {\n    key: \"getTransitionAnimation\",\n    value: function getTransitionAnimation() {\n      if (!this._animation) {\n        this.buildAnimation();\n      }\n      return this._animation;\n    }\n  }, {\n    key: \"getProgressAnimation\",\n    value: function getProgressAnimation() {\n      if (!this._progressAnimation) {\n        this.buildProgressAnimation();\n      }\n      return this._progressAnimation;\n    }\n  }, {\n    key: \"buildAnimation\",\n    value: function buildAnimation() {\n      var animationFactory = this._customAnimationFactory;\n      var transitionDuration = this._transitionDuration;\n      var reduceMotion = this._reduceMotion;\n      this._animation = function (values) {\n        'worklet';\n\n        var animations = {};\n        var initialValues = {};\n        if (animationFactory) {\n          animations = animationFactory(values);\n          for (var key in animations) {\n            if (!SUPPORTED_PROPS.includes(key)) {\n              throw new Error(`[Reanimated] The prop '${key}' is not supported yet.`);\n            }\n          }\n        } else {\n          for (var propName of SUPPORTED_PROPS) {\n            if (propName === 'transform') {\n              var matrix = values.targetTransformMatrix;\n              animations.transformMatrix = withTiming(matrix, {\n                reduceMotion: reduceMotion,\n                duration: transitionDuration\n              });\n            } else {\n              var capitalizedPropName = `${propName.charAt(0).toUpperCase()}${propName.slice(1)}`;\n              var keyToTargetValue = `target${capitalizedPropName}`;\n              animations[propName] = withTiming(values[keyToTargetValue], {\n                reduceMotion: reduceMotion,\n                duration: transitionDuration\n              });\n            }\n          }\n        }\n        for (var _propName in animations) {\n          if (_propName === 'transform') {\n            initialValues.transformMatrix = values.currentTransformMatrix;\n          } else {\n            var _capitalizedPropName = _propName.charAt(0).toUpperCase() + _propName.slice(1);\n            var keyToCurrentValue = `current${_capitalizedPropName}`;\n            initialValues[_propName] = values[keyToCurrentValue];\n          }\n        }\n        return {\n          initialValues: initialValues,\n          animations: animations\n        };\n      };\n    }\n  }, {\n    key: \"buildProgressAnimation\",\n    value: function buildProgressAnimation() {\n      if (this._customProgressAnimation) {\n        this._progressAnimation = this._customProgressAnimation;\n        return;\n      }\n      this._progressAnimation = function (viewTag, values, progress) {\n        'worklet';\n\n        var newStyles = {};\n        for (var propertyName of SUPPORTED_PROPS) {\n          if (propertyName === 'transform') {\n            var currentMatrix = values.currentTransformMatrix;\n            var targetMatrix = values.targetTransformMatrix;\n            var newMatrix = new Array(9);\n            for (var i = 0; i < 9; i++) {\n              newMatrix[i] = progress * (targetMatrix[i] - currentMatrix[i]) + currentMatrix[i];\n            }\n            newStyles.transformMatrix = newMatrix;\n          } else {\n            var PropertyName = propertyName.charAt(0).toUpperCase() + propertyName.slice(1);\n            var currentPropertyName = `current${PropertyName}`;\n            var targetPropertyName = `target${PropertyName}`;\n            var currentValue = values[currentPropertyName];\n            var targetValue = values[targetPropertyName];\n            newStyles[propertyName] = progress * (targetValue - currentValue) + currentValue;\n          }\n        }\n        _notifyAboutProgress(viewTag, newStyles, true);\n      };\n    }\n  }], [{\n    key: \"custom\",\n    value: function custom(customAnimationFactory) {\n      return new SharedTransition().custom(customAnimationFactory);\n    }\n  }, {\n    key: \"duration\",\n    value: function duration(_duration2) {\n      return new SharedTransition().duration(_duration2);\n    }\n  }, {\n    key: \"progressAnimation\",\n    value: function progressAnimation(progressAnimationCallback) {\n      return new SharedTransition().progressAnimation(progressAnimationCallback);\n    }\n  }, {\n    key: \"defaultTransitionType\",\n    value: function defaultTransitionType(transitionType) {\n      return new SharedTransition().defaultTransitionType(transitionType);\n    }\n  }, {\n    key: \"reduceMotion\",\n    value: function reduceMotion(_reduceMotion) {\n      return new SharedTransition().reduceMotion(_reduceMotion);\n    }\n  }]);\n  return SharedTransition;\n}();\n_defineProperty(SharedTransition, \"_progressTransitionManager\", new ProgressTransitionManager());","map":{"version":3,"names":["withTiming","LayoutAnimationType","SharedTransitionType","ReduceMotion","configureLayoutAnimations","ProgressTransitionManager","SUPPORTED_PROPS","SharedTransition","_classCallCheck","_defineProperty","System","undefined","_createClass","key","value","custom","customAnimationFactory","_customAnimationFactory","progressAnimation","progressAnimationCallback","_customProgressAnimation","viewTag","values","progress","newStyles","_notifyAboutProgress","duration","_transitionDuration","reduceMotion","_reduceMotion","defaultTransitionType","transitionType","_defaultTransitionType","registerTransition","sharedTransitionTag","transitionAnimation","getTransitionAnimation","getProgressAnimation","ANIMATION","PROGRESS_ANIMATION","layoutAnimationType","SHARED_ELEMENT_TRANSITION","SHARED_ELEMENT_TRANSITION_PROGRESS","_progressTransitionManager","addProgressAnimation","unregisterTransition","removeProgressAnimation","getReduceMotion","_animation","buildAnimation","_progressAnimation","buildProgressAnimation","animationFactory","transitionDuration","animations","initialValues","includes","Error","propName","matrix","targetTransformMatrix","transformMatrix","capitalizedPropName","charAt","toUpperCase","slice","keyToTargetValue","currentTransformMatrix","keyToCurrentValue","propertyName","currentMatrix","targetMatrix","newMatrix","Array","i","PropertyName","currentPropertyName","targetPropertyName","currentValue","targetValue"],"sources":["C:\\Users\\Admin\\Project\\Project\\Messenger\\Messenger\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\layoutReanimation\\sharedTransitions\\SharedTransition.ts"],"sourcesContent":["import { withTiming } from '../../animation';\nimport type {\n  SharedTransitionAnimationsFunction,\n  SharedTransitionAnimationsValues,\n  CustomProgressAnimation,\n  ProgressAnimation,\n  LayoutAnimationsOptions,\n} from '../animationBuilder/commonTypes';\nimport {\n  LayoutAnimationType,\n  SharedTransitionType,\n} from '../animationBuilder/commonTypes';\nimport type { StyleProps } from '../../commonTypes';\nimport { ReduceMotion } from '../../commonTypes';\nimport { configureLayoutAnimations } from '../../core';\nimport { ProgressTransitionManager } from './ProgressTransitionManager';\n\nconst SUPPORTED_PROPS = [\n  'width',\n  'height',\n  'originX',\n  'originY',\n  'transform',\n  'borderRadius',\n] as const;\n\ntype AnimationFactory = (\n  values: SharedTransitionAnimationsValues\n) => StyleProps;\n\nexport class SharedTransition {\n  private _customAnimationFactory: AnimationFactory | null = null;\n  private _animation: SharedTransitionAnimationsFunction | null = null;\n  private _transitionDuration = 500;\n  private _reduceMotion: ReduceMotion = ReduceMotion.System;\n  private _customProgressAnimation?: ProgressAnimation = undefined;\n  private _progressAnimation?: ProgressAnimation = undefined;\n  private _defaultTransitionType?: SharedTransitionType = undefined;\n  private static _progressTransitionManager = new ProgressTransitionManager();\n\n  public custom(customAnimationFactory: AnimationFactory): SharedTransition {\n    this._customAnimationFactory = customAnimationFactory;\n    return this;\n  }\n\n  public progressAnimation(\n    progressAnimationCallback: CustomProgressAnimation\n  ): SharedTransition {\n    this._customProgressAnimation = (viewTag, values, progress) => {\n      'worklet';\n      const newStyles = progressAnimationCallback(values, progress);\n      _notifyAboutProgress(viewTag, newStyles, true);\n    };\n    return this;\n  }\n\n  public duration(duration: number): SharedTransition {\n    this._transitionDuration = duration;\n    return this;\n  }\n\n  public reduceMotion(_reduceMotion: ReduceMotion): this {\n    this._reduceMotion = _reduceMotion;\n    return this;\n  }\n\n  public defaultTransitionType(\n    transitionType: SharedTransitionType\n  ): SharedTransition {\n    this._defaultTransitionType = transitionType;\n    return this;\n  }\n\n  public registerTransition(\n    viewTag: number,\n    sharedTransitionTag: string\n  ): void {\n    const transitionAnimation = this.getTransitionAnimation();\n    const progressAnimation = this.getProgressAnimation();\n    if (!this._defaultTransitionType) {\n      if (this._customAnimationFactory && !this._customProgressAnimation) {\n        this._defaultTransitionType = SharedTransitionType.ANIMATION;\n      } else {\n        this._defaultTransitionType = SharedTransitionType.PROGRESS_ANIMATION;\n      }\n    }\n    const layoutAnimationType =\n      this._defaultTransitionType === SharedTransitionType.ANIMATION\n        ? LayoutAnimationType.SHARED_ELEMENT_TRANSITION\n        : LayoutAnimationType.SHARED_ELEMENT_TRANSITION_PROGRESS;\n    configureLayoutAnimations(\n      viewTag,\n      layoutAnimationType,\n      transitionAnimation,\n      sharedTransitionTag\n    );\n    SharedTransition._progressTransitionManager.addProgressAnimation(\n      viewTag,\n      progressAnimation\n    );\n  }\n\n  public unregisterTransition(viewTag: number): void {\n    SharedTransition._progressTransitionManager.removeProgressAnimation(\n      viewTag\n    );\n  }\n\n  public getReduceMotion(): ReduceMotion {\n    return this._reduceMotion;\n  }\n\n  private getTransitionAnimation(): SharedTransitionAnimationsFunction {\n    if (!this._animation) {\n      this.buildAnimation();\n    }\n    return this._animation!;\n  }\n\n  private getProgressAnimation(): ProgressAnimation {\n    if (!this._progressAnimation) {\n      this.buildProgressAnimation();\n    }\n    return this._progressAnimation!;\n  }\n\n  private buildAnimation() {\n    const animationFactory = this._customAnimationFactory;\n    const transitionDuration = this._transitionDuration;\n    const reduceMotion = this._reduceMotion;\n    this._animation = (values: SharedTransitionAnimationsValues) => {\n      'worklet';\n      let animations: {\n        [key: string]: any;\n      } = {};\n      const initialValues: {\n        [key: string]: any;\n      } = {};\n\n      if (animationFactory) {\n        animations = animationFactory(values);\n        for (const key in animations) {\n          if (!(SUPPORTED_PROPS as readonly string[]).includes(key)) {\n            throw new Error(\n              `[Reanimated] The prop '${key}' is not supported yet.`\n            );\n          }\n        }\n      } else {\n        for (const propName of SUPPORTED_PROPS) {\n          if (propName === 'transform') {\n            const matrix = values.targetTransformMatrix;\n            animations.transformMatrix = withTiming(matrix, {\n              reduceMotion,\n              duration: transitionDuration,\n            });\n          } else {\n            const capitalizedPropName = `${propName\n              .charAt(0)\n              .toUpperCase()}${propName.slice(\n              1\n            )}` as Capitalize<LayoutAnimationsOptions>;\n            const keyToTargetValue = `target${capitalizedPropName}` as const;\n            animations[propName] = withTiming(values[keyToTargetValue], {\n              reduceMotion,\n              duration: transitionDuration,\n            });\n          }\n        }\n      }\n\n      for (const propName in animations) {\n        if (propName === 'transform') {\n          initialValues.transformMatrix = values.currentTransformMatrix;\n        } else {\n          const capitalizedPropName = (propName.charAt(0).toUpperCase() +\n            propName.slice(1)) as Capitalize<LayoutAnimationsOptions>;\n          const keyToCurrentValue = `current${capitalizedPropName}` as const;\n          initialValues[propName] = values[keyToCurrentValue];\n        }\n      }\n\n      return { initialValues, animations };\n    };\n  }\n\n  private buildProgressAnimation() {\n    if (this._customProgressAnimation) {\n      this._progressAnimation = this._customProgressAnimation;\n      return;\n    }\n    this._progressAnimation = (viewTag, values, progress) => {\n      'worklet';\n      const newStyles: { [key: string]: number | number[] } = {};\n      for (const propertyName of SUPPORTED_PROPS) {\n        if (propertyName === 'transform') {\n          // this is not the perfect solution, but at this moment it just interpolates the whole\n          // matrix instead of interpolating scale, translate, rotate, etc. separately\n          const currentMatrix = values.currentTransformMatrix as number[];\n          const targetMatrix = values.targetTransformMatrix as number[];\n          const newMatrix = new Array(9);\n          for (let i = 0; i < 9; i++) {\n            newMatrix[i] =\n              progress * (targetMatrix[i] - currentMatrix[i]) +\n              currentMatrix[i];\n          }\n          newStyles.transformMatrix = newMatrix;\n        } else {\n          // PropertyName == propertyName with capitalized fist letter, (width -> Width)\n          const PropertyName = (propertyName.charAt(0).toUpperCase() +\n            propertyName.slice(1)) as Capitalize<LayoutAnimationsOptions>;\n          const currentPropertyName = `current${PropertyName}` as const;\n          const targetPropertyName = `target${PropertyName}` as const;\n\n          const currentValue = values[currentPropertyName];\n          const targetValue = values[targetPropertyName];\n\n          newStyles[propertyName] =\n            progress * (targetValue - currentValue) + currentValue;\n        }\n      }\n      _notifyAboutProgress(viewTag, newStyles, true);\n    };\n  }\n\n  // static builder methods\n\n  public static custom(\n    customAnimationFactory: AnimationFactory\n  ): SharedTransition {\n    return new SharedTransition().custom(customAnimationFactory);\n  }\n\n  public static duration(duration: number): SharedTransition {\n    return new SharedTransition().duration(duration);\n  }\n\n  public static progressAnimation(\n    progressAnimationCallback: CustomProgressAnimation\n  ): SharedTransition {\n    return new SharedTransition().progressAnimation(progressAnimationCallback);\n  }\n\n  public static defaultTransitionType(\n    transitionType: SharedTransitionType\n  ): SharedTransition {\n    return new SharedTransition().defaultTransitionType(transitionType);\n  }\n\n  public static reduceMotion(_reduceMotion: ReduceMotion): SharedTransition {\n    return new SharedTransition().reduceMotion(_reduceMotion);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}