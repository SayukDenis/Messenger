{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport User from \"../../Models/User\";\nimport { dataSource } from \"../../local/database\";\nimport MainChat from \"../../Models/Chats/MainChat\";\nimport Branch from \"../../Models/Chats/Branch\";\nimport { readBranches } from \"./branchOperations\";\nvar manager = dataSource.manager;\nexport function mainChatOperations() {\n  return _mainChatOperations.apply(this, arguments);\n}\nfunction _mainChatOperations() {\n  _mainChatOperations = _asyncToGenerator(function* () {\n    console.log('\\n\\tMainChats start\\n');\n    if (!dataSource.isInitialized) yield dataSource.initialize();\n    var mainChat = new MainChat();\n    mainChat.linkToPhoto = 'someLink';\n    mainChat.lastWatchedMessage = [{\n      userId: 12,\n      messageId: 14\n    }];\n    mainChat.auditLog = [{\n      sendTime: new Date(),\n      message: 'log1'\n    }];\n    mainChat.users = [new User('', '')];\n    mainChat = yield manager.save(mainChat);\n    console.log('MainChat has been saved');\n    var branch1 = new Branch('branch1');\n    branch1.linkToPhoto = 'some link';\n    branch1.mainChat = mainChat;\n    yield manager.save(branch1);\n    console.log('Branch1 has been saved');\n    var branch2 = new Branch('branch2');\n    branch2.linkToPhoto = 'some link';\n    branch2.mainChat = mainChat;\n    yield manager.save(branch2);\n    console.log('Branch2 has been saved');\n    var branch3 = new Branch('branch3');\n    branch3.linkToPhoto = 'some link';\n    branch3.mainChat = mainChat;\n    yield manager.save(branch3);\n    console.log('Branch3 has been saved');\n    yield readMainChats();\n    yield readBranches();\n    yield manager.remove(mainChat);\n    console.log('MainChats have been removed');\n    yield readMainChats();\n    yield readBranches();\n  });\n  return _mainChatOperations.apply(this, arguments);\n}\nexport function readMainChats() {\n  return _readMainChats.apply(this, arguments);\n}\nfunction _readMainChats() {\n  _readMainChats = _asyncToGenerator(function* () {\n    var savedChats = yield manager.find(MainChat);\n    console.log(`MainChats quantity: ${savedChats.length}`);\n    for (var chat of savedChats) {\n      console.log(chat);\n    }\n  });\n  return _readMainChats.apply(this, arguments);\n}","map":{"version":3,"names":["User","dataSource","MainChat","Branch","readBranches","manager","mainChatOperations","_mainChatOperations","apply","arguments","_asyncToGenerator","console","log","isInitialized","initialize","mainChat","linkToPhoto","lastWatchedMessage","userId","messageId","auditLog","sendTime","Date","message","users","save","branch1","branch2","branch3","readMainChats","remove","_readMainChats","savedChats","find","length","chat"],"sources":["C:/Users/T480/source/repos/Messenger/Messenger/dao/test/manualTest/mainChatOperations.ts"],"sourcesContent":["import User from '../../Models/User';\r\nimport { dataSource } from '../../local/database';\r\nimport Message from '../../Models/Message';\r\nimport { EMessageType } from '../../Models/EMessageType';\r\nimport Chat from '../../Models/Chats/Chat';\r\nimport MainChat from '../../Models/Chats/MainChat';\r\nimport Branch from '../../Models/Chats/Branch';\r\nimport { readBranches } from './branchOperations';\r\n\r\nconst manager = dataSource.manager;\r\n\r\nexport async function mainChatOperations() {\r\n    console.log('\\n\\tMainChats start\\n');\r\n\r\n    if (!dataSource.isInitialized) await dataSource.initialize();\r\n\r\n    //Saved\r\n    let mainChat = new MainChat();\r\n    mainChat.linkToPhoto = 'someLink';\r\n    mainChat.lastWatchedMessage = [{ userId: 12, messageId: 14 }];\r\n    mainChat.auditLog = [{ sendTime: new Date(), message: 'log1' }];\r\n    mainChat.users = [new User('','')]\r\n    mainChat = await manager.save(mainChat);\r\n    console.log('MainChat has been saved');\r\n\r\n    // Create\r\n    let branch1 = new Branch('branch1');\r\n    branch1.linkToPhoto = 'some link';\r\n    branch1.mainChat = mainChat;\r\n    await manager.save(branch1);\r\n    console.log('Branch1 has been saved')\r\n\r\n    let branch2 = new Branch('branch2');\r\n    branch2.linkToPhoto = 'some link';\r\n    branch2.mainChat = mainChat;\r\n    await manager.save(branch2);\r\n    console.log('Branch2 has been saved')\r\n\r\n    let branch3 = new Branch('branch3');\r\n    branch3.linkToPhoto = 'some link';\r\n    branch3.mainChat = mainChat;\r\n    await manager.save(branch3);\r\n    console.log('Branch3 has been saved')\r\n\r\n    // Read\r\n    await readMainChats();\r\n    await readBranches();\r\n\r\n    // Delete\r\n    await manager.remove(mainChat);\r\n    console.log('MainChats have been removed');\r\n\r\n    // Read\r\n    await readMainChats();\r\n    await readBranches();\r\n}\r\n\r\nexport async function readMainChats() {\r\n    const savedChats = await manager.find(MainChat);\r\n    console.log(`MainChats quantity: ${savedChats.length}`);\r\n    for (let chat of savedChats) {\r\n        console.log(chat);\r\n    }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}