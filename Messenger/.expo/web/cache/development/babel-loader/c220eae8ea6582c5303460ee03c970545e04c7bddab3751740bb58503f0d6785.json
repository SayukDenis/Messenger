{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport User from \"../User\";\nimport Message from \"../Message\";\nimport Chat from \"./Chat\";\nimport Branch from \"./Branch\";\nimport Role from \"./Role\";\nvar Dialogue = function (_Chat) {\n  _inherits(Dialogue, _Chat);\n  var _super = _createSuper(Dialogue);\n  function Dialogue(firstUser, secondUser) {\n    var _this;\n    _classCallCheck(this, Dialogue);\n    _this = _super.call(this);\n    _this.firstUser = firstUser;\n    _this.secondUser = secondUser;\n    return _this;\n  }\n  return _createClass(Dialogue);\n}(Chat);\nDialogue.schema = {\n  name: 'dialogues',\n  properties: {\n    dialogueId: {\n      type: 'integer',\n      indexed: true\n    },\n    users: {\n      type: 'list',\n      objectType: User\n    },\n    messages: {\n      type: 'list',\n      objectType: Message\n    },\n    pinnedMessage: {\n      type: 'list',\n      objectType: Message\n    },\n    pinnedMessageForAll: {\n      type: 'list',\n      objectType: Message\n    },\n    branches: {\n      type: 'list',\n      objectType: Branch\n    },\n    roles: {\n      type: 'list',\n      objectType: Role\n    },\n    lastWathedMessage: {\n      type: 'list',\n      objectType: {}\n    },\n    linkToPhoto: 'text?'\n  },\n  primaryKey: 'dialogueId',\n  embedded: false\n};\nexport { Dialogue as default };","map":{"version":3,"names":["User","Message","Chat","Branch","Role","Dialogue","_Chat","_inherits","_super","_createSuper","firstUser","secondUser","_this","_classCallCheck","call","_createClass","schema","name","properties","dialogueId","type","indexed","users","objectType","messages","pinnedMessage","pinnedMessageForAll","branches","roles","lastWathedMessage","linkToPhoto","primaryKey","embedded","default"],"sources":["/home/zatibmag/Desktop/Project/Messenger/Messenger/dao/Models/Chats/Dialogue.ts"],"sourcesContent":["import User from '../User';\nimport Message from '../Message';\nimport Chat from './Chat';\nimport ILastWathedMessage from './ILastWathedMessage';\nimport Branch from './Branch';\nimport Role from './Role';\n\nexport default class Dialogue extends Chat {\n    constructor(firstUser: User, secondUser: User) {\n        super();\n        this.firstUser = firstUser;\n        this.secondUser = secondUser;\n    }\n    dialogueId?: number;\n    firstUser!: User;\n    secondUser!: User;\n    //schema\n    static schema = {\n        name: 'dialogues',\n        properties: {\n            dialogueId: { type: 'integer', indexed: true },\n            users: { type: 'list', objectType: User },\n            messages: { type: 'list', objectType: Message },          \n            pinnedMessage: { type: 'list', objectType: Message },\n            pinnedMessageForAll: { type: 'list', objectType: Message },\n            branches: { type: 'list', objectType: Branch },\n            roles: { type: 'list', objectType: Role },\n            lastWathedMessage: { type: 'list', objectType: {} as ILastWathedMessage },\n            linkToPhoto: 'text?',\n        },\n        primaryKey: 'dialogueId',\n        embedded: false,\n    }\n}"],"mappings":";;;;;;;AAAA,OAAOA,IAAI;AACX,OAAOC,OAAO;AACd,OAAOC,IAAI;AAEX,OAAOC,MAAM;AACb,OAAOC,IAAI;AAAe,IAELC,QAAQ,aAAAC,KAAA;EAAAC,SAAA,CAAAF,QAAA,EAAAC,KAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,QAAA;EACzB,SAAAA,SAAYK,SAAe,EAAEC,UAAgB,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAR,QAAA;IAC3CO,KAAA,GAAAJ,MAAA,CAAAM,IAAA;IACAF,KAAA,CAAKF,SAAS,GAAGA,SAAS;IAC1BE,KAAA,CAAKD,UAAU,GAAGA,UAAU;IAAC,OAAAC,KAAA;EACjC;EAAC,OAAAG,YAAA,CAAAV,QAAA;AAAA,EALiCH,IAAI;AAArBG,QAAQ,CAUlBW,MAAM,GAAG;EACZC,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE;IACRC,UAAU,EAAE;MAAEC,IAAI,EAAE,SAAS;MAAEC,OAAO,EAAE;IAAK,CAAC;IAC9CC,KAAK,EAAE;MAAEF,IAAI,EAAE,MAAM;MAAEG,UAAU,EAAEvB;IAAK,CAAC;IACzCwB,QAAQ,EAAE;MAAEJ,IAAI,EAAE,MAAM;MAAEG,UAAU,EAAEtB;IAAQ,CAAC;IAC/CwB,aAAa,EAAE;MAAEL,IAAI,EAAE,MAAM;MAAEG,UAAU,EAAEtB;IAAQ,CAAC;IACpDyB,mBAAmB,EAAE;MAAEN,IAAI,EAAE,MAAM;MAAEG,UAAU,EAAEtB;IAAQ,CAAC;IAC1D0B,QAAQ,EAAE;MAAEP,IAAI,EAAE,MAAM;MAAEG,UAAU,EAAEpB;IAAO,CAAC;IAC9CyB,KAAK,EAAE;MAAER,IAAI,EAAE,MAAM;MAAEG,UAAU,EAAEnB;IAAK,CAAC;IACzCyB,iBAAiB,EAAE;MAAET,IAAI,EAAE,MAAM;MAAEG,UAAU,EAAE,CAAC;IAAwB,CAAC;IACzEO,WAAW,EAAE;EACjB,CAAC;EACDC,UAAU,EAAE,YAAY;EACxBC,QAAQ,EAAE;AACd,CAAC;AAAA,SAzBgB3B,QAAQ,IAAA4B,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}