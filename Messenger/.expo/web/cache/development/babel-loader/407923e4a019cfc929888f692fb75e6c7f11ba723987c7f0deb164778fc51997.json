{"ast":null,"code":"import React from 'react';\nimport Settingspage from \"./MainSettingPage/settingsPage/Settings\";\nimport SavedmessagePage from \"./SavedMessagePage/SavedMessagePage\";\nimport EditPage from \"./MainSettingPage/EdiitPage/MainEditPage/EditPage\";\nimport QuestionPage from \"./Questionspage/Questionspage\";\nimport ChatFolderPage from \"./ChatFolderPage/MainChatFolderPage/ChatFolderPage\";\nimport ConfidentialityPage from \"./ConfidentialityPage/MainConfidentiality/ConfidentialPage\";\nimport BlockUser from \"./ConfidentialityPage/BlockedUser/BlockUser\";\nimport PasswordPage from \"./ConfidentialityPage/Password/Password\";\nimport EditBioPage from \"./MainSettingPage/EdiitPage/EditBioPage/EditBioPage\";\nimport EditUsernamePage from \"./MainSettingPage/EdiitPage/EditUserNamePage/EditUserName\";\nimport AddFolderPage from \"./ChatFolderPage/AddFolderPage/AddFolderPage\";\nimport { Stack } from \"../../Navigation/Navigation\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar NavigationForSettings = function NavigationForSettings() {\n  return _jsx(_Fragment, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Settings\",\n      screenOptions: {\n        headerShown: false\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"Settings\",\n        component: Settingspage\n      }), _jsx(Stack.Screen, {\n        name: \"Saved message\",\n        component: SavedmessagePage\n      }), _jsx(Stack.Screen, {\n        name: \"Edit page\",\n        component: EditPageNavigator\n      }), _jsx(Stack.Screen, {\n        name: \"Question page\",\n        component: QuestionPage\n      }), _jsx(Stack.Screen, {\n        name: \"Chat folders\",\n        component: ChatFolderPageNAvigator\n      }), _jsx(Stack.Screen, {\n        name: \"Confidentiality\",\n        component: ConfidentialityPageNavigator\n      })]\n    })\n  });\n};\nvar ConfidentialityPageNavigator = function ConfidentialityPageNavigator() {\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"ConfidentialityPage\",\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"ConfidentialityPage\",\n      component: ConfidentialityPage\n    }), _jsx(Stack.Screen, {\n      name: \"BlockUsers\",\n      component: BlockUser\n    }), _jsx(Stack.Screen, {\n      name: \"PasswordPage\",\n      component: PasswordPage\n    })]\n  });\n};\nvar EditPageNavigator = function EditPageNavigator() {\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"EditPage\",\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"EditPage\",\n      component: EditPage\n    }), _jsx(Stack.Screen, {\n      name: \"EditBioPage\",\n      component: EditBioPage\n    }), _jsx(Stack.Screen, {\n      name: \"EditUsernamePage\",\n      component: EditUsernamePage\n    })]\n  });\n};\nvar ChatFolderPageNAvigator = function ChatFolderPageNAvigator() {\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"Chatfolders\",\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Chatfolders\",\n      component: ChatFolderPage\n    }), _jsx(Stack.Screen, {\n      name: \"AddFolderPage\",\n      component: AddFolderPage\n    })]\n  });\n};\nexport default NavigationForSettings;","map":{"version":3,"names":["React","Settingspage","SavedmessagePage","EditPage","QuestionPage","ChatFolderPage","ConfidentialityPage","BlockUser","PasswordPage","EditBioPage","EditUsernamePage","AddFolderPage","Stack","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","NavigationForSettings","children","Navigator","initialRouteName","screenOptions","headerShown","Screen","name","component","EditPageNavigator","ChatFolderPageNAvigator","ConfidentialityPageNavigator"],"sources":["C:/Users/Admin/Project/Messenger/Messenger/Pages/Settings/NavigationForSettings.tsx"],"sourcesContent":["import React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport Settingspage from './MainSettingPage/settingsPage/Settings';\r\nimport SavedmessagePage from './SavedMessagePage/SavedMessagePage';\r\nimport EditPage from './MainSettingPage/EdiitPage/MainEditPage/EditPage';\r\nimport QuestionPage from './Questionspage/Questionspage';\r\nimport ChatFolderPage from './ChatFolderPage/MainChatFolderPage/ChatFolderPage';\r\nimport ConfidentialityPage from './ConfidentialityPage/MainConfidentiality/ConfidentialPage';\r\nimport BlockUser from './ConfidentialityPage/BlockedUser/BlockUser';\r\nimport PasswordPage from './ConfidentialityPage/Password/Password';\r\nimport EditBioPage from './MainSettingPage/EdiitPage/EditBioPage/EditBioPage';\r\nimport EditUsernamePage from './MainSettingPage/EdiitPage/EditUserNamePage/EditUserName';\r\nimport AddFolderPage from './ChatFolderPage/AddFolderPage/AddFolderPage';\r\nimport { Stack } from '../../Navigation/Navigation';\r\n\r\nconst NavigationForSettings = () => {\r\n  return (\r\n    <>\r\n      <Stack.Navigator\r\n        initialRouteName=\"Settings\"\r\n        screenOptions={{\r\n          headerShown: false, \r\n          \r\n        }}\r\n      >\r\n        <Stack.Screen name=\"Settings\" component={Settingspage} />\r\n        <Stack.Screen name=\"Saved message\" component={SavedmessagePage} />\r\n        <Stack.Screen name=\"Edit page\" component={EditPageNavigator} />\r\n        <Stack.Screen name=\"Question page\" component={QuestionPage} />\r\n        <Stack.Screen name=\"Chat folders\" component={ChatFolderPageNAvigator} />\r\n        <Stack.Screen name=\"Confidentiality\" component={ConfidentialityPageNavigator} />\r\n      </Stack.Navigator>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ConfidentialityPageNavigator=()=> {\r\n  return (\r\n    <Stack.Navigator\r\n    initialRouteName=\"ConfidentialityPage\"\r\n    screenOptions={{\r\n      headerShown: false,\r\n    }}\r\n  >\r\n      <Stack.Screen name=\"ConfidentialityPage\" component={ConfidentialityPage} />\r\n      <Stack.Screen name=\"BlockUsers\" component={BlockUser} />\r\n      <Stack.Screen name=\"PasswordPage\" component={PasswordPage} />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\nconst EditPageNavigator=()=> {\r\n  return (\r\n    <Stack.Navigator\r\n    initialRouteName=\"EditPage\"\r\n    screenOptions={{\r\n      headerShown: false,\r\n    }}\r\n  >\r\n      <Stack.Screen name=\"EditPage\" component={EditPage} />\r\n      <Stack.Screen name=\"EditBioPage\" component={EditBioPage} />\r\n      <Stack.Screen name=\"EditUsernamePage\" component={EditUsernamePage} />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\nconst ChatFolderPageNAvigator=()=> {\r\n  return (\r\n    <Stack.Navigator\r\n    initialRouteName=\"Chatfolders\"\r\n    screenOptions={{\r\n      headerShown: false,\r\n    }}\r\n  >\r\n      <Stack.Screen name=\"Chatfolders\" component={ChatFolderPage} />\r\n      <Stack.Screen name=\"AddFolderPage\" component={AddFolderPage} />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\nexport default NavigationForSettings;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}