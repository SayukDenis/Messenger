{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { styles } from \"./Styles\";\nimport OffNotificationIcon from \"./Icons/OffNotificationIcon\";\nimport OnNotificationIcon from \"./Icons/OnNotificationIcon\";\nimport BinIcon from \"./Icons/BinIcon\";\nimport SettingsIcon from \"./Icons/SettingsIcon\";\nimport ForwardContactIcon from \"./Icons/ForwardContactIcon\";\nimport BlockIcon from \"./Icons/BlockIcon\";\nimport UnblockIcon from \"./Icons/UnblockIcon\";\nimport ExitDoorIcon from \"./Icons/ExitIcon\";\nimport ClearChatIcon from \"./Icons/ClearChatIcon\";\nimport LockIcon from \"./Icons/LockIcon\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar ElseFeaturesButtons = function ElseFeaturesButtons(props) {\n  var elseFeaturesForEachProfile = [{\n    onPress: function onPress() {\n      props.onSettingsPress();\n      props.setIsVisible(false);\n    },\n    icon: _jsx(SettingsIcon, {\n      style: styles.elseFeatureIcon\n    }),\n    title: \"Settings\"\n  }, {\n    onPress: function onPress() {\n      props.onMutePress(!props.isMuted);\n      props.setIsVisible(false);\n    },\n    icon: props.isMuted ? _jsx(OnNotificationIcon, {\n      style: styles.elseFeatureIcon\n    }) : _jsx(OffNotificationIcon, {\n      style: styles.elseFeatureIcon\n    }),\n    title: props.isMuted ? \"On notification\" : \"Off notification\"\n  }, {\n    onPress: function onPress() {\n      props.onClearChatPress();\n    },\n    icon: _jsx(ClearChatIcon, {\n      style: styles.elseFeatureIcon\n    }),\n    title: \"Clear chat\"\n  }];\n  return _jsx(_Fragment, {\n    children: props.isVisible && _jsxs(View, {\n      style: styles.elseFeaturesButtonsContainer,\n      children: [elseFeaturesForEachProfile.map(function (feature, index) {\n        return _jsxs(TouchableOpacity, {\n          onPress: feature.onPress,\n          style: styles.elseFeatureButton,\n          children: [feature.icon, _jsx(Text, {\n            style: styles.elseFeatureTitle,\n            children: feature.title\n          })]\n        }, index);\n      }), props.mode === \"user\" && _jsxs(_Fragment, {\n        children: [_jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            props.onForwardPress();\n          },\n          style: styles.elseFeatureButton,\n          children: [_jsx(ForwardContactIcon, {\n            style: styles.elseFeatureIcon\n          }), _jsx(Text, {\n            style: styles.elseFeatureTitle,\n            children: \"Forward contact\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            if (props.onBlockPress !== undefined) {\n              props.onBlockPress(!props.isBlocked);\n            }\n            props.setIsVisible(false);\n          },\n          style: styles.elseFeatureButton,\n          children: [props.isBlocked ? _jsx(UnblockIcon, {\n            style: styles.elseFeatureIcon\n          }) : _jsx(BlockIcon, {\n            style: styles.elseFeatureIcon\n          }), _jsx(Text, {\n            style: styles.blockButtonTitle,\n            children: props.isBlocked ? \"Unblock\" : \"Block\"\n          })]\n        })]\n      }), props.mode === \"group\" && _jsxs(_Fragment, {\n        children: [_jsxs(TouchableOpacity, {\n          style: styles.elseFeatureButton,\n          children: [_jsx(BinIcon, {\n            style: styles.elseFeatureIcon\n          }), _jsx(Text, {\n            style: [styles.elseFeatureTitle, {\n              color: \"red\"\n            }],\n            children: \"Delete group\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.elseFeatureButton,\n          children: [_jsx(ExitDoorIcon, {\n            style: styles.elseFeatureIcon\n          }), _jsx(Text, {\n            style: [styles.elseFeatureTitle, {\n              color: \"red\"\n            }],\n            children: \"Leave group\"\n          })]\n        })]\n      }), props.mode === \"channel\" && _jsxs(_Fragment, {\n        children: [_jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            props.onTypeChannelPress();\n          },\n          style: styles.elseFeatureButton,\n          children: [_jsx(LockIcon, {\n            style: styles.elseFeatureIcon\n          }), _jsx(Text, {\n            style: styles.elseFeatureTitle,\n            children: \"Type channel\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.elseFeatureButton,\n          children: [_jsx(BinIcon, {\n            style: styles.elseFeatureIcon\n          }), _jsx(Text, {\n            style: [styles.elseFeatureTitle, {\n              color: \"red\"\n            }],\n            children: \"Delete channel\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.elseFeatureButton,\n          children: [_jsx(ExitDoorIcon, {\n            style: styles.elseFeatureIcon\n          }), _jsx(Text, {\n            style: [styles.elseFeatureTitle, {\n              color: \"red\"\n            }],\n            children: \"Leave channel\"\n          })]\n        })]\n      })]\n    })\n  });\n};\nexport default ElseFeaturesButtons;","map":{"version":3,"names":["React","View","TouchableOpacity","Text","styles","OffNotificationIcon","OnNotificationIcon","BinIcon","SettingsIcon","ForwardContactIcon","BlockIcon","UnblockIcon","ExitDoorIcon","ClearChatIcon","LockIcon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ElseFeaturesButtons","props","elseFeaturesForEachProfile","onPress","onSettingsPress","setIsVisible","icon","style","elseFeatureIcon","title","onMutePress","isMuted","onClearChatPress","children","isVisible","elseFeaturesButtonsContainer","map","feature","index","elseFeatureButton","elseFeatureTitle","mode","onForwardPress","onBlockPress","undefined","isBlocked","blockButtonTitle","color","onTypeChannelPress"],"sources":["C:/Users/T480/source/repos/Messenger/Messenger/Pages/Profiles/SemiComponents/Screens/MainScreen/ElseFeaturesButtons.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React from \"react\";\r\nimport { View, TouchableOpacity, Text } from \"react-native\";\r\nimport { styles } from \"./Styles\";\r\nimport OffNotificationIcon from \"./Icons/OffNotificationIcon\";\r\nimport OnNotificationIcon from \"./Icons/OnNotificationIcon\";\r\nimport BinIcon from \"./Icons/BinIcon\";\r\nimport SettingsIcon from \"./Icons/SettingsIcon\";\r\nimport ForwardContactIcon from \"./Icons/ForwardContactIcon\";\r\nimport BlockIcon from \"./Icons/BlockIcon\";\r\nimport UnblockIcon from \"./Icons/UnblockIcon\";\r\nimport ExitDoorIcon from \"./Icons/ExitIcon\";\r\nimport ClearChatIcon from \"./Icons/ClearChatIcon\";\r\nimport LockIcon from \"./Icons/LockIcon\";\r\n\r\ninterface ElseFeaturesButtonsProps {\r\n  setIsVisible: (value: boolean) => void;\r\n  isVisible: boolean;\r\n  onMutePress: (value: boolean) => void;\r\n  isMuted: boolean;\r\n  onBlockPress?: (value: boolean) => void;\r\n  isBlocked?: boolean;\r\n  onClearChatPress: () => void;\r\n  onSettingsPress: () => void;\r\n  onTypeChannelPress?: () => void;\r\n  onForwardPress?: () => void;\r\n  mode: string;\r\n}\r\n\r\nconst ElseFeaturesButtons: React.FC<ElseFeaturesButtonsProps> = (props) => {\r\n  const elseFeaturesForEachProfile = [\r\n    {\r\n      onPress: () => {\r\n        props.onSettingsPress();\r\n        props.setIsVisible(false);\r\n      },\r\n      icon: <SettingsIcon style={styles.elseFeatureIcon} />,\r\n      title: \"Settings\",\r\n    },\r\n    {\r\n      onPress: () => {\r\n        props.onMutePress(!props.isMuted);\r\n        props.setIsVisible(false);\r\n      },\r\n      icon: props.isMuted ? (\r\n        <OnNotificationIcon style={styles.elseFeatureIcon} />\r\n      ) : (\r\n        <OffNotificationIcon style={styles.elseFeatureIcon} />\r\n      ),\r\n      title: props.isMuted ? \"On notification\" : \"Off notification\",\r\n    },\r\n    {\r\n      onPress: () => {\r\n        props.onClearChatPress();\r\n      },\r\n      icon: <ClearChatIcon style={styles.elseFeatureIcon} />,\r\n      title: \"Clear chat\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {props.isVisible && (\r\n        <View style={styles.elseFeaturesButtonsContainer}>\r\n          {elseFeaturesForEachProfile.map((feature, index) => (\r\n            <TouchableOpacity\r\n              key={index}\r\n              onPress={feature.onPress}\r\n              style={styles.elseFeatureButton}\r\n            >\r\n              {feature.icon}\r\n              <Text style={styles.elseFeatureTitle}>{feature.title}</Text>\r\n            </TouchableOpacity>\r\n          ))}\r\n\r\n          {/* For user */}\r\n          {props.mode === \"user\" && (\r\n            <>\r\n              {/* Forward contact button */}\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  props.onForwardPress();\r\n                }}\r\n                style={styles.elseFeatureButton}\r\n              >\r\n                <ForwardContactIcon style={styles.elseFeatureIcon} />\r\n                <Text style={styles.elseFeatureTitle}>Forward contact</Text>\r\n              </TouchableOpacity>\r\n\r\n              {/* Toggle block button */}\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  if (props.onBlockPress !== undefined) {\r\n                    props.onBlockPress(!props.isBlocked);\r\n                  }\r\n                  props.setIsVisible(false);\r\n                }}\r\n                style={styles.elseFeatureButton}\r\n              >\r\n                {props.isBlocked ? (\r\n                  <UnblockIcon style={styles.elseFeatureIcon} />\r\n                ) : (\r\n                  <BlockIcon style={styles.elseFeatureIcon} />\r\n                )}\r\n                <Text style={styles.blockButtonTitle}>\r\n                  {props.isBlocked ? \"Unblock\" : \"Block\"}\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </>\r\n          )}\r\n\r\n          {/* For group */}\r\n          {props.mode === \"group\" && (\r\n            <>\r\n              {/* Delete group button */}\r\n              <TouchableOpacity style={styles.elseFeatureButton}>\r\n                <BinIcon style={styles.elseFeatureIcon} />\r\n                <Text style={[styles.elseFeatureTitle, { color: \"red\" }]}>\r\n                  Delete group\r\n                </Text>\r\n              </TouchableOpacity>\r\n\r\n              {/* Leave group button */}\r\n              <TouchableOpacity style={styles.elseFeatureButton}>\r\n                <ExitDoorIcon style={styles.elseFeatureIcon} />\r\n                <Text style={[styles.elseFeatureTitle, { color: \"red\" }]}>\r\n                  Leave group\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </>\r\n          )}\r\n\r\n          {/* For channel */}\r\n          {props.mode === \"channel\" && (\r\n            <>\r\n              {/* Type channel button */}\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  props.onTypeChannelPress();\r\n                }}\r\n                style={styles.elseFeatureButton}\r\n              >\r\n                <LockIcon style={styles.elseFeatureIcon} />\r\n                <Text style={styles.elseFeatureTitle}>Type channel</Text>\r\n              </TouchableOpacity>\r\n\r\n              {/* Delete channel button */}\r\n              <TouchableOpacity style={styles.elseFeatureButton}>\r\n                <BinIcon style={styles.elseFeatureIcon} />\r\n                <Text style={[styles.elseFeatureTitle, { color: \"red\" }]}>\r\n                  Delete channel\r\n                </Text>\r\n              </TouchableOpacity>\r\n\r\n              {/* Leave channel button */}\r\n              <TouchableOpacity style={styles.elseFeatureButton}>\r\n                <ExitDoorIcon style={styles.elseFeatureIcon} />\r\n                <Text style={[styles.elseFeatureTitle, { color: \"red\" }]}>\r\n                  Leave channel\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </>\r\n          )}\r\n        </View>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ElseFeaturesButtons;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}