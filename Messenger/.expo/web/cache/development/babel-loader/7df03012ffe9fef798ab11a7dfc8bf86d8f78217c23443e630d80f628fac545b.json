{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { listOfChatsStyle } from \"../../Styles/ListOfChatsStyle\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ChatContainer = function ChatContainer(_ref) {\n  var chat = _ref.chat;\n  var MAX_TEXT_LENGTH = 72;\n  var text = chat.listOfMessages.length > 0 ? chat.listOfMessages[chat.listOfMessages.length - 1].content : \"\";\n  var truncatedText = text.length > MAX_TEXT_LENGTH ? text.slice(0, MAX_TEXT_LENGTH - 3) + \"...\" : text;\n  return _jsxs(View, {\n    style: listOfChatsStyle.chatcontainer,\n    children: [_jsx(Image, {\n      source: {\n        uri: chat.url\n      },\n      style: listOfChatsStyle.image\n    }), _jsxs(View, {\n      style: listOfChatsStyle.containerForNameAndContent,\n      children: [_jsx(Text, {\n        style: listOfChatsStyle.nameStyle,\n        children: chat.name\n      }), _jsx(Text, {\n        style: listOfChatsStyle.contentStyle,\n        children: truncatedText ? truncatedText : null\n      })]\n    })]\n  });\n};\nexport default ChatContainer;","map":{"version":3,"names":["React","View","Image","Text","listOfChatsStyle","jsx","_jsx","jsxs","_jsxs","ChatContainer","_ref","chat","MAX_TEXT_LENGTH","text","listOfMessages","length","content","truncatedText","slice","style","chatcontainer","children","source","uri","url","image","containerForNameAndContent","nameStyle","name","contentStyle"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/ChatList/Components/List of folders containers/ChatContainer.tsx"],"sourcesContent":["import React from 'react';\r\nimport { View, StyleSheet,Image,Text } from 'react-native';\r\nimport Chat from '../../1HelpFullFolder/Chat';\r\nimport { listOfChatsStyle } from '../../Styles/ListOfChatsStyle';\r\ninterface ChatProps {\r\n  chat: Chat;\r\n}\r\n\r\nconst ChatContainer: React.FC<ChatProps> = ({ chat }) => {\r\n  const MAX_TEXT_LENGTH = 72;\r\nconst text: string =\r\n  chat.listOfMessages.length > 0\r\n    ? chat.listOfMessages[chat.listOfMessages.length - 1].content\r\n    : \"\";\r\n\r\nconst truncatedText =\r\n  text.length > MAX_TEXT_LENGTH\r\n    ? text.slice(0, MAX_TEXT_LENGTH-3) + \"...\"\r\n    : text;\r\n\r\n  return (\r\n    <View style={listOfChatsStyle.chatcontainer}>\r\n        <Image source={{uri:chat.url}} style={listOfChatsStyle.image} ></Image>\r\n        <View style={listOfChatsStyle.containerForNameAndContent}>\r\n        <Text style={listOfChatsStyle.nameStyle}>{chat.name}</Text>\r\n        <Text style={listOfChatsStyle.contentStyle}>{truncatedText ? truncatedText : null}</Text>\r\n        </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ChatContainer;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,IAAA;AAG1B,SAASC,gBAAgB;AAAwC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAKjE,IAAMC,aAAkC,GAAG,SAArCA,aAAkCA,CAAAC,IAAA,EAAiB;EAAA,IAAXC,IAAI,GAAAD,IAAA,CAAJC,IAAI;EAChD,IAAMC,eAAe,GAAG,EAAE;EAC5B,IAAMC,IAAY,GAChBF,IAAI,CAACG,cAAc,CAACC,MAAM,GAAG,CAAC,GAC1BJ,IAAI,CAACG,cAAc,CAACH,IAAI,CAACG,cAAc,CAACC,MAAM,GAAG,CAAC,CAAC,CAACC,OAAO,GAC3D,EAAE;EAER,IAAMC,aAAa,GACjBJ,IAAI,CAACE,MAAM,GAAGH,eAAe,GACzBC,IAAI,CAACK,KAAK,CAAC,CAAC,EAAEN,eAAe,GAAC,CAAC,CAAC,GAAG,KAAK,GACxCC,IAAI;EAER,OACEL,KAAA,CAACP,IAAI;IAACkB,KAAK,EAAEf,gBAAgB,CAACgB,aAAc;IAAAC,QAAA,GACxCf,IAAA,CAACJ,KAAK;MAACoB,MAAM,EAAE;QAACC,GAAG,EAACZ,IAAI,CAACa;MAAG,CAAE;MAACL,KAAK,EAAEf,gBAAgB,CAACqB;IAAM,CAAS,CAAC,EACvEjB,KAAA,CAACP,IAAI;MAACkB,KAAK,EAAEf,gBAAgB,CAACsB,0BAA2B;MAAAL,QAAA,GACzDf,IAAA,CAACH,IAAI;QAACgB,KAAK,EAAEf,gBAAgB,CAACuB,SAAU;QAAAN,QAAA,EAAEV,IAAI,CAACiB;MAAI,CAAO,CAAC,EAC3DtB,IAAA,CAACH,IAAI;QAACgB,KAAK,EAAEf,gBAAgB,CAACyB,YAAa;QAAAR,QAAA,EAAEJ,aAAa,GAAGA,aAAa,GAAG;MAAI,CAAO,CAAC;IAAA,CACnF,CAAC;EAAA,CACL,CAAC;AAEX,CAAC;AAED,eAAeR,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}