{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport User from \"../User\";\nimport Message from \"../Message\";\nimport Branch from \"./Branch\";\nimport Role from \"./Role\";\nimport MainChat from \"./MainChat\";\nvar Dialogue = function (_MainChat) {\n  _inherits(Dialogue, _MainChat);\n  function Dialogue(firstUser, secondUser, users, roles, linkToPhoto, messages, branches, pinnedMessage, pinnedMessageForAll, lastWatchedMessage) {\n    _classCallCheck(this, Dialogue);\n    return _callSuper(this, Dialogue, [[firstUser, secondUser], roles, linkToPhoto, messages, branches, pinnedMessage, pinnedMessageForAll, lastWatchedMessage]);\n  }\n  return _createClass(Dialogue);\n}(MainChat);\nDialogue.schema = {\n  name: 'dialogues',\n  properties: {\n    dialogueId: 'integer',\n    users: {\n      type: 'list',\n      objectType: User\n    },\n    messages: {\n      type: 'list',\n      objectType: Message\n    },\n    pinnedMessage: {\n      type: 'list',\n      objectType: Message\n    },\n    pinnedMessageForAll: {\n      type: 'list',\n      objectType: Message\n    },\n    branches: {\n      type: 'list',\n      objectType: Branch\n    },\n    roles: {\n      type: 'list',\n      objectType: Role\n    },\n    lastWatchedMessage: {\n      type: 'list',\n      objectType: {}\n    },\n    linkToPhoto: 'text?'\n  },\n  primaryKey: 'dialogueId',\n  embedded: false\n};\nexport { Dialogue as default };","map":{"version":3,"names":["User","Message","Branch","Role","MainChat","Dialogue","_MainChat","_inherits","firstUser","secondUser","users","roles","linkToPhoto","messages","branches","pinnedMessage","pinnedMessageForAll","lastWatchedMessage","_classCallCheck","_callSuper","_createClass","schema","name","properties","dialogueId","type","objectType","primaryKey","embedded","default"],"sources":["D:/project/1project/Messenger/Messenger/dao/Models/Chats/Dialogue.ts"],"sourcesContent":["import User from '../User';\r\nimport Message from '../Message';\r\nimport Chat from './Chat';\r\nimport ILastWatchedMessage from './ILastWatchedMessage';\r\nimport Branch from './Branch';\r\nimport Role from './Role';\r\nimport MainChat from './MainChat';\r\n\r\nexport default class Dialogue extends MainChat {\r\n\r\n    constructor(firstUser: User, secondUser: User, users?: Array<User>, roles?: Array<Role>, linkToPhoto?: string, messages?: Array<Message>, branches?: Array<Branch>,\r\n        pinnedMessage?: Array<Message>, pinnedMessageForAll?: Array<Message>,\r\n        lastWatchedMessage?: Array<ILastWatchedMessage>) {\r\n        super([firstUser, secondUser], roles, linkToPhoto, messages, branches, pinnedMessage, pinnedMessageForAll, lastWatchedMessage);\r\n    }\r\n    dialogueId?: number;\r\n    //schema\r\n    static schema = {\r\n        name: 'dialogues',\r\n        properties: {\r\n            dialogueId: 'integer',\r\n            users: { type: 'list', objectType: User },\r\n            messages: { type: 'list', objectType: Message },\r\n            pinnedMessage: { type: 'list', objectType: Message },\r\n            pinnedMessageForAll: { type: 'list', objectType: Message },\r\n            branches: { type: 'list', objectType: Branch },\r\n            roles: { type: 'list', objectType: Role },\r\n            lastWatchedMessage: { type: 'list', objectType: {} as ILastWatchedMessage },\r\n            linkToPhoto: 'text?',\r\n        },\r\n        primaryKey: 'dialogueId',\r\n        embedded: false,\r\n    }\r\n}"],"mappings":";;;;;;;AAAA,OAAOA,IAAI;AACX,OAAOC,OAAO;AAGd,OAAOC,MAAM;AACb,OAAOC,IAAI;AACX,OAAOC,QAAQ;AAAmB,IAEbC,QAAQ,aAAAC,SAAA;EAAAC,SAAA,CAAAF,QAAA,EAAAC,SAAA;EAEzB,SAAAD,SAAYG,SAAe,EAAEC,UAAgB,EAAEC,KAAmB,EAAEC,KAAmB,EAAEC,WAAoB,EAAEC,QAAyB,EAAEC,QAAwB,EAC9JC,aAA8B,EAAEC,mBAAoC,EACpEC,kBAA+C,EAAE;IAAAC,eAAA,OAAAb,QAAA;IAAA,OAAAc,UAAA,OAAAd,QAAA,GAC3C,CAACG,SAAS,EAAEC,UAAU,CAAC,EAAEE,KAAK,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,aAAa,EAAEC,mBAAmB,EAAEC,kBAAkB;EACjI;EAAC,OAAAG,YAAA,CAAAf,QAAA;AAAA,EANiCD,QAAQ;AAAzBC,QAAQ,CASlBgB,MAAM,GAAG;EACZC,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE;IACRC,UAAU,EAAE,SAAS;IACrBd,KAAK,EAAE;MAAEe,IAAI,EAAE,MAAM;MAAEC,UAAU,EAAE1B;IAAK,CAAC;IACzCa,QAAQ,EAAE;MAAEY,IAAI,EAAE,MAAM;MAAEC,UAAU,EAAEzB;IAAQ,CAAC;IAC/Cc,aAAa,EAAE;MAAEU,IAAI,EAAE,MAAM;MAAEC,UAAU,EAAEzB;IAAQ,CAAC;IACpDe,mBAAmB,EAAE;MAAES,IAAI,EAAE,MAAM;MAAEC,UAAU,EAAEzB;IAAQ,CAAC;IAC1Da,QAAQ,EAAE;MAAEW,IAAI,EAAE,MAAM;MAAEC,UAAU,EAAExB;IAAO,CAAC;IAC9CS,KAAK,EAAE;MAAEc,IAAI,EAAE,MAAM;MAAEC,UAAU,EAAEvB;IAAK,CAAC;IACzCc,kBAAkB,EAAE;MAAEQ,IAAI,EAAE,MAAM;MAAEC,UAAU,EAAE,CAAC;IAAyB,CAAC;IAC3Ed,WAAW,EAAE;EACjB,CAAC;EACDe,UAAU,EAAE,YAAY;EACxBC,QAAQ,EAAE;AACd,CAAC;AAAA,SAxBgBvB,QAAQ,IAAAwB,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}