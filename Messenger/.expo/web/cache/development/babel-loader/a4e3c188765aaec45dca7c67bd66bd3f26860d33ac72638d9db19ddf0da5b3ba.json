{"ast":null,"code":"import React, { useEffect, useRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport HeaderContainer from \"../../../SemiComponents/HeaderContainer\";\nimport { headerstyles } from \"../../Styles/HeaderStyle\";\nimport { screenHeight, screenWidth } from \"../../Constants/ConstantsForChatlist\";\nimport BackButton from \"../../../SemiComponents/BackButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HeaderForContacts = function HeaderForContacts(_ref) {\n  var navigation = _ref.navigation;\n  var pressOnBackButton = useRef(function () {\n    navigation.goBack();\n  });\n  var inputRef = useRef(null);\n  useEffect(function () {}, []);\n  return _jsx(HeaderContainer, {\n    children: _jsxs(View, {\n      style: [headerstyles.header, {\n        width: screenWidth * 0.96,\n        height: screenHeight * 0.08,\n        flexDirection: \"row\"\n      }],\n      children: [_jsx(TouchableOpacity, {\n        onPress: pressOnBackButton.current,\n        style: {\n          alignSelf: \"center\"\n        },\n        children: _jsx(BackButton, {})\n      }), _jsx(View, {\n        style: {\n          alignSelf: \"center\",\n          marginLeft: 5\n        },\n        children: _jsx(TextInput, {\n          ref: inputRef,\n          style: {\n            width: screenWidth * 0.8,\n            height: screenHeight * 0.0415,\n            backgroundColor: \"#272727\",\n            alignSelf: \"center\",\n            color: \"white\",\n            paddingHorizontal: 15,\n            borderRadius: 100,\n            fontSize: 16\n          },\n          placeholder: \"Search in Telentik\",\n          placeholderTextColor: \"#888282\",\n          keyboardAppearance: \"dark\"\n        })\n      })]\n    })\n  });\n};\nexport default HeaderForContacts;","map":{"version":3,"names":["React","useEffect","useRef","View","TouchableOpacity","TextInput","HeaderContainer","headerstyles","screenHeight","screenWidth","BackButton","jsx","_jsx","jsxs","_jsxs","HeaderForContacts","_ref","navigation","pressOnBackButton","goBack","inputRef","children","style","header","width","height","flexDirection","onPress","current","alignSelf","marginLeft","ref","backgroundColor","color","paddingHorizontal","borderRadius","fontSize","placeholder","placeholderTextColor","keyboardAppearance"],"sources":["D:/project/1project/Messenger/Messenger/Pages/ChatList/Components/Contacts Page/HeaderForContacts.tsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { View, TouchableOpacity, TextInput } from \"react-native\";\r\nimport HeaderContainer from \"../../../SemiComponents/HeaderContainer\";\r\nimport { headerstyles } from \"../../Styles/HeaderStyle\";\r\nimport { screenHeight, screenWidth } from \"../../Constants/ConstantsForChatlist\";\r\nimport BackButton from \"../../../SemiComponents/BackButton\";\r\n\r\ninterface HeaderForContactsProps {\r\n  navigation: any;\r\n}\r\n\r\nconst HeaderForContacts: React.FC<HeaderForContactsProps> = ({ navigation }) => {\r\n  const pressOnBackButton = useRef(() => {\r\n    navigation.goBack();\r\n  });\r\n  const inputRef = useRef<TextInput>(null);\r\n  useEffect(() => {\r\n    //inputRef.current?.focus();\r\n  }, []);\r\n\r\n  return (\r\n    <HeaderContainer>\r\n      <View\r\n        style={[\r\n          headerstyles.header,\r\n          {\r\n            width: screenWidth * 0.96,\r\n            height: screenHeight * 0.08,\r\n            flexDirection: \"row\",\r\n          },\r\n        ]}\r\n      >\r\n        <TouchableOpacity\r\n          onPress={pressOnBackButton.current}\r\n          style={{ alignSelf: \"center\" }}\r\n        >\r\n          <BackButton />\r\n        </TouchableOpacity>\r\n        <View style={{ alignSelf: \"center\", marginLeft: 5 }}>\r\n          <TextInput\r\n            ref={inputRef}\r\n            style={{\r\n              width: screenWidth * 0.8,\r\n              height: screenHeight * 0.0415,\r\n              backgroundColor: \"#272727\",\r\n              alignSelf: \"center\",\r\n              color: \"white\",\r\n              paddingHorizontal: 15,\r\n              borderRadius: 100,\r\n              fontSize: 16,\r\n            }}\r\n            placeholder=\"Search in Telentik\"\r\n            placeholderTextColor={\"#888282\"}\r\n            keyboardAppearance=\"dark\"\r\n          />\r\n        </View>\r\n      </View>\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nexport default HeaderForContacts;\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,SAAA;AAEjD,OAAOC,eAAe;AACtB,SAASC,YAAY;AACrB,SAASC,YAAY,EAAEC,WAAW;AAClC,OAAOC,UAAU;AAA2C,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAM5D,IAAMC,iBAAmD,GAAG,SAAtDA,iBAAmDA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EACvE,IAAMC,iBAAiB,GAAGhB,MAAM,CAAC,YAAM;IACrCe,UAAU,CAACE,MAAM,CAAC,CAAC;EACrB,CAAC,CAAC;EACF,IAAMC,QAAQ,GAAGlB,MAAM,CAAY,IAAI,CAAC;EACxCD,SAAS,CAAC,YAAM,CAEhB,CAAC,EAAE,EAAE,CAAC;EAEN,OACEW,IAAA,CAACN,eAAe;IAAAe,QAAA,EACdP,KAAA,CAACX,IAAI;MACHmB,KAAK,EAAE,CACLf,YAAY,CAACgB,MAAM,EACnB;QACEC,KAAK,EAAEf,WAAW,GAAG,IAAI;QACzBgB,MAAM,EAAEjB,YAAY,GAAG,IAAI;QAC3BkB,aAAa,EAAE;MACjB,CAAC,CACD;MAAAL,QAAA,GAEFT,IAAA,CAACR,gBAAgB;QACfuB,OAAO,EAAET,iBAAiB,CAACU,OAAQ;QACnCN,KAAK,EAAE;UAAEO,SAAS,EAAE;QAAS,CAAE;QAAAR,QAAA,EAE/BT,IAAA,CAACF,UAAU,IAAE;MAAC,CACE,CAAC,EACnBE,IAAA,CAACT,IAAI;QAACmB,KAAK,EAAE;UAAEO,SAAS,EAAE,QAAQ;UAAEC,UAAU,EAAE;QAAE,CAAE;QAAAT,QAAA,EAClDT,IAAA,CAACP,SAAS;UACR0B,GAAG,EAAEX,QAAS;UACdE,KAAK,EAAE;YACLE,KAAK,EAAEf,WAAW,GAAG,GAAG;YACxBgB,MAAM,EAAEjB,YAAY,GAAG,MAAM;YAC7BwB,eAAe,EAAE,SAAS;YAC1BH,SAAS,EAAE,QAAQ;YACnBI,KAAK,EAAE,OAAO;YACdC,iBAAiB,EAAE,EAAE;YACrBC,YAAY,EAAE,GAAG;YACjBC,QAAQ,EAAE;UACZ,CAAE;UACFC,WAAW,EAAC,oBAAoB;UAChCC,oBAAoB,EAAE,SAAU;UAChCC,kBAAkB,EAAC;QAAM,CAC1B;MAAC,CACE,CAAC;IAAA,CACH;EAAC,CACQ,CAAC;AAEtB,CAAC;AAED,eAAexB,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}