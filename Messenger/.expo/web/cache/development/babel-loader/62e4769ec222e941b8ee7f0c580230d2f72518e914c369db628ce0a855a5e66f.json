{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { footerstyles } from \"../Styles/FooterStyle\";\nimport Folder from \"./Footer containers/Folder\";\nimport ListOfFolder from \"./ListOfFolder\";\nimport Swiper from 'react-native-swiper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Footer = function Footer(_ref) {\n  var user = _ref.user;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedFolderIndex = _useState2[0],\n    setSelectedFolderIndex = _useState2[1];\n  var handleFolderPress = function handleFolderPress(index) {\n    setSelectedFolderIndex(index);\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(Swiper, {\n      onIndexChanged: function onIndexChanged(index) {\n        return setSelectedFolderIndex(index);\n      },\n      children: user.folders.map(function (folder, index) {\n        return _jsx(ListOfFolder, {\n          user: user,\n          selectedFolder: index,\n          isSelected: index === selectedFolderIndex\n        }, index);\n      })\n    }), _jsx(View, {\n      style: footerstyles.container,\n      children: _jsx(ScrollView, {\n        showsHorizontalScrollIndicator: false,\n        horizontal: true,\n        style: footerstyles.scrollView,\n        children: user.folders.map(function (folder, index) {\n          return _jsx(Folder, {\n            text: folder.name,\n            containerStyle: footerstyles.folderContainer,\n            textStyle: footerstyles.folder,\n            isSelected: index === selectedFolderIndex,\n            onPress: function onPress() {\n              return handleFolderPress(index);\n            }\n          }, index);\n        })\n      })\n    })]\n  });\n};\nexport default Footer;","map":{"version":3,"names":["React","useState","View","ScrollView","footerstyles","Folder","ListOfFolder","Swiper","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Footer","_ref","user","_useState","_useState2","_slicedToArray","selectedFolderIndex","setSelectedFolderIndex","handleFolderPress","index","children","onIndexChanged","folders","map","folder","selectedFolder","isSelected","style","container","showsHorizontalScrollIndicator","horizontal","scrollView","text","name","containerStyle","folderContainer","textStyle","onPress"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/ChatList/Components/Footer.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, ScrollView } from 'react-native';\r\nimport MySelfUser from '../1HelpFullFolder/MySelfUser';\r\nimport { footerstyles } from '../Styles/FooterStyle';\r\nimport Folder from './Footer containers/Folder';\r\nimport ListOfFolder from './ListOfFolder';\r\nimport Swiper from 'react-native-swiper';\r\n\r\ninterface FooterProps {\r\n  user: MySelfUser;\r\n}\r\n\r\nconst Footer: React.FC<FooterProps> = ({ user }) => {\r\n  const [selectedFolderIndex, setSelectedFolderIndex] = useState<number>(0);\r\n\r\n  const handleFolderPress = (index: number) => {\r\n    setSelectedFolderIndex(index);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Swiper onIndexChanged={(index) => setSelectedFolderIndex(index)}>\r\n        {user.folders.map((folder, index) => (\r\n          <ListOfFolder\r\n            user={user}\r\n            selectedFolder={index}\r\n            isSelected={index === selectedFolderIndex} // Оновлюйте isSelected без затримки\r\n            key={index}\r\n          />\r\n        ))}\r\n      </Swiper>\r\n\r\n      <View style={footerstyles.container}>\r\n        <ScrollView showsHorizontalScrollIndicator={false} horizontal={true} style={footerstyles.scrollView}>\r\n          {user.folders.map((folder, index) => (\r\n            <Folder\r\n              key={index}\r\n              text={folder.name}\r\n              containerStyle={footerstyles.folderContainer}\r\n              textStyle={footerstyles.folder}\r\n              isSelected={index === selectedFolderIndex} // Оновлюйте isSelected без затримки\r\n              onPress={() => handleFolderPress(index)}\r\n            />\r\n          ))}\r\n        </ScrollView>\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAGxC,SAASC,YAAY;AACrB,OAAOC,MAAM;AACb,OAAOC,YAAY;AACnB,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAMzC,IAAMC,MAA6B,GAAG,SAAhCA,MAA6BA,CAAAC,IAAA,EAAiB;EAAA,IAAXC,IAAI,GAAAD,IAAA,CAAJC,IAAI;EAC3C,IAAAC,SAAA,GAAsDhB,QAAQ,CAAS,CAAC,CAAC;IAAAiB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAlEG,mBAAmB,GAAAF,UAAA;IAAEG,sBAAsB,GAAAH,UAAA;EAElD,IAAMI,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,KAAa,EAAK;IAC3CF,sBAAsB,CAACE,KAAK,CAAC;EAC/B,CAAC;EAED,OACEV,KAAA,CAAAF,SAAA;IAAAa,QAAA,GACEf,IAAA,CAACF,MAAM;MAACkB,cAAc,EAAE,SAAAA,eAACF,KAAK;QAAA,OAAKF,sBAAsB,CAACE,KAAK,CAAC;MAAA,CAAC;MAAAC,QAAA,EAC9DR,IAAI,CAACU,OAAO,CAACC,GAAG,CAAC,UAACC,MAAM,EAAEL,KAAK;QAAA,OAC9Bd,IAAA,CAACH,YAAY;UACXU,IAAI,EAAEA,IAAK;UACXa,cAAc,EAAEN,KAAM;UACtBO,UAAU,EAAEP,KAAK,KAAKH;QAAoB,GACrCG,KACN,CAAC;MAAA,CACH;IAAC,CACI,CAAC,EAETd,IAAA,CAACP,IAAI;MAAC6B,KAAK,EAAE3B,YAAY,CAAC4B,SAAU;MAAAR,QAAA,EAClCf,IAAA,CAACN,UAAU;QAAC8B,8BAA8B,EAAE,KAAM;QAACC,UAAU,EAAE,IAAK;QAACH,KAAK,EAAE3B,YAAY,CAAC+B,UAAW;QAAAX,QAAA,EACjGR,IAAI,CAACU,OAAO,CAACC,GAAG,CAAC,UAACC,MAAM,EAAEL,KAAK;UAAA,OAC9Bd,IAAA,CAACJ,MAAM;YAEL+B,IAAI,EAAER,MAAM,CAACS,IAAK;YAClBC,cAAc,EAAElC,YAAY,CAACmC,eAAgB;YAC7CC,SAAS,EAAEpC,YAAY,CAACwB,MAAO;YAC/BE,UAAU,EAAEP,KAAK,KAAKH,mBAAoB;YAC1CqB,OAAO,EAAE,SAAAA,QAAA;cAAA,OAAMnB,iBAAiB,CAACC,KAAK,CAAC;YAAA;UAAC,GALnCA,KAMN,CAAC;QAAA,CACH;MAAC,CACQ;IAAC,CACT,CAAC;EAAA,CACP,CAAC;AAEP,CAAC;AAED,eAAeT,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}