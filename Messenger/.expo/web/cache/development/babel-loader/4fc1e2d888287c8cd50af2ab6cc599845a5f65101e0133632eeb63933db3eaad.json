{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport { headerstyles } from \"../Styles/HeaderStyle\";\nimport MagnifyingGlass from \"./Headers containers/MagnifyingGlass\";\nimport ModeOfEmployment from \"./Headers containers/ModeOfEmployment\";\nimport Line from \"./Headers containers/Line\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  screenWidth = _Dimensions$get.width,\n  screenHeight = _Dimensions$get.height;\nexport default function Header(_ref) {\n  var mySelfUser = _ref.mySelfUser;\n  var timeForLineAnimation = 150 * 10;\n  var rotateGradusOfLines = 45;\n  var kefOfTransform = 0.75;\n  var topLineValue = useState(new Animated.Value(0))[0];\n  var middleLineValue = useState(new Animated.Value(1))[0];\n  var bottomLineValue = useState(new Animated.Value(0))[0];\n  var scrollX = useState(new Animated.Value(0))[0];\n  var _useState = useState(1),\n    _useState2 = _slicedToArray(_useState, 2),\n    state = _useState2[0],\n    setState = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    stateForWidth = _useState4[0],\n    setStateForWidth = _useState4[1];\n  var topLineRotation = topLineValue.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [\"0deg\", `-${rotateGradusOfLines}deg`, `-${90 + rotateGradusOfLines}deg`]\n  });\n  var bottomLineRotation = bottomLineValue.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [\"0deg\", `${rotateGradusOfLines}deg`, `${90 + rotateGradusOfLines}deg`]\n  });\n  var positionXOfTopLine = topLineValue.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [0, screenHeight * 0.01, screenHeight * 0.01]\n  });\n  var scrollXPosition = scrollX.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, -screenWidth * 0.8]\n  });\n  var hamburgerAnimation = function hamburgerAnimation(e) {\n    setState(state == 0 ? 1 : 0);\n    console.log(10);\n    lineTransformation(e);\n  };\n  var lineTransformation = function lineTransformation(e) {\n    var firstAnimatedTopLine = Animated.timing(topLineValue, {\n      toValue: state == 0 ? 2 : 1,\n      duration: timeForLineAnimation * 0.7,\n      useNativeDriver: true\n    });\n    var firstAnimatedBottomLine = Animated.timing(bottomLineValue, {\n      toValue: state == 0 ? 2 : 1,\n      duration: timeForLineAnimation * 0.7,\n      useNativeDriver: true\n    });\n    var secondAnimatedTopLine = Animated.timing(topLineValue, {\n      toValue: state == 1 ? 2 : 0,\n      duration: timeForLineAnimation,\n      useNativeDriver: true\n    });\n    var secondAnimatedBottomLine = Animated.timing(bottomLineValue, {\n      toValue: state == 1 ? 2 : 0,\n      duration: timeForLineAnimation,\n      useNativeDriver: true\n    });\n    var animateForMiddleLine = Animated.timing(middleLineValue, {\n      toValue: state == 0 ? 1 : 0,\n      duration: state == 1 ? 10 : timeForLineAnimation,\n      useNativeDriver: true\n    });\n    Animated.timing(scrollX, {\n      toValue: state,\n      duration: timeForLineAnimation * 1.3,\n      useNativeDriver: true,\n      easing: Easing.bezier(0, 0, 0, 0)\n    }).start();\n    firstAnimatedTopLine.start(function () {\n      state == 0 ? setStateForWidth(0) : null;\n      secondAnimatedTopLine.start();\n    });\n    firstAnimatedBottomLine.start(function () {\n      secondAnimatedBottomLine.start();\n    });\n  };\n  return _jsxs(View, {\n    style: {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      right: 0,\n      zIndex: 5\n    },\n    children: [_jsx(View, {\n      style: headerstyles.gapContainer\n    }), _jsx(View, {\n      style: headerstyles.container,\n      children: _jsxs(View, {\n        style: [headerstyles.header],\n        children: [_jsxs(Animated.View, {\n          style: [{\n            justifyContent: \"flex-start\",\n            flexDirection: \"row\",\n            width: screenWidth * 0.96\n          }, {\n            transform: [{\n              translateX: scrollXPosition\n            }]\n          }],\n          children: [_jsx(MagnifyingGlass, {\n            style: headerstyles.magnifyingglass\n          }), _jsx(ModeOfEmployment, {}), _jsx(TouchableOpacity, {\n            onPress: hamburgerAnimation,\n            children: _jsxs(View, {\n              style: headerstyles.hamburgerview,\n              children: [_jsx(Animated.View, {\n                style: {\n                  transform: [{\n                    rotate: topLineRotation\n                  }, {\n                    translateX: positionXOfTopLine\n                  }]\n                },\n                children: _jsx(Line, {\n                  screenWidth: stateForWidth == 0 ? screenWidth : screenWidth * kefOfTransform,\n                  screenHeight: screenHeight\n                })\n              }), _jsx(Animated.View, {\n                style: {\n                  opacity: middleLineValue\n                },\n                children: _jsx(Line, {\n                  screenWidth: screenWidth,\n                  screenHeight: screenHeight\n                })\n              }), _jsx(Animated.View, {\n                style: {\n                  transform: [{\n                    rotate: bottomLineRotation\n                  }, {\n                    translateX: positionXOfTopLine\n                  }]\n                },\n                children: _jsx(Line, {\n                  screenWidth: stateForWidth == 0 ? screenWidth : screenWidth * kefOfTransform,\n                  screenHeight: screenHeight\n                })\n              })]\n            })\n          })]\n        }), _jsx(Animated.View, {\n          style: [{\n            width: screenWidth * 0.8,\n            backgroundColor: \"red\"\n          }, {\n            transform: [{\n              translateX: scrollXPosition\n            }]\n          }],\n          children: _jsx(View, {})\n        })]\n      })\n    })]\n  });\n}","map":{"version":3,"names":["useState","React","View","TouchableOpacity","Animated","Dimensions","Easing","headerstyles","MagnifyingGlass","ModeOfEmployment","Line","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","screenWidth","width","screenHeight","height","Header","_ref","mySelfUser","timeForLineAnimation","rotateGradusOfLines","kefOfTransform","topLineValue","Value","middleLineValue","bottomLineValue","scrollX","_useState","_useState2","_slicedToArray","state","setState","_useState3","_useState4","stateForWidth","setStateForWidth","topLineRotation","interpolate","inputRange","outputRange","bottomLineRotation","positionXOfTopLine","scrollXPosition","hamburgerAnimation","e","console","log","lineTransformation","firstAnimatedTopLine","timing","toValue","duration","useNativeDriver","firstAnimatedBottomLine","secondAnimatedTopLine","secondAnimatedBottomLine","animateForMiddleLine","easing","bezier","start","style","position","top","left","right","zIndex","children","gapContainer","container","header","justifyContent","flexDirection","transform","translateX","magnifyingglass","onPress","hamburgerview","rotate","opacity","backgroundColor"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/ChatList/Components/Header.tsx"],"sourcesContent":["import { createRef, useDebugValue, useState } from \"react\";\r\nimport React from \"react\";\r\nimport {\r\n  View,\r\n  Image,\r\n  TouchableOpacity,\r\n  GestureResponderEvent,\r\n  Animated,\r\n  Dimensions,\r\n  ScrollView,\r\n  Easing,\r\n} from \"react-native\";\r\nimport {\r\n  useAnimatedRef,\r\n  useDerivedValue,\r\n  useSharedValue,\r\n  scrollTo,\r\n} from \"react-native-reanimated\";\r\nimport { headerstyles } from \"../Styles/HeaderStyle\";\r\nimport MagnifyingGlass from \"./Headers containers/MagnifyingGlass\";\r\nimport ModeOfEmployment from \"./Headers containers/ModeOfEmployment\";\r\nimport Line from \"./Headers containers/Line\";\r\nimport MySelfUser from \"../1HelpFullFolder/MySelfUser\";\r\nconst { width: screenWidth, height: screenHeight } = Dimensions.get(\"window\");\r\nexport default function Header({ mySelfUser }: { mySelfUser: MySelfUser }) {\r\n  const timeForLineAnimation: number = 150 * 10;\r\n  const rotateGradusOfLines: number = 45;\r\n  const kefOfTransform: number = 0.75;\r\n  const topLineValue = useState(new Animated.Value(0))[0];\r\n  const middleLineValue = useState(new Animated.Value(1))[0];\r\n  const bottomLineValue = useState(new Animated.Value(0))[0];\r\n  const scrollX = useState(new Animated.Value(0))[0];\r\n  const [state, setState] = useState(1);\r\n  const [stateForWidth, setStateForWidth] = useState(0);\r\n  const topLineRotation = topLineValue.interpolate({\r\n    inputRange: [0, 1, 2],\r\n    outputRange: [\r\n      \"0deg\",\r\n      `-${rotateGradusOfLines}deg`,\r\n      `-${90 + rotateGradusOfLines}deg`,\r\n    ],\r\n  });\r\n  const bottomLineRotation = bottomLineValue.interpolate({\r\n    inputRange: [0, 1, 2],\r\n    outputRange: [\r\n      \"0deg\",\r\n      `${rotateGradusOfLines}deg`,\r\n      `${90 + rotateGradusOfLines}deg`,\r\n    ],\r\n  });\r\n  const positionXOfTopLine = topLineValue.interpolate({\r\n    inputRange: [0, 1, 2],\r\n    outputRange: [0, screenHeight * 0.01, screenHeight * 0.01],\r\n  });\r\n  const scrollXPosition = scrollX.interpolate({\r\n    inputRange: [0, 1],\r\n    outputRange: [0, -screenWidth * 0.8],\r\n  });\r\n  const hamburgerAnimation = (e: GestureResponderEvent) => {\r\n    setState(state == 0 ? 1 : 0);\r\n    console.log(10);\r\n    lineTransformation(e);\r\n  };\r\n  const lineTransformation = (e: GestureResponderEvent) => {\r\n    const firstAnimatedTopLine = Animated.timing(topLineValue, {\r\n      toValue: state == 0 ? 2 : 1,\r\n      duration: timeForLineAnimation * 0.7,\r\n      useNativeDriver: true,\r\n    });\r\n    const firstAnimatedBottomLine = Animated.timing(bottomLineValue, {\r\n      toValue: state == 0 ? 2 : 1,\r\n      duration: timeForLineAnimation * 0.7,\r\n      useNativeDriver: true,\r\n    });\r\n    const secondAnimatedTopLine = Animated.timing(topLineValue, {\r\n      toValue: state == 1 ? 2 : 0,\r\n      duration: timeForLineAnimation,\r\n      useNativeDriver: true,\r\n    });\r\n    const secondAnimatedBottomLine = Animated.timing(bottomLineValue, {\r\n      toValue: state == 1 ? 2 : 0,\r\n      duration: timeForLineAnimation,\r\n      useNativeDriver: true,\r\n    });\r\n    const animateForMiddleLine=Animated.timing(middleLineValue, {\r\n      toValue: state == 0 ? 1 : 0,\r\n      duration: state == 1 ? 10 : timeForLineAnimation, \r\n      useNativeDriver: true,\r\n    })\r\n    Animated.timing(scrollX, {\r\n      toValue: state,\r\n      duration: timeForLineAnimation * 1.3,\r\n      useNativeDriver: true,\r\n      easing: Easing.bezier(0, 0, 0, 0),\r\n    }).start();\r\n    firstAnimatedTopLine.start(()=>{state==0?setStateForWidth(0):null;secondAnimatedTopLine.start()})\r\n    firstAnimatedBottomLine.start(()=>{secondAnimatedBottomLine.start()})\r\n    \r\n  };\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        zIndex: 5,\r\n      }}\r\n    >\r\n      <View style={headerstyles.gapContainer} />\r\n      <View style={headerstyles.container}>\r\n        <View style={[headerstyles.header]}>\r\n          <Animated.View\r\n            style={[\r\n              {\r\n                justifyContent: \"flex-start\",\r\n                flexDirection: \"row\",\r\n                width: screenWidth * 0.96,\r\n              },\r\n              { transform: [{ translateX: scrollXPosition }] },\r\n            ]}\r\n          >\r\n            <MagnifyingGlass style={headerstyles.magnifyingglass} />\r\n            <ModeOfEmployment />\r\n            <TouchableOpacity onPress={hamburgerAnimation}>\r\n              <View style={headerstyles.hamburgerview}>\r\n                <Animated.View\r\n                  style={{\r\n                    transform: [\r\n                      { rotate: topLineRotation },\r\n                      { translateX: positionXOfTopLine },\r\n                    ],\r\n                  }}\r\n                >\r\n                  <Line\r\n                    screenWidth={\r\n                      stateForWidth == 0\r\n                        ? screenWidth\r\n                        : screenWidth * kefOfTransform\r\n                    }\r\n                    screenHeight={screenHeight}\r\n                  />\r\n                </Animated.View>\r\n                <Animated.View style={{ opacity: middleLineValue }}>\r\n                  <Line screenWidth={screenWidth} screenHeight={screenHeight} />\r\n                </Animated.View>\r\n                <Animated.View\r\n                  style={{\r\n                    transform: [\r\n                      { rotate: bottomLineRotation },\r\n                      { translateX: positionXOfTopLine },\r\n                    ],\r\n                  }}\r\n                >\r\n                  <Line\r\n                    screenWidth={\r\n                      stateForWidth == 0\r\n                        ? screenWidth\r\n                        : screenWidth * kefOfTransform\r\n                    }\r\n                    screenHeight={screenHeight}\r\n                  />\r\n                </Animated.View>\r\n              </View>\r\n            </TouchableOpacity>\r\n          </Animated.View>\r\n          <Animated.View\r\n            style={[\r\n              { width: screenWidth * 0.8, backgroundColor: \"red\" },\r\n              { transform: [{ translateX: scrollXPosition }] },\r\n            ]}\r\n          >\r\n            <View></View>\r\n          </Animated.View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}