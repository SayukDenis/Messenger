{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport * as Contacts from \"expo-contacts\";\nvar getAllContacts = function () {\n  var _ref = _asyncToGenerator(function* () {\n    var _yield$Contacts$reque = yield Contacts.requestPermissionsAsync(),\n      status = _yield$Contacts$reque.status;\n    if (status === \"granted\") {\n      var _yield$Contacts$getCo = yield Contacts.getContactsAsync({\n          fields: [Contacts.Fields.Name, Contacts.Fields.PhoneNumbers]\n        }),\n        data = _yield$Contacts$getCo.data;\n      return data || [];\n    } else {\n      return [];\n    }\n  });\n  return function getAllContacts() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport default getAllContacts;","map":{"version":3,"names":["Contacts","getAllContacts","_ref","_asyncToGenerator","_yield$Contacts$reque","requestPermissionsAsync","status","_yield$Contacts$getCo","getContactsAsync","fields","Fields","Name","PhoneNumbers","data","apply","arguments"],"sources":["D:/project/1project/Messenger/Messenger/Pages/ChatList/Components/Contacts Page/Functions/GetAllContacts.tsx"],"sourcesContent":["\r\nimport * as Contacts from \"expo-contacts\";\r\n\r\nconst getAllContacts= async ():Promise<Contacts.Contact[]> => {\r\n    const { status } = await Contacts.requestPermissionsAsync();\r\n\r\n  if (status === \"granted\") {\r\n    const { data } = await Contacts.getContactsAsync({\r\n      fields: [Contacts.Fields.Name, Contacts.Fields.PhoneNumbers],\r\n    });\r\n    return data || [];\r\n  } else {\r\n    return [];\r\n  }\r\n}\r\nexport default getAllContacts"],"mappings":";AACA,OAAO,KAAKA,QAAQ,MAAM,eAAe;AAEzC,IAAMC,cAAc;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAE,aAAwC;IAC1D,IAAAC,qBAAA,SAAyBJ,QAAQ,CAACK,uBAAuB,CAAC,CAAC;MAAnDC,MAAM,GAAAF,qBAAA,CAANE,MAAM;IAEhB,IAAIA,MAAM,KAAK,SAAS,EAAE;MACxB,IAAAC,qBAAA,SAAuBP,QAAQ,CAACQ,gBAAgB,CAAC;UAC/CC,MAAM,EAAE,CAACT,QAAQ,CAACU,MAAM,CAACC,IAAI,EAAEX,QAAQ,CAACU,MAAM,CAACE,YAAY;QAC7D,CAAC,CAAC;QAFMC,IAAI,GAAAN,qBAAA,CAAJM,IAAI;MAGZ,OAAOA,IAAI,IAAI,EAAE;IACnB,CAAC,MAAM;MACL,OAAO,EAAE;IACX;EACF,CAAC;EAAA,gBAXKZ,cAAcA,CAAA;IAAA,OAAAC,IAAA,CAAAY,KAAA,OAAAC,SAAA;EAAA;AAAA,GAWnB;AACD,eAAed,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}