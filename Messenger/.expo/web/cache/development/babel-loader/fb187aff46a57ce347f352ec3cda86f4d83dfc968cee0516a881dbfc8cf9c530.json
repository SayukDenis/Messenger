{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { styles } from \"./Styles\";\nimport EyeIcon from \"../../SemiComponents/MainScreen/Icons/EyeIcon\";\nimport EyeWithLineIcon from \"./Icons/EyeWithLineIcon\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar TypeChannelMenu = function TypeChannelMenu(props) {\n  return _jsx(_Fragment, {\n    children: props.isVisible && _jsxs(View, {\n      style: styles.typeChannelMenuContainer,\n      children: [_jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          props.onPrivatePress();\n        },\n        style: styles.typeChannelMenuButton,\n        children: [_jsx(EyeWithLineIcon, {\n          style: styles.typeChannelMenuIcon\n        }), _jsx(Text, {\n          style: styles.typeChannelMenuTitle,\n          children: \"Private channe\"\n        })]\n      }), _jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          props.onPublicPress();\n        },\n        style: styles.typeChannelMenuButton,\n        children: [_jsx(EyeIcon, {\n          style: styles.typeChannelMenuIcon\n        }), _jsx(Text, {\n          style: styles.typeChannelMenuTitle,\n          children: \"Public channel\"\n        })]\n      })]\n    })\n  });\n};\nexport default TypeChannelMenu;","map":{"version":3,"names":["React","View","TouchableOpacity","Text","styles","EyeIcon","EyeWithLineIcon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TypeChannelMenu","props","children","isVisible","style","typeChannelMenuContainer","onPress","onPrivatePress","typeChannelMenuButton","typeChannelMenuIcon","typeChannelMenuTitle","onPublicPress"],"sources":["/home/zatibmag/Desktop/Project/Messenger/Messenger/Pages/Profiles/ChannelProfile/MainChannelScreen/TypeChannelMenu.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React from \"react\";\r\nimport { View, TouchableOpacity, Text } from \"react-native\";\r\nimport { styles } from \"./Styles\";\r\nimport EyeIcon from \"../../SemiComponents/MainScreen/Icons/EyeIcon\";\r\nimport EyeWithLineIcon from \"./Icons/EyeWithLineIcon\";\r\n\r\ninterface TypeChannelMenuProps {\r\n  isVisible: boolean;\r\n  onPrivatePress: () => void;\r\n  onPublicPress: () => void;\r\n}\r\n\r\nconst TypeChannelMenu: React.FC<TypeChannelMenuProps> = (props) => {\r\n  return (\r\n    <>\r\n      {props.isVisible && (\r\n        <View style={styles.typeChannelMenuContainer}>\r\n          {/* Private channel button */}\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              props.onPrivatePress();\r\n            }}\r\n            style={styles.typeChannelMenuButton}\r\n          >\r\n            <EyeWithLineIcon style={styles.typeChannelMenuIcon} />\r\n            <Text style={styles.typeChannelMenuTitle}>Private channe</Text>\r\n          </TouchableOpacity>\r\n\r\n          {/* Public channel button */}\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              props.onPublicPress();\r\n            }}\r\n            style={styles.typeChannelMenuButton}\r\n          >\r\n            <EyeIcon style={styles.typeChannelMenuIcon} />\r\n            <Text style={styles.typeChannelMenuTitle}>Public channel</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TypeChannelMenu;\r\n"],"mappings":"AAEA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAE1B,SAASC,MAAM;AACf,OAAOC,OAAO;AACd,OAAOC,eAAe;AAAgC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAQtD,IAAMC,eAA+C,GAAG,SAAlDA,eAA+CA,CAAIC,KAAK,EAAK;EACjE,OACEN,IAAA,CAAAI,SAAA;IAAAG,QAAA,EACGD,KAAK,CAACE,SAAS,IACdN,KAAA,CAACT,IAAI;MAACgB,KAAK,EAAEb,MAAM,CAACc,wBAAyB;MAAAH,QAAA,GAE3CL,KAAA,CAACR,gBAAgB;QACfiB,OAAO,EAAE,SAAAA,QAAA,EAAM;UACbL,KAAK,CAACM,cAAc,CAAC,CAAC;QACxB,CAAE;QACFH,KAAK,EAAEb,MAAM,CAACiB,qBAAsB;QAAAN,QAAA,GAEpCP,IAAA,CAACF,eAAe;UAACW,KAAK,EAAEb,MAAM,CAACkB;QAAoB,CAAE,CAAC,EACtDd,IAAA,CAACL,IAAI;UAACc,KAAK,EAAEb,MAAM,CAACmB,oBAAqB;UAAAR,QAAA,EAAC;QAAc,CAAM,CAAC;MAAA,CAC/C,CAAC,EAGnBL,KAAA,CAACR,gBAAgB;QACfiB,OAAO,EAAE,SAAAA,QAAA,EAAM;UACbL,KAAK,CAACU,aAAa,CAAC,CAAC;QACvB,CAAE;QACFP,KAAK,EAAEb,MAAM,CAACiB,qBAAsB;QAAAN,QAAA,GAEpCP,IAAA,CAACH,OAAO;UAACY,KAAK,EAAEb,MAAM,CAACkB;QAAoB,CAAE,CAAC,EAC9Cd,IAAA,CAACL,IAAI;UAACc,KAAK,EAAEb,MAAM,CAACmB,oBAAqB;UAAAR,QAAA,EAAC;QAAc,CAAM,CAAC;MAAA,CAC/C,CAAC;IAAA,CACf;EACP,CACD,CAAC;AAEP,CAAC;AAED,eAAeF,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}