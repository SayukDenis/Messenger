{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport CentralHeaderContainer from \"./Headers containers/CentralHeaderContainer\";\nimport { useEffect, useRef, useState } from \"react\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { headerstyles } from \"../Styles/HeaderStyle\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport RightContainer from \"./Headers containers/RightContainer\";\nimport { setBooleanForTouchOnHamburgerInHeaderChatList, setEnumForChatListBlurs, setLayoutOfModeOfEmployment } from \"../../../ReducersAndActions/Actions/ChatListActions/ChatListActions\";\nimport { booleanForLogging } from \"../ChatList\";\nimport HeaderContainer from \"../../SemiComponents/HeaderContainer\";\nimport { EnumForChatListBlurs } from \"./Enums/EnumsForChatListBlurs\";\nimport { screenWidth } from \"../Constants/ConstantsForChatlist\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Header = function Header(_ref) {\n  var navigation = _ref.navigation;\n  var isTouchableForHeader = useSelector(function (state) {\n    return state.chatListReducer.booleanForHamburgerTouchable.isTouchable;\n  });\n  var dispatch = useDispatch();\n  var OnHamburgerPressForDispatch = function OnHamburgerPressForDispatch() {\n    dispatch(setBooleanForTouchOnHamburgerInHeaderChatList(!isTouchableForHeader));\n  };\n  var PressOnModesOfEmployment = function PressOnModesOfEmployment(event) {\n    dispatch(setEnumForChatListBlurs(EnumForChatListBlurs.ModeOfEmploymentTouch));\n  };\n  useEffect(function () {\n    if (!isTouchableForHeader && animationStateForTouchHamburger == 0) {\n      onHamburgerPress();\n    }\n  }, [isTouchableForHeader]);\n  useEffect(function () {\n    if (booleanForLogging) {\n      console.log(\"RERENDER HEADER\");\n    }\n  });\n  var HamburgerAnimationDuration = 150;\n  var _useState = useState(1),\n    _useState2 = _slicedToArray(_useState, 2),\n    animationStateForTouchHamburger = _useState2[0],\n    setAnimationStateForTouchHamburger = _useState2[1];\n  var HamburgerAnimationStatePosition = useRef(new Animated.Value(0));\n  var HamburgerAnimationPosition = HamburgerAnimationStatePosition.current.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, -screenWidth * 0.8]\n  });\n  var onHamburgerPress = function onHamburgerPress() {\n    Animated.timing(HamburgerAnimationStatePosition.current, {\n      toValue: animationStateForTouchHamburger,\n      duration: HamburgerAnimationDuration,\n      useNativeDriver: true\n    }).start();\n    setAnimationStateForTouchHamburger(animationStateForTouchHamburger == 0 ? 1 : 0);\n  };\n  var OnLayoutModeOfEmployment = function OnLayoutModeOfEmployment(event) {\n    dispatch(setLayoutOfModeOfEmployment(event.nativeEvent.layout));\n  };\n  return _jsx(HeaderContainer, {\n    children: _jsxs(View, {\n      style: [headerstyles.header],\n      children: [_jsx(Animated.View, {\n        style: {\n          flexDirection: \"row\",\n          transform: [{\n            translateX: HamburgerAnimationPosition\n          }]\n        },\n        children: _jsx(CentralHeaderContainer, {\n          OnLayoutModeOfEmployment: OnLayoutModeOfEmployment,\n          PressOnModesOfEmployment: PressOnModesOfEmployment,\n          onHamburgerPress: onHamburgerPress,\n          OnHamburgerPressForDispatch: OnHamburgerPressForDispatch,\n          animationStateForTouchHamburger: animationStateForTouchHamburger,\n          navigation: navigation\n        })\n      }), _jsx(Animated.View, {\n        style: [{\n          transform: [{\n            translateX: HamburgerAnimationPosition\n          }]\n        }],\n        children: _jsx(RightContainer, {\n          navigation: navigation\n        })\n      })]\n    })\n  });\n};\nexport default connect(null)(Header);","map":{"version":3,"names":["CentralHeaderContainer","useEffect","useRef","useState","React","View","Animated","headerstyles","connect","useDispatch","useSelector","RightContainer","setBooleanForTouchOnHamburgerInHeaderChatList","setEnumForChatListBlurs","setLayoutOfModeOfEmployment","booleanForLogging","HeaderContainer","EnumForChatListBlurs","screenWidth","jsx","_jsx","jsxs","_jsxs","Header","_ref","navigation","isTouchableForHeader","state","chatListReducer","booleanForHamburgerTouchable","isTouchable","dispatch","OnHamburgerPressForDispatch","PressOnModesOfEmployment","event","ModeOfEmploymentTouch","animationStateForTouchHamburger","onHamburgerPress","console","log","HamburgerAnimationDuration","_useState","_useState2","_slicedToArray","setAnimationStateForTouchHamburger","HamburgerAnimationStatePosition","Value","HamburgerAnimationPosition","current","interpolate","inputRange","outputRange","timing","toValue","duration","useNativeDriver","start","OnLayoutModeOfEmployment","nativeEvent","layout","children","style","header","flexDirection","transform","translateX"],"sources":["D:/project/1project/Messenger/Messenger/Pages/ChatList/Components/Header.tsx"],"sourcesContent":["import CentralHeaderContainer from \"./Headers containers/CentralHeaderContainer\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport React from \"react\";\r\nimport { View, Animated, LayoutChangeEvent } from \"react-native\";\r\nimport { headerstyles } from \"../Styles/HeaderStyle\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport RightContainer from \"./Headers containers/RightContainer\";\r\nimport {\r\n  setBooleanForTouchOnHamburgerInHeaderChatList,\r\n  setEnumForChatListBlurs,\r\n  setLayoutOfModeOfEmployment,\r\n} from \"../../../ReducersAndActions/Actions/ChatListActions/ChatListActions\";\r\nimport { booleanForLogging } from \"../ChatList\";\r\nimport HeaderContainer from \"../../SemiComponents/HeaderContainer\";\r\nimport { EnumForChatListBlurs } from \"./Enums/EnumsForChatListBlurs\";\r\nimport { GestureResponderEvent } from \"react-native-modal\";\r\nimport { screenWidth } from \"../Constants/ConstantsForChatlist\";\r\n\r\ninterface HeaderProps{\r\n  navigation: any\r\n}\r\n\r\nconst Header:React.FC<HeaderProps>=({navigation})=> {\r\n  const isTouchableForHeader = useSelector((state: any) => {\r\n    return state.chatListReducer.booleanForHamburgerTouchable.isTouchable;\r\n  });\r\n  const dispatch = useDispatch();\r\n  const OnHamburgerPressForDispatch = () => {\r\n    dispatch(\r\n      setBooleanForTouchOnHamburgerInHeaderChatList(!isTouchableForHeader)\r\n    );\r\n  };\r\n\r\n  const PressOnModesOfEmployment = (event: GestureResponderEvent) => {\r\n    dispatch(\r\n      setEnumForChatListBlurs(EnumForChatListBlurs.ModeOfEmploymentTouch)\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    if (!isTouchableForHeader && animationStateForTouchHamburger == 0) {\r\n      \r\n      onHamburgerPress();\r\n    }\r\n  }, [isTouchableForHeader]);\r\n  useEffect(() => {\r\n    if (booleanForLogging) {\r\n      console.log(\"RERENDER HEADER\");\r\n    }\r\n  });\r\n  const HamburgerAnimationDuration = 150;\r\n  const [animationStateForTouchHamburger, setAnimationStateForTouchHamburger] =\r\n    useState(1);\r\n  const HamburgerAnimationStatePosition = useRef(new Animated.Value(0));\r\n  const HamburgerAnimationPosition =\r\n    HamburgerAnimationStatePosition.current.interpolate({\r\n      inputRange: [0, 1],\r\n      outputRange: [0, -screenWidth * 0.8],\r\n    });\r\n\r\n  const onHamburgerPress = () => {\r\n    //console.log(isTouchableForHeader);\r\n    //console.log(animationStateForTouchHamburger);\r\n\r\n    Animated.timing(HamburgerAnimationStatePosition.current, {\r\n      toValue: animationStateForTouchHamburger,\r\n      duration: HamburgerAnimationDuration,\r\n      useNativeDriver: true,\r\n    }).start();\r\n    setAnimationStateForTouchHamburger(\r\n      animationStateForTouchHamburger == 0 ? 1 : 0\r\n    );\r\n  };\r\n  const OnLayoutModeOfEmployment = (event: LayoutChangeEvent) => {\r\n    dispatch(setLayoutOfModeOfEmployment(event.nativeEvent.layout));\r\n  };\r\n  return (\r\n    <HeaderContainer>\r\n      <View style={[headerstyles.header]}>\r\n        <Animated.View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            transform: [{ translateX: HamburgerAnimationPosition }],\r\n          }}\r\n        >\r\n          <CentralHeaderContainer\r\n            OnLayoutModeOfEmployment={OnLayoutModeOfEmployment}\r\n            PressOnModesOfEmployment={PressOnModesOfEmployment}\r\n            onHamburgerPress={onHamburgerPress}\r\n            OnHamburgerPressForDispatch={OnHamburgerPressForDispatch}\r\n            animationStateForTouchHamburger={animationStateForTouchHamburger}\r\n            navigation={navigation}\r\n          />\r\n        </Animated.View>\r\n        <Animated.View\r\n          style={[{ transform: [{ translateX: HamburgerAnimationPosition }] }]}\r\n        >\r\n          <RightContainer navigation={navigation} />\r\n        </Animated.View>\r\n      </View>\r\n    </HeaderContainer>\r\n  );\r\n}\r\n\r\nexport default connect(null)(Header);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}