{"ast":null,"code":"import React from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { styles } from \"../EditGroup/ProfileGroupStyles\";\nimport { GestureHandlerRootView } from \"react-native-gesture-handler\";\nimport GroupButton from \"./SettingsEditGroupButton\";\nimport AuditLogButton from \"./SettingsAuditLogButton\";\nimport RoleButton from \"./SettingsRoleButton\";\nimport Header from \"../../SemiComponents/GeneralComponents/Header\";\nimport SettingsBranchesButton from \"./SettingsBranchesButton\";\nimport { branchMode } from \"../../SemiComponents/DatabaseSimulation/DBUser\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SettingsMenu = function SettingsMenu(props) {\n  return _jsx(GestureHandlerRootView, {\n    style: styles.wrapper,\n    children: _jsxs(SafeAreaView, {\n      style: styles.container,\n      children: [_jsx(Header, {\n        primaryTitle: \"Settings\",\n        onGoBackPress: function onGoBackPress() {\n          props.navigation.goBack();\n        }\n      }), _jsx(AuditLogButton, {}), _jsx(SettingsBranchesButton, {\n        onPress: function onPress() {\n          branchMode.mode = \"group\";\n          props.navigation.navigate(\"BranchesScreen\");\n        }\n      }), _jsx(RoleButton, {}), _jsx(GroupButton, {})]\n    })\n  });\n};\nexport default SettingsMenu;","map":{"version":3,"names":["React","SafeAreaView","styles","GestureHandlerRootView","GroupButton","AuditLogButton","RoleButton","Header","SettingsBranchesButton","branchMode","jsx","_jsx","jsxs","_jsxs","SettingsMenu","props","style","wrapper","children","container","primaryTitle","onGoBackPress","navigation","goBack","onPress","mode","navigate"],"sources":["C:/Users/T480/source/repos/Messenger/Messenger/Pages/Profiles/GroupProfile/SettingsMenu/SettingsMenu.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { SafeAreaView } from \"react-native\";\r\nimport { styles } from \"../EditGroup/ProfileGroupStyles\";\r\nimport { GestureHandlerRootView } from \"react-native-gesture-handler\";\r\nimport GroupButton from \"./SettingsEditGroupButton\";\r\nimport AuditLogButton from \"./SettingsAuditLogButton\";\r\nimport RoleButton from \"./SettingsRoleButton\";\r\nimport Header from \"../../SemiComponents/GeneralComponents/Header\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport SettingsBranchesButton from \"./SettingsBranchesButton\";\r\nimport { branchMode } from \"../../SemiComponents/DatabaseSimulation/DBUser\";\r\n\r\ninterface SettingsMenuProps {\r\n  navigation: StackNavigationProp<{}>;\r\n}\r\n\r\nconst SettingsMenu: React.FC<SettingsMenuProps> = (props) => {\r\n  return (\r\n    <GestureHandlerRootView style={styles.wrapper}>\r\n      <SafeAreaView style={styles.container}>\r\n        <Header\r\n          primaryTitle=\"Settings\"\r\n          onGoBackPress={() => {\r\n            props.navigation.goBack();\r\n          }}\r\n        />\r\n        <AuditLogButton />\r\n        <SettingsBranchesButton\r\n          onPress={() => {\r\n            branchMode.mode = \"group\";\r\n\r\n            props.navigation.navigate(\"BranchesScreen\" as never);\r\n          }}\r\n        />\r\n        <RoleButton />\r\n        <GroupButton />\r\n      </SafeAreaView>\r\n    </GestureHandlerRootView>\r\n  );\r\n};\r\n\r\nexport default SettingsMenu;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,YAAA;AAE1B,SAASC,MAAM;AACf,SAASC,sBAAsB,QAAQ,8BAA8B;AACrE,OAAOC,WAAW;AAClB,OAAOC,cAAc;AACrB,OAAOC,UAAU;AACjB,OAAOC,MAAM;AAEb,OAAOC,sBAAsB;AAC7B,SAASC,UAAU;AAAyD,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAM5E,IAAMC,YAAyC,GAAG,SAA5CA,YAAyCA,CAAIC,KAAK,EAAK;EAC3D,OACEJ,IAAA,CAACR,sBAAsB;IAACa,KAAK,EAAEd,MAAM,CAACe,OAAQ;IAAAC,QAAA,EAC5CL,KAAA,CAACZ,YAAY;MAACe,KAAK,EAAEd,MAAM,CAACiB,SAAU;MAAAD,QAAA,GACpCP,IAAA,CAACJ,MAAM;QACLa,YAAY,EAAC,UAAU;QACvBC,aAAa,EAAE,SAAAA,cAAA,EAAM;UACnBN,KAAK,CAACO,UAAU,CAACC,MAAM,CAAC,CAAC;QAC3B;MAAE,CACH,CAAC,EACFZ,IAAA,CAACN,cAAc,IAAE,CAAC,EAClBM,IAAA,CAACH,sBAAsB;QACrBgB,OAAO,EAAE,SAAAA,QAAA,EAAM;UACbf,UAAU,CAACgB,IAAI,GAAG,OAAO;UAEzBV,KAAK,CAACO,UAAU,CAACI,QAAQ,CAAC,gBAAyB,CAAC;QACtD;MAAE,CACH,CAAC,EACFf,IAAA,CAACL,UAAU,IAAE,CAAC,EACdK,IAAA,CAACP,WAAW,IAAE,CAAC;IAAA,CACH;EAAC,CACO,CAAC;AAE7B,CAAC;AAED,eAAeU,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}