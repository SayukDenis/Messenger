{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { styles } from \"../Styles\";\nimport { user, PhotoOrVideo } from \"../../../SemiComponents/DBUser\";\nimport Photos from \"../../../SemiComponents/MainScreen/Multimedia/Photos\";\nimport { tempUser } from \"../../../SemiComponents/DBUser\";\nimport Name from \"../../../SemiComponents/MainScreen/Name\";\nimport GoBackButton from \"../../../SemiComponents/GoBackButton\";\nimport Blur from \"../../../SemiComponents/MainScreen/Blur\";\nimport ElseFeaturesIcon from \"../../../SemiComponents/MainScreen/Icons/ElseFeaturesIcon\";\nimport AlbumElseFeaturesButtons from \"./AlbumElseFeaturesButtons\";\nimport RemovalApproval from \"../../../SemiComponents/MainScreen/RemovalApproval\";\nimport AddingPhotoMenu from \"./AddingPhotoMenu\";\nimport { useIsFocused } from \"@react-navigation/native\";\nimport PhotoElseFeaturesButtons from \"./PhotoElseFeaturesButtons\";\nimport BottomToolBar from \"../../../SemiComponents/MainScreen/ButtomToolBar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar AlbumFilling = function AlbumFilling(props) {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isElseFeaturesVisible = _useState2[0],\n    setIsElseFeaturesVisible = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isDeleteAlbumPressed = _useState4[0],\n    setIsDeleteAlbumPressed = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isAddNewPhotoPressed = _useState6[0],\n    setIsAddNewPhotoPressed = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedPhotosAndVideos = _useState8[0],\n    setSelectedPhotosAndVideos = _useState8[1];\n  var _useState9 = useState(new PhotoOrVideo(\"\")),\n    _useState10 = _slicedToArray(_useState9, 2),\n    pressedPhoto = _useState10[0],\n    setPressedPhoto = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isPhotoSelectionVisible = _useState12[0],\n    setIsPhotoSelectionVisible = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    isDeleteAllPhotosPressed = _useState14[0],\n    setIsDeleteAllPhotosPressed = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    isDeleteSelectedPhotosPressed = _useState16[0],\n    setIsDeleteSelectedPhotosPressed = _useState16[1];\n  var isFocused = useIsFocused();\n  useEffect(function () {}, [isFocused]);\n  var blursConditions = [pressedPhoto.url != \"\", isElseFeaturesVisible, isDeleteAlbumPressed, isAddNewPhotoPressed, isDeleteAllPhotosPressed, isDeleteSelectedPhotosPressed];\n  var blursOnPress = [function () {\n    setPressedPhoto(new PhotoOrVideo(\"\"));\n  }, function () {\n    setIsElseFeaturesVisible(false);\n  }, function () {\n    setIsDeleteAlbumPressed(false);\n  }, function () {\n    setIsAddNewPhotoPressed(false);\n  }, function () {\n    setIsDeleteAllPhotosPressed(false);\n  }, function () {\n    setIsDeleteSelectedPhotosPressed(false);\n  }];\n  return _jsxs(View, {\n    style: [styles.mainContainer, {\n      backgroundColor: \"rgb(174, 174, 174)\"\n    }],\n    children: [blursConditions.map(function (item, index) {\n      return _jsx(Blur, {\n        visibleWhen: item,\n        onPress: function onPress() {\n          blursOnPress[index]();\n        },\n        style: [styles.blurEffect, {\n          zIndex: index == 2 ? 3 : 1\n        }]\n      }, index);\n    }), _jsx(View, {\n      style: styles.topToolBar,\n      children: isPhotoSelectionVisible ? _jsxs(_Fragment, {\n        children: [_jsx(TouchableOpacity, {\n          style: [styles.doneButtonContainer, {\n            left: 0.06 * Dimensions.get(\"screen\").width\n          }],\n          onPress: function onPress() {\n            setIsDeleteAllPhotosPressed(true);\n          },\n          children: _jsx(Text, {\n            style: [styles.doneButtonTitle, {\n              color: \"red\"\n            }],\n            children: \"Delete all\"\n          })\n        }), _jsx(View, {\n          style: [styles.doneButtonContainer, {\n            left: 0.4 * Dimensions.get(\"screen\").width\n          }],\n          children: _jsxs(Text, {\n            style: styles.doneButtonTitle,\n            children: [\"Select(\", selectedPhotosAndVideos.length, \")\"]\n          })\n        }), _jsx(TouchableOpacity, {\n          style: [styles.doneButtonContainer, {\n            right: -0.075 * Dimensions.get(\"screen\").width\n          }],\n          onPress: function onPress() {\n            setSelectedPhotosAndVideos([]);\n            setIsPhotoSelectionVisible(false);\n          },\n          children: _jsx(Text, {\n            style: styles.doneButtonTitle,\n            children: \"Cancel\"\n          })\n        })]\n      }) : _jsxs(_Fragment, {\n        children: [_jsx(Name, {\n          primaryTitle: tempUser.selectedAlbum.name,\n          style: styles.headerTitle\n        }), _jsx(GoBackButton, {\n          onPress: function onPress() {\n            return props.navigation.goBack();\n          }\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            setIsElseFeaturesVisible(true);\n          },\n          style: styles.elseFeaturesButton,\n          children: _jsx(ElseFeaturesIcon, {})\n        })]\n      })\n    }), _jsx(AlbumElseFeaturesButtons, {\n      isVisible: isElseFeaturesVisible,\n      onForwardPress: function onForwardPress() {\n        alert(\"Forward album...\");\n      },\n      onAddPhotoPress: function onAddPhotoPress() {\n        setIsAddNewPhotoPressed(true);\n        setIsElseFeaturesVisible(false);\n      },\n      onDeleteAlbumPress: function onDeleteAlbumPress() {\n        setIsDeleteAlbumPressed(true);\n      },\n      onSortPress: function onSortPress() {\n        alert(\"Sorting...\");\n      }\n    }), pressedPhoto.url != \"\" && _jsx(Image, {\n      style: styles.zoomedPhoto,\n      source: {\n        uri: pressedPhoto.url\n      }\n    }), _jsx(PhotoElseFeaturesButtons, {\n      isVisible: pressedPhoto.url != \"\",\n      setIsNotVisible: function setIsNotVisible() {\n        setPressedPhoto(new PhotoOrVideo(\"\"));\n      },\n      onCopyPress: function onCopyPress() {\n        alert(\"copy\");\n      },\n      onDeletePress: function onDeletePress() {\n        tempUser.selectedAlbum.photosAndVideos.splice(tempUser.selectedAlbum.photosAndVideos.indexOf(pressedPhoto), 1);\n      },\n      onForwardPress: function onForwardPress() {\n        alert(\"forward\");\n      },\n      onMakeMainPhotoPress: function onMakeMainPhotoPress() {\n        tempUser.selectedAlbum.mainPhoto = pressedPhoto;\n      },\n      onSelectPress: function onSelectPress() {\n        setIsPhotoSelectionVisible(true);\n      }\n    }), _jsx(ScrollView, {\n      style: {\n        flex: 1\n      },\n      contentContainerStyle: {\n        top: -0.085 * Dimensions.get(\"screen\").height\n      },\n      overScrollMode: \"never\",\n      showsVerticalScrollIndicator: false,\n      children: _jsx(Photos, {\n        selectedPhotosAndVideos: selectedPhotosAndVideos,\n        isPhotoSelectionVisible: isPhotoSelectionVisible,\n        data: tempUser.selectedAlbum.photosAndVideos,\n        onPress: function onPress(photo) {\n          if (isPhotoSelectionVisible) {\n            if (!(selectedPhotosAndVideos != null && selectedPhotosAndVideos.includes(photo))) {\n              setSelectedPhotosAndVideos(selectedPhotosAndVideos == null ? void 0 : selectedPhotosAndVideos.concat([photo]));\n            } else {\n              setSelectedPhotosAndVideos(selectedPhotosAndVideos == null ? void 0 : selectedPhotosAndVideos.filter(function (photoOrVideo) {\n                return photoOrVideo !== photo;\n              }));\n            }\n          } else {\n            setPressedPhoto(photo);\n          }\n        },\n        hasAddNewPhotoFeature: true,\n        onAddNewPhotoPress: function onAddNewPhotoPress() {\n          setIsAddNewPhotoPressed(true);\n          setIsElseFeaturesVisible(false);\n        }\n      })\n    }), _jsx(BottomToolBar, {\n      isVisible: isPhotoSelectionVisible,\n      onDeletePress: function onDeletePress() {\n        setIsDeleteSelectedPhotosPressed(true);\n      },\n      onForwardPress: function onForwardPress() {\n        alert(\"Forward photos...\");\n      }\n    }), _jsx(RemovalApproval, {\n      isVisible: isDeleteAlbumPressed,\n      onAnyPress: function onAnyPress() {\n        setIsDeleteAlbumPressed(false);\n      },\n      onAgreePress: function onAgreePress() {\n        user.albums.splice(user.albums.indexOf(tempUser.selectedAlbum), 1);\n        setIsDeleteAlbumPressed(false);\n        setIsPhotoSelectionVisible(false);\n        props.navigation.goBack();\n      },\n      text: \"Do you really want to delete album \" + tempUser.selectedAlbum.name + \"?\"\n    }), _jsx(RemovalApproval, {\n      isVisible: isDeleteSelectedPhotosPressed,\n      onAnyPress: function onAnyPress() {\n        setIsDeleteSelectedPhotosPressed(false);\n      },\n      onAgreePress: function onAgreePress() {\n        selectedPhotosAndVideos.forEach(function (photo) {\n          tempUser.selectedAlbum.photosAndVideos.splice(tempUser.selectedAlbum.photosAndVideos.indexOf(photo), 1);\n        });\n        setSelectedPhotosAndVideos(Array());\n        setIsPhotoSelectionVisible(false);\n        setIsDeleteSelectedPhotosPressed(false);\n      },\n      text: \"Do you really want to delete selected photos in \" + tempUser.selectedAlbum.name + \"?\"\n    }), _jsx(RemovalApproval, {\n      isVisible: isDeleteAllPhotosPressed,\n      onAnyPress: function onAnyPress() {\n        setIsDeleteAllPhotosPressed(false);\n      },\n      onAgreePress: function onAgreePress() {\n        tempUser.selectedAlbum.photosAndVideos = [];\n        setIsDeleteAllPhotosPressed(false);\n        setIsPhotoSelectionVisible(false);\n      },\n      text: \"Do you really want to delete all photos in \" + tempUser.selectedAlbum.name + \"?\"\n    }), _jsx(AddingPhotoMenu, {\n      isVisible: isAddNewPhotoPressed,\n      setIsVisible: function setIsVisible(value) {\n        setIsAddNewPhotoPressed(value);\n      },\n      onPhotoPress: function onPhotoPress(value) {\n        tempUser.selectedAlbum.photosAndVideos.push(value);\n        setIsAddNewPhotoPressed(false);\n      },\n      onGalleryButtonPress: function onGalleryButtonPress() {\n        props.navigation.navigate(\"GalleryWhileAddingNewPhoto\");\n      }\n    })]\n  });\n};\nexport default AlbumFilling;","map":{"version":3,"names":["React","useState","useEffect","View","TouchableOpacity","Text","Dimensions","ScrollView","Image","styles","user","PhotoOrVideo","Photos","tempUser","Name","GoBackButton","Blur","ElseFeaturesIcon","AlbumElseFeaturesButtons","RemovalApproval","AddingPhotoMenu","useIsFocused","PhotoElseFeaturesButtons","BottomToolBar","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AlbumFilling","props","_useState","_useState2","_slicedToArray","isElseFeaturesVisible","setIsElseFeaturesVisible","_useState3","_useState4","isDeleteAlbumPressed","setIsDeleteAlbumPressed","_useState5","_useState6","isAddNewPhotoPressed","setIsAddNewPhotoPressed","_useState7","_useState8","selectedPhotosAndVideos","setSelectedPhotosAndVideos","_useState9","_useState10","pressedPhoto","setPressedPhoto","_useState11","_useState12","isPhotoSelectionVisible","setIsPhotoSelectionVisible","_useState13","_useState14","isDeleteAllPhotosPressed","setIsDeleteAllPhotosPressed","_useState15","_useState16","isDeleteSelectedPhotosPressed","setIsDeleteSelectedPhotosPressed","isFocused","blursConditions","url","blursOnPress","style","mainContainer","backgroundColor","children","map","item","index","visibleWhen","onPress","blurEffect","zIndex","topToolBar","doneButtonContainer","left","get","width","doneButtonTitle","color","length","right","primaryTitle","selectedAlbum","name","headerTitle","navigation","goBack","elseFeaturesButton","isVisible","onForwardPress","alert","onAddPhotoPress","onDeleteAlbumPress","onSortPress","zoomedPhoto","source","uri","setIsNotVisible","onCopyPress","onDeletePress","photosAndVideos","splice","indexOf","onMakeMainPhotoPress","mainPhoto","onSelectPress","flex","contentContainerStyle","top","height","overScrollMode","showsVerticalScrollIndicator","data","photo","includes","concat","filter","photoOrVideo","hasAddNewPhotoFeature","onAddNewPhotoPress","onAnyPress","onAgreePress","albums","text","forEach","Array","setIsVisible","value","onPhotoPress","push","onGalleryButtonPress","navigate"],"sources":["/home/zatibmag/Desktop/Project/Messenger/Messenger/Pages/Profiles/DialogueProfile/MainUserScreen/Album/AlbumFilling.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  TouchableOpacity,\r\n  Text,\r\n  Dimensions,\r\n  ScrollView,\r\n  Image,\r\n} from \"react-native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport { styles } from \"../Styles\";\r\nimport { user, Album, PhotoOrVideo } from \"../../../SemiComponents/DBUser\";\r\nimport Photos from \"../../../SemiComponents/MainScreen/Multimedia/Photos\";\r\nimport { tempUser } from \"../../../SemiComponents/DBUser\";\r\nimport Name from \"../../../SemiComponents/MainScreen/Name\";\r\nimport GoBackButton from \"../../../SemiComponents/GoBackButton\";\r\nimport Blur from \"../../../SemiComponents/MainScreen/Blur\";\r\nimport ElseFeaturesIcon from \"../../../SemiComponents/MainScreen/Icons/ElseFeaturesIcon\";\r\nimport AlbumElseFeaturesButtons from \"./AlbumElseFeaturesButtons\";\r\nimport RemovalApproval from \"../../../SemiComponents/MainScreen/RemovalApproval\";\r\nimport AddingPhotoMenu from \"./AddingPhotoMenu\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport PhotoElseFeaturesButtons from \"./PhotoElseFeaturesButtons\";\r\nimport BottomToolBar from \"../../../SemiComponents/MainScreen/ButtomToolBar\";\r\n\r\ninterface AlbumFillingProps {\r\n  navigation: StackNavigationProp<{}>;\r\n}\r\n\r\nconst AlbumFilling: React.FC<AlbumFillingProps> = (props) => {\r\n  const [isElseFeaturesVisible, setIsElseFeaturesVisible] = useState(false);\r\n  const [isDeleteAlbumPressed, setIsDeleteAlbumPressed] = useState(false);\r\n  const [isAddNewPhotoPressed, setIsAddNewPhotoPressed] = useState(false);\r\n  const [selectedPhotosAndVideos, setSelectedPhotosAndVideos] = useState<\r\n    Array<PhotoOrVideo>\r\n  >([]);\r\n  const [pressedPhoto, setPressedPhoto] = useState(new PhotoOrVideo(\"\"));\r\n  const [isPhotoSelectionVisible, setIsPhotoSelectionVisible] = useState(false);\r\n  const [isDeleteAllPhotosPressed, setIsDeleteAllPhotosPressed] =\r\n    useState(false);\r\n  const [isDeleteSelectedPhotosPressed, setIsDeleteSelectedPhotosPressed] =\r\n    useState(false);\r\n\r\n  const isFocused = useIsFocused();\r\n\r\n  useEffect(() => {}, [isFocused]);\r\n\r\n  var blursConditions: boolean[] = [\r\n    pressedPhoto.url != \"\",\r\n    isElseFeaturesVisible,\r\n    isDeleteAlbumPressed,\r\n    isAddNewPhotoPressed,\r\n    isDeleteAllPhotosPressed,\r\n    isDeleteSelectedPhotosPressed,\r\n  ];\r\n  var blursOnPress: (() => void)[] = [\r\n    () => {\r\n      setPressedPhoto(new PhotoOrVideo(\"\"));\r\n    },\r\n    () => {\r\n      setIsElseFeaturesVisible(false);\r\n    },\r\n    () => {\r\n      setIsDeleteAlbumPressed(false);\r\n    },\r\n    () => {\r\n      setIsAddNewPhotoPressed(false);\r\n    },\r\n    () => {\r\n      setIsDeleteAllPhotosPressed(false);\r\n    },\r\n    () => {\r\n      setIsDeleteSelectedPhotosPressed(false);\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <View\r\n      style={[styles.mainContainer, { backgroundColor: \"rgb(174, 174, 174)\" }]}\r\n    >\r\n      {blursConditions.map((item, index) => (\r\n        <Blur\r\n          key={index}\r\n          visibleWhen={item}\r\n          onPress={() => {\r\n            blursOnPress[index]();\r\n          }}\r\n          style={[\r\n            styles.blurEffect,\r\n            {\r\n              zIndex: index == 2 ? 3 : 1,\r\n            },\r\n          ]}\r\n        />\r\n      ))}\r\n\r\n      <View style={styles.topToolBar}>\r\n        {isPhotoSelectionVisible ? (\r\n          <>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.doneButtonContainer,\r\n                { left: 0.06 * Dimensions.get(\"screen\").width },\r\n              ]}\r\n              onPress={() => {\r\n                setIsDeleteAllPhotosPressed(true);\r\n              }}\r\n            >\r\n              <Text style={[styles.doneButtonTitle, { color: \"red\" }]}>\r\n                Delete all\r\n              </Text>\r\n            </TouchableOpacity>\r\n\r\n            {/* Number of selected albums */}\r\n            <View\r\n              style={[\r\n                styles.doneButtonContainer,\r\n                { left: 0.4 * Dimensions.get(\"screen\").width },\r\n              ]}\r\n            >\r\n              <Text style={styles.doneButtonTitle}>\r\n                Select({selectedPhotosAndVideos.length})\r\n              </Text>\r\n            </View>\r\n\r\n            {/* Cancel button */}\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.doneButtonContainer,\r\n                { right: -0.075 * Dimensions.get(\"screen\").width },\r\n              ]}\r\n              onPress={() => {\r\n                setSelectedPhotosAndVideos([]);\r\n                setIsPhotoSelectionVisible(false);\r\n              }}\r\n            >\r\n              <Text style={styles.doneButtonTitle}>Cancel</Text>\r\n            </TouchableOpacity>\r\n          </>\r\n        ) : (\r\n          <>\r\n            {/* Main name */}\r\n            <Name\r\n              primaryTitle={tempUser.selectedAlbum.name}\r\n              style={styles.headerTitle}\r\n            />\r\n\r\n            {/* Going back button */}\r\n            <GoBackButton onPress={() => props.navigation.goBack()} />\r\n\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setIsElseFeaturesVisible(true);\r\n              }}\r\n              style={styles.elseFeaturesButton}\r\n            >\r\n              <ElseFeaturesIcon />\r\n            </TouchableOpacity>\r\n          </>\r\n        )}\r\n      </View>\r\n\r\n      <AlbumElseFeaturesButtons\r\n        isVisible={isElseFeaturesVisible}\r\n        onForwardPress={() => {\r\n          alert(\"Forward album...\");\r\n        }}\r\n        onAddPhotoPress={() => {\r\n          setIsAddNewPhotoPressed(true);\r\n          setIsElseFeaturesVisible(false);\r\n        }}\r\n        onDeleteAlbumPress={() => {\r\n          setIsDeleteAlbumPressed(true);\r\n        }}\r\n        onSortPress={() => {\r\n          alert(\"Sorting...\");\r\n        }}\r\n      />\r\n\r\n      {pressedPhoto.url != \"\" && (\r\n        <Image style={styles.zoomedPhoto} source={{ uri: pressedPhoto.url }} />\r\n      )}\r\n\r\n      <PhotoElseFeaturesButtons\r\n        isVisible={pressedPhoto.url != \"\"}\r\n        setIsNotVisible={() => {\r\n          setPressedPhoto(new PhotoOrVideo(\"\"));\r\n        }}\r\n        onCopyPress={() => {\r\n          alert(\"copy\");\r\n        }}\r\n        onDeletePress={() => {\r\n          tempUser.selectedAlbum.photosAndVideos.splice(\r\n            tempUser.selectedAlbum.photosAndVideos.indexOf(pressedPhoto),\r\n            1\r\n          );\r\n        }}\r\n        onForwardPress={() => {\r\n          alert(\"forward\");\r\n        }}\r\n        onMakeMainPhotoPress={() => {\r\n          tempUser.selectedAlbum.mainPhoto = pressedPhoto;\r\n        }}\r\n        onSelectPress={() => {\r\n          setIsPhotoSelectionVisible(true);\r\n        }}\r\n      />\r\n\r\n      <ScrollView\r\n        style={{\r\n          flex: 1,\r\n        }}\r\n        contentContainerStyle={{\r\n          top: -0.085 * Dimensions.get(\"screen\").height,\r\n        }}\r\n        overScrollMode=\"never\"\r\n        showsVerticalScrollIndicator={false}\r\n      >\r\n        <Photos\r\n          selectedPhotosAndVideos={selectedPhotosAndVideos}\r\n          isPhotoSelectionVisible={isPhotoSelectionVisible}\r\n          data={tempUser.selectedAlbum.photosAndVideos}\r\n          onPress={(photo: PhotoOrVideo) => {\r\n            if (isPhotoSelectionVisible) {\r\n              if (!selectedPhotosAndVideos?.includes(photo)) {\r\n                setSelectedPhotosAndVideos(\r\n                  selectedPhotosAndVideos?.concat([photo])\r\n                );\r\n              } else {\r\n                setSelectedPhotosAndVideos(\r\n                  selectedPhotosAndVideos?.filter(\r\n                    (photoOrVideo) => photoOrVideo !== photo\r\n                  )\r\n                );\r\n              }\r\n            } else {\r\n              setPressedPhoto(photo);\r\n            }\r\n          }}\r\n          hasAddNewPhotoFeature={true}\r\n          onAddNewPhotoPress={() => {\r\n            setIsAddNewPhotoPressed(true);\r\n            setIsElseFeaturesVisible(false);\r\n          }}\r\n        />\r\n      </ScrollView>\r\n\r\n      <BottomToolBar\r\n        isVisible={isPhotoSelectionVisible}\r\n        onDeletePress={() => {\r\n          setIsDeleteSelectedPhotosPressed(true);\r\n        }}\r\n        onForwardPress={() => {\r\n          alert(\"Forward photos...\");\r\n        }}\r\n      />\r\n\r\n      {/* Approval to delete an album */}\r\n      <RemovalApproval\r\n        isVisible={isDeleteAlbumPressed}\r\n        onAnyPress={() => {\r\n          setIsDeleteAlbumPressed(false);\r\n        }}\r\n        onAgreePress={() => {\r\n          user.albums.splice(user.albums.indexOf(tempUser.selectedAlbum), 1);\r\n          setIsDeleteAlbumPressed(false);\r\n          setIsPhotoSelectionVisible(false);\r\n          props.navigation.goBack();\r\n        }}\r\n        text={\r\n          \"Do you really want to delete album \" +\r\n          tempUser.selectedAlbum.name +\r\n          \"?\"\r\n        }\r\n      />\r\n\r\n      {/* Approval to delete selected photos in the album */}\r\n      <RemovalApproval\r\n        isVisible={isDeleteSelectedPhotosPressed}\r\n        onAnyPress={() => {\r\n          setIsDeleteSelectedPhotosPressed(false);\r\n        }}\r\n        onAgreePress={() => {\r\n          selectedPhotosAndVideos.forEach((photo) => {\r\n            tempUser.selectedAlbum.photosAndVideos.splice(\r\n              tempUser.selectedAlbum.photosAndVideos.indexOf(photo),\r\n              1\r\n            );\r\n          });\r\n          setSelectedPhotosAndVideos(Array<PhotoOrVideo>());\r\n          setIsPhotoSelectionVisible(false);\r\n          setIsDeleteSelectedPhotosPressed(false);\r\n        }}\r\n        text={\r\n          \"Do you really want to delete selected photos in \" +\r\n          tempUser.selectedAlbum.name +\r\n          \"?\"\r\n        }\r\n      />\r\n\r\n      {/* Approval to delete all photos in the album */}\r\n      <RemovalApproval\r\n        isVisible={isDeleteAllPhotosPressed}\r\n        onAnyPress={() => {\r\n          setIsDeleteAllPhotosPressed(false);\r\n        }}\r\n        onAgreePress={() => {\r\n          tempUser.selectedAlbum.photosAndVideos = [];\r\n          setIsDeleteAllPhotosPressed(false);\r\n          setIsPhotoSelectionVisible(false);\r\n        }}\r\n        text={\r\n          \"Do you really want to delete all photos in \" +\r\n          tempUser.selectedAlbum.name +\r\n          \"?\"\r\n        }\r\n      />\r\n\r\n      <AddingPhotoMenu\r\n        isVisible={isAddNewPhotoPressed}\r\n        setIsVisible={(value: boolean) => {\r\n          setIsAddNewPhotoPressed(value);\r\n        }}\r\n        onPhotoPress={(value: PhotoOrVideo) => {\r\n          tempUser.selectedAlbum.photosAndVideos.push(value);\r\n          setIsAddNewPhotoPressed(false);\r\n        }}\r\n        onGalleryButtonPress={() => {\r\n          props.navigation.navigate(\"GalleryWhileAddingNewPhoto\" as never);\r\n        }}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default AlbumFilling;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}