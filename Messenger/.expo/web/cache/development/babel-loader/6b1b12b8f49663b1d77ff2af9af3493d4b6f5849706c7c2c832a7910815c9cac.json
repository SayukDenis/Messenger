{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Header from \"../../SemiComponents/GeneralComponents/Header\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport SettingOption from \"../../SemiComponents/GeneralComponents/SettingOption\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ChannelSettingsScreen = function ChannelSettingsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var SettingOptions = [{\n    text: \"Audit log\",\n    onPress: function onPress() {\n      navigation.navigate(\"AuditLogScreen\");\n    }\n  }, {\n    text: \"Branches\",\n    onPress: function onPress() {\n      navigation.navigate(\"BranchesScreen\");\n    }\n  }, {\n    text: \"Role\",\n    onPress: function onPress() {\n      navigation.navigate(\"RolesScreen\");\n    }\n  }, {\n    text: \"Edit channel\",\n    onPress: function onPress() {\n      alert(\"Edit channel\");\n    }\n  }];\n  return _jsxs(LinearGradient, {\n    colors: [\"#cf9b95\", \"#c98bb8\", \"#c37adb\"],\n    style: {\n      flex: 1\n    },\n    children: [_jsx(Header, {\n      primaryTitle: \"Settings\",\n      onGoBackPress: function onGoBackPress() {\n        navigation.goBack();\n      }\n    }), SettingOptions.map(function (item, index) {\n      return _jsxs(View, {\n        children: [_jsx(SettingOption, {\n          text: item.text,\n          onPress: function onPress() {\n            item.onPress();\n          }\n        }), _jsx(View, {\n          style: {\n            height: 0.005 * Dimensions.get(\"screen\").height\n          }\n        })]\n      }, index);\n    })]\n  });\n};\nexport default ChannelSettingsScreen;","map":{"version":3,"names":["React","View","Dimensions","Header","LinearGradient","SettingOption","jsx","_jsx","jsxs","_jsxs","ChannelSettingsScreen","_ref","navigation","SettingOptions","text","onPress","navigate","alert","colors","style","flex","children","primaryTitle","onGoBackPress","goBack","map","item","index","height","get"],"sources":["C:/Users/T480/source/repos/Messenger/Messenger/Pages/Profiles/ChannelProfile/SettingsScreen/ChannelSettingsScreen.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React from \"react\";\r\nimport { View, Dimensions } from \"react-native\";\r\nimport Header from \"../../SemiComponents/GeneralComponents/Header\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport SettingOption from \"../../SemiComponents/GeneralComponents/SettingOption\";\r\n\r\ntype ChannelSettingsScreenProps = {\r\n  navigation: StackNavigationProp<{}>; // Встановіть правильний тип для navigation\r\n};\r\n\r\nconst ChannelSettingsScreen: React.FC<ChannelSettingsScreenProps> = ({\r\n  navigation,\r\n}) => {\r\n  const SettingOptions = [\r\n    {\r\n      text: \"Audit log\",\r\n      onPress: () => {\r\n        navigation.navigate(\"AuditLogScreen\" as never);\r\n      },\r\n    },\r\n    {\r\n      text: \"Branches\",\r\n      onPress: () => {\r\n        navigation.navigate(\"BranchesScreen\" as never);\r\n      },\r\n    },\r\n    {\r\n      text: \"Role\",\r\n      onPress: () => {\r\n        navigation.navigate(\"RolesScreen\" as never);\r\n      },\r\n    },\r\n    {\r\n      text: \"Edit channel\",\r\n      onPress: () => {\r\n        alert(\"Edit channel\");\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <LinearGradient\r\n      colors={[\"#cf9b95\", \"#c98bb8\", \"#c37adb\"]}\r\n      style={{ flex: 1 }}\r\n    >\r\n      <Header\r\n        primaryTitle=\"Settings\"\r\n        onGoBackPress={() => {\r\n          navigation.goBack();\r\n        }}\r\n      />\r\n\r\n      {SettingOptions.map((item, index) => (\r\n        <View key={index}>\r\n          <SettingOption\r\n            text={item.text}\r\n            onPress={() => {\r\n              item.onPress();\r\n            }}\r\n          />\r\n          <View style={{ height: 0.005 * Dimensions.get(\"screen\").height }} />\r\n        </View>\r\n      ))}\r\n    </LinearGradient>\r\n  );\r\n};\r\n\r\nexport default ChannelSettingsScreen;\r\n"],"mappings":"AAEA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAE1B,OAAOC,MAAM;AAEb,SAASC,cAAc,QAAQ,sBAAsB;AACrD,OAAOC,aAAa;AAA6D,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAMjF,IAAMC,qBAA2D,GAAG,SAA9DA,qBAA2DA,CAAAC,IAAA,EAE3D;EAAA,IADJC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAEV,IAAMC,cAAc,GAAG,CACrB;IACEC,IAAI,EAAE,WAAW;IACjBC,OAAO,EAAE,SAAAA,QAAA,EAAM;MACbH,UAAU,CAACI,QAAQ,CAAC,gBAAyB,CAAC;IAChD;EACF,CAAC,EACD;IACEF,IAAI,EAAE,UAAU;IAChBC,OAAO,EAAE,SAAAA,QAAA,EAAM;MACbH,UAAU,CAACI,QAAQ,CAAC,gBAAyB,CAAC;IAChD;EACF,CAAC,EACD;IACEF,IAAI,EAAE,MAAM;IACZC,OAAO,EAAE,SAAAA,QAAA,EAAM;MACbH,UAAU,CAACI,QAAQ,CAAC,aAAsB,CAAC;IAC7C;EACF,CAAC,EACD;IACEF,IAAI,EAAE,cAAc;IACpBC,OAAO,EAAE,SAAAA,QAAA,EAAM;MACbE,KAAK,CAAC,cAAc,CAAC;IACvB;EACF,CAAC,CACF;EAED,OACER,KAAA,CAACL,cAAc;IACbc,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAE;IAC1CC,KAAK,EAAE;MAAEC,IAAI,EAAE;IAAE,CAAE;IAAAC,QAAA,GAEnBd,IAAA,CAACJ,MAAM;MACLmB,YAAY,EAAC,UAAU;MACvBC,aAAa,EAAE,SAAAA,cAAA,EAAM;QACnBX,UAAU,CAACY,MAAM,CAAC,CAAC;MACrB;IAAE,CACH,CAAC,EAEDX,cAAc,CAACY,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK;MAAA,OAC9BlB,KAAA,CAACR,IAAI;QAAAoB,QAAA,GACHd,IAAA,CAACF,aAAa;UACZS,IAAI,EAAEY,IAAI,CAACZ,IAAK;UAChBC,OAAO,EAAE,SAAAA,QAAA,EAAM;YACbW,IAAI,CAACX,OAAO,CAAC,CAAC;UAChB;QAAE,CACH,CAAC,EACFR,IAAA,CAACN,IAAI;UAACkB,KAAK,EAAE;YAAES,MAAM,EAAE,KAAK,GAAG1B,UAAU,CAAC2B,GAAG,CAAC,QAAQ,CAAC,CAACD;UAAO;QAAE,CAAE,CAAC;MAAA,GAP3DD,KAQL,CAAC;IAAA,CACR,CAAC;EAAA,CACY,CAAC;AAErB,CAAC;AAED,eAAejB,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}