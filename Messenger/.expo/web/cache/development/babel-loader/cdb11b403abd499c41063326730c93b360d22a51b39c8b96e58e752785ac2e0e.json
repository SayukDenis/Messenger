{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useState, useCallback, useEffect } from 'react';\nimport DialogueHeader from \"./components/DialogueHeader\";\nimport DialogueMessages from \"./components/DialogueMessages\";\nimport DialogueFooter from \"./components/DialogueFooter\";\nimport MessageMenu from \"./components/MessageMenu\";\nimport styles from \"./DialogueStyle\";\nimport React from 'react';\nimport DeleteMessageModal from \"./components/DeleteMessageModal\";\nimport BackGroundGradinetView from \"../../SemiComponents/BackGroundGradientView\";\nimport { connect } from 'react-redux';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar coord;\nvar messageID = -1;\nvar msgs;\nvar user = {\n  userId: 0,\n  name: 'Denis',\n  numberPhone: '',\n  nickname: 'Denis',\n  description: '',\n  linkToPhoto: '',\n  password: 'asdoapwd',\n  email: 'dopawdjpa',\n  timeLastEntry: new Date(),\n  tabs: new Array(),\n  schema: {}\n};\nvar Dialogue = function Dialogue(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var dialogue = route.params.chat;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    messageMenuVisible = _useState2[0],\n    setMessageMenuVisible = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    messageMenuVisisbleAppearence = _useState4[0],\n    setMessageMenuVisisbleAppearence = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    listOfMessages = _useState6[0],\n    setListOfMessages = _useState6[1];\n  useEffect(function () {\n    setListOfMessages(dialogue.messages.reverse());\n  }, []);\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isReply = _useState8[0],\n    setIsReply = _useState8[1];\n  var _useState9 = useState({}),\n    _useState10 = _slicedToArray(_useState9, 2),\n    replyMessage = _useState10[0],\n    setReplyMessage = _useState10[1];\n  var replyHandler = useCallback(function () {\n    setIsReply(!isReply);\n    setReplyMessageHandler();\n  }, []);\n  var setReplyMessageHandler = function setReplyMessageHandler() {\n    if (!isReply) {\n      setReplyMessage(msgs.find(function (m) {\n        return m.messageId == messageID;\n      }));\n      setEditMessage({});\n    } else setReplyMessage({});\n  };\n  var sendMessageOrCancelReplyAndEditHandler = useCallback(function () {\n    setIsEdit(false);\n    setIsReply(false);\n  }, []);\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isEdit = _useState12[0],\n    setIsEdit = _useState12[1];\n  var _useState13 = useState({}),\n    _useState14 = _slicedToArray(_useState13, 2),\n    editMessage = _useState14[0],\n    setEditMessage = _useState14[1];\n  var pressEditButton = function pressEditButton() {\n    setIsEdit(!isEdit);\n    setEditMessageHandler();\n  };\n  var setEditMessageHandler = function setEditMessageHandler() {\n    if (!isEdit) {\n      setEditMessage(msgs.find(function (m) {\n        return m.messageId == messageID;\n      }));\n      setReplyMessage({});\n    } else setEditMessage({});\n  };\n  var handleMessagePressOrSwipe = useCallback(function (coordinations, pressed) {\n    if (pressed) {\n      setMessageMenuVisible(true);\n      coord = coordinations;\n      setMessageMenuVisisbleAppearence(true);\n      messageID = coordinations.ID;\n    } else {\n      messageID = coordinations.ID;\n      replyHandler();\n    }\n  }, []);\n  var setMessages = useCallback(function (mes) {\n    if (isEdit) {\n      setListOfMessages(_toConsumableArray(listOfMessages));\n    } else {\n      setListOfMessages([mes].concat(_toConsumableArray(listOfMessages)));\n    }\n  }, [listOfMessages]);\n  useEffect(function () {\n    msgs = listOfMessages;\n  }, [listOfMessages]);\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    deleting = _useState16[0],\n    setDeleting = _useState16[1];\n  var setDeletingHandler = function setDeletingHandler() {\n    setDeleting(!deleting);\n  };\n  var onDeletePress = function onDeletePress() {\n    console.log('hohnpjopo');\n    setListOfMessages(_toConsumableArray(listOfMessages.filter(function (m) {\n      return m.messageId != messageID;\n    })));\n    setDeleting(!deleting);\n  };\n  var handleMessageMenuPress = useCallback(function () {\n    setMessageMenuVisible(false);\n    setMessageMenuVisisbleAppearence(false);\n  }, []);\n  console.log('djapowjdpoa');\n  var mes = listOfMessages.find(function (m) {\n    return m.messageId == messageID;\n  });\n  return _jsx(View, {\n    style: styles.dialogueContainer,\n    children: _jsxs(BackGroundGradinetView, {\n      children: [_jsx(MessageMenu, {\n        isUser: mes != undefined && mes.author.userId === (user == null ? void 0 : user.userId),\n        isVisible: messageMenuVisible,\n        onOverlayPress: handleMessageMenuPress,\n        coord: coord,\n        onReplyPress: replyHandler,\n        onEditPress: pressEditButton,\n        onDeletePress: setDeletingHandler\n      }), _jsx(DialogueHeader, {\n        navigation: navigation\n      }), _jsx(DialogueMessages, {\n        setMessageMenuVisible: handleMessagePressOrSwipe,\n        messageMenuVisisbleAppearence: messageMenuVisisbleAppearence,\n        messageID: messageID,\n        listOfMessages: listOfMessages,\n        isReply: isReply,\n        isEdit: isEdit,\n        author: user\n      }), _jsx(DialogueFooter, {\n        messages: listOfMessages,\n        setMessages: setMessages,\n        isReply: isReply,\n        author: user,\n        messageID: messageID,\n        isEdit: isEdit,\n        editMessage: editMessage,\n        replyMessage: replyMessage,\n        onSendMessageOrCancelReplyAndEdit: sendMessageOrCancelReplyAndEditHandler\n      }), _jsx(DeleteMessageModal, {\n        deleting: deleting,\n        setDeletingHandler: setDeletingHandler,\n        onDeletePress: onDeletePress,\n        message: mes,\n        author: user\n      })]\n    })\n  });\n};\nexport default connect(null)(Dialogue);","map":{"version":3,"names":["useState","useCallback","useEffect","DialogueHeader","DialogueMessages","DialogueFooter","MessageMenu","styles","React","DeleteMessageModal","BackGroundGradinetView","connect","jsx","_jsx","jsxs","_jsxs","coord","messageID","msgs","user","userId","name","numberPhone","nickname","description","linkToPhoto","password","email","timeLastEntry","Date","tabs","Array","schema","Dialogue","_ref","navigation","route","dialogue","params","chat","_useState","_useState2","_slicedToArray","messageMenuVisible","setMessageMenuVisible","_useState3","_useState4","messageMenuVisisbleAppearence","setMessageMenuVisisbleAppearence","_useState5","_useState6","listOfMessages","setListOfMessages","messages","reverse","_useState7","_useState8","isReply","setIsReply","_useState9","_useState10","replyMessage","setReplyMessage","replyHandler","setReplyMessageHandler","find","m","messageId","setEditMessage","sendMessageOrCancelReplyAndEditHandler","setIsEdit","_useState11","_useState12","isEdit","_useState13","_useState14","editMessage","pressEditButton","setEditMessageHandler","handleMessagePressOrSwipe","coordinations","pressed","ID","setMessages","mes","_toConsumableArray","concat","_useState15","_useState16","deleting","setDeleting","setDeletingHandler","onDeletePress","console","log","filter","handleMessageMenuPress","View","style","dialogueContainer","children","isUser","undefined","author","isVisible","onOverlayPress","onReplyPress","onEditPress","onSendMessageOrCancelReplyAndEdit","message"],"sources":["D:/project/1project/Messenger/Messenger/Pages/Chats/Dialogue/Dialogue.tsx"],"sourcesContent":["import { View, KeyboardAvoidingView, Platform } from 'react-native';\r\nimport { useState, useCallback, useEffect } from 'react';\r\nimport DialogueHeader from './components/DialogueHeader';\r\nimport DialogueMessages from './components/DialogueMessages';\r\nimport DialogueFooter from './components/DialogueFooter';\r\nimport MessageMenu from './components/MessageMenu';\r\nimport styles from './DialogueStyle';\r\nimport React from 'react';\r\nimport DeleteMessageModal from './components/DeleteMessageModal';\r\nimport BackGroundGradinetView from '../../SemiComponents/BackGroundGradientView';\r\nimport * as DialogueModel from '../../../dao/Models/Chats/Dialogue';\r\nimport { MessageProps } from './GeneralInterfaces/IMessage';\r\nimport { connect, useSelector } from 'react-redux';\r\nimport SelfProfile from '../../../dao/Models/SelfProfile';\r\nimport User from '../../../dao/Models/User';\r\n\r\ninterface Layout {\r\n  ID: number;\r\n  pageX: number;\r\n  pageY: number;\r\n  width: number;\r\n  height: number;  \r\n}\r\n\r\nlet coord:Layout;\r\nlet messageID:number=-1;\r\nlet msgs:MessageProps[];\r\n\r\nconst user:SelfProfile = {\r\n  userId: 0,\r\n  name: 'Denis',\r\n  numberPhone: '',\r\n  nickname: 'Denis',\r\n  description: '',\r\n  linkToPhoto: '',\r\n  password: 'asdoapwd',\r\n  email: 'dopawdjpa',\r\n  timeLastEntry: new Date(),\r\n  tabs: new Array(),\r\n  schema: {} as any\r\n}\r\n\r\nconst Dialogue = ({ navigation, route }:any) => {\r\n  const dialogue:DialogueModel.default=route.params.chat as DialogueModel.default;\r\n\r\n  // const user = useSelector((state: any) => state.selfProfileUser);\r\n  // console.log('userId', user.userId);\r\n\r\n  // console.log(dialogue.messages.map((m, index) => {\r\n  //   const mes = {\r\n  //     messageId: m.messageId,\r\n  //     author: m.author.userId,\r\n  //     content: m.content,\r\n  //     sendingTime: m.sendingTime,\r\n  //     messageType: m.messageType,\r\n  //     messageResponseId: m.messageResponseId,\r\n  //     messageForwardId: m.messageForwardId,\r\n  //     isEdited: m.isEdited,\r\n  //     isDeleted: m.isDeleted,\r\n  //     reactionOnMessage: m.reactionOnMessage,\r\n  //   }\r\n  //   return JSON.stringify(mes, null, 2)\r\n  // }))\r\n\r\n  const [messageMenuVisible, setMessageMenuVisible] = useState(false);\r\n  const [messageMenuVisisbleAppearence, setMessageMenuVisisbleAppearence] = useState(false);\r\n  const [listOfMessages, setListOfMessages] = useState([] as MessageProps[]);\r\n  useEffect(() => {\r\n    setListOfMessages(dialogue.messages.reverse());\r\n  }, [])\r\n  \r\n  const [isReply, setIsReply] = useState(false);\r\n  const [replyMessage, setReplyMessage] = useState({} as any);\r\n\r\n  const replyHandler = useCallback(() => {\r\n    setIsReply(!isReply);\r\n    setReplyMessageHandler();\r\n  },[]);\r\n\r\n  const setReplyMessageHandler = () => {\r\n    if(!isReply) {\r\n      setReplyMessage(msgs.find(m => m.messageId==messageID));\r\n      setEditMessage({} as MessageProps);\r\n    }\r\n    else\r\n      setReplyMessage({} as MessageProps);\r\n  }\r\n\r\n  const sendMessageOrCancelReplyAndEditHandler = useCallback(() => {\r\n    setIsEdit(false);\r\n    setIsReply(false);\r\n  },[]);\r\n\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [editMessage, setEditMessage] = useState({} as MessageProps);\r\n\r\n  const pressEditButton = () => {\r\n    setIsEdit(!isEdit);\r\n    setEditMessageHandler();\r\n  }\r\n\r\n  const setEditMessageHandler = () => {\r\n    if(!isEdit) {\r\n      setEditMessage(msgs.find(m => m.messageId==messageID)!);\r\n      setReplyMessage({} as MessageProps);\r\n    }\r\n    else\r\n      setEditMessage({} as MessageProps);\r\n  }\r\n\r\n  const handleMessagePressOrSwipe = useCallback((coordinations:Layout, pressed: boolean) => {\r\n    if(pressed) {\r\n      setMessageMenuVisible(true);\r\n      coord = coordinations;\r\n      setMessageMenuVisisbleAppearence(true);\r\n      messageID = coordinations.ID;\r\n    } else {\r\n      messageID = coordinations.ID;\r\n      replyHandler();\r\n    }\r\n  }, []);\r\n\r\n  const setMessages = useCallback((mes:MessageProps) => {\r\n    if(isEdit) {\r\n      setListOfMessages([...listOfMessages]);\r\n    }\r\n    else {\r\n      setListOfMessages([mes, ...listOfMessages]);\r\n    }\r\n  }, [listOfMessages]);\r\n\r\n  useEffect(()=> {\r\n    msgs = listOfMessages;\r\n  }, [listOfMessages]);\r\n  \r\n  const [deleting, setDeleting] = useState(false);\r\n  const setDeletingHandler = () => {\r\n    setDeleting(!deleting);\r\n  }\r\n\r\n  // якогось хуя useRef не працює якщо useState з boolean\r\n  const onDeletePress = () => {\r\n    console.log('hohnpjopo');\r\n    setListOfMessages([...listOfMessages.filter(m => m.messageId!=messageID)]);\r\n    setDeleting(!deleting);\r\n  }\r\n\r\n  const handleMessageMenuPress = useCallback(() => {\r\n    setMessageMenuVisible(false);\r\n    setMessageMenuVisisbleAppearence(false);\r\n  }, []);\r\n  \r\n  console.log('djapowjdpoa');\r\n  const mes = listOfMessages.find(m => m.messageId==messageID);\r\n  return  (\r\n      <View style={styles.dialogueContainer}>\r\n        <BackGroundGradinetView>\r\n          <MessageMenu \r\n            isUser={mes!=undefined&&mes.author.userId===user?.userId} \r\n            isVisible={messageMenuVisible} \r\n            onOverlayPress={handleMessageMenuPress} \r\n            coord={coord} \r\n            onReplyPress={replyHandler} \r\n            onEditPress={pressEditButton} \r\n            onDeletePress={setDeletingHandler} \r\n          />\r\n          <DialogueHeader navigation={navigation} />\r\n          <DialogueMessages \r\n            setMessageMenuVisible={handleMessagePressOrSwipe} \r\n            messageMenuVisisbleAppearence={messageMenuVisisbleAppearence} \r\n            messageID={messageID} \r\n            listOfMessages={listOfMessages} \r\n            isReply={isReply} \r\n            isEdit={isEdit}\r\n            author={user as User}\r\n          />\r\n          <DialogueFooter \r\n            messages={listOfMessages} \r\n            setMessages={setMessages} \r\n            isReply={isReply} \r\n            author={user}\r\n            messageID={messageID} \r\n            isEdit={isEdit} \r\n            editMessage={editMessage} \r\n            replyMessage={replyMessage} \r\n            onSendMessageOrCancelReplyAndEdit={sendMessageOrCancelReplyAndEditHandler} \r\n          />\r\n          <DeleteMessageModal \r\n            deleting={deleting} \r\n            setDeletingHandler={setDeletingHandler} \r\n            onDeletePress={onDeletePress} \r\n            message={mes} \r\n            author={user as User}\r\n          />\r\n        </BackGroundGradinetView>\r\n      </View>\r\n  );\r\n};\r\n\r\nexport default connect(null)(Dialogue);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}