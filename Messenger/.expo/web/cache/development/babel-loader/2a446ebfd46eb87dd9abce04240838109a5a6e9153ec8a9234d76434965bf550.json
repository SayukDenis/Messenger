{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { styles } from \"./Styles\";\nimport Header from \"../../SemiComponents/Header\";\nimport { user, Album } from \"../../SemiComponents/DBUser\";\nimport RightArrow from \"../../SemiComponents/Assets/Icons/RightArrow\";\nimport { tempUser } from \"../../SemiComponents/DBUser\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar NewAlbumScreen = function NewAlbumScreen(props) {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    newAlbumName = _useState2[0],\n    setNewAlbumName = _useState2[1];\n  var isValid = true;\n  return _jsxs(View, {\n    style: styles.mainContainer,\n    children: [_jsx(Header, {\n      primaryTitle: \"New album\",\n      onGoBackPress: function onGoBackPress() {\n        tempUser.selectedPhotosAndVideos = new Array();\n        props.navigation.goBack();\n      }\n    }), _jsx(TouchableOpacity, {\n      style: styles.doneButtonContainer,\n      onPress: function onPress() {\n        isValid = true;\n        if (newAlbumName.length == 0) {\n          isValid = false;\n          alert(\"Enter new album name\");\n        } else if (tempUser.selectedPhotosAndVideos.length == 0) {\n          isValid = false;\n          alert(\"Add at least 1 photo\");\n        }\n        user.albums.map(function (album) {\n          if (album.name == newAlbumName) {\n            isValid = false;\n            alert(\"This album name already exists\");\n          }\n        });\n        if (isValid) {\n          user.albums.push(new Album(newAlbumName, tempUser.selectedPhotosAndVideos[0], tempUser.selectedPhotosAndVideos));\n          user.albums.sort(function (a, b) {\n            return a.name.localeCompare(b.name);\n          });\n          props.navigation.goBack();\n          tempUser.selectedPhotosAndVideos = new Array();\n        }\n      },\n      children: _jsx(Text, {\n        style: styles.doneButtonTitle,\n        children: \"Done\"\n      })\n    }), _jsxs(View, {\n      style: {\n        top: -0.06 * Dimensions.get(\"screen\").width\n      },\n      children: [_jsx(View, {\n        style: styles.containerForSettingTitle,\n        children: _jsx(Text, {\n          style: styles.settingTitle,\n          children: \"Name\"\n        })\n      }), _jsx(View, {\n        style: styles.settingOption,\n        children: _jsx(TextInput, {\n          style: styles.newBranchNameInput,\n          onChangeText: function onChangeText(text) {\n            setNewAlbumName(text);\n          },\n          value: newAlbumName,\n          placeholder: \"Name album\",\n          maxLength: 25\n        })\n      }), _jsx(View, {\n        style: styles.containerForSettingTitle,\n        children: _jsx(Text, {\n          style: styles.settingTitle,\n          children: \"Photo\"\n        })\n      }), _jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          return props.navigation.navigate(\"GalleryScreen\");\n        },\n        style: styles.settingOption,\n        children: [_jsx(Text, {\n          style: styles.settingOptionTitle,\n          children: \"Gallery\"\n        }), _jsx(RightArrow, {\n          style: styles.settingOptionRightArrow\n        })]\n      })]\n    })]\n  });\n};\nexport default NewAlbumScreen;","map":{"version":3,"names":["React","useState","View","TouchableOpacity","Text","TextInput","Dimensions","styles","Header","user","Album","RightArrow","tempUser","jsx","_jsx","jsxs","_jsxs","NewAlbumScreen","props","_useState","_useState2","_slicedToArray","newAlbumName","setNewAlbumName","isValid","style","mainContainer","children","primaryTitle","onGoBackPress","selectedPhotosAndVideos","Array","navigation","goBack","doneButtonContainer","onPress","length","alert","albums","map","album","name","push","sort","a","b","localeCompare","doneButtonTitle","top","get","width","containerForSettingTitle","settingTitle","settingOption","newBranchNameInput","onChangeText","text","value","placeholder","maxLength","navigate","settingOptionTitle","settingOptionRightArrow"],"sources":["/home/zatibmag/Desktop/Project/Messenger/Messenger/Pages/Profiles/DialogueProfile/NewAlbumScreen/NewAlbumScreen.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  TouchableOpacity,\r\n  Text,\r\n  TextInput,\r\n  Dimensions,\r\n} from \"react-native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport { styles } from \"./Styles\";\r\nimport Header from \"../../SemiComponents/Header\";\r\nimport { user, Album, PhotoOrVideo } from \"../../SemiComponents/DBUser\";\r\nimport RightArrow from \"../../SemiComponents/Assets/Icons/RightArrow\";\r\nimport { tempUser } from \"../../SemiComponents/DBUser\";\r\n\r\ninterface NewAlbumScreenProps {\r\n  navigation: StackNavigationProp<{}>;\r\n}\r\n\r\nconst NewAlbumScreen: React.FC<NewAlbumScreenProps> = (props) => {\r\n  const [newAlbumName, setNewAlbumName] = useState(\"\");\r\n  var isValid: boolean = true;\r\n\r\n  return (\r\n    <View style={styles.mainContainer}>\r\n      <Header\r\n        primaryTitle=\"New album\"\r\n        onGoBackPress={() => {\r\n          tempUser.selectedPhotosAndVideos = new Array<PhotoOrVideo>();\r\n          props.navigation.goBack();\r\n        }}\r\n      />\r\n\r\n      {/* Done button */}\r\n      <TouchableOpacity\r\n        style={styles.doneButtonContainer}\r\n        onPress={() => {\r\n          isValid = true;\r\n\r\n          if (newAlbumName.length == 0) {\r\n            isValid = false;\r\n            alert(\"Enter new album name\");\r\n          } else if (tempUser.selectedPhotosAndVideos.length == 0) {\r\n            isValid = false;\r\n            alert(\"Add at least 1 photo\");\r\n          }\r\n\r\n          user.albums.map((album) => {\r\n            if (album.name == newAlbumName) {\r\n              isValid = false;\r\n              alert(\"This album name already exists\");\r\n            }\r\n          });\r\n\r\n          if (isValid) {\r\n            user.albums.push(\r\n              new Album(\r\n                newAlbumName,\r\n                tempUser.selectedPhotosAndVideos[0],\r\n                tempUser.selectedPhotosAndVideos\r\n              )\r\n            );\r\n\r\n            user.albums.sort((a, b) => a.name.localeCompare(b.name));\r\n\r\n            props.navigation.goBack();\r\n            tempUser.selectedPhotosAndVideos = new Array<PhotoOrVideo>();\r\n          }\r\n        }}\r\n      >\r\n        <Text style={styles.doneButtonTitle}>Done</Text>\r\n      </TouchableOpacity>\r\n\r\n      <View\r\n        style={{\r\n          top: -0.06 * Dimensions.get(\"screen\").width,\r\n        }}\r\n      >\r\n        {/* Title for name input */}\r\n        <View style={styles.containerForSettingTitle}>\r\n          <Text style={styles.settingTitle}>Name</Text>\r\n        </View>\r\n\r\n        {/* Branch name input */}\r\n        <View style={styles.settingOption}>\r\n          <TextInput\r\n            style={styles.newBranchNameInput}\r\n            onChangeText={(text: string) => {\r\n              setNewAlbumName(text);\r\n            }}\r\n            value={newAlbumName}\r\n            placeholder=\"Name album\"\r\n            maxLength={25}\r\n          />\r\n        </View>\r\n\r\n        {/* Title for Photo selection */}\r\n        <View style={styles.containerForSettingTitle}>\r\n          <Text style={styles.settingTitle}>Photo</Text>\r\n        </View>\r\n\r\n        <TouchableOpacity\r\n          onPress={() => props.navigation.navigate(\"GalleryScreen\" as never)}\r\n          style={styles.settingOption}\r\n        >\r\n          <Text style={styles.settingOptionTitle}>Gallery</Text>\r\n          <RightArrow style={styles.settingOptionRightArrow} />\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default NewAlbumScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}