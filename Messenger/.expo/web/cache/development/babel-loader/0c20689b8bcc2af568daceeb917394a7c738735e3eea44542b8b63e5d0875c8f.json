{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { footerstyles } from \"../../Styles/FooterStyle\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar FolderContainer = function FolderContainer(_ref) {\n  var containerStyle = _ref.containerStyle,\n    textStyle = _ref.textStyle,\n    text = _ref.text,\n    isSelected = _ref.isSelected,\n    onPress = _ref.onPress;\n  var handleLongPress = function handleLongPress(e) {\n    var target = e.nativeEvent;\n  };\n  return _jsx(_Fragment, {\n    children: _jsx(TouchableOpacity, {\n      activeOpacity: 1,\n      onPress: onPress,\n      onLongPress: handleLongPress,\n      children: _jsx(View, {\n        style: containerStyle,\n        children: _jsx(Text, {\n          style: isSelected ? footerstyles.selectedText : textStyle,\n          children: text\n        })\n      })\n    })\n  });\n};\nexport default FolderContainer;","map":{"version":3,"names":["React","View","Text","TouchableOpacity","footerstyles","jsx","_jsx","Fragment","_Fragment","FolderContainer","_ref","containerStyle","textStyle","text","isSelected","onPress","handleLongPress","e","target","nativeEvent","children","activeOpacity","onLongPress","style","selectedText"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/ChatList/Components/Footer containers/FolderContainer.tsx"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleProp,\r\n  ViewStyle,\r\n  TextStyle,\r\n  TouchableOpacity,\r\n  GestureResponderEvent,\r\n} from \"react-native\";\r\nimport { footerstyles } from \"../../Styles/FooterStyle\";\r\ninterface FolderProps {\r\n  containerStyle?: StyleProp<ViewStyle>; // Стиль для контейнера\r\n  textStyle?: StyleProp<TextStyle>; // Стиль для тексту\r\n  text: string;\r\n  isSelected: boolean; // Додаємо флаг для визначення, чи обрана папка\r\n  onPress: () => void; // Додаємо функцію для обробки натискання\r\n}\r\n\r\nconst FolderContainer: React.FC<FolderProps> = ({\r\n  containerStyle,\r\n  textStyle,\r\n  text,\r\n  isSelected,\r\n  onPress,\r\n}) => {\r\n  const handleLongPress = (e: GestureResponderEvent) => {\r\n    const target = e.nativeEvent;\r\n    \r\n  };\r\n  return (\r\n    <>\r\n      {}\r\n      <TouchableOpacity\r\n        activeOpacity={1}\r\n        onPress={onPress}\r\n        onLongPress={handleLongPress}\r\n      >\r\n        <View style={containerStyle}>\r\n          <Text style={isSelected ? footerstyles.selectedText : textStyle}>\r\n            {text}\r\n          </Text>\r\n        </View>\r\n      </TouchableOpacity>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FolderContainer;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAU1B,SAASC,YAAY;AAAmC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AASxD,IAAMC,eAAsC,GAAG,SAAzCA,eAAsCA,CAAAC,IAAA,EAMtC;EAAA,IALJC,cAAc,GAAAD,IAAA,CAAdC,cAAc;IACdC,SAAS,GAAAF,IAAA,CAATE,SAAS;IACTC,IAAI,GAAAH,IAAA,CAAJG,IAAI;IACJC,UAAU,GAAAJ,IAAA,CAAVI,UAAU;IACVC,OAAO,GAAAL,IAAA,CAAPK,OAAO;EAEP,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,CAAwB,EAAK;IACpD,IAAMC,MAAM,GAAGD,CAAC,CAACE,WAAW;EAE9B,CAAC;EACD,OACEb,IAAA,CAAAE,SAAA;IAAAY,QAAA,EAEEd,IAAA,CAACH,gBAAgB;MACfkB,aAAa,EAAE,CAAE;MACjBN,OAAO,EAAEA,OAAQ;MACjBO,WAAW,EAAEN,eAAgB;MAAAI,QAAA,EAE7Bd,IAAA,CAACL,IAAI;QAACsB,KAAK,EAAEZ,cAAe;QAAAS,QAAA,EAC1Bd,IAAA,CAACJ,IAAI;UAACqB,KAAK,EAAET,UAAU,GAAGV,YAAY,CAACoB,YAAY,GAAGZ,SAAU;UAAAQ,QAAA,EAC7DP;QAAI,CACD;MAAC,CACH;IAAC,CACS;EAAC,CACnB,CAAC;AAEP,CAAC;AAED,eAAeJ,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}