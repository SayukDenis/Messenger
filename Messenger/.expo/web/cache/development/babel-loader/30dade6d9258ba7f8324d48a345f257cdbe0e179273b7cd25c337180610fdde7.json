{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport Channel from \"../../Models/Chats/Channel\";\nimport { dataSource } from \"../../local/database\";\nimport { EMessageType } from \"../../Models/EMessageType\";\nimport Message from \"../../Models/Message\";\nimport User from \"../../Models/User\";\nimport { readChats } from \"./chatOperations\";\nimport { readMessages } from \"./messageOperations\";\nimport { readUsers } from \"./usersOperations\";\nimport { saveSelfProfile } from \"./selfProfileOperations\";\nvar manager = dataSource.manager;\nexport function channelOperations() {\n  return _channelOperations.apply(this, arguments);\n}\nfunction _channelOperations() {\n  _channelOperations = _asyncToGenerator(function* () {\n    console.log('\\n\\tChannels start\\n');\n    if (!dataSource.isInitialized) yield dataSource.initialize();\n    var selfProfile = yield saveSelfProfile();\n    var user1 = new User('User1', 'nicknameChannel1');\n    user1.numberPhone = '123-456-7890';\n    user1.description = 'This is User1';\n    user1.linkToPhoto = 'https://example.com/user1photo.jpg';\n    var user2 = new User('User2', 'nicknameChannel2');\n    user2.numberPhone = '987-654-3210';\n    user2.description = 'This is User2';\n    user2.linkToPhoto = undefined;\n    var user3 = new User('User3', 'nicknameChannel3');\n    user3.numberPhone = '555-9999';\n    user3.description = undefined;\n    user3.linkToPhoto = undefined;\n    yield manager.save([user1, user2, user3]);\n    console.log('Users have been saved');\n    var channel1 = new Channel('channel1');\n    channel1.linkToPhoto = 'someLink';\n    channel1.lastWatchedMessage = [{\n      userId: user1.userId,\n      messageId: undefined\n    }];\n    channel1.auditLog = [{\n      sendTime: new Date(),\n      message: 'log1'\n    }, {\n      sendTime: new Date(),\n      message: 'log2'\n    }];\n    channel1.users = [selfProfile, user1, user2];\n    channel1.adminUserId = [1, 2];\n    yield manager.save(channel1);\n    console.log('Channel1 has been saved');\n    var channel2 = new Channel('channel2');\n    ;\n    channel2.linkToPhoto = 'someLink';\n    channel2.lastWatchedMessage = [{\n      userId: user2.userId,\n      messageId: undefined\n    }];\n    channel2.auditLog = [{\n      sendTime: new Date(),\n      message: 'log1'\n    }];\n    channel2.users = [selfProfile, user2, user3];\n    channel2.adminUserId = [2, 2];\n    yield manager.save(channel2);\n    console.log('Channel2 has been saved');\n    var channel3 = new Channel('channel3');\n    ;\n    channel3.linkToPhoto = 'someLink';\n    channel3.lastWatchedMessage = [{\n      userId: user3.userId,\n      messageId: undefined\n    }];\n    channel3.auditLog = [];\n    channel3.users = [selfProfile, user1, user2, user3];\n    channel3.adminUserId = [2, 3, 4];\n    yield manager.save(channel3);\n    console.log('Channel3 has been saved');\n    yield readChats();\n    var message1 = new Message(user1, 'content1', EMessageType.text);\n    message1.numberInChat = 1;\n    message1.chat = channel1;\n    yield manager.insert(Message, message1);\n    var message2 = new Message(user1, 'content2', EMessageType.img);\n    message2.numberInChat = 2;\n    message2.chat = channel1;\n    yield manager.insert(Message, message2);\n    var message3 = new Message(selfProfile, 'content3', EMessageType.text);\n    message3.numberInChat = 3;\n    message3.chat = channel1;\n    yield manager.insert(Message, message3);\n    var message4 = new Message(user2, 'content4', EMessageType.text);\n    message4.numberInChat = 1;\n    message4.chat = channel2;\n    yield manager.insert(Message, message4);\n    var message5 = new Message(selfProfile, 'content5', EMessageType.img);\n    message5.numberInChat = 2;\n    message5.chat = channel2;\n    yield manager.insert(Message, message5);\n    var message6 = new Message(selfProfile, 'content6', EMessageType.text);\n    message6.numberInChat = 3;\n    message6.chat = channel2;\n    yield manager.insert(Message, message6);\n    var message7 = new Message(selfProfile, 'content7', EMessageType.text);\n    message7.numberInChat = 1;\n    message7.chat = channel3;\n    yield manager.insert(Message, message7);\n    var message8 = new Message(selfProfile, 'content8', EMessageType.img);\n    message8.numberInChat = 2;\n    message8.chat = channel3;\n    yield manager.insert(Message, message8);\n    var message9 = new Message(selfProfile, 'content9', EMessageType.text);\n    message9.numberInChat = 3;\n    message9.chat = channel3;\n    yield manager.insert(Message, message9);\n    console.log('Channels have been updated');\n    yield readChats();\n    yield readMessages();\n    yield manager.remove([channel1, channel2, channel3]);\n    console.log('Channels have been deleted');\n    yield readChannels();\n    yield readChats();\n    yield readMessages();\n    yield readUsers();\n  });\n  return _channelOperations.apply(this, arguments);\n}\nexport function readChannels() {\n  return _readChannels.apply(this, arguments);\n}\nfunction _readChannels() {\n  _readChannels = _asyncToGenerator(function* () {\n    var savedChannels = yield manager.find(Channel);\n    console.log(`Channels quantity: ${savedChannels.length}`);\n    for (var channel of savedChannels) {\n      console.log(channel);\n    }\n  });\n  return _readChannels.apply(this, arguments);\n}","map":{"version":3,"names":["Channel","dataSource","EMessageType","Message","User","readChats","readMessages","readUsers","saveSelfProfile","manager","channelOperations","_channelOperations","apply","arguments","_asyncToGenerator","console","log","isInitialized","initialize","selfProfile","user1","numberPhone","description","linkToPhoto","user2","undefined","user3","save","channel1","lastWatchedMessage","userId","messageId","auditLog","sendTime","Date","message","users","adminUserId","channel2","channel3","message1","text","numberInChat","chat","insert","message2","img","message3","message4","message5","message6","message7","message8","message9","remove","readChannels","_readChannels","savedChannels","find","length","channel"],"sources":["C:/Users/T480/source/repos/Messenger/Messenger/dao/test/manualTest/channelOperations.ts"],"sourcesContent":["import Channel from \"../../Models/Chats/Channel\";\r\nimport { dataSource } from \"../../local/database\";\r\nimport { EMessageType } from \"../../Models/EMessageType\";\r\nimport Message from \"../../Models/Message\";\r\nimport User from \"../../Models/User\";\r\nimport { readChats } from \"./chatOperations\";\r\nimport { readMessages } from \"./messageOperations\";\r\nimport { readUsers } from \"./usersOperations\";\r\nimport { saveSelfProfile } from \"./selfProfileOperations\";\r\n\r\nconst manager = dataSource.manager;\r\n\r\nexport async function channelOperations() {\r\n\r\n    console.log('\\n\\tChannels start\\n');\r\n\r\n    if (!dataSource.isInitialized) await dataSource.initialize();\r\n\r\n    const selfProfile = await saveSelfProfile();\r\n\r\n    //Save Users\r\n    const user1 = new User('User1', 'nicknameChannel1');\r\n    user1.numberPhone = '123-456-7890';\r\n    user1.description = 'This is User1';\r\n    user1.linkToPhoto = 'https://example.com/user1photo.jpg';\r\n\r\n    const user2 = new User('User2', 'nicknameChannel2');\r\n    user2.numberPhone = '987-654-3210';\r\n    user2.description = 'This is User2';\r\n    user2.linkToPhoto = undefined;\r\n\r\n    const user3 = new User('User3', 'nicknameChannel3');\r\n    user3.numberPhone = '555-9999';\r\n    user3.description = undefined;\r\n    user3.linkToPhoto = undefined;\r\n    await manager.save([user1, user2, user3]);\r\n    console.log('Users have been saved');\r\n\r\n    //Save Dialogues\r\n    const channel1 = new Channel('channel1');\r\n    channel1.linkToPhoto = 'someLink';\r\n    channel1.lastWatchedMessage = [{ userId: user1.userId, messageId: undefined }];\r\n    channel1.auditLog = [{ sendTime: new Date(), message: 'log1' }, { sendTime: new Date(), message: 'log2' }];\r\n    channel1.users = [selfProfile, user1, user2];\r\n    channel1.adminUserId = [1, 2];\r\n    await manager.save(channel1);\r\n    console.log('Channel1 has been saved');\r\n\r\n    const channel2 = new Channel('channel2');;\r\n    channel2.linkToPhoto = 'someLink';\r\n    channel2.lastWatchedMessage = [{ userId: user2.userId, messageId: undefined }];\r\n    channel2.auditLog = [{ sendTime: new Date(), message: 'log1' }];\r\n    channel2.users = [selfProfile, user2, user3];\r\n    channel2.adminUserId = [2, 2];\r\n    await manager.save(channel2);\r\n    console.log('Channel2 has been saved');\r\n\r\n    const channel3 = new Channel('channel3');;\r\n    channel3.linkToPhoto = 'someLink';\r\n    channel3.lastWatchedMessage = [{ userId: user3.userId, messageId: undefined }];\r\n    channel3.auditLog = [];\r\n    channel3.users = [selfProfile, user1, user2, user3];\r\n    channel3.adminUserId = [2, 3, 4];\r\n    await manager.save(channel3);\r\n    console.log('Channel3 has been saved');\r\n\r\n    //Read\r\n    await readChats();\r\n\r\n    //Update\r\n    let message1 = new Message(user1, 'content1', EMessageType.text);\r\n    message1.numberInChat = 1;\r\n    message1.chat = channel1;\r\n    await manager.insert(Message, message1);\r\n\r\n    let message2 = new Message(user1, 'content2', EMessageType.img);\r\n    message2.numberInChat = 2;\r\n    message2.chat = channel1;\r\n    await manager.insert(Message, message2);\r\n\r\n    let message3 = new Message(selfProfile, 'content3', EMessageType.text);\r\n    message3.numberInChat = 3;\r\n    message3.chat = channel1;\r\n    await manager.insert(Message, message3);\r\n\r\n\r\n    let message4 = new Message(user2, 'content4', EMessageType.text);\r\n    message4.numberInChat = 1;\r\n    message4.chat = channel2;\r\n    await manager.insert(Message, message4);\r\n\r\n    let message5 = new Message(selfProfile, 'content5', EMessageType.img);\r\n    message5.numberInChat = 2;\r\n    message5.chat = channel2;\r\n    await manager.insert(Message, message5);\r\n\r\n    let message6 = new Message(selfProfile, 'content6', EMessageType.text);\r\n    message6.numberInChat = 3;\r\n    message6.chat = channel2;\r\n    await manager.insert(Message, message6);\r\n\r\n\r\n    let message7 = new Message(selfProfile, 'content7', EMessageType.text);\r\n    message7.numberInChat = 1;\r\n    message7.chat = channel3;\r\n    await manager.insert(Message, message7);\r\n\r\n    let message8 = new Message(selfProfile, 'content8', EMessageType.img);\r\n    message8.numberInChat = 2;\r\n    message8.chat = channel3;\r\n    await manager.insert(Message, message8);\r\n\r\n    let message9 = new Message(selfProfile, 'content9', EMessageType.text);\r\n    message9.numberInChat = 3;\r\n    message9.chat = channel3;\r\n    await manager.insert(Message, message9);\r\n\r\n    console.log('Channels have been updated');\r\n\r\n    //Read \r\n    await readChats();\r\n    await readMessages();\r\n\r\n    //Delete\r\n    await manager.remove([channel1, channel2, channel3]);\r\n    console.log('Channels have been deleted');\r\n\r\n    //Read \r\n    await readChannels();\r\n    await readChats();\r\n    await readMessages();\r\n    await readUsers();\r\n}\r\n\r\nexport async function readChannels() {\r\n    const savedChannels = await manager.find(Channel);\r\n    console.log(`Channels quantity: ${savedChannels.length}`);\r\n    for (let channel of savedChannels) {\r\n        console.log(channel);\r\n    }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}