{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { styles } from \"./Styles\";\nimport Header from \"../../GeneralComponents/Header\";\nimport { GetProfile } from \"../../DatabaseSimulation/DBFunctions\";\nimport { Album } from \"../../DatabaseSimulation/DBClasses\";\nimport RightArrow from \"../../Assets/Icons/RightArrow\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar NewAlbumScreen = function NewAlbumScreen(props) {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    newAlbumName = _useState2[0],\n    setNewAlbumName = _useState2[1];\n  var isValid = true;\n  return _jsxs(LinearGradient, {\n    colors: [\"#cf9b95\", \"#c98bb8\", \"#c37adb\"],\n    style: {\n      flex: 1\n    },\n    children: [_jsx(Header, {\n      primaryTitle: \"New album\",\n      onGoBackPress: function onGoBackPress() {\n        GetProfile().selectedPhotosAndVideos = new Array();\n        props.navigation.goBack();\n      }\n    }), _jsx(TouchableOpacity, {\n      style: styles.doneButtonContainer,\n      onPress: function onPress() {\n        isValid = true;\n        if (newAlbumName.length == 0) {\n          isValid = false;\n          alert(\"Enter new album name\");\n        } else if (GetProfile().selectedPhotosAndVideos.length == 0) {\n          isValid = false;\n          alert(\"Add at least 1 photo\");\n        }\n        GetProfile().albums.map(function (album) {\n          if (album.name == newAlbumName) {\n            isValid = false;\n            alert(\"This album name already exists\");\n          }\n        });\n        if (isValid) {\n          GetProfile().albums.push(new Album(newAlbumName, GetProfile().selectedPhotosAndVideos[0], GetProfile().selectedPhotosAndVideos));\n          GetProfile().albums.sort(function (a, b) {\n            return a.name.localeCompare(b.name);\n          });\n          props.navigation.goBack();\n          GetProfile().selectedPhotosAndVideos = new Array();\n        }\n      },\n      children: _jsx(Text, {\n        style: styles.doneButtonTitle,\n        children: \"Done\"\n      })\n    }), _jsxs(View, {\n      style: {\n        top: -0.06 * Dimensions.get(\"screen\").width\n      },\n      children: [_jsx(View, {\n        style: styles.containerForSettingTitle,\n        children: _jsx(Text, {\n          style: styles.settingTitle,\n          children: \"Name\"\n        })\n      }), _jsxs(View, {\n        style: styles.settingOption,\n        children: [_jsx(LinearGradient, {\n          colors: [\"#cf9b95\", \"#c98bb8\", \"#c37adb\"],\n          style: styles.linearGradient\n        }), _jsx(TextInput, {\n          style: styles.newBranchNameInput,\n          onChangeText: function onChangeText(text) {\n            setNewAlbumName(text);\n          },\n          value: newAlbumName,\n          placeholder: \"Name album\",\n          maxLength: 25\n        })]\n      }), _jsx(View, {\n        style: styles.containerForSettingTitle,\n        children: _jsx(Text, {\n          style: styles.settingTitle,\n          children: \"Photo\"\n        })\n      }), _jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          return props.navigation.navigate(\"GalleryScreen\");\n        },\n        style: styles.settingOption,\n        children: [_jsx(LinearGradient, {\n          colors: [\"#cf9b95\", \"#c98bb8\", \"#c37adb\"],\n          style: styles.linearGradient\n        }), _jsx(Text, {\n          style: styles.settingOptionTitle,\n          children: \"Gallery\"\n        }), _jsx(RightArrow, {\n          style: styles.settingOptionRightArrow\n        })]\n      })]\n    })]\n  });\n};\nexport default NewAlbumScreen;","map":{"version":3,"names":["React","useState","View","TouchableOpacity","Text","TextInput","Dimensions","styles","Header","GetProfile","Album","RightArrow","LinearGradient","jsx","_jsx","jsxs","_jsxs","NewAlbumScreen","props","_useState","_useState2","_slicedToArray","newAlbumName","setNewAlbumName","isValid","colors","style","flex","children","primaryTitle","onGoBackPress","selectedPhotosAndVideos","Array","navigation","goBack","doneButtonContainer","onPress","length","alert","albums","map","album","name","push","sort","a","b","localeCompare","doneButtonTitle","top","get","width","containerForSettingTitle","settingTitle","settingOption","linearGradient","newBranchNameInput","onChangeText","text","value","placeholder","maxLength","navigate","settingOptionTitle","settingOptionRightArrow"],"sources":["C:/Users/T480/source/repos/Messenger/Messenger/Pages/Profiles/SemiComponents/Screens/NewAlbumScreen/NewAlbumScreen.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  TouchableOpacity,\r\n  Text,\r\n  TextInput,\r\n  Dimensions,\r\n} from \"react-native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport { styles } from \"./Styles\";\r\nimport Header from \"../../GeneralComponents/Header\";\r\nimport { GetProfile } from \"../../DatabaseSimulation/DBFunctions\";\r\nimport { Album, PhotoOrVideo } from \"../../DatabaseSimulation/DBClasses\";\r\nimport RightArrow from \"../../Assets/Icons/RightArrow\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\n\r\ninterface NewAlbumScreenProps {\r\n  navigation: StackNavigationProp<{}>;\r\n}\r\n\r\nconst NewAlbumScreen: React.FC<NewAlbumScreenProps> = (props) => {\r\n  const [newAlbumName, setNewAlbumName] = useState(\"\");\r\n  var isValid: boolean = true;\r\n\r\n  return (\r\n    <LinearGradient\r\n      colors={[\"#cf9b95\", \"#c98bb8\", \"#c37adb\"]}\r\n      style={{ flex: 1 }}\r\n    >\r\n      <Header\r\n        primaryTitle=\"New album\"\r\n        onGoBackPress={() => {\r\n          GetProfile().selectedPhotosAndVideos = new Array<PhotoOrVideo>();\r\n          props.navigation.goBack();\r\n        }}\r\n      />\r\n\r\n      {/* Done button */}\r\n      <TouchableOpacity\r\n        style={styles.doneButtonContainer}\r\n        onPress={() => {\r\n          isValid = true;\r\n\r\n          if (newAlbumName.length == 0) {\r\n            isValid = false;\r\n            alert(\"Enter new album name\");\r\n          } else if (GetProfile().selectedPhotosAndVideos.length == 0) {\r\n            isValid = false;\r\n            alert(\"Add at least 1 photo\");\r\n          }\r\n\r\n          GetProfile().albums.map((album) => {\r\n            if (album.name == newAlbumName) {\r\n              isValid = false;\r\n              alert(\"This album name already exists\");\r\n            }\r\n          });\r\n\r\n          if (isValid) {\r\n            GetProfile().albums.push(\r\n              new Album(\r\n                newAlbumName,\r\n                GetProfile().selectedPhotosAndVideos[0],\r\n                GetProfile().selectedPhotosAndVideos\r\n              )\r\n            );\r\n\r\n            GetProfile().albums.sort((a, b) => a.name.localeCompare(b.name));\r\n\r\n            props.navigation.goBack();\r\n            GetProfile().selectedPhotosAndVideos = new Array<PhotoOrVideo>();\r\n          }\r\n        }}\r\n      >\r\n        <Text style={styles.doneButtonTitle}>Done</Text>\r\n      </TouchableOpacity>\r\n\r\n      <View\r\n        style={{\r\n          top: -0.06 * Dimensions.get(\"screen\").width,\r\n        }}\r\n      >\r\n        {/* Title for name input */}\r\n        <View style={styles.containerForSettingTitle}>\r\n          <Text style={styles.settingTitle}>Name</Text>\r\n        </View>\r\n\r\n        {/* Branch name input */}\r\n        <View style={styles.settingOption}>\r\n          <LinearGradient\r\n            colors={[\"#cf9b95\", \"#c98bb8\", \"#c37adb\"]}\r\n            style={styles.linearGradient}\r\n          />\r\n          <TextInput\r\n            style={styles.newBranchNameInput}\r\n            onChangeText={(text: string) => {\r\n              setNewAlbumName(text);\r\n            }}\r\n            value={newAlbumName}\r\n            placeholder=\"Name album\"\r\n            maxLength={25}\r\n          />\r\n        </View>\r\n\r\n        {/* Title for Photo selection */}\r\n        <View style={styles.containerForSettingTitle}>\r\n          <Text style={styles.settingTitle}>Photo</Text>\r\n        </View>\r\n\r\n        <TouchableOpacity\r\n          onPress={() => props.navigation.navigate(\"GalleryScreen\" as never)}\r\n          style={styles.settingOption}\r\n        >\r\n          <LinearGradient\r\n            colors={[\"#cf9b95\", \"#c98bb8\", \"#c37adb\"]}\r\n            style={styles.linearGradient}\r\n          />\r\n          <Text style={styles.settingOptionTitle}>Gallery</Text>\r\n          <RightArrow style={styles.settingOptionRightArrow} />\r\n        </TouchableOpacity>\r\n      </View>\r\n    </LinearGradient>\r\n  );\r\n};\r\n\r\nexport default NewAlbumScreen;\r\n"],"mappings":";AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,UAAA;AASxC,SAASC,MAAM;AACf,OAAOC,MAAM;AACb,SAASC,UAAU;AACnB,SAASC,KAAK;AACd,OAAOC,UAAU;AACjB,SAASC,cAAc,QAAQ,sBAAsB;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAMtD,IAAMC,cAA6C,GAAG,SAAhDA,cAA6CA,CAAIC,KAAK,EAAK;EAC/D,IAAAC,SAAA,GAAwClB,QAAQ,CAAC,EAAE,CAAC;IAAAmB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7CG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EACpC,IAAII,OAAgB,GAAG,IAAI;EAE3B,OACER,KAAA,CAACJ,cAAc;IACba,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAE;IAC1CC,KAAK,EAAE;MAAEC,IAAI,EAAE;IAAE,CAAE;IAAAC,QAAA,GAEnBd,IAAA,CAACN,MAAM;MACLqB,YAAY,EAAC,WAAW;MACxBC,aAAa,EAAE,SAAAA,cAAA,EAAM;QACnBrB,UAAU,CAAC,CAAC,CAACsB,uBAAuB,GAAG,IAAIC,KAAK,CAAe,CAAC;QAChEd,KAAK,CAACe,UAAU,CAACC,MAAM,CAAC,CAAC;MAC3B;IAAE,CACH,CAAC,EAGFpB,IAAA,CAACX,gBAAgB;MACfuB,KAAK,EAAEnB,MAAM,CAAC4B,mBAAoB;MAClCC,OAAO,EAAE,SAAAA,QAAA,EAAM;QACbZ,OAAO,GAAG,IAAI;QAEd,IAAIF,YAAY,CAACe,MAAM,IAAI,CAAC,EAAE;UAC5Bb,OAAO,GAAG,KAAK;UACfc,KAAK,CAAC,sBAAsB,CAAC;QAC/B,CAAC,MAAM,IAAI7B,UAAU,CAAC,CAAC,CAACsB,uBAAuB,CAACM,MAAM,IAAI,CAAC,EAAE;UAC3Db,OAAO,GAAG,KAAK;UACfc,KAAK,CAAC,sBAAsB,CAAC;QAC/B;QAEA7B,UAAU,CAAC,CAAC,CAAC8B,MAAM,CAACC,GAAG,CAAC,UAACC,KAAK,EAAK;UACjC,IAAIA,KAAK,CAACC,IAAI,IAAIpB,YAAY,EAAE;YAC9BE,OAAO,GAAG,KAAK;YACfc,KAAK,CAAC,gCAAgC,CAAC;UACzC;QACF,CAAC,CAAC;QAEF,IAAId,OAAO,EAAE;UACXf,UAAU,CAAC,CAAC,CAAC8B,MAAM,CAACI,IAAI,CACtB,IAAIjC,KAAK,CACPY,YAAY,EACZb,UAAU,CAAC,CAAC,CAACsB,uBAAuB,CAAC,CAAC,CAAC,EACvCtB,UAAU,CAAC,CAAC,CAACsB,uBACf,CACF,CAAC;UAEDtB,UAAU,CAAC,CAAC,CAAC8B,MAAM,CAACK,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;YAAA,OAAKD,CAAC,CAACH,IAAI,CAACK,aAAa,CAACD,CAAC,CAACJ,IAAI,CAAC;UAAA,EAAC;UAEhExB,KAAK,CAACe,UAAU,CAACC,MAAM,CAAC,CAAC;UACzBzB,UAAU,CAAC,CAAC,CAACsB,uBAAuB,GAAG,IAAIC,KAAK,CAAe,CAAC;QAClE;MACF,CAAE;MAAAJ,QAAA,EAEFd,IAAA,CAACV,IAAI;QAACsB,KAAK,EAAEnB,MAAM,CAACyC,eAAgB;QAAApB,QAAA,EAAC;MAAI,CAAM;IAAC,CAChC,CAAC,EAEnBZ,KAAA,CAACd,IAAI;MACHwB,KAAK,EAAE;QACLuB,GAAG,EAAE,CAAC,IAAI,GAAG3C,UAAU,CAAC4C,GAAG,CAAC,QAAQ,CAAC,CAACC;MACxC,CAAE;MAAAvB,QAAA,GAGFd,IAAA,CAACZ,IAAI;QAACwB,KAAK,EAAEnB,MAAM,CAAC6C,wBAAyB;QAAAxB,QAAA,EAC3Cd,IAAA,CAACV,IAAI;UAACsB,KAAK,EAAEnB,MAAM,CAAC8C,YAAa;UAAAzB,QAAA,EAAC;QAAI,CAAM;MAAC,CACzC,CAAC,EAGPZ,KAAA,CAACd,IAAI;QAACwB,KAAK,EAAEnB,MAAM,CAAC+C,aAAc;QAAA1B,QAAA,GAChCd,IAAA,CAACF,cAAc;UACba,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAE;UAC1CC,KAAK,EAAEnB,MAAM,CAACgD;QAAe,CAC9B,CAAC,EACFzC,IAAA,CAACT,SAAS;UACRqB,KAAK,EAAEnB,MAAM,CAACiD,kBAAmB;UACjCC,YAAY,EAAE,SAAAA,aAACC,IAAY,EAAK;YAC9BnC,eAAe,CAACmC,IAAI,CAAC;UACvB,CAAE;UACFC,KAAK,EAAErC,YAAa;UACpBsC,WAAW,EAAC,YAAY;UACxBC,SAAS,EAAE;QAAG,CACf,CAAC;MAAA,CACE,CAAC,EAGP/C,IAAA,CAACZ,IAAI;QAACwB,KAAK,EAAEnB,MAAM,CAAC6C,wBAAyB;QAAAxB,QAAA,EAC3Cd,IAAA,CAACV,IAAI;UAACsB,KAAK,EAAEnB,MAAM,CAAC8C,YAAa;UAAAzB,QAAA,EAAC;QAAK,CAAM;MAAC,CAC1C,CAAC,EAEPZ,KAAA,CAACb,gBAAgB;QACfiC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMlB,KAAK,CAACe,UAAU,CAAC6B,QAAQ,CAAC,eAAwB,CAAC;QAAA,CAAC;QACnEpC,KAAK,EAAEnB,MAAM,CAAC+C,aAAc;QAAA1B,QAAA,GAE5Bd,IAAA,CAACF,cAAc;UACba,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAE;UAC1CC,KAAK,EAAEnB,MAAM,CAACgD;QAAe,CAC9B,CAAC,EACFzC,IAAA,CAACV,IAAI;UAACsB,KAAK,EAAEnB,MAAM,CAACwD,kBAAmB;UAAAnC,QAAA,EAAC;QAAO,CAAM,CAAC,EACtDd,IAAA,CAACH,UAAU;UAACe,KAAK,EAAEnB,MAAM,CAACyD;QAAwB,CAAE,CAAC;MAAA,CACrC,CAAC;IAAA,CACf,CAAC;EAAA,CACO,CAAC;AAErB,CAAC;AAED,eAAe/C,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}