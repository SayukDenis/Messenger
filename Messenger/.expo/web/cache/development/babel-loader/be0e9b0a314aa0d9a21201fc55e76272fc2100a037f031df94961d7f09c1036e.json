{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { footerstyles } from \"../../Styles/FooterStyle\";\nimport FolderModalWindow from \"./FolderModalWindow\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar FolderContainer = function FolderContainer(_ref) {\n  var containerStyle = _ref.containerStyle,\n    textStyle = _ref.textStyle,\n    folder = _ref.folder,\n    isSelected = _ref.isSelected,\n    onPress = _ref.onPress;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isVisible = _useState2[0],\n    setIsVisible = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    positionX = _useState4[0],\n    setPositionX = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    width = _useState6[0],\n    setWidth = _useState6[1];\n  var handleLongPress = function handleLongPress(e) {\n    var target = e.nativeEvent;\n    setIsVisible(true);\n    setPositionX(target.pageX);\n  };\n  return _jsxs(_Fragment, {\n    children: [isVisible ? _jsx(FolderModalWindow, {\n      folder: folder,\n      positionX: positionX\n    }) : null, _jsx(TouchableOpacity, {\n      activeOpacity: 1,\n      onPress: onPress,\n      onLongPress: handleLongPress,\n      children: _jsx(View, {\n        style: containerStyle,\n        children: _jsx(Text, {\n          style: isSelected ? footerstyles.selectedText : textStyle,\n          children: folder.name\n        })\n      })\n    })]\n  });\n};\nexport default FolderContainer;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","footerstyles","FolderModalWindow","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","FolderContainer","_ref","containerStyle","textStyle","folder","isSelected","onPress","_useState","_useState2","_slicedToArray","isVisible","setIsVisible","_useState3","_useState4","positionX","setPositionX","_useState5","_useState6","width","setWidth","handleLongPress","e","target","nativeEvent","pageX","children","activeOpacity","onLongPress","style","selectedText","name"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/ChatList/Components/Footer containers/FolderContainer.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleProp,\r\n  ViewStyle,\r\n  TextStyle,\r\n  TouchableOpacity,\r\n  GestureResponderEvent,\r\n} from \"react-native\";\r\nimport { footerstyles } from \"../../Styles/FooterStyle\";\r\nimport Folder from \"../../1HelpFullFolder/Folder\";\r\nimport FolderModalWindow from \"./FolderModalWindow\";\r\ninterface FolderProps {\r\n  containerStyle?: StyleProp<ViewStyle>; // Стиль для контейнера\r\n  textStyle?: StyleProp<TextStyle>; // Стиль для тексту\r\n  folder:Folder\r\n  isSelected: boolean; // Додаємо флаг для визначення, чи обрана папка\r\n  onPress: () => void; \r\n  wi// Додаємо функцію для обробки натискання\r\n}\r\n\r\nconst FolderContainer: React.FC<FolderProps> = ({\r\n  containerStyle,\r\n  textStyle,\r\n  folder,\r\n  isSelected,\r\n  onPress,\r\n}) => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const [positionX,setPositionX] = useState(0);\r\n  const [width,setWidth]=useState(0);\r\n  const handleLongPress = (e: GestureResponderEvent) => {\r\n    const target = e.nativeEvent;\r\n    setIsVisible(true);\r\n    setPositionX(target.pageX);\r\n  };\r\n  return (\r\n    <>\r\n      {isVisible?<FolderModalWindow folder={folder} positionX={positionX} />:null}\r\n      <TouchableOpacity\r\n        activeOpacity={1}\r\n        onPress={onPress}\r\n        onLongPress={handleLongPress}\r\n      >\r\n        <View style={containerStyle}>\r\n          <Text style={isSelected ? footerstyles.selectedText : textStyle}>\r\n            {folder.name}\r\n          </Text>\r\n        </View>\r\n      </TouchableOpacity>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FolderContainer;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAUxC,SAASC,YAAY;AAErB,OAAOC,iBAAiB;AAA4B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAUpD,IAAMC,eAAsC,GAAG,SAAzCA,eAAsCA,CAAAC,IAAA,EAMtC;EAAA,IALJC,cAAc,GAAAD,IAAA,CAAdC,cAAc;IACdC,SAAS,GAAAF,IAAA,CAATE,SAAS;IACTC,MAAM,GAAAH,IAAA,CAANG,MAAM;IACNC,UAAU,GAAAJ,IAAA,CAAVI,UAAU;IACVC,OAAO,GAAAL,IAAA,CAAPK,OAAO;EAEP,IAAAC,SAAA,GAAkCnB,QAAQ,CAAC,KAAK,CAAC;IAAAoB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1CG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAC9B,IAAAI,UAAA,GAAiCxB,QAAQ,CAAC,CAAC,CAAC;IAAAyB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,SAAS,GAAAD,UAAA;IAACE,YAAY,GAAAF,UAAA;EAC7B,IAAAG,UAAA,GAAuB5B,QAAQ,CAAC,CAAC,CAAC;IAAA6B,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA3BE,KAAK,GAAAD,UAAA;IAACE,QAAQ,GAAAF,UAAA;EACrB,IAAMG,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,CAAwB,EAAK;IACpD,IAAMC,MAAM,GAAGD,CAAC,CAACE,WAAW;IAC5BZ,YAAY,CAAC,IAAI,CAAC;IAClBI,YAAY,CAACO,MAAM,CAACE,KAAK,CAAC;EAC5B,CAAC;EACD,OACEzB,KAAA,CAAAF,SAAA;IAAA4B,QAAA,GACGf,SAAS,GAACf,IAAA,CAACF,iBAAiB;MAACW,MAAM,EAAEA,MAAO;MAACU,SAAS,EAAEA;IAAU,CAAE,CAAC,GAAC,IAAI,EAC3EnB,IAAA,CAACJ,gBAAgB;MACfmC,aAAa,EAAE,CAAE;MACjBpB,OAAO,EAAEA,OAAQ;MACjBqB,WAAW,EAAEP,eAAgB;MAAAK,QAAA,EAE7B9B,IAAA,CAACN,IAAI;QAACuC,KAAK,EAAE1B,cAAe;QAAAuB,QAAA,EAC1B9B,IAAA,CAACL,IAAI;UAACsC,KAAK,EAAEvB,UAAU,GAAGb,YAAY,CAACqC,YAAY,GAAG1B,SAAU;UAAAsB,QAAA,EAC7DrB,MAAM,CAAC0B;QAAI,CACR;MAAC,CACH;IAAC,CACS,CAAC;EAAA,CACnB,CAAC;AAEP,CAAC;AAED,eAAe9B,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}