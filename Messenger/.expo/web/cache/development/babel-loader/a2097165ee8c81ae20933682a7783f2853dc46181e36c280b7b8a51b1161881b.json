{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React from 'react';\nimport { screenHeight, screenWidth } from \"../../../../../ChatList/Constants/ConstantsForChatlist\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { CHARS_PER_LINE } from \"../../../DialogueConstants\";\nimport DialogueMessagesPinnedMessageIcon from \"../../../SVG/DialogueMessagesPinnedMessageIcon\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PinnedMessageView = function PinnedMessageView(_ref) {\n  var _pinnedMessage$conten;\n  var pinnedMessage = _ref.pinnedMessage,\n    current = _ref.current,\n    total = _ref.total;\n  if (!pinnedMessage) return null;\n  return _jsxs(View, {\n    style: {\n      position: 'absolute',\n      bottom: -screenHeight * 0.185,\n      backgroundColor: '#fff',\n      overflow: 'hidden',\n      borderRadius: 9999,\n      alignSelf: 'center',\n      alignItems: 'center'\n    },\n    children: [_jsx(LinearGradient, {\n      colors: [\"#cf9b95\", \"#c98bb8\", \"#c37adb\"],\n      locations: [0.25, 0.5, 0.75],\n      start: {\n        x: 1,\n        y: 0\n      },\n      end: {\n        x: 0,\n        y: 1\n      },\n      style: {\n        opacity: 0.7,\n        top: 0,\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        height: screenHeight,\n        width: screenWidth\n      }\n    }), _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        width: screenWidth * 0.9,\n        paddingVertical: 10,\n        paddingHorizontal: 20,\n        alignItems: 'center'\n      },\n      children: [_jsxs(Text, {\n        children: [\"Pinned message: \", (pinnedMessage == null ? void 0 : (_pinnedMessage$conten = pinnedMessage.content) == null ? void 0 : _pinnedMessage$conten.length) > CHARS_PER_LINE ? (pinnedMessage == null ? void 0 : pinnedMessage.content.slice(0, 25).trim()) + '...' : pinnedMessage == null ? void 0 : pinnedMessage.content]\n      }), _jsxs(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        children: [total > 1 && _jsxs(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'center',\n            marginRight: 12\n          },\n          children: [_jsx(Text, {\n            children: current\n          }), _jsx(View, {\n            style: {\n              width: 1.4,\n              height: '100%',\n              backgroundColor: 'black',\n              marginHorizontal: 5\n            }\n          }), _jsx(Text, {\n            children: total\n          })]\n        }), _jsx(DialogueMessagesPinnedMessageIcon, {})]\n      })]\n    })]\n  });\n};\nexport default PinnedMessageView;","map":{"version":3,"names":["React","screenHeight","screenWidth","LinearGradient","CHARS_PER_LINE","DialogueMessagesPinnedMessageIcon","jsx","_jsx","jsxs","_jsxs","PinnedMessageView","_ref","_pinnedMessage$conten","pinnedMessage","current","total","View","style","position","bottom","backgroundColor","overflow","borderRadius","alignSelf","alignItems","children","colors","locations","start","x","y","end","opacity","top","left","right","height","width","flexDirection","justifyContent","paddingVertical","paddingHorizontal","Text","content","length","slice","trim","marginRight","marginHorizontal"],"sources":["D:/project/1project/Messenger/Messenger/Pages/Chats/Dialogue/components/HelperComponents/Header/PinnedMessageView.tsx"],"sourcesContent":["import { View, Text } from 'react-native';\r\nimport React from 'react';\r\nimport { screenHeight, screenWidth } from '../../../../../ChatList/Constants/ConstantsForChatlist';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { CHARS_PER_LINE } from '../../../DialogueConstants';\r\nimport DialogueMessagesPinnedMessageIcon from '../../../SVG/DialogueMessagesPinnedMessageIcon';\r\nimport { MessageProps } from '../../../GeneralInterfaces/IMessage';\r\n\r\ninterface PinnedMessageViewProps { \r\n  pinnedMessage: MessageProps;\r\n  current: number;\r\n  total: number \r\n}\r\n\r\nconst PinnedMessageView = ({ pinnedMessage, current, total }:PinnedMessageViewProps ) => {\r\n  if(!pinnedMessage) return null;\r\n\r\n  return (\r\n    <View style={{ position: 'absolute', bottom: -screenHeight*0.185, backgroundColor: '#fff', overflow: 'hidden', borderRadius: 9999, alignSelf: 'center', alignItems: 'center' }}>\r\n        <LinearGradient\r\n            colors={[\"#cf9b95\", \"#c98bb8\", \"#c37adb\"]}\r\n            locations={[0.25, 0.5, 0.75]}\r\n            start={{ x: 1, y: 0 }}\r\n            end={{ x: 0, y: 1 }}\r\n            style={{\r\n              opacity: 0.7,\r\n              top: 0,\r\n              position: \"absolute\",\r\n              left: 0,\r\n              right: 0,\r\n              height: screenHeight,\r\n              width: screenWidth,\r\n            }}\r\n          />\r\n          <View style={{ flexDirection: 'row', justifyContent: 'space-between', width: screenWidth*0.9, paddingVertical: 10, paddingHorizontal: 20, alignItems: 'center' }}>\r\n            <Text>Pinned message: {pinnedMessage?.content?.length>CHARS_PER_LINE?pinnedMessage?.content.slice(0,25).trim()+'...':pinnedMessage?.content}</Text>\r\n            <View style={{ flexDirection: 'row' }}>\r\n              { total>1&&\r\n                <View style={{ flexDirection: 'row', justifyContent: 'center', marginRight: 12 }}>\r\n                  <Text>{current}</Text>\r\n                  <View style={{ width: 1.4, height: '100%', backgroundColor: 'black', marginHorizontal: 5 }} />\r\n                  <Text>{total}</Text>\r\n                </View>\r\n              }\r\n              <DialogueMessagesPinnedMessageIcon />\r\n            </View>\r\n          </View>\r\n      </View>\r\n  )\r\n}\r\n\r\nexport default PinnedMessageView;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}