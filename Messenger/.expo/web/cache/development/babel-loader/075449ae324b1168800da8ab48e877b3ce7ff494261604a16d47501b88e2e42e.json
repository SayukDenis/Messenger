{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { listOfChatsStyle } from \"../../Styles/ListOfChatsStyle\";\nimport LastMessageStatus from \"./LastMessageStatus\";\nimport ModeActivity from \"../Status Content/ModeActivity\";\nimport { RectButton } from \"react-native-gesture-handler\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  screenWidth = _Dimensions$get.width,\n  screenHeight = _Dimensions$get.height;\nvar ChatContainer = function (_React$Component) {\n  _inherits(ChatContainer, _React$Component);\n  var _super = _createSuper(ChatContainer);\n  function ChatContainer(props) {\n    var _this;\n    _classCallCheck(this, ChatContainer);\n    _this = _super.call(this, props);\n    _this.handlePress = function () {\n      console.log('Кнопку натиснули');\n    };\n    _this.handleLongPress = function () {\n      console.log('Кнопку утримують');\n    };\n    _this.renderLeftActions = function (progress, dragX) {\n      var scale = dragX.interpolate({\n        inputRange: [0, 100],\n        outputRange: [0, 1],\n        extrapolate: \"clamp\"\n      });\n      return _jsx(View, {\n        style: listOfChatsStyle.leftAction,\n        children: _jsx(Animated.Text, {\n          style: [listOfChatsStyle.actionText, {\n            transform: [{\n              scale: scale\n            }]\n          }],\n          children: \"Select\"\n        })\n      });\n    };\n    _this.renderRightActions = function (event) {\n      var progress = event.nativeEvent.contentInset.right;\n      return _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          maxWidth: screenWidth * 0.5,\n          minWidth: 150\n        },\n        children: [!_this.state.isSwiped ? _jsx(Animated.View, {\n          style: {\n            flex: 1\n          },\n          children: _jsxs(RectButton, {\n            style: [{\n              backgroundColor: \"yellow\"\n            }, listOfChatsStyle.rightAction],\n            children: [_jsx(Text, {\n              children: \"Notify\"\n            }), _jsx(Animated.View, {\n              style: {\n                width: screenWidth,\n                backgroundColor: \"yellow\",\n                position: \"absolute\",\n                zIndex: -1,\n                top: 0,\n                bottom: 0,\n                left: 0\n              }\n            })]\n          })\n        }) : _jsx(Animated.View, {\n          style: {\n            flex: 1,\n            position: \"absolute\",\n            zIndex: -1\n          },\n          children: _jsxs(RectButton, {\n            style: [{\n              backgroundColor: \"yellow\"\n            }, listOfChatsStyle.rightAction],\n            children: [_jsx(Text, {\n              children: \"Notify\"\n            }), _jsx(Animated.View, {\n              style: {\n                width: screenWidth,\n                backgroundColor: \"yellow\",\n                position: \"absolute\",\n                zIndex: -1,\n                top: 0,\n                bottom: 0,\n                left: 0\n              }\n            })]\n          })\n        }), _jsxs(Animated.View, {\n          style: {\n            flex: 1\n          },\n          children: [_jsx(RectButton, {\n            style: [{\n              backgroundColor: \"red\"\n            }, listOfChatsStyle.rightAction],\n            children: _jsx(Text, {\n              children: \"Delete\"\n            })\n          }), _jsx(Animated.View, {\n            style: {\n              width: screenWidth * 1.5,\n              backgroundColor: \"red\",\n              position: \"absolute\",\n              zIndex: -1,\n              top: 0,\n              bottom: 0,\n              left: 0\n            }\n          })]\n        })]\n      });\n    };\n    _this.state = {\n      isSwiped: false\n    };\n    _this.chat = props.chat;\n    _this.lastMessage = _this.chat.listOfMessages.length > 0 ? _this.chat.listOfMessages[_this.chat.listOfMessages.length - 1] : undefined;\n    _this.panResponderRight = PanResponder.create({\n      onPanResponderMove: function onPanResponderMove(e, gestureState) {\n        console.log(10);\n      },\n      onStartShouldSetPanResponder: function onStartShouldSetPanResponder(evt, gestureState) {\n        return true;\n      },\n      onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(event, gesture) {\n        if ((gesture == null ? void 0 : gesture.moveX) > (gesture == null ? void 0 : gesture.moveY)) {\n          return false;\n        }\n        return true;\n      },\n      onPanResponderRelease: function onPanResponderRelease() {}\n    });\n    return _this;\n  }\n  _createClass(ChatContainer, [{\n    key: \"setIsSwiped\",\n    value: function setIsSwiped(isSwiped) {\n      this.setState({\n        isSwiped: isSwiped\n      });\n    }\n  }, {\n    key: \"formattedTime\",\n    value: function formattedTime() {\n      if (!this.lastMessage) return '';\n      var now = new Date();\n      var timeDiff = now.getTime() - this.lastMessage.timeOfSend.getTime();\n      var dayInMilliseconds = 24 * 60 * 60 * 1000;\n      var weekInMilliseconds = 7 * dayInMilliseconds;\n      var yearInMilliseconds = 365 * dayInMilliseconds;\n      var minutes = this.lastMessage.timeOfSend.getMinutes();\n      var hours = this.lastMessage.timeOfSend.getHours();\n      var day = this.lastMessage.timeOfSend.getDate();\n      var month = this.lastMessage.timeOfSend.getMonth();\n      var minutesString = minutes < 10 ? `0${minutes}` : minutes.toString();\n      var hoursString = hours < 10 ? `0${hours}` : hours.toString();\n      var daySting = day < 10 ? `0${day}` : day.toString();\n      var monthString = month < 10 ? `0${month}` : month.toString();\n      if (timeDiff < dayInMilliseconds) {\n        return `${hoursString}:${minutesString}`;\n      } else if (timeDiff < weekInMilliseconds) {\n        var daysOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n        var dayOfWeek = daysOfWeek[this.lastMessage.timeOfSend.getDay()];\n        return dayOfWeek.slice(0, 3);\n      } else if (timeDiff < yearInMilliseconds) {\n        return `${daySting}.${monthString}`;\n      } else {\n        return `${daySting}.${monthString}.${this.lastMessage.timeOfSend.getFullYear() - 2000}`;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$lastMessage;\n      return _jsx(View, {\n        children: _jsxs(TouchableOpacity, {\n          onPress: this.handlePress,\n          onLongPress: this.handleLongPress,\n          pressRetentionOffset: {\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0\n          },\n          activeOpacity: 1,\n          children: [_jsx(View, {\n            style: [listOfChatsStyle.helpContainer, {\n              marginRight: screenWidth * 0.1\n            }]\n          }), _jsxs(ScrollView, {\n            over: true,\n            horizontal: true,\n            showsHorizontalScrollIndicator: false,\n            onScroll: this.renderRightActions,\n            scrollEventThrottle: 50,\n            children: [_jsxs(View, _objectSpread(_objectSpread({\n              style: listOfChatsStyle.chatcontainer\n            }, this.panResponderRight.panHandlers), {}, {\n              children: [_jsxs(View, {\n                style: [listOfChatsStyle.imageContainer],\n                children: [_jsx(Image, {\n                  source: {\n                    uri: this.chat.url\n                  },\n                  style: listOfChatsStyle.image\n                }), _jsx(ModeActivity, {\n                  style: listOfChatsStyle.modeOfActivity,\n                  status: this.chat.status\n                })]\n              }), _jsxs(View, {\n                style: listOfChatsStyle.containerForOther,\n                children: [_jsxs(View, {\n                  style: listOfChatsStyle.highcontainer,\n                  children: [_jsx(View, {\n                    style: listOfChatsStyle.namecontainer,\n                    children: _jsx(Text, {\n                      style: listOfChatsStyle.nameStyle,\n                      numberOfLines: 1,\n                      ellipsizeMode: \"tail\",\n                      children: this.chat.name\n                    })\n                  }), _jsxs(View, {\n                    style: [listOfChatsStyle.rightContainer],\n                    children: [_jsx(LastMessageStatus, {\n                      chat: this.chat\n                    }), _jsx(Text, {\n                      style: listOfChatsStyle.timeStyle,\n                      children: this.formattedTime()\n                    })]\n                  })]\n                }), _jsx(View, {\n                  style: listOfChatsStyle.containerForContent,\n                  children: _jsx(Text, {\n                    style: listOfChatsStyle.contentStyle,\n                    numberOfLines: 2,\n                    ellipsizeMode: \"tail\",\n                    children: (_this$lastMessage = this.lastMessage) == null ? void 0 : _this$lastMessage.content\n                  })\n                })]\n              })]\n            })), _jsxs(View, {\n              style: {\n                flexDirection: \"row\",\n                maxWidth: screenWidth * 0.5,\n                minWidth: 150\n              },\n              children: [!this.state.isSwiped ? _jsx(Animated.View, {\n                style: {\n                  flex: 1\n                },\n                children: _jsxs(TouchableOpacity, {\n                  style: [{\n                    backgroundColor: \"yellow\"\n                  }, listOfChatsStyle.rightAction],\n                  children: [_jsx(Text, {\n                    children: \"Notify\"\n                  }), _jsx(Animated.View, {\n                    style: {\n                      width: screenWidth,\n                      backgroundColor: \"yellow\",\n                      position: \"absolute\",\n                      zIndex: -1,\n                      top: 0,\n                      bottom: 0,\n                      left: 0\n                    }\n                  })]\n                })\n              }) : _jsx(Animated.View, {\n                style: {\n                  flex: 1,\n                  position: \"absolute\",\n                  zIndex: -1\n                },\n                children: _jsxs(RectButton, {\n                  style: [{\n                    backgroundColor: \"yellow\"\n                  }, listOfChatsStyle.rightAction],\n                  children: [_jsx(Text, {\n                    children: \"Notify\"\n                  }), _jsx(Animated.View, {\n                    style: {\n                      width: screenWidth,\n                      backgroundColor: \"yellow\",\n                      position: \"absolute\",\n                      zIndex: -1,\n                      top: 0,\n                      bottom: 0,\n                      left: 0\n                    }\n                  })]\n                })\n              }), _jsxs(Animated.View, {\n                style: {\n                  flex: 1\n                },\n                children: [_jsx(TouchableOpacity, {\n                  style: [{\n                    backgroundColor: \"red\"\n                  }, listOfChatsStyle.rightAction],\n                  children: _jsx(Text, {\n                    children: \"Delete\"\n                  })\n                }), _jsx(Animated.View, {\n                  style: {\n                    width: screenWidth * 1.5,\n                    backgroundColor: \"red\",\n                    position: \"absolute\",\n                    zIndex: -1,\n                    top: 0,\n                    bottom: 0,\n                    left: 0\n                  }\n                })]\n              })]\n            })]\n          })]\n        })\n      });\n    }\n  }]);\n  return ChatContainer;\n}(React.Component);\n;\nexport default React.memo(ChatContainer);","map":{"version":3,"names":["React","View","Image","Text","TouchableOpacity","Dimensions","ScrollView","PanResponder","Animated","listOfChatsStyle","LastMessageStatus","ModeActivity","RectButton","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","screenWidth","width","screenHeight","height","ChatContainer","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","handlePress","console","log","handleLongPress","renderLeftActions","progress","dragX","scale","interpolate","inputRange","outputRange","extrapolate","style","leftAction","children","actionText","transform","renderRightActions","event","nativeEvent","contentInset","right","flexDirection","maxWidth","minWidth","state","isSwiped","flex","backgroundColor","rightAction","position","zIndex","top","bottom","left","chat","lastMessage","listOfMessages","length","undefined","panResponderRight","create","onPanResponderMove","e","gestureState","onStartShouldSetPanResponder","evt","onMoveShouldSetPanResponder","gesture","moveX","moveY","onPanResponderRelease","_createClass","key","value","setIsSwiped","setState","formattedTime","now","Date","timeDiff","getTime","timeOfSend","dayInMilliseconds","weekInMilliseconds","yearInMilliseconds","minutes","getMinutes","hours","getHours","day","getDate","month","getMonth","minutesString","toString","hoursString","daySting","monthString","daysOfWeek","dayOfWeek","getDay","slice","getFullYear","render","_this$lastMessage","onPress","onLongPress","pressRetentionOffset","activeOpacity","helpContainer","marginRight","over","horizontal","showsHorizontalScrollIndicator","onScroll","scrollEventThrottle","_objectSpread","chatcontainer","panHandlers","imageContainer","source","uri","url","image","modeOfActivity","status","containerForOther","highcontainer","namecontainer","nameStyle","numberOfLines","ellipsizeMode","name","rightContainer","timeStyle","containerForContent","contentStyle","content","Component","memo"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/ChatList/Components/List of folders containers/ChatContainer.tsx"],"sourcesContent":["import React, { Component, MutableRefObject, useMemo, useRef, useState } from 'react';\r\nimport { View, StyleSheet, Image, Text, TouchableOpacity,Dimensions,ScrollView, PanResponder,Animated, PanResponderInstance, GestureResponderEvent, LayoutChangeEvent, PointerEvent, NativeSyntheticEvent, NativeScrollEvent } from 'react-native';\r\nimport { listOfChatsStyle } from '../../Styles/ListOfChatsStyle';\r\nimport Message from '../../1HelpFullFolder/Message';\r\nimport Chat from '../../1HelpFullFolder/Chat';\r\nimport LastMessageStatus from './LastMessageStatus';\r\nimport ModeActivity from '../Status Content/ModeActivity';\r\nimport { GestureHandlerRootView, RectButton,Swipeable} from \"react-native-gesture-handler\";\r\n\r\ninterface ChatProps {\r\n  chat: Chat;\r\n}\r\ninterface ForState{\r\n  isSwiped:boolean\r\n}\r\n\r\nconst { width: screenWidth ,height:screenHeight} = Dimensions.get('window');\r\nclass ChatContainer extends React.Component<ChatProps,ForState>{\r\n  private chat:Chat;\r\n  private lastMessage: Message | undefined;\r\n  private position:any;\r\n  private panResponderRight: PanResponderInstance;\r\n  private setIsSwiped(isSwiped: boolean) {\r\n    this.setState({ isSwiped });\r\n  }\r\n  constructor(props: ChatProps) {\r\n    super(props);\r\n    this.state={\r\n      isSwiped:false,\r\n    };\r\n    this.chat=props.chat;\r\n    this.lastMessage=this.chat.listOfMessages.length > 0 ? this.chat.listOfMessages[this.chat.listOfMessages.length - 1] : undefined;\r\n    this.panResponderRight= PanResponder.create({\r\n        onPanResponderMove(e, gestureState) {\r\n          console.log(10)\r\n          \r\n        },\r\n        onStartShouldSetPanResponder:(evt,gestureState)=>true,\r\n        onMoveShouldSetPanResponder: (event, gesture) => {\r\n          if (gesture?.moveX > gesture?.moveY) {\r\n            return false;\r\n          }\r\n          return true;\r\n        },\r\n        onPanResponderRelease(){\r\n\r\n        }\r\n\r\n      })\r\n  }\r\n  private formattedTime():string {\r\n    if (!this.lastMessage) return '';\r\n    const now: Date = new Date();\r\n    const timeDiff: number = now.getTime() - this.lastMessage.timeOfSend.getTime();\r\n    const dayInMilliseconds: number = 24 * 60 * 60 * 1000;\r\n    const weekInMilliseconds: number = 7 * dayInMilliseconds;\r\n    const yearInMilliseconds: number = 365 * dayInMilliseconds;\r\n    const minutes: number = this.lastMessage.timeOfSend.getMinutes();\r\n    const hours: number = this.lastMessage.timeOfSend.getHours();\r\n    const day: number = this.lastMessage.timeOfSend.getDate();\r\n    const month: number =this.lastMessage.timeOfSend.getMonth();\r\n    const minutesString: string = minutes < 10 ? `0${minutes}` : minutes.toString();\r\n    const hoursString: string = hours < 10 ? `0${hours}` : hours.toString();\r\n    const daySting: string = day < 10 ? `0${day}` : day.toString();\r\n    const monthString: string = month < 10 ? `0${month}` : month.toString();\r\n\r\n    if (timeDiff < dayInMilliseconds) {\r\n      return `${hoursString}:${minutesString}`;\r\n    } else if (timeDiff < weekInMilliseconds) {\r\n      const daysOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n      const dayOfWeek: string = daysOfWeek[this.lastMessage.timeOfSend.getDay()];\r\n      return dayOfWeek.slice(0, 3);\r\n    } else if (timeDiff < yearInMilliseconds) {\r\n      return `${daySting}.${monthString}`;\r\n    } else {\r\n      return `${daySting}.${monthString}.${this.lastMessage.timeOfSend.getFullYear()-2000}`;\r\n    }\r\n  }\r\n  private handlePress = () => {\r\n    \r\n    console.log('Кнопку натиснули');\r\n  };\r\n  private handleLongPress = () => {\r\n    console.log('Кнопку утримують');\r\n  };\r\n  private renderLeftActions = (progress:any, dragX:any) => {\r\n    const scale=dragX.interpolate({\r\n      inputRange:[0,100],\r\n      outputRange:[0,1],\r\n      extrapolate:\"clamp\"\r\n    })\r\n    return (\r\n      <View style={listOfChatsStyle.leftAction}>\r\n        <Animated.Text style={[listOfChatsStyle.actionText,{transform:[{scale}]}]}>\r\n          Select\r\n        </Animated.Text>\r\n      </View>\r\n    )\r\n  };\r\n\r\n  \r\n  private renderRightActions= (event: NativeSyntheticEvent<NativeScrollEvent>) => {\r\n    const progress=event.nativeEvent.contentInset.right\r\n    return (\r\n      <View  style={{flexDirection:\"row\",maxWidth:screenWidth*0.5,minWidth:150}}>\r\n        {!this.state.isSwiped?<Animated.View style={{flex:1}}>\r\n          <RectButton style={[{backgroundColor:\"yellow\"},listOfChatsStyle.rightAction]}>\r\n            <Text>Notify</Text>\r\n            <Animated.View style={{width:screenWidth,backgroundColor:\"yellow\",position:\"absolute\",zIndex:-1,top:0,bottom:0,left:0}}/>\r\n          </RectButton>\r\n        </Animated.View>:<Animated.View style={{flex:1,position:\"absolute\",zIndex:-1}}>\r\n          <RectButton style={[{backgroundColor:\"yellow\"},listOfChatsStyle.rightAction]}>\r\n            <Text>Notify</Text>\r\n            <Animated.View style={{width:screenWidth,backgroundColor:\"yellow\",position:\"absolute\",zIndex:-1,top:0,bottom:0,left:0}}/>\r\n          </RectButton>\r\n        </Animated.View>}\r\n        <Animated.View style={{flex:1}}>\r\n          <RectButton style={[{backgroundColor:\"red\"},listOfChatsStyle.rightAction]}>\r\n            <Text>Delete</Text>\r\n          </RectButton>\r\n          <Animated.View style={{width:screenWidth*1.5,backgroundColor:\"red\",position:\"absolute\",zIndex:-1,top:0,bottom:0,left:0}}/>\r\n        </Animated.View>\r\n      </View>\r\n    )\r\n  };\r\n  render() {\r\n  return(\r\n  <View>\r\n  <TouchableOpacity \r\n  onPress={this.handlePress} \r\n  onLongPress={this.handleLongPress}\r\n  pressRetentionOffset={{ top: 0, left: 0, right: 0, bottom: 0 }}\r\n  activeOpacity={1}\r\n  >\r\n    \r\n    <View style={[listOfChatsStyle.helpContainer,{marginRight:screenWidth*0.1}]}/>\r\n    <ScrollView over horizontal={true} showsHorizontalScrollIndicator={false} onScroll={this.renderRightActions} scrollEventThrottle={50}>\r\n    <View   style={listOfChatsStyle.chatcontainer} {...this.panResponderRight.panHandlers}>\r\n      <View style={[listOfChatsStyle.imageContainer ]}  >\r\n      <Image source={{ uri: this.chat.url }} style={listOfChatsStyle.image}></Image>\r\n      <ModeActivity style={listOfChatsStyle.modeOfActivity} status={this.chat.status}/>\r\n      </View>\r\n      <View style={listOfChatsStyle.containerForOther}>\r\n        <View style={listOfChatsStyle.highcontainer}>\r\n          <View style={listOfChatsStyle.namecontainer}> \r\n          <Text style={listOfChatsStyle.nameStyle} numberOfLines={1} ellipsizeMode=\"tail\">{this.chat.name}</Text>\r\n          </View>\r\n          <View style={[listOfChatsStyle.rightContainer]} >\r\n            <LastMessageStatus chat={this.chat}/>\r\n             <Text style={listOfChatsStyle.timeStyle}>{this.formattedTime()}</Text>\r\n      </View>\r\n        </View>\r\n        <View style={listOfChatsStyle.containerForContent}>\r\n          <Text style={listOfChatsStyle.contentStyle} numberOfLines={2} ellipsizeMode=\"tail\">{this.lastMessage?.content}</Text>\r\n        </View>\r\n      </View>\r\n    </View>   \r\n    <View  style={{flexDirection:\"row\",maxWidth:screenWidth*0.5,minWidth:150}}>\r\n        {!this.state.isSwiped?<Animated.View style={{flex:1}}>\r\n          <TouchableOpacity style={[{backgroundColor:\"yellow\"},listOfChatsStyle.rightAction]}>\r\n            <Text>Notify</Text>\r\n            <Animated.View style={{width:screenWidth,backgroundColor:\"yellow\",position:\"absolute\",zIndex:-1,top:0,bottom:0,left:0}}/>\r\n          </TouchableOpacity>\r\n        </Animated.View>:<Animated.View style={{flex:1,position:\"absolute\",zIndex:-1}}>\r\n          <RectButton style={[{backgroundColor:\"yellow\"},listOfChatsStyle.rightAction]}>\r\n            <Text>Notify</Text>\r\n            <Animated.View style={{width:screenWidth,backgroundColor:\"yellow\",position:\"absolute\",zIndex:-1,top:0,bottom:0,left:0}}/>\r\n          </RectButton>\r\n        </Animated.View>}\r\n        <Animated.View style={{flex:1}}>\r\n          <TouchableOpacity style={[{backgroundColor:\"red\"},listOfChatsStyle.rightAction]}>\r\n            <Text>Delete</Text>\r\n          </TouchableOpacity>\r\n          <Animated.View style={{width:screenWidth*1.5,backgroundColor:\"red\",position:\"absolute\",zIndex:-1,top:0,bottom:0,left:0}}/>\r\n        </Animated.View>\r\n      </View>\r\n    </ScrollView>\r\n    \r\n    </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n};\r\n\r\n\r\nexport default React.memo(ChatContainer);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}