{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport { useAnimatedRef } from \"react-native-reanimated\";\nimport { headerstyles } from \"../Styles/HeaderStyle\";\nimport MagnifyingGlass from \"./Headers containers/MagnifyingGlass\";\nimport ModeOfEmployment from \"./Headers containers/ModeOfEmployment\";\nimport Line from \"./Headers containers/Line\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  screenWidth = _Dimensions$get.width,\n  screenHeight = _Dimensions$get.height;\nexport default function Header(_ref) {\n  var mySelfUser = _ref.mySelfUser;\n  var timeForLineAnimation = 150;\n  var rotateGradusOfLines = 45;\n  var kefOfTransform = 0.75;\n  var scrollViewRef = useAnimatedRef();\n  var topLineValue = useState(new Animated.Value(0))[0];\n  var middleLineValue = useState(new Animated.Value(1))[0];\n  var bottomLineValue = useState(new Animated.Value(0))[0];\n  var scrollX = useState(new Animated.Value(0))[0];\n  var _useState = useState(1),\n    _useState2 = _slicedToArray(_useState, 2),\n    state = _useState2[0],\n    setState = _useState2[1];\n  var topLineRotation = topLineValue.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [\"0deg\", `-${rotateGradusOfLines}deg`]\n  });\n  var bottomLineRotation = bottomLineValue.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [\"0deg\", `${rotateGradusOfLines}deg`, '']\n  });\n  var positionXOfTopLine = topLineValue.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [0, screenHeight * 0.01]\n  });\n  var positionYOfTopLine = topLineValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0]\n  });\n  var scrollXPosition = scrollX.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, -screenWidth * 0.8]\n  });\n  var hamburgerAnimation = function hamburgerAnimation(e) {\n    setState(state == 0 ? 1 : state == 1 ? 2 : state == 2 ? 0 : 0);\n    lineTransformation(e);\n  };\n  var lineTransformation = function lineTransformation(e) {\n    var firstAnimatedTopLine = Animated.timing(topLineValue, {\n      toValue: state,\n      duration: timeForLineAnimation,\n      useNativeDriver: false\n    });\n    var firstAnimatedBottomLine = Animated.timing(bottomLineValue, {\n      toValue: state,\n      duration: timeForLineAnimation,\n      useNativeDriver: false\n    });\n    var positionOfSecondCheckMarkStyle = Animated.timing(topLineValue, {});\n    Animated.timing(middleLineValue, {\n      toValue: state == 0 ? 1 : 0,\n      duration: state == 1 ? 10 : timeForLineAnimation,\n      useNativeDriver: false\n    }).start();\n    Animated.timing(scrollX, {\n      toValue: state,\n      duration: timeForLineAnimation * 1.3,\n      useNativeDriver: true,\n      easing: Easing.bezier(0, 0, 0, 0)\n    }).start();\n  };\n  return _jsxs(View, {\n    style: {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      right: 0,\n      zIndex: 5\n    },\n    children: [_jsx(View, {\n      style: headerstyles.gapContainer\n    }), _jsx(View, {\n      style: headerstyles.container,\n      children: _jsxs(View, {\n        style: [headerstyles.header],\n        children: [_jsxs(Animated.View, {\n          style: [{\n            justifyContent: \"flex-start\",\n            flexDirection: \"row\",\n            width: screenWidth * 0.96\n          }, {\n            transform: [{\n              translateX: scrollXPosition\n            }]\n          }],\n          children: [_jsx(MagnifyingGlass, {\n            style: headerstyles.magnifyingglass\n          }), _jsx(ModeOfEmployment, {}), _jsx(TouchableOpacity, {\n            onPress: hamburgerAnimation,\n            children: _jsxs(View, {\n              style: headerstyles.hamburgerview,\n              children: [_jsx(Animated.View, {\n                style: {\n                  transform: [{\n                    rotate: topLineRotation\n                  }, {\n                    translateX: positionXOfTopLine\n                  }]\n                },\n                children: _jsx(Line, {\n                  screenWidth: state == 0 ? screenWidth * kefOfTransform : screenWidth,\n                  screenHeight: screenHeight\n                })\n              }), _jsx(Animated.View, {\n                style: {\n                  opacity: middleLineValue\n                },\n                children: _jsx(Line, {\n                  screenWidth: screenWidth,\n                  screenHeight: screenHeight\n                })\n              }), _jsx(Animated.View, {\n                style: {\n                  transform: [{\n                    rotate: bottomLineRotation\n                  }, {\n                    translateX: positionXOfTopLine\n                  }]\n                },\n                children: _jsx(Line, {\n                  screenWidth: state == 0 ? screenWidth * kefOfTransform : screenWidth,\n                  screenHeight: screenHeight\n                })\n              })]\n            })\n          })]\n        }), _jsx(Animated.View, {\n          style: [{\n            width: screenWidth * 0.8,\n            backgroundColor: \"red\"\n          }, {\n            transform: [{\n              translateX: scrollXPosition\n            }]\n          }],\n          children: _jsx(View, {})\n        })]\n      })\n    })]\n  });\n}","map":{"version":3,"names":["useState","React","View","TouchableOpacity","Animated","Dimensions","Easing","useAnimatedRef","headerstyles","MagnifyingGlass","ModeOfEmployment","Line","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","screenWidth","width","screenHeight","height","Header","_ref","mySelfUser","timeForLineAnimation","rotateGradusOfLines","kefOfTransform","scrollViewRef","topLineValue","Value","middleLineValue","bottomLineValue","scrollX","_useState","_useState2","_slicedToArray","state","setState","topLineRotation","interpolate","inputRange","outputRange","bottomLineRotation","positionXOfTopLine","positionYOfTopLine","scrollXPosition","hamburgerAnimation","e","lineTransformation","firstAnimatedTopLine","timing","toValue","duration","useNativeDriver","firstAnimatedBottomLine","positionOfSecondCheckMarkStyle","start","easing","bezier","style","position","top","left","right","zIndex","children","gapContainer","container","header","justifyContent","flexDirection","transform","translateX","magnifyingglass","onPress","hamburgerview","rotate","opacity","backgroundColor"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/ChatList/Components/Header.tsx"],"sourcesContent":["import { createRef, useDebugValue, useState } from \"react\";\r\nimport React from \"react\";\r\nimport {\r\n  View,\r\n  Image,\r\n  TouchableOpacity,\r\n  GestureResponderEvent,\r\n  Animated,\r\n  Dimensions,\r\n  ScrollView,\r\n  Easing,\r\n} from \"react-native\";\r\nimport {\r\n  useAnimatedRef,\r\n  useDerivedValue,\r\n  useSharedValue,\r\n  scrollTo,\r\n} from \"react-native-reanimated\";\r\nimport { headerstyles } from \"../Styles/HeaderStyle\";\r\nimport MagnifyingGlass from \"./Headers containers/MagnifyingGlass\";\r\nimport ModeOfEmployment from \"./Headers containers/ModeOfEmployment\";\r\nimport Line from \"./Headers containers/Line\";\r\nimport MySelfUser from \"../1HelpFullFolder/MySelfUser\";\r\nconst { width: screenWidth, height: screenHeight } = Dimensions.get(\"window\");\r\nexport default function Header({ mySelfUser }: { mySelfUser: MySelfUser }) {\r\n  const timeForLineAnimation: number = 150;\r\n  const rotateGradusOfLines: number = 45;\r\n  const kefOfTransform: number = 0.75;\r\n  const scrollViewRef = useAnimatedRef<ScrollView>();\r\n  const topLineValue = useState(new Animated.Value(0))[0];\r\n  const middleLineValue = useState(new Animated.Value(1))[0];\r\n  const bottomLineValue = useState(new Animated.Value(0))[0];\r\n  const scrollX = useState(new Animated.Value(0))[0];\r\n  const [state, setState] = useState(1);\r\n  const topLineRotation = topLineValue.interpolate({\r\n    inputRange: [0, 1,2],\r\n    outputRange: [\"0deg\", `-${rotateGradusOfLines}deg`],\r\n  });\r\n  const bottomLineRotation = bottomLineValue.interpolate({\r\n    inputRange: [0, 1,2],\r\n    outputRange: [\"0deg\", `${rotateGradusOfLines}deg`,''],\r\n  });\r\n  const positionXOfTopLine = topLineValue.interpolate({\r\n    inputRange: [0, 1,2],\r\n    outputRange: [0, screenHeight * 0.01],\r\n  });\r\n\r\n  const positionYOfTopLine = topLineValue.interpolate({\r\n    inputRange: [0, 1],\r\n    outputRange: [0, 0],\r\n  });\r\n  const scrollXPosition = scrollX.interpolate({\r\n    inputRange: [0, 1],\r\n    outputRange: [0, -screenWidth*0.8]\r\n  });\r\n  const hamburgerAnimation = (e: GestureResponderEvent) => {\r\n    setState(state == 0 ? 1 : state==1?2:state==2?0:0);\r\n    lineTransformation(e);\r\n  };\r\n  const lineTransformation = (e: GestureResponderEvent) => {\r\n    const firstAnimatedTopLine=Animated.timing(topLineValue, {\r\n      toValue: state,\r\n      duration: timeForLineAnimation,\r\n      useNativeDriver: false,\r\n    });\r\n    const firstAnimatedBottomLine=Animated.timing(bottomLineValue, {\r\n      toValue: state,\r\n      duration: timeForLineAnimation,\r\n      useNativeDriver: false,\r\n    });\r\n    const positionOfSecondCheckMarkStyle=Animated.timing(topLineValue,{\r\n\r\n    })\r\n    Animated.timing(middleLineValue, {\r\n      toValue: state == 0 ? 1 : 0,\r\n      duration: state == 1 ? 10 : timeForLineAnimation, // Змінив на 1000 мс (1 секунда) для прикладу\r\n      useNativeDriver: false,\r\n    }).start();\r\n    Animated.timing(scrollX, {\r\n      toValue: state,\r\n      duration: timeForLineAnimation*1.3,\r\n      useNativeDriver: true,\r\n      easing: Easing.bezier(0,0,0,0),\r\n    }).start();\r\n    //setTimeout(function(){hamburgerAnimation(e)},5000);\r\n  };\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        zIndex: 5,\r\n      }}\r\n    >\r\n      <View style={headerstyles.gapContainer} />\r\n      <View style={headerstyles.container}>\r\n        \r\n        <View style={[headerstyles.header]}>\r\n          <Animated.View\r\n            style={[{\r\n              justifyContent: \"flex-start\",\r\n              flexDirection: \"row\",\r\n              width: screenWidth * 0.96,\r\n            },{transform:[{translateX:scrollXPosition}]}]}\r\n          >\r\n            <MagnifyingGlass style={headerstyles.magnifyingglass} />\r\n            <ModeOfEmployment />\r\n            <TouchableOpacity onPress={hamburgerAnimation}>\r\n              <View style={headerstyles.hamburgerview}>\r\n                <Animated.View\r\n                  style={{\r\n                    transform: [\r\n                      { rotate: topLineRotation },\r\n                      { translateX: positionXOfTopLine },\r\n                    ],\r\n                  }}\r\n                >\r\n                  <Line\r\n                    screenWidth={\r\n                      state == 0 ? screenWidth * kefOfTransform : screenWidth\r\n                    }\r\n                    screenHeight={screenHeight}\r\n                  />\r\n                </Animated.View>\r\n                <Animated.View style={{ opacity: middleLineValue }}>\r\n                  <Line screenWidth={screenWidth} screenHeight={screenHeight} />\r\n                </Animated.View>\r\n                <Animated.View\r\n                  style={{\r\n                    transform: [\r\n                      { rotate: bottomLineRotation },\r\n                      { translateX: positionXOfTopLine },\r\n                    ],\r\n                  }}\r\n                >\r\n                  <Line\r\n                    screenWidth={\r\n                      state == 0 ? screenWidth * kefOfTransform : screenWidth\r\n                    }\r\n                    screenHeight={screenHeight}\r\n                  />\r\n                </Animated.View>\r\n              </View>\r\n            </TouchableOpacity>\r\n          </Animated.View>\r\n          <Animated.View\r\n            style={[{ width: screenWidth * 0.8, backgroundColor: \"red\",},{transform:[{translateX:scrollXPosition}]}]}\r\n          ><View></View></Animated.View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}