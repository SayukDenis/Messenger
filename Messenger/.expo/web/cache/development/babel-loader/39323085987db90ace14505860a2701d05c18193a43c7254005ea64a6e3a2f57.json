{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleNotificationCenter from \"./StyleNotificationCenter\";\nimport ButtonForSettings from \"../../../SemiComponents/ButtonForSettings\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport SwitchButtonContainer from \"./SwitchButtonContainer/SwitchButtonContainer\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar NotificationCenter = function NotificationCenter() {\n  var ArrayOFBButt = [\"Privates Chats\", \"Group chats\", \"Channels\"];\n  var SwitchesButtForNotficationSett = [\"Text notification\", \"Sound\", \"Vibration\"];\n  var SwitchesButtForNotficationCOunter = [\"Consider channels\", \"New members\", \"Number of messages\"];\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isEnabled = _useState2[0],\n    setIsEnabled = _useState2[1];\n  var SwitchStateFunck = function SwitchStateFunck() {\n    setIsEnabled(!isEnabled);\n  };\n  return _jsxs(View, {\n    children: [_jsx(View, {\n      style: StyleNotificationCenter.articleContainer,\n      children: _jsx(Text, {\n        style: StyleNotificationCenter.articleTextStyle,\n        children: \"Notification\"\n      })\n    }), ArrayOFBButt.map(function (buttonText, index) {\n      return _jsx(View, {\n        style: {\n          marginBottom: 2\n        },\n        children: _jsx(TouchableOpacity, {\n          children: _jsx(ButtonForSettings, {\n            text: buttonText\n          })\n        }, index)\n      });\n    }), _jsx(View, {\n      style: StyleNotificationCenter.articleContainer,\n      children: _jsx(Text, {\n        style: StyleNotificationCenter.articleTextStyle,\n        children: \"Notification for Telingtik\"\n      })\n    }), SwitchesButtForNotficationSett.map(function (switchButtonText, index) {\n      return _jsx(View, {\n        style: {\n          marginBottom: 2\n        },\n        children: _jsx(TouchableOpacity, {\n          onPress: SwitchStateFunck,\n          children: _jsx(SwitchButtonContainer, {\n            text: switchButtonText,\n            switchState: isEnabled\n          })\n        }, index)\n      });\n    }), _jsx(View, {\n      style: StyleNotificationCenter.articleContainer,\n      children: _jsx(Text, {\n        style: StyleNotificationCenter.articleTextStyle,\n        children: \"Notification counter\"\n      })\n    }), SwitchesButtForNotficationCOunter.map(function (switchButtonText, index) {\n      return _jsx(View, {\n        style: {\n          marginBottom: 2\n        },\n        children: _jsx(TouchableOpacity, {\n          onPress: SwitchStateFunck,\n          children: _jsx(SwitchButtonContainer, {\n            text: switchButtonText,\n            switchState: isEnabled\n          })\n        }, index)\n      });\n    })]\n  });\n};\nexport default NotificationCenter;","map":{"version":3,"names":["React","useState","View","Text","StyleNotificationCenter","ButtonForSettings","TouchableOpacity","SwitchButtonContainer","jsx","_jsx","jsxs","_jsxs","NotificationCenter","ArrayOFBButt","SwitchesButtForNotficationSett","SwitchesButtForNotficationCOunter","_useState","_useState2","_slicedToArray","isEnabled","setIsEnabled","SwitchStateFunck","children","style","articleContainer","articleTextStyle","map","buttonText","index","marginBottom","text","switchButtonText","onPress","switchState"],"sources":["D:/project/1project/Messenger/Messenger/Pages/Settings/Notification/NotificationCenter/NorificationCenter.tsx"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport { View , Text } from \"react-native\";\r\nimport StyleNotificationCenter from \"./StyleNotificationCenter\";\r\nimport ButtonForSettings from \"../../../SemiComponents/ButtonForSettings\";\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\r\nimport SwitchButtonContainer from \"./SwitchButtonContainer/SwitchButtonContainer\";\r\n\r\nconst NotificationCenter = () => {\r\n\r\n    const ArrayOFBButt : string [] = [ \"Privates Chats\",\"Group chats\",\"Channels\"];\r\n    const SwitchesButtForNotficationSett : string[] = [\"Text notification\",\"Sound\", \"Vibration\"];\r\n    const SwitchesButtForNotficationCOunter : string[] = [\"Consider channels\",\"New members\",\"Number of messages\"] ;\r\n    const [isEnabled, setIsEnabled] = useState (false);\r\n    const SwitchStateFunck = ()=>{\r\n      setIsEnabled(!isEnabled);\r\n    }\r\n\r\n    return <View>\r\n        <View style = {StyleNotificationCenter.articleContainer}><Text style = {StyleNotificationCenter.articleTextStyle}>Notification</Text></View>\r\n        {ArrayOFBButt.map((buttonText, index) => (\r\n        <View style = {{marginBottom:2}}>\r\n           <TouchableOpacity  key={index} ><ButtonForSettings text={buttonText}  ></ButtonForSettings></TouchableOpacity>\r\n        </View>\r\n      ))}\r\n      <View style = {StyleNotificationCenter.articleContainer}><Text style = {StyleNotificationCenter.articleTextStyle}>Notification for Telingtik</Text></View>\r\n      {SwitchesButtForNotficationSett.map((switchButtonText, index) => (\r\n        <View style = {{marginBottom:2}}>\r\n            <TouchableOpacity key={index} onPress={SwitchStateFunck} ><SwitchButtonContainer text={switchButtonText} switchState= {isEnabled} ></SwitchButtonContainer></TouchableOpacity>\r\n        </View>\r\n      ))}\r\n      <View style = {StyleNotificationCenter.articleContainer}><Text style = {StyleNotificationCenter.articleTextStyle}>Notification counter</Text></View>\r\n      {SwitchesButtForNotficationCOunter.map((switchButtonText, index) => (\r\n        <View style = {{marginBottom:2}}>\r\n            <TouchableOpacity key={index} onPress={SwitchStateFunck} ><SwitchButtonContainer text={switchButtonText} switchState= {isEnabled}></SwitchButtonContainer></TouchableOpacity>\r\n        </View>\r\n      ))}\r\n    </View>\r\n\r\n}\r\n\r\nexport default NotificationCenter"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAEtC,OAAOC,uBAAuB;AAC9B,OAAOC,iBAAiB;AACxB,SAASC,gBAAgB,QAAQ,8BAA8B;AAC/D,OAAOC,qBAAqB;AAAsD,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAElF,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAA,EAAS;EAE7B,IAAMC,YAAwB,GAAG,CAAE,gBAAgB,EAAC,aAAa,EAAC,UAAU,CAAC;EAC7E,IAAMC,8BAAyC,GAAG,CAAC,mBAAmB,EAAC,OAAO,EAAE,WAAW,CAAC;EAC5F,IAAMC,iCAA4C,GAAG,CAAC,mBAAmB,EAAC,aAAa,EAAC,oBAAoB,CAAC;EAC7G,IAAAC,SAAA,GAAkCf,QAAQ,CAAE,KAAK,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3CG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAC9B,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAO;IAC3BD,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;EAED,OAAOR,KAAA,CAACT,IAAI;IAAAoB,QAAA,GACRb,IAAA,CAACP,IAAI;MAACqB,KAAK,EAAInB,uBAAuB,CAACoB,gBAAiB;MAAAF,QAAA,EAACb,IAAA,CAACN,IAAI;QAACoB,KAAK,EAAInB,uBAAuB,CAACqB,gBAAiB;QAAAH,QAAA,EAAC;MAAY,CAAM;IAAC,CAAM,CAAC,EAC3IT,YAAY,CAACa,GAAG,CAAC,UAACC,UAAU,EAAEC,KAAK;MAAA,OACpCnB,IAAA,CAACP,IAAI;QAACqB,KAAK,EAAI;UAACM,YAAY,EAAC;QAAC,CAAE;QAAAP,QAAA,EAC7Bb,IAAA,CAACH,gBAAgB;UAAAgB,QAAA,EAAeb,IAAA,CAACJ,iBAAiB;YAACyB,IAAI,EAAEH;UAAW,CAAsB;QAAC,GAAnEC,KAAqF;MAAC,CAC3G,CAAC;IAAA,CACR,CAAC,EACFnB,IAAA,CAACP,IAAI;MAACqB,KAAK,EAAInB,uBAAuB,CAACoB,gBAAiB;MAAAF,QAAA,EAACb,IAAA,CAACN,IAAI;QAACoB,KAAK,EAAInB,uBAAuB,CAACqB,gBAAiB;QAAAH,QAAA,EAAC;MAA0B,CAAM;IAAC,CAAM,CAAC,EACzJR,8BAA8B,CAACY,GAAG,CAAC,UAACK,gBAAgB,EAAEH,KAAK;MAAA,OAC1DnB,IAAA,CAACP,IAAI;QAACqB,KAAK,EAAI;UAACM,YAAY,EAAC;QAAC,CAAE;QAAAP,QAAA,EAC5Bb,IAAA,CAACH,gBAAgB;UAAa0B,OAAO,EAAEX,gBAAiB;UAAAC,QAAA,EAAEb,IAAA,CAACF,qBAAqB;YAACuB,IAAI,EAAEC,gBAAiB;YAACE,WAAW,EAAGd;UAAU,CAAyB;QAAC,GAApIS,KAAsJ;MAAC,CAC5K,CAAC;IAAA,CACR,CAAC,EACFnB,IAAA,CAACP,IAAI;MAACqB,KAAK,EAAInB,uBAAuB,CAACoB,gBAAiB;MAAAF,QAAA,EAACb,IAAA,CAACN,IAAI;QAACoB,KAAK,EAAInB,uBAAuB,CAACqB,gBAAiB;QAAAH,QAAA,EAAC;MAAoB,CAAM;IAAC,CAAM,CAAC,EACnJP,iCAAiC,CAACW,GAAG,CAAC,UAACK,gBAAgB,EAAEH,KAAK;MAAA,OAC7DnB,IAAA,CAACP,IAAI;QAACqB,KAAK,EAAI;UAACM,YAAY,EAAC;QAAC,CAAE;QAAAP,QAAA,EAC5Bb,IAAA,CAACH,gBAAgB;UAAa0B,OAAO,EAAEX,gBAAiB;UAAAC,QAAA,EAAEb,IAAA,CAACF,qBAAqB;YAACuB,IAAI,EAAEC,gBAAiB;YAACE,WAAW,EAAGd;UAAU,CAAwB;QAAC,GAAnIS,KAAqJ;MAAC,CAC3K,CAAC;IAAA,CACR,CAAC;EAAA,CACE,CAAC;AAEX,CAAC;AAED,eAAehB,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}