{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport { headerstyles } from \"../Styles/HeaderStyle\";\nimport MagnifyingGlass from \"./Headers containers/MagnifyingGlass\";\nimport ModeOfEmployment from \"./Headers containers/ModeOfEmployment\";\nimport Line from \"./Headers containers/Line\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  screenWidth = _Dimensions$get.width,\n  screenHeight = _Dimensions$get.height;\nexport default function Header(_ref) {\n  var mySelfUser = _ref.mySelfUser;\n  var timeForLineAnimation = 150 * 10;\n  var rotateGradusOfLines = 45;\n  var kefOfTransform = 0.75;\n  var topLineValue = useState(new Animated.Value(0))[0];\n  var middleLineValue = useState(new Animated.Value(1))[0];\n  var bottomLineValue = useState(new Animated.Value(0))[0];\n  var scrollX = useState(new Animated.Value(0))[0];\n  var _useState = useState(1),\n    _useState2 = _slicedToArray(_useState, 2),\n    state = _useState2[0],\n    setState = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    value = _useState4[0],\n    setValue = _useState4[1];\n  var changeValueLinearly = function changeValueLinearly(durationInSeconds) {\n    var finalValue = screenWidth;\n    var steps = screenWidth - screenWidth * kefOfTransform;\n    var stepDuration = durationInSeconds * 1000 / steps;\n    var currentStep = screenWidth * kefOfTransform;\n    var updateValue = function updateValue() {\n      if (currentStep <= steps) {\n        var newValue = finalValue / steps * currentStep;\n        setValue(newValue);\n        currentStep++;\n        setTimeout(updateValue, stepDuration);\n      }\n    };\n    updateValue();\n  };\n  var changeRiseValueLinearly = function changeRiseValueLinearly(durationInSeconds) {\n    var finalValue = screenWidth * kefOfTransform;\n    var steps = screenWidth - screenWidth * kefOfTransform;\n    var stepDuration = durationInSeconds * 1000 / steps;\n    var currentStep = 0;\n    var updateValue = function updateValue() {\n      if (currentStep >= steps) {\n        var newValue = finalValue / steps * currentStep;\n        setValue(newValue);\n        currentStep++;\n        setTimeout(updateValue, stepDuration);\n      }\n    };\n    updateValue();\n  };\n  var topLineRotation = topLineValue.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [\"0deg\", `-${rotateGradusOfLines}deg`, `-${90 + rotateGradusOfLines}deg`]\n  });\n  var bottomLineRotation = bottomLineValue.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [\"0deg\", `${rotateGradusOfLines}deg`, `${90 + rotateGradusOfLines}deg`]\n  });\n  var positionXOfTopLine = topLineValue.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [0, screenHeight * 0.01, screenHeight * 0.01]\n  });\n  var scrollXPosition = scrollX.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, -screenWidth * 0.8]\n  });\n  var hamburgerAnimation = function hamburgerAnimation(e) {\n    setState(state == 0 ? 1 : 0);\n    console.log(state);\n    lineTransformation(e);\n  };\n  var lineTransformation = function lineTransformation(e) {\n    var firstAnimatedTopLine = Animated.timing(topLineValue, {\n      toValue: state == 0 ? 2 : 1,\n      duration: timeForLineAnimation * 0.7,\n      useNativeDriver: true\n    });\n    var firstAnimatedBottomLine = Animated.timing(bottomLineValue, {\n      toValue: state == 0 ? 2 : 1,\n      duration: timeForLineAnimation * 0.7,\n      useNativeDriver: true\n    });\n    var secondAnimatedTopLine = Animated.timing(topLineValue, {\n      toValue: state == 1 ? 2 : 0,\n      duration: timeForLineAnimation,\n      useNativeDriver: true\n    });\n    var secondAnimatedBottomLine = Animated.timing(bottomLineValue, {\n      toValue: state == 1 ? 2 : 0,\n      duration: timeForLineAnimation,\n      useNativeDriver: true\n    });\n    Animated.timing(middleLineValue, {\n      toValue: state == 0 ? 1 : 0,\n      duration: state == 1 ? 10 : timeForLineAnimation,\n      useNativeDriver: true\n    }).start();\n    Animated.sequence([Animated.parallel([firstAnimatedBottomLine, firstAnimatedTopLine]), Animated.parallel([secondAnimatedBottomLine, secondAnimatedTopLine])]).start();\n    Animated.timing(scrollX, {\n      toValue: state,\n      duration: timeForLineAnimation * 1.3,\n      useNativeDriver: true,\n      easing: Easing.bezier(0, 0, 0, 0)\n    }).start();\n    changeValueLinearly(timeForLineAnimation);\n  };\n  return _jsxs(View, {\n    style: {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      right: 0,\n      zIndex: 5\n    },\n    children: [_jsx(View, {\n      style: headerstyles.gapContainer\n    }), _jsx(View, {\n      style: headerstyles.container,\n      children: _jsxs(View, {\n        style: [headerstyles.header],\n        children: [_jsxs(Animated.View, {\n          style: [{\n            justifyContent: \"flex-start\",\n            flexDirection: \"row\",\n            width: screenWidth * 0.96\n          }, {\n            transform: [{\n              translateX: scrollXPosition\n            }]\n          }],\n          children: [_jsx(MagnifyingGlass, {\n            style: headerstyles.magnifyingglass\n          }), _jsx(ModeOfEmployment, {}), _jsx(TouchableOpacity, {\n            onPress: hamburgerAnimation,\n            children: _jsxs(View, {\n              style: headerstyles.hamburgerview,\n              children: [_jsx(Animated.View, {\n                style: {\n                  transform: [{\n                    rotate: topLineRotation\n                  }, {\n                    translateX: positionXOfTopLine\n                  }]\n                },\n                children: _jsx(Line, {\n                  screenWidth: state == 0 ? screenWidth * kefOfTransform : screenWidth,\n                  screenHeight: screenHeight\n                })\n              }), _jsx(Animated.View, {\n                style: {\n                  opacity: middleLineValue\n                },\n                children: _jsx(Line, {\n                  screenWidth: screenWidth,\n                  screenHeight: screenHeight\n                })\n              }), _jsx(Animated.View, {\n                style: {\n                  transform: [{\n                    rotate: bottomLineRotation\n                  }, {\n                    translateX: positionXOfTopLine\n                  }]\n                },\n                children: _jsx(Line, {\n                  screenWidth: state == 0 ? screenWidth * kefOfTransform : screenWidth,\n                  screenHeight: screenHeight\n                })\n              })]\n            })\n          })]\n        }), _jsx(Animated.View, {\n          style: [{\n            width: screenWidth * 0.8,\n            backgroundColor: \"red\"\n          }, {\n            transform: [{\n              translateX: scrollXPosition\n            }]\n          }],\n          children: _jsx(View, {})\n        })]\n      })\n    })]\n  });\n}","map":{"version":3,"names":["useState","React","View","TouchableOpacity","Animated","Dimensions","Easing","headerstyles","MagnifyingGlass","ModeOfEmployment","Line","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","screenWidth","width","screenHeight","height","Header","_ref","mySelfUser","timeForLineAnimation","rotateGradusOfLines","kefOfTransform","topLineValue","Value","middleLineValue","bottomLineValue","scrollX","_useState","_useState2","_slicedToArray","state","setState","_useState3","_useState4","value","setValue","changeValueLinearly","durationInSeconds","finalValue","steps","stepDuration","currentStep","updateValue","newValue","setTimeout","changeRiseValueLinearly","topLineRotation","interpolate","inputRange","outputRange","bottomLineRotation","positionXOfTopLine","scrollXPosition","hamburgerAnimation","e","console","log","lineTransformation","firstAnimatedTopLine","timing","toValue","duration","useNativeDriver","firstAnimatedBottomLine","secondAnimatedTopLine","secondAnimatedBottomLine","start","sequence","parallel","easing","bezier","style","position","top","left","right","zIndex","children","gapContainer","container","header","justifyContent","flexDirection","transform","translateX","magnifyingglass","onPress","hamburgerview","rotate","opacity","backgroundColor"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/ChatList/Components/Header.tsx"],"sourcesContent":["import { createRef, useDebugValue, useState } from \"react\";\r\nimport React from \"react\";\r\nimport {\r\n  View,\r\n  Image,\r\n  TouchableOpacity,\r\n  GestureResponderEvent,\r\n  Animated,\r\n  Dimensions,\r\n  ScrollView,\r\n  Easing,\r\n} from \"react-native\";\r\nimport {\r\n  useAnimatedRef,\r\n  useDerivedValue,\r\n  useSharedValue,\r\n  scrollTo,\r\n} from \"react-native-reanimated\";\r\nimport { headerstyles } from \"../Styles/HeaderStyle\";\r\nimport MagnifyingGlass from \"./Headers containers/MagnifyingGlass\";\r\nimport ModeOfEmployment from \"./Headers containers/ModeOfEmployment\";\r\nimport Line from \"./Headers containers/Line\";\r\nimport MySelfUser from \"../1HelpFullFolder/MySelfUser\";\r\nconst { width: screenWidth, height: screenHeight } = Dimensions.get(\"window\");\r\nexport default function Header({ mySelfUser }: { mySelfUser: MySelfUser }) {\r\n  const timeForLineAnimation: number = 150*10;\r\n  const rotateGradusOfLines: number = 45;\r\n  const kefOfTransform: number = 0.75;\r\n  const topLineValue = useState(new Animated.Value(0))[0];\r\n  const middleLineValue = useState(new Animated.Value(1))[0];\r\n  const bottomLineValue = useState(new Animated.Value(0))[0];\r\n  const scrollX = useState(new Animated.Value(0))[0];\r\n  const [state, setState] = useState(1);\r\n  const [value, setValue] = useState(0);\r\n\r\n  const changeValueLinearly = (durationInSeconds) => {\r\n    const finalValue = screenWidth; \r\n    const steps = screenWidth-screenWidth*kefOfTransform; \r\n    const stepDuration = (durationInSeconds * 1000) / steps; // Ділимо час на кількість кроків\r\n\r\n    let currentStep = screenWidth* kefOfTransform;\r\n\r\n    const updateValue = () => {\r\n      if (currentStep <= steps) {\r\n        const newValue = (finalValue / steps) * currentStep;\r\n        setValue(newValue);\r\n        currentStep++;\r\n        setTimeout(updateValue, stepDuration);\r\n      }\r\n    };\r\n    updateValue();\r\n  };\r\n  const changeRiseValueLinearly = (durationInSeconds) => {\r\n    const finalValue = screenWidth*kefOfTransform; \r\n    const steps =screenWidth- screenWidth*kefOfTransform; \r\n    const stepDuration = (durationInSeconds * 1000) / steps; // Ділимо час на кількість кроків\r\n\r\n    let currentStep = 0;\r\n\r\n    const updateValue = () => {\r\n      if (currentStep >= steps) {\r\n        const newValue = (finalValue / steps) * currentStep;\r\n        setValue(newValue);\r\n        currentStep++;\r\n        setTimeout(updateValue, stepDuration);\r\n      }\r\n    };\r\n    updateValue();\r\n  };\r\n  const topLineRotation = topLineValue.interpolate({\r\n    inputRange: [0, 1,2],\r\n    outputRange: [\"0deg\", `-${rotateGradusOfLines}deg`,`-${90+rotateGradusOfLines}deg`],\r\n  });\r\n  const bottomLineRotation = bottomLineValue.interpolate({\r\n    inputRange: [0, 1,2],\r\n    outputRange: [\"0deg\", `${rotateGradusOfLines}deg`,`${90+rotateGradusOfLines}deg`],\r\n  });\r\n  const positionXOfTopLine = topLineValue.interpolate({\r\n    inputRange: [0, 1,2],\r\n    outputRange: [0, screenHeight * 0.01,screenHeight*0.01],\r\n  });\r\n  const scrollXPosition = scrollX.interpolate({\r\n    inputRange: [0, 1],\r\n    outputRange: [0, -screenWidth*0.8]\r\n  });\r\n  const hamburgerAnimation = (e: GestureResponderEvent) => {\r\n    setState(state == 0 ? 1 :0);\r\n    console.log(state)\r\n    lineTransformation(e);\r\n  };\r\n  const lineTransformation = (e: GestureResponderEvent) => {\r\n    const firstAnimatedTopLine=Animated.timing(topLineValue, {\r\n      toValue: state==0?2:1,\r\n      duration: timeForLineAnimation*0.7,\r\n      useNativeDriver: true,\r\n    });\r\n    const firstAnimatedBottomLine=Animated.timing(bottomLineValue, {\r\n      toValue: state==0?2:1,\r\n      duration: timeForLineAnimation*0.7,\r\n      useNativeDriver: true,\r\n    });\r\n    const secondAnimatedTopLine=Animated.timing(topLineValue,{\r\n      toValue:state==1?2:0,\r\n      duration:timeForLineAnimation,\r\n      useNativeDriver:true\r\n    })\r\n    const secondAnimatedBottomLine=Animated.timing(bottomLineValue,{\r\n      toValue:state==1?2:0,\r\n      duration:timeForLineAnimation,\r\n      useNativeDriver:true\r\n    })\r\n    Animated.timing(middleLineValue, {\r\n      toValue: state == 0 ? 1 : 0,\r\n      duration: state == 1 ? 10 : timeForLineAnimation, // Змінив на 1000 мс (1 секунда) для прикладу\r\n      useNativeDriver: true,\r\n    }).start();\r\n    Animated.sequence([Animated.parallel([firstAnimatedBottomLine,firstAnimatedTopLine]),Animated.parallel([secondAnimatedBottomLine,secondAnimatedTopLine])]).start()\r\n    Animated.timing(scrollX, {\r\n      toValue: state,\r\n      duration: timeForLineAnimation*1.3,\r\n      useNativeDriver: true,\r\n      easing: Easing.bezier(0,0,0,0),\r\n    }).start();\r\n    changeValueLinearly(timeForLineAnimation)\r\n   // console.log(state==2?0:1)\r\n    //setTimeout(function(){hamburgerAnimation(e)},5000);\r\n  };\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        zIndex: 5,\r\n      }}\r\n    >\r\n      <View style={headerstyles.gapContainer} />\r\n      <View style={headerstyles.container}>\r\n        \r\n        <View style={[headerstyles.header]}>\r\n          <Animated.View\r\n            style={[{\r\n              justifyContent: \"flex-start\",\r\n              flexDirection: \"row\",\r\n              width: screenWidth * 0.96,\r\n            },{transform:[{translateX:scrollXPosition}]}]}\r\n          >\r\n            <MagnifyingGlass style={headerstyles.magnifyingglass} />\r\n            <ModeOfEmployment />\r\n            <TouchableOpacity onPress={hamburgerAnimation}>\r\n              <View style={headerstyles.hamburgerview}>\r\n                <Animated.View\r\n                  style={{\r\n                    transform: [\r\n                      { rotate: topLineRotation },\r\n                      { translateX: positionXOfTopLine },\r\n                    ],\r\n                  }}\r\n                >\r\n                  <Line\r\n                    screenWidth={\r\n                      state == 0 ? screenWidth * kefOfTransform : screenWidth\r\n                    }\r\n                    screenHeight={screenHeight}\r\n                  />\r\n                </Animated.View>\r\n                <Animated.View style={{ opacity: middleLineValue }}>\r\n                  <Line screenWidth={screenWidth} screenHeight={screenHeight} />\r\n                </Animated.View>\r\n                <Animated.View\r\n                  style={{\r\n                    transform: [\r\n                      { rotate: bottomLineRotation },\r\n                      { translateX: positionXOfTopLine },\r\n                    \r\n                    ],\r\n                  }}\r\n                >\r\n                  <Line\r\n                    screenWidth={state == 0 ? screenWidth * kefOfTransform : screenWidth}\r\n                    screenHeight={screenHeight}\r\n                  />\r\n                </Animated.View>\r\n              </View>\r\n            </TouchableOpacity>\r\n          </Animated.View>\r\n          <Animated.View\r\n            style={[{ width: screenWidth * 0.8, backgroundColor: \"red\",},{transform:[{translateX:scrollXPosition}]}]}\r\n          ><View></View></Animated.View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}