{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleCentre from \"./StyleCenter\";\nimport ButtonList from \"./ButtonLIst/Buttonlist\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar Center = function Center() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isModalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var toggleModal = function toggleModal() {\n    setModalVisible(!isModalVisible);\n  };\n  return _jsxs(View, {\n    style: StyleCentre.conteiner,\n    children: [_jsx(Image, {\n      style: StyleCentre.imgStyle,\n      source: {\n        uri: 'https://www.meme-arsenal.com/memes/a297a80a2839282005e0a60135421919.jpg'\n      }\n    }), _jsx(View, {\n      style: StyleCentre.button,\n      children: _jsx(Button, {\n        title: \"Edit\"\n      })\n    }), _jsx(View, {\n      style: StyleCentre.box\n    }), _jsx(Text, {\n      style: StyleCentre.text,\n      children: \"Settings\"\n    }), _jsx(ButtonList, {}), _jsx(TouchableOpacity, {\n      style: StyleCentre.editButton,\n      children: _jsx(Text, {\n        style: StyleCentre.editButtonText,\n        onPress: toggleModal,\n        children: \"Exit\"\n      })\n    }), _jsx(Modal, {\n      animationType: \"none\",\n      transparent: true,\n      visible: isModalVisible,\n      onRequestClose: toggleModal,\n      children: _jsx(View, {\n        style: StyleCentre.conteinreModalwindow,\n        children: _jsxs(View, {\n          style: StyleCentre.modalWindow,\n          children: [_jsx(View, {\n            style: StyleCentre.modalTextConteiner,\n            children: _jsx(Text, {\n              children: \"Do you really want to log out?\"\n            })\n          }), _jsxs(View, {\n            style: StyleCentre.modalButtonsConteiner,\n            children: [_jsx(TouchableOpacity, {\n              style: StyleCentre.modalButtonAgree,\n              onPress: toggleModal,\n              children: _jsx(Text, {\n                style: StyleCentre.agreeButtonText,\n                children: \"Agree\"\n              })\n            }), _jsx(TouchableOpacity, {\n              style: StyleCentre.modalButtonDisagree,\n              onPress: toggleModal,\n              children: _jsx(Text, {\n                style: StyleCentre.disagreeButtonText,\n                children: \"Disagree\"\n              })\n            })]\n          })]\n        })\n      })\n    })]\n  });\n};\nexport default Center;","map":{"version":3,"names":["React","useState","View","Image","Button","Text","TouchableOpacity","Modal","StyleCentre","ButtonList","createStackNavigator","jsx","_jsx","jsxs","_jsxs","Stack","Center","_useState","_useState2","_slicedToArray","isModalVisible","setModalVisible","toggleModal","style","conteiner","children","imgStyle","source","uri","button","title","box","text","editButton","editButtonText","onPress","animationType","transparent","visible","onRequestClose","conteinreModalwindow","modalWindow","modalTextConteiner","modalButtonsConteiner","modalButtonAgree","agreeButtonText","modalButtonDisagree","disagreeButtonText"],"sources":["D:/project/try1/Messenger/Messenger/Pages/Settings/MainSettingPage/settingsPage/Center/Center.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport { View, Image, Button, Text,TouchableOpacity, Modal, StyleSheet  } from 'react-native';\r\nimport StyleCentre from './StyleCenter';\r\nimport ButtonList from './ButtonLIst/Buttonlist';\r\nimport StyleButtonList from './ButtonLIst/StyleButtonLIst';\r\nimport SavedmessagePage from '../../../SavedMessagePage/SavedMessagePage';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nconst Center =()=>{\r\n        const [isModalVisible, setModalVisible] = useState(false);\r\n        const toggleModal = () => {\r\n            setModalVisible(!isModalVisible);\r\n        };\r\n\r\n    return <View style={StyleCentre.conteiner} >\r\n                                <Image style={StyleCentre.imgStyle} source={{uri:'https://www.meme-arsenal.com/memes/a297a80a2839282005e0a60135421919.jpg'}}></Image>\r\n                                <View style={StyleCentre.button}><Button title =\"Edit\" ></Button></View>\r\n                                <View style={StyleCentre.box}></View>\r\n                                <Text style= {StyleCentre.text}>Settings</Text>\r\n                                <ButtonList></ButtonList>\r\n                                    <TouchableOpacity style ={StyleCentre.editButton} >\r\n                                        <Text style={StyleCentre.editButtonText} onPress={toggleModal}>Exit</Text>\r\n                                    </TouchableOpacity>           \r\n                                <Modal \r\n                                            animationType=\"none\"\r\n                                            transparent={true}\r\n                                            visible={isModalVisible}\r\n                                            onRequestClose={toggleModal}>\r\n                                            <View style={StyleCentre.conteinreModalwindow} >\r\n                                                <View style={StyleCentre.modalWindow} >  \r\n                                                    <View style={StyleCentre.modalTextConteiner} ><Text>Do you really want to log out?</Text></View>             \r\n                                                    <View style={StyleCentre.modalButtonsConteiner}>\r\n                                                            <TouchableOpacity style={StyleCentre.modalButtonAgree}  onPress={toggleModal} ><Text style={StyleCentre.agreeButtonText}>Agree</Text></TouchableOpacity>\r\n                                                            <TouchableOpacity style={StyleCentre.modalButtonDisagree}  onPress={toggleModal} ><Text style={StyleCentre.disagreeButtonText}>Disagree</Text></TouchableOpacity>\r\n                                                    </View>\r\n                                                </View>\r\n                                            </View>\r\n                                </Modal>\r\n                        </View>\r\n  \r\n}\r\n\r\nexport default Center;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}