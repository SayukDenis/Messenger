{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var RoleColorPicker = function RoleColorPicker(_ref) {\n  var onSelectColor = _ref.onSelectColor;\n  var colors = [\"black\", \"red\", \"blue\", \"green\", \"white\", \"purple\"];\n  var _useState = useState(colors[0]),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedColor = _useState2[0],\n    setSelectedColor = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    colorPaletteOpen = _useState4[0],\n    setColorPaletteOpen = _useState4[1];\n  return _jsxs(View, {\n    style: {\n      width: colorPaletteOpen ? \"95%\" : \"12%\",\n      height: colorPaletteOpen ? \"15%\" : \"6.2%\",\n      bottom: \"13.2%\",\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      backgroundColor: \"rgb(218, 182, 113)\",\n      left: colorPaletteOpen ? \"1.25%\" : \"20%\",\n      borderRadius: 5\n    },\n    children: [_jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        setColorPaletteOpen(true);\n      },\n      style: {\n        backgroundColor: colorPaletteOpen ? \"rgb(218, 182, 113)\" : colors[0],\n        width: 30,\n        height: 30,\n        borderRadius: 15,\n        left: \"16%\"\n      }\n    }), colorPaletteOpen && _jsxs(View, {\n      style: {\n        flexDirection: \"row\"\n      },\n      children: [colors.map(function (color, index) {\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            setSelectedColor(color);\n            onSelectColor(color);\n          },\n          style: {\n            backgroundColor: color,\n            width: 30,\n            height: 30,\n            borderRadius: 15,\n            margin: 5,\n            right: \"20%\",\n            bottom: \"9%\"\n          }\n        }, index);\n      }), _jsx(TouchableOpacity, {\n        style: {\n          left: \"115%\",\n          bottom: \"40%\",\n          position: \"absolute\"\n        },\n        onPress: function onPress() {\n          setColorPaletteOpen(false);\n        },\n        children: _jsx(Text, {\n          children: \"\\u2716\\uFE0F\"\n        })\n      }), _jsx(View, {\n        style: {\n          top: \"10%\",\n          backgroundColor: \"rgb(227, 192, 124)\"\n        },\n        children: _jsx(Text, {\n          style: {\n            color: selectedColor\n          },\n          children: \"Aboba\"\n        })\n      })]\n    })]\n  });\n};","map":{"version":3,"names":["React","useState","TouchableOpacity","Text","View","jsx","_jsx","jsxs","_jsxs","RoleColorPicker","_ref","onSelectColor","colors","_useState","_useState2","_slicedToArray","selectedColor","setSelectedColor","_useState3","_useState4","colorPaletteOpen","setColorPaletteOpen","style","width","height","bottom","flexDirection","alignItems","backgroundColor","left","borderRadius","children","onPress","map","color","index","margin","right","position","top"],"sources":["C:/Users/T480/source/repos/Messenger/Messenger/Pages/Profiles/GroupProfile/Role/CreateRole/RoleColor.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { TouchableOpacity, Text, View } from \"react-native\";\r\nimport { styles } from \"../../EditGroup/ProfileGroupStyles\";\r\n\r\nexport const RoleColorPicker = ({\r\n  onSelectColor,\r\n}: {\r\n  onSelectColor: (color: string) => void;\r\n}) => {\r\n  const colors = [\"black\", \"red\", \"blue\", \"green\", \"white\", \"purple\"];\r\n  const [selectedColor, setSelectedColor] = useState(colors[0]); // Вибраний колір - перший в списку\r\n\r\n  const [colorPaletteOpen, setColorPaletteOpen] = useState(false);\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        width: colorPaletteOpen ? \"95%\" : \"12%\",\r\n        height: colorPaletteOpen ? \"15%\" : \"6.2%\",\r\n        bottom: \"13.2%\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        backgroundColor: \"rgb(218, 182, 113)\", // Змініть колір фону на потрібний\r\n        left: colorPaletteOpen ? \"1.25%\" : \"20%\",\r\n        borderRadius: 5,\r\n      }}\r\n    >\r\n      <TouchableOpacity\r\n        onPress={() => {\r\n          setColorPaletteOpen(true); // Переключення стану палітри кольорів\r\n        }}\r\n        style={{\r\n          backgroundColor: colorPaletteOpen ? \"rgb(218, 182, 113)\" : colors[0],\r\n          width: 30,\r\n          height: 30,\r\n          borderRadius: 15,\r\n          left: \"16%\",\r\n        }}\r\n      ></TouchableOpacity>\r\n      {colorPaletteOpen && (\r\n        // Показувати палітру кольорів тільки якщо відкрита\r\n        <View style={{ flexDirection: \"row\" }}>\r\n          {colors.map((color, index) => (\r\n            <TouchableOpacity\r\n              key={index}\r\n              onPress={() => {\r\n                setSelectedColor(color);\r\n                onSelectColor(color);\r\n              }}\r\n              style={{\r\n                backgroundColor: color,\r\n                width: 30,\r\n                height: 30,\r\n                borderRadius: 15,\r\n                margin: 5,\r\n                right: \"20%\",\r\n                bottom: \"9%\",\r\n              }}\r\n            ></TouchableOpacity>\r\n          ))}\r\n          <TouchableOpacity\r\n            style={{\r\n              left: \"115%\",\r\n              bottom: \"40%\",\r\n              position: \"absolute\",\r\n            }}\r\n            onPress={() => {\r\n              setColorPaletteOpen(false);\r\n            }}\r\n          >\r\n            <Text>✖️</Text>\r\n          </TouchableOpacity>\r\n          <View style={{ top: \"10%\", backgroundColor: \"rgb(227, 192, 124)\" }}>\r\n            <Text style={{ color: selectedColor }}>Aboba</Text>\r\n          </View>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAIxC,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAAC,IAAA,EAItB;EAAA,IAHJC,aAAa,GAAAD,IAAA,CAAbC,aAAa;EAIb,IAAMC,MAAM,GAAG,CAAC,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,CAAC;EACnE,IAAAC,SAAA,GAA0CZ,QAAQ,CAACW,MAAM,CAAC,CAAC,CAAC,CAAC;IAAAE,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAtDG,aAAa,GAAAF,UAAA;IAAEG,gBAAgB,GAAAH,UAAA;EAEtC,IAAAI,UAAA,GAAgDjB,QAAQ,CAAC,KAAK,CAAC;IAAAkB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAxDE,gBAAgB,GAAAD,UAAA;IAAEE,mBAAmB,GAAAF,UAAA;EAE5C,OACEX,KAAA,CAACJ,IAAI;IACHkB,KAAK,EAAE;MACLC,KAAK,EAAEH,gBAAgB,GAAG,KAAK,GAAG,KAAK;MACvCI,MAAM,EAAEJ,gBAAgB,GAAG,KAAK,GAAG,MAAM;MACzCK,MAAM,EAAE,OAAO;MACfC,aAAa,EAAE,KAAK;MACpBC,UAAU,EAAE,QAAQ;MACpBC,eAAe,EAAE,oBAAoB;MACrCC,IAAI,EAAET,gBAAgB,GAAG,OAAO,GAAG,KAAK;MACxCU,YAAY,EAAE;IAChB,CAAE;IAAAC,QAAA,GAEFzB,IAAA,CAACJ,gBAAgB;MACf8B,OAAO,EAAE,SAAAA,QAAA,EAAM;QACbX,mBAAmB,CAAC,IAAI,CAAC;MAC3B,CAAE;MACFC,KAAK,EAAE;QACLM,eAAe,EAAER,gBAAgB,GAAG,oBAAoB,GAAGR,MAAM,CAAC,CAAC,CAAC;QACpEW,KAAK,EAAE,EAAE;QACTC,MAAM,EAAE,EAAE;QACVM,YAAY,EAAE,EAAE;QAChBD,IAAI,EAAE;MACR;IAAE,CACe,CAAC,EACnBT,gBAAgB,IAEfZ,KAAA,CAACJ,IAAI;MAACkB,KAAK,EAAE;QAAEI,aAAa,EAAE;MAAM,CAAE;MAAAK,QAAA,GACnCnB,MAAM,CAACqB,GAAG,CAAC,UAACC,KAAK,EAAEC,KAAK;QAAA,OACvB7B,IAAA,CAACJ,gBAAgB;UAEf8B,OAAO,EAAE,SAAAA,QAAA,EAAM;YACbf,gBAAgB,CAACiB,KAAK,CAAC;YACvBvB,aAAa,CAACuB,KAAK,CAAC;UACtB,CAAE;UACFZ,KAAK,EAAE;YACLM,eAAe,EAAEM,KAAK;YACtBX,KAAK,EAAE,EAAE;YACTC,MAAM,EAAE,EAAE;YACVM,YAAY,EAAE,EAAE;YAChBM,MAAM,EAAE,CAAC;YACTC,KAAK,EAAE,KAAK;YACZZ,MAAM,EAAE;UACV;QAAE,GAbGU,KAcY,CAAC;MAAA,CACrB,CAAC,EACF7B,IAAA,CAACJ,gBAAgB;QACfoB,KAAK,EAAE;UACLO,IAAI,EAAE,MAAM;UACZJ,MAAM,EAAE,KAAK;UACba,QAAQ,EAAE;QACZ,CAAE;QACFN,OAAO,EAAE,SAAAA,QAAA,EAAM;UACbX,mBAAmB,CAAC,KAAK,CAAC;QAC5B,CAAE;QAAAU,QAAA,EAEFzB,IAAA,CAACH,IAAI;UAAA4B,QAAA,EAAC;QAAE,CAAM;MAAC,CACC,CAAC,EACnBzB,IAAA,CAACF,IAAI;QAACkB,KAAK,EAAE;UAAEiB,GAAG,EAAE,KAAK;UAAEX,eAAe,EAAE;QAAqB,CAAE;QAAAG,QAAA,EACjEzB,IAAA,CAACH,IAAI;UAACmB,KAAK,EAAE;YAAEY,KAAK,EAAElB;UAAc,CAAE;UAAAe,QAAA,EAAC;QAAK,CAAM;MAAC,CAC/C,CAAC;IAAA,CACH,CACP;EAAA,CACG,CAAC;AAEX,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}