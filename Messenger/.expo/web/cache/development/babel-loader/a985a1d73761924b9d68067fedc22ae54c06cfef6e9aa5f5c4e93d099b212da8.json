{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { styles } from \"./Styles\";\nimport CopyIcon from \"../MainScreen/Icons/CopyIcon\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar screenWidth = Dimensions.get(\"screen\").width;\nvar screenHeight = Dimensions.get(\"screen\").height;\nvar AnimatedMessageAboutCopying = function AnimatedMessageAboutCopying(props) {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isAnimationRunning = _useState2[0],\n    setIsAnimationRunning = _useState2[1];\n  var animatedValue = useRef(new Animated.Value(0)).current;\n  var startAnimation = function startAnimation() {\n    if (!isAnimationRunning) {\n      setIsAnimationRunning(true);\n      Animated.timing(animatedValue, {\n        toValue: 1,\n        duration: 0,\n        useNativeDriver: false\n      }).start(function () {\n        setTimeout(function () {\n          setIsAnimationRunning(false);\n          props.onEnd();\n        }, 2000);\n      });\n    }\n  };\n  var resetAnimation = function resetAnimation() {\n    Animated.timing(animatedValue, {\n      toValue: 0,\n      duration: 0,\n      useNativeDriver: false\n    }).start();\n  };\n  useEffect(function () {\n    if (props.isVisible) {\n      startAnimation();\n    } else {\n      resetAnimation();\n    }\n  }, [props.isVisible]);\n  var margin = animatedValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screenHeight, 0.9 * screenHeight]\n  });\n  return _jsx(Animated.View, {\n    style: {\n      transform: [{\n        translateY: margin\n      }],\n      position: \"absolute\",\n      zIndex: 2\n    },\n    children: _jsxs(View, {\n      style: styles.containerForAnimatedMessage,\n      children: [_jsx(CopyIcon, {\n        style: styles.copyIcon\n      }), _jsx(Text, {\n        style: styles.animatedMessageText,\n        children: props.text\n      })]\n    })\n  });\n};\nexport default AnimatedMessageAboutCopying;","map":{"version":3,"names":["React","useState","useEffect","useRef","View","Animated","Text","Dimensions","styles","CopyIcon","jsx","_jsx","jsxs","_jsxs","screenWidth","get","width","screenHeight","height","AnimatedMessageAboutCopying","props","_useState","_useState2","_slicedToArray","isAnimationRunning","setIsAnimationRunning","animatedValue","Value","current","startAnimation","timing","toValue","duration","useNativeDriver","start","setTimeout","onEnd","resetAnimation","isVisible","margin","interpolate","inputRange","outputRange","style","transform","translateY","position","zIndex","children","containerForAnimatedMessage","copyIcon","animatedMessageText","text"],"sources":["C:/Users/T480/source/repos/Messenger/Messenger/Pages/Profiles/SemiComponents/Screens/AvatarsAndInfoScreen/MessageAboutCopying.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { View, Animated, Easing, Text, Dimensions } from \"react-native\";\r\nimport { styles } from \"./Styles\";\r\nimport CopyIcon from \"../MainScreen/Icons/CopyIcon\";\r\n\r\nconst screenWidth = Dimensions.get(\"screen\").width;\r\nconst screenHeight = Dimensions.get(\"screen\").height;\r\n\r\ninterface AnimatedMessageAboutCopyingProps {\r\n  isVisible: boolean;\r\n  onEnd: () => void;\r\n  text: string;\r\n}\r\n\r\nconst AnimatedMessageAboutCopying: React.FC<\r\n  AnimatedMessageAboutCopyingProps\r\n> = (props) => {\r\n  const [isAnimationRunning, setIsAnimationRunning] = useState(false);\r\n  const animatedValue = useRef(new Animated.Value(0)).current;\r\n\r\n  const startAnimation = () => {\r\n    if (!isAnimationRunning) {\r\n      setIsAnimationRunning(true);\r\n\r\n      Animated.timing(animatedValue, {\r\n        toValue: 1,\r\n        duration: 0,\r\n        useNativeDriver: false,\r\n      }).start(() => {\r\n        setTimeout(() => {\r\n          setIsAnimationRunning(false);\r\n          props.onEnd();\r\n        }, 2000);\r\n      });\r\n    }\r\n  };\r\n\r\n  const resetAnimation = () => {\r\n    Animated.timing(animatedValue, {\r\n      toValue: 0,\r\n      duration: 0,\r\n      useNativeDriver: false,\r\n    }).start();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.isVisible) {\r\n      startAnimation();\r\n    } else {\r\n      resetAnimation();\r\n    }\r\n  }, [props.isVisible]);\r\n\r\n  const margin = animatedValue.interpolate({\r\n    inputRange: [0, 1],\r\n    outputRange: [screenHeight, 0.9 * screenHeight],\r\n  });\r\n\r\n  return (\r\n    <Animated.View\r\n      style={{\r\n        transform: [\r\n          {\r\n            translateY: margin,\r\n          },\r\n        ],\r\n        position: \"absolute\",\r\n        zIndex: 2,\r\n      }}\r\n    >\r\n      <View style={styles.containerForAnimatedMessage}>\r\n        <CopyIcon style={styles.copyIcon} />\r\n        <Text style={styles.animatedMessageText}>{props.text}</Text>\r\n      </View>\r\n    </Animated.View>\r\n  );\r\n};\r\n\r\nexport default AnimatedMessageAboutCopying;\r\n"],"mappings":";AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAE3D,SAASC,MAAM;AACf,OAAOC,QAAQ;AAAqC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAEpD,IAAMC,WAAW,GAAGP,UAAU,CAACQ,GAAG,CAAC,QAAQ,CAAC,CAACC,KAAK;AAClD,IAAMC,YAAY,GAAGV,UAAU,CAACQ,GAAG,CAAC,QAAQ,CAAC,CAACG,MAAM;AAQpD,IAAMC,2BAEL,GAAG,SAFEA,2BAELA,CAAIC,KAAK,EAAK;EACb,IAAAC,SAAA,GAAoDpB,QAAQ,CAAC,KAAK,CAAC;IAAAqB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA5DG,kBAAkB,GAAAF,UAAA;IAAEG,qBAAqB,GAAAH,UAAA;EAChD,IAAMI,aAAa,GAAGvB,MAAM,CAAC,IAAIE,QAAQ,CAACsB,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO;EAE3D,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;IAC3B,IAAI,CAACL,kBAAkB,EAAE;MACvBC,qBAAqB,CAAC,IAAI,CAAC;MAE3BpB,QAAQ,CAACyB,MAAM,CAACJ,aAAa,EAAE;QAC7BK,OAAO,EAAE,CAAC;QACVC,QAAQ,EAAE,CAAC;QACXC,eAAe,EAAE;MACnB,CAAC,CAAC,CAACC,KAAK,CAAC,YAAM;QACbC,UAAU,CAAC,YAAM;UACfV,qBAAqB,CAAC,KAAK,CAAC;UAC5BL,KAAK,CAACgB,KAAK,CAAC,CAAC;QACf,CAAC,EAAE,IAAI,CAAC;MACV,CAAC,CAAC;IACJ;EACF,CAAC;EAED,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;IAC3BhC,QAAQ,CAACyB,MAAM,CAACJ,aAAa,EAAE;MAC7BK,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE,CAAC;MACXC,eAAe,EAAE;IACnB,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC;EACZ,CAAC;EAEDhC,SAAS,CAAC,YAAM;IACd,IAAIkB,KAAK,CAACkB,SAAS,EAAE;MACnBT,cAAc,CAAC,CAAC;IAClB,CAAC,MAAM;MACLQ,cAAc,CAAC,CAAC;IAClB;EACF,CAAC,EAAE,CAACjB,KAAK,CAACkB,SAAS,CAAC,CAAC;EAErB,IAAMC,MAAM,GAAGb,aAAa,CAACc,WAAW,CAAC;IACvCC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAClBC,WAAW,EAAE,CAACzB,YAAY,EAAE,GAAG,GAAGA,YAAY;EAChD,CAAC,CAAC;EAEF,OACEN,IAAA,CAACN,QAAQ,CAACD,IAAI;IACZuC,KAAK,EAAE;MACLC,SAAS,EAAE,CACT;QACEC,UAAU,EAAEN;MACd,CAAC,CACF;MACDO,QAAQ,EAAE,UAAU;MACpBC,MAAM,EAAE;IACV,CAAE;IAAAC,QAAA,EAEFnC,KAAA,CAACT,IAAI;MAACuC,KAAK,EAAEnC,MAAM,CAACyC,2BAA4B;MAAAD,QAAA,GAC9CrC,IAAA,CAACF,QAAQ;QAACkC,KAAK,EAAEnC,MAAM,CAAC0C;MAAS,CAAE,CAAC,EACpCvC,IAAA,CAACL,IAAI;QAACqC,KAAK,EAAEnC,MAAM,CAAC2C,mBAAoB;QAAAH,QAAA,EAAE5B,KAAK,CAACgC;MAAI,CAAO,CAAC;IAAA,CACxD;EAAC,CACM,CAAC;AAEpB,CAAC;AAED,eAAejC,2BAA2B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}