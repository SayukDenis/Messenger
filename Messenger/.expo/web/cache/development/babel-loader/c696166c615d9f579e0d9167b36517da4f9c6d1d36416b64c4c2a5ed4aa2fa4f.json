{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport StylePassCentre from \"./StylePasswordCenter\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PasswordCenter = function PasswordCenter() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    IsEnable = _useState2[0],\n    SetIsEnable = _useState2[1];\n  var toggleSwitch = function toggleSwitch() {\n    return SetIsEnable(function (previousState) {\n      return !previousState;\n    });\n  };\n  return _jsxs(View, {\n    style: StylePassCentre.passConteiner,\n    children: [_jsx(Switch, {\n      trackColor: {\n        false: '#767577',\n        true: '#81b0ff'\n      },\n      thumbColor: IsEnable ? '#f5dd4b' : '#f4f3f4',\n      ios_backgroundColor: \"#3e3e3e\",\n      onValueChange: toggleSwitch,\n      value: IsEnable\n    }), _jsx(TouchableOpacity, {\n      style: StylePassCentre.funcOn,\n      children: _jsx(Text, {\n        style: StylePassCentre.styleText,\n        children: \"Off lock code\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: StylePassCentre.funcOn,\n      children: _jsx(Text, {\n        style: StylePassCentre.styleText,\n        children: \"Edit lock code\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: StylePassCentre.funcOn,\n      children: _jsx(Text, {\n        style: StylePassCentre.styleText,\n        children: \"Unlock to Face or Touch id\"\n      })\n    })]\n  });\n};\nexport default PasswordCenter;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","Switch","StylePassCentre","jsx","_jsx","jsxs","_jsxs","PasswordCenter","_useState","_useState2","_slicedToArray","IsEnable","SetIsEnable","toggleSwitch","previousState","style","passConteiner","children","trackColor","false","true","thumbColor","ios_backgroundColor","onValueChange","value","funcOn","styleText"],"sources":["D:/project/try1/Messenger/Messenger/Pages/Settings/ConfidentialityPage/Password/PasswordCenter/PasswondCenter.tsx"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport { View, Text, TouchableOpacity, Switch } from \"react-native\";\r\nimport StylePassCentre from \"./StylePasswordCenter\";\r\n\r\nconst PasswordCenter =()=>{\r\n\r\n    const[IsEnable,SetIsEnable]= useState(false);\r\n    const toggleSwitch =() => SetIsEnable(previousState => !previousState)\r\n    \r\n    return<View style={StylePassCentre.passConteiner}>\r\n        <Switch\r\n        trackColor={{false: '#767577', true: '#81b0ff'}}\r\n        thumbColor={IsEnable ? '#f5dd4b' : '#f4f3f4'}\r\n        ios_backgroundColor=\"#3e3e3e\"\r\n        onValueChange={toggleSwitch}\r\n        value={IsEnable}\r\n      />\r\n        <TouchableOpacity style={StylePassCentre.funcOn} ><Text style={StylePassCentre.styleText} >Off lock code</Text></TouchableOpacity>\r\n        <TouchableOpacity style={StylePassCentre.funcOn} ><Text style={StylePassCentre.styleText} >Edit lock code</Text></TouchableOpacity>\r\n        <TouchableOpacity style={StylePassCentre.funcOn} ><Text style={StylePassCentre.styleText} >Unlock to Face or Touch id</Text></TouchableOpacity>\r\n    </View>\r\n}\r\n\r\nexport default PasswordCenter;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,MAAA;AAEtC,OAAOC,eAAe;AAA8B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpD,IAAMC,cAAc,GAAE,SAAhBA,cAAcA,CAAA,EAAM;EAEtB,IAAAC,SAAA,GAA6BX,QAAQ,CAAC,KAAK,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAtCG,QAAQ,GAAAF,UAAA;IAACG,WAAW,GAAAH,UAAA;EAC1B,IAAMI,YAAY,GAAE,SAAdA,YAAYA,CAAA;IAAA,OAAQD,WAAW,CAAC,UAAAE,aAAa;MAAA,OAAI,CAACA,aAAa;IAAA,EAAC;EAAA;EAEtE,OAAMR,KAAA,CAACR,IAAI;IAACiB,KAAK,EAAEb,eAAe,CAACc,aAAc;IAAAC,QAAA,GAC7Cb,IAAA,CAACH,MAAM;MACPiB,UAAU,EAAE;QAACC,KAAK,EAAE,SAAS;QAAEC,IAAI,EAAE;MAAS,CAAE;MAChDC,UAAU,EAAEV,QAAQ,GAAG,SAAS,GAAG,SAAU;MAC7CW,mBAAmB,EAAC,SAAS;MAC7BC,aAAa,EAAEV,YAAa;MAC5BW,KAAK,EAAEb;IAAS,CACjB,CAAC,EACAP,IAAA,CAACJ,gBAAgB;MAACe,KAAK,EAAEb,eAAe,CAACuB,MAAO;MAAAR,QAAA,EAAEb,IAAA,CAACL,IAAI;QAACgB,KAAK,EAAEb,eAAe,CAACwB,SAAU;QAAAT,QAAA,EAAE;MAAa,CAAM;IAAC,CAAkB,CAAC,EAClIb,IAAA,CAACJ,gBAAgB;MAACe,KAAK,EAAEb,eAAe,CAACuB,MAAO;MAAAR,QAAA,EAAEb,IAAA,CAACL,IAAI;QAACgB,KAAK,EAAEb,eAAe,CAACwB,SAAU;QAAAT,QAAA,EAAE;MAAc,CAAM;IAAC,CAAkB,CAAC,EACnIb,IAAA,CAACJ,gBAAgB;MAACe,KAAK,EAAEb,eAAe,CAACuB,MAAO;MAAAR,QAAA,EAAEb,IAAA,CAACL,IAAI;QAACgB,KAAK,EAAEb,eAAe,CAACwB,SAAU;QAAAT,QAAA,EAAE;MAA0B,CAAM;IAAC,CAAkB,CAAC;EAAA,CAC7I,CAAC;AACX,CAAC;AAED,eAAeV,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}