{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { memo, useCallback } from 'react';\nimport { styles } from \"./Styles/DefaultTextType\";\nimport React from 'react';\nimport { wrapText } from \"./HelperFunctions/wrapText\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar size = [];\nvar DefaultTextType = function DefaultTextType(_ref) {\n  var messages = _ref.messages,\n    message = _ref.message,\n    setMessageMenuVisible = _ref.setMessageMenuVisible,\n    id = _ref.id,\n    author = _ref.author;\n  var onLayout = function onLayout(event) {\n    var _event$nativeEvent$la = event.nativeEvent.layout,\n      width = _event$nativeEvent$la.width,\n      height = _event$nativeEvent$la.height;\n    size = [].concat(_toConsumableArray(size), [{\n      ID: id,\n      layout: {\n        width: width,\n        height: height\n      }\n    }]);\n  };\n  var handlePress = useCallback(function (event) {\n    if (!event) return {\n      ID: id,\n      pageX: 0,\n      pageY: 0,\n      width: 0,\n      height: 0\n    };\n    var nativeEvent = event.nativeEvent;\n    var pageX = nativeEvent.pageX,\n      pageY = nativeEvent.pageY;\n    var component = size.find(function (c) {\n      return c.ID === id;\n    });\n    return {\n      ID: id,\n      pageX: pageX,\n      pageY: pageY,\n      width: component.layout.width,\n      height: component.layout.height\n    };\n  }, []);\n  return _jsx(ScrollView, {\n    horizontal: true,\n    alwaysBounceHorizontal: false,\n    pagingEnabled: true,\n    showsHorizontalScrollIndicator: false,\n    style: styles.swipeableContainer,\n    onScrollEndDrag: function onScrollEndDrag() {\n      return setMessageMenuVisible(handlePress(null), false);\n    },\n    children: _jsxs(TouchableOpacity, {\n      style: styles.mainContainer,\n      activeOpacity: 1,\n      onPress: function onPress(event) {\n        setMessageMenuVisible(handlePress(event), true);\n      },\n      children: [_jsx(View, {\n        style: [styles.messageBlockContainer, message.author.userId == author.userId && {\n          justifyContent: 'flex-end'\n        }],\n        children: _jsx(View, {\n          style: styles.messageContainer,\n          children: _jsxs(View, {\n            onLayout: onLayout,\n            style: [message.author.userId == author.userId ? styles.messageTypeTextUser : styles.messageTypeTextNotUser, message.content.length > 40 && styles.longMessage],\n            children: [_jsx(Text, {\n              children: wrapText(message.content, 40)\n            }), _jsxs(Text, {\n              style: message.content.length > 40 ? [styles.messageTimeStamp, styles.longMessageTimeStamp] : styles.messageTimeStamp,\n              children: [message.isEdited ? 'edited ' : '', message.sendingTime.getHours().toString().padStart(2, '0'), \":\", message.sendingTime.getMinutes().toString().padStart(2, '0')]\n            })]\n          })\n        })\n      }), _jsx(View, {\n        style: {\n          width: 50,\n          backgroundColor: 'pink'\n        },\n        children: _jsx(Text, {\n          children: \"Reply\"\n        })\n      })]\n    })\n  });\n};\nexport default memo(DefaultTextType);","map":{"version":3,"names":["memo","useCallback","styles","React","wrapText","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","Dimensions","get","width","height","size","DefaultTextType","_ref","messages","message","setMessageMenuVisible","id","author","onLayout","event","_event$nativeEvent$la","nativeEvent","layout","concat","_toConsumableArray","ID","handlePress","pageX","pageY","component","find","c","ScrollView","horizontal","alwaysBounceHorizontal","pagingEnabled","showsHorizontalScrollIndicator","style","swipeableContainer","onScrollEndDrag","children","TouchableOpacity","mainContainer","activeOpacity","onPress","View","messageBlockContainer","userId","justifyContent","messageContainer","messageTypeTextUser","messageTypeTextNotUser","content","length","longMessage","Text","messageTimeStamp","longMessageTimeStamp","isEdited","sendingTime","getHours","toString","padStart","getMinutes","backgroundColor"],"sources":["D:/project/1project/Messenger/Messenger/Pages/Chats/Dialogue/MessageViewsAndTypes/DefaultTextType.tsx"],"sourcesContent":["import { View, Text, TouchableOpacity, Alert, PanResponder, Dimensions, ScrollView } from 'react-native';\r\nimport { memo, useCallback, useRef, useState } from 'react';\r\nimport { styles } from './Styles/DefaultTextType';\r\nimport React from 'react';\r\nimport { MessageProps } from '../GeneralInterfaces/IMessage';\r\nimport User from '../../../../dao/Models/User';\r\nimport { wrapText } from './HelperFunctions/wrapText';\r\n\r\nconst {width, height} = Dimensions.get('window');\r\n\r\ninterface DefaultTextMessageProps {\r\n  messages:MessageProps[];\r\n  message:MessageProps;\r\n  setMessageMenuVisible:(arg0: {ID:number, pageX:number, pageY:number, width:number, height:number}, arg1: boolean)=>void;\r\n  id:number;\r\n  author: User;\r\n}\r\n\r\nlet size:any[] = [];\r\nconst DefaultTextType = ({messages, message, setMessageMenuVisible, id, author}:DefaultTextMessageProps) => {\r\n\r\n  const onLayout = (event:any) => {\r\n    const { width, height } = event.nativeEvent.layout;\r\n    size = [...size, { ID: id, layout: { width, height }}];\r\n  };\r\n  \r\n  const handlePress = useCallback((event:({ nativeEvent: { pageX: number; pageY: number } } | null)) => {\r\n    if(!event) return { ID: id, pageX: 0, pageY: 0, width: 0, height: 0 };\r\n\r\n    const { nativeEvent } = event;\r\n    const { pageX, pageY } = nativeEvent;\r\n\r\n    const component = size.find(c => c.ID === id);\r\n    \r\n    return { \r\n      ID: id,\r\n      pageX: pageX, //(pageX<(width/8)?(width/8):pageX)>(width*0.6)?(width*0.6):pageX\r\n      pageY: pageY, //(pageY<(height/12)?(height/12):pageY)>(height*5/7)?(height*5/7):pageY\r\n      width: component.layout.width,\r\n      height: component.layout.height,\r\n    };\r\n  }, [])\r\n\r\n  //console.log('DefaultTextType-arr:', arr);\r\n\r\n  return (\r\n    <ScrollView \r\n      horizontal={true} \r\n      alwaysBounceHorizontal={false} \r\n      pagingEnabled \r\n      showsHorizontalScrollIndicator={false}\r\n      style={styles.swipeableContainer}\r\n      onScrollEndDrag={() => setMessageMenuVisible(handlePress(null), false)}\r\n    >\r\n      <TouchableOpacity \r\n        style={styles.mainContainer} \r\n        activeOpacity={1} \r\n        onPress={(event) => {setMessageMenuVisible(handlePress(event), true)}}\r\n      >\r\n        <View style={[styles.messageBlockContainer, message.author.userId==author.userId&&{ justifyContent:'flex-end' }]}>\r\n          <View style={styles.messageContainer}>\r\n            <View \r\n              onLayout={onLayout}\r\n              style={[message.author.userId==author.userId?styles.messageTypeTextUser:styles.messageTypeTextNotUser, message.content.length>40&&styles.longMessage]}\r\n            >\r\n              <Text>{wrapText(message.content, 40)}</Text>\r\n              <Text style={message.content.length>40?[styles.messageTimeStamp, styles.longMessageTimeStamp]:styles.messageTimeStamp}>\r\n                {message.isEdited?'edited ':''}\r\n                {message.sendingTime.getHours().toString().padStart(2, '0')}:\r\n                {message.sendingTime.getMinutes().toString().padStart(2, '0')}\r\n              </Text>\r\n            </View>\r\n          </View>\r\n        </View>\r\n        <View style={{width:50, backgroundColor:'pink'}}>\r\n          <Text>Reply</Text>\r\n        </View>\r\n      </TouchableOpacity>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default memo(DefaultTextType);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}