{"ast":null,"code":"import React from \"react\";\nimport TextForDisplayInAlphabeticalOrder from \"../TextForDisplayInAlphabeticalOrder\";\nimport isFirstCharacterAlphabetic from \"../../Contacts Page/Functions/isFirstCharacterAlphabetic\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar displayInAlphabeticalOrder = function displayInAlphabeticalOrder(contacts, index) {\n  var content = null;\n  if (index == 0 && !isFirstCharacterAlphabetic(contacts[index].name)) {\n    return _jsx(TextForDisplayInAlphabeticalOrder, {\n      text: \"#\"\n    });\n  } else if (index == 0) {\n    return _jsx(TextForDisplayInAlphabeticalOrder, {\n      text: contacts[index].name.slice(0, 1)\n    });\n  } else if (!isFirstCharacterAlphabetic(contacts[index].name) && isFirstCharacterAlphabetic(contacts[index - 1].name)) {\n    return _jsx(TextForDisplayInAlphabeticalOrder, {\n      text: \"#\"\n    });\n  } else if (!isFirstCharacterAlphabetic(contacts[index].name) && !isFirstCharacterAlphabetic(contacts[index - 1].name)) {\n    return null;\n  } else if (contacts[index].name.slice(0, 1) != contacts[index - 1].name.slice(0, 1)) {\n    return _jsx(TextForDisplayInAlphabeticalOrder, {\n      text: contacts[index].name.slice(0, 1)\n    });\n  }\n  return content;\n};\nexport default displayInAlphabeticalOrder;","map":{"version":3,"names":["React","TextForDisplayInAlphabeticalOrder","isFirstCharacterAlphabetic","jsx","_jsx","displayInAlphabeticalOrder","contacts","index","content","name","text","slice"],"sources":["D:/project/1project/Messenger/Messenger/Pages/ChatList/Components/Write Message containers/Functions/displayInAlphabeticOrder.tsx"],"sourcesContent":["import React from \"react\";\r\nimport * as Contacts from \"expo-contacts\";\r\nimport { ReactNode } from \"react\";\r\nimport TextForDisplayInAlphabeticalOrder from \"../TextForDisplayInAlphabeticalOrder\";\r\nimport isFirstCharacterAlphabetic from \"../../Contacts Page/Functions/isFirstCharacterAlphabetic\";\r\nconst displayInAlphabeticalOrder = (\r\n    contacts: Contacts.Contact[],\r\n    index: number\r\n  ): ReactNode => {\r\n    let content: ReactNode = null;\r\n    if (index == 0 && !isFirstCharacterAlphabetic(contacts[index].name)) {\r\n      return <TextForDisplayInAlphabeticalOrder text={\"#\"} />;\r\n    } else if (index == 0) {\r\n      return (\r\n        <TextForDisplayInAlphabeticalOrder\r\n          text={contacts[index].name.slice(0, 1)}\r\n        />\r\n      );\r\n    } else if (\r\n      !isFirstCharacterAlphabetic(contacts[index].name) &&\r\n      isFirstCharacterAlphabetic(contacts[index - 1].name)\r\n    ) {\r\n      return <TextForDisplayInAlphabeticalOrder text={\"#\"} />;\r\n    } else if (\r\n      !isFirstCharacterAlphabetic(contacts[index].name) &&\r\n      !isFirstCharacterAlphabetic(contacts[index - 1].name)\r\n    ) {\r\n      return null;\r\n    } else if (\r\n      contacts[index].name.slice(0, 1) != contacts[index - 1].name.slice(0, 1)\r\n    ) {\r\n      return (\r\n        <TextForDisplayInAlphabeticalOrder\r\n          text={contacts[index].name.slice(0, 1)}\r\n        />\r\n      );\r\n    }\r\n    return content;\r\n  };\r\n\r\n  export default displayInAlphabeticalOrder"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,OAAOC,iCAAiC;AACxC,OAAOC,0BAA0B;AAAiE,SAAAC,GAAA,IAAAC,IAAA;AAClG,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA0BA,CAC5BC,QAA4B,EAC5BC,KAAa,EACC;EACd,IAAIC,OAAkB,GAAG,IAAI;EAC7B,IAAID,KAAK,IAAI,CAAC,IAAI,CAACL,0BAA0B,CAACI,QAAQ,CAACC,KAAK,CAAC,CAACE,IAAI,CAAC,EAAE;IACnE,OAAOL,IAAA,CAACH,iCAAiC;MAACS,IAAI,EAAE;IAAI,CAAE,CAAC;EACzD,CAAC,MAAM,IAAIH,KAAK,IAAI,CAAC,EAAE;IACrB,OACEH,IAAA,CAACH,iCAAiC;MAChCS,IAAI,EAAEJ,QAAQ,CAACC,KAAK,CAAC,CAACE,IAAI,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC;IAAE,CACxC,CAAC;EAEN,CAAC,MAAM,IACL,CAACT,0BAA0B,CAACI,QAAQ,CAACC,KAAK,CAAC,CAACE,IAAI,CAAC,IACjDP,0BAA0B,CAACI,QAAQ,CAACC,KAAK,GAAG,CAAC,CAAC,CAACE,IAAI,CAAC,EACpD;IACA,OAAOL,IAAA,CAACH,iCAAiC;MAACS,IAAI,EAAE;IAAI,CAAE,CAAC;EACzD,CAAC,MAAM,IACL,CAACR,0BAA0B,CAACI,QAAQ,CAACC,KAAK,CAAC,CAACE,IAAI,CAAC,IACjD,CAACP,0BAA0B,CAACI,QAAQ,CAACC,KAAK,GAAG,CAAC,CAAC,CAACE,IAAI,CAAC,EACrD;IACA,OAAO,IAAI;EACb,CAAC,MAAM,IACLH,QAAQ,CAACC,KAAK,CAAC,CAACE,IAAI,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,IAAIL,QAAQ,CAACC,KAAK,GAAG,CAAC,CAAC,CAACE,IAAI,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EACxE;IACA,OACEP,IAAA,CAACH,iCAAiC;MAChCS,IAAI,EAAEJ,QAAQ,CAACC,KAAK,CAAC,CAACE,IAAI,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC;IAAE,CACxC,CAAC;EAEN;EACA,OAAOH,OAAO;AAChB,CAAC;AAED,eAAeH,0BAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}