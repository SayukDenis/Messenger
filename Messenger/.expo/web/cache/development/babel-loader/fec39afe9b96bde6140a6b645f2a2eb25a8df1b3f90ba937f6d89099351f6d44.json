{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { styles } from \"./Styles\";\nimport { useIsFocused } from \"@react-navigation/native\";\nimport TopToolBar from \"../../SemiComponents/MainScreen/TopToolBar\";\nimport AvatarWithCallingButtons from \"../../SemiComponents/MainScreen/AvatarWithCallingButtons\";\nimport Multimedia from \"../../SemiComponents/MainScreen/Multimedia/Multimedia\";\nimport Blur from \"../../SemiComponents/MainScreen/Blur\";\nimport ElseFeaturesButtons from \"../../SemiComponents/MainScreen/ElseFeaturesButtons\";\nimport RemovalApproval from \"../../SemiComponents/MainScreen/RemovalApproval\";\nimport { channel, tempUser, user } from \"../../SemiComponents/DBUser\";\nimport AlbumLongPressedMenu from \"../../SemiComponents/MainScreen/Multimedia/AlbumLongPressedMenu\";\nimport BottomToolBar from \"../../SemiComponents/MainScreen/ButtomToolBar\";\nimport SubscribersButton from \"./SubscribersButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar screenHeight = Dimensions.get(\"screen\").height;\nvar MainChannelScreen = function MainChannelScreen(props) {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    removalApprovalText = _useState2[0],\n    setRemovalApprovalText = _useState2[1];\n  var _useState3 = useState(\"Photos\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    pressedMultimediaButton = _useState4[0],\n    _setPressedMultimediaButton = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isElseFeaturesVisible = _useState6[0],\n    setIsElseFeaturesVisible = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isPhotoAlbumSelectionVisible = _useState8[0],\n    _setIsPhotoAlbumSelectionVisible = _useState8[1];\n  var _useState9 = useState(user.isMuted),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isMuted = _useState10[0],\n    setIsMuted = _useState10[1];\n  var _useState11 = useState(null),\n    _useState12 = _slicedToArray(_useState11, 2),\n    longPressedAlbum = _useState12[0],\n    setLongPressedAlbum = _useState12[1];\n  var _useState13 = useState(0),\n    _useState14 = _slicedToArray(_useState13, 2),\n    positionYOfLongPressedAlbum = _useState14[0],\n    setPositionYOfLongPressedAlbum = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    isAlbumSelectionVisible = _useState16[0],\n    setIsAlbumSelectionVisible = _useState16[1];\n  var _useState17 = useState([]),\n    _useState18 = _slicedToArray(_useState17, 2),\n    selectedAlbums = _useState18[0],\n    setSelectedAlbums = _useState18[1];\n  var isFocused = useIsFocused();\n  useEffect(function () {}, [isFocused]);\n  var removalApprovalsTexts = [\"clear the chat\", \"delete an album\", \"delete all albums\", \"delete selected albums\"];\n  var removalApprovalsOnPress = [function () {\n    alert(\"Agree\");\n  }, function () {\n    user.albums.splice(user.albums.indexOf(longPressedAlbum), 1);\n    setLongPressedAlbum(null);\n  }, function () {\n    user.albums = Array();\n    setIsAlbumSelectionVisible(false);\n  }, function () {\n    selectedAlbums.forEach(function (album) {\n      user.albums.splice(user.albums.indexOf(album), 1);\n    });\n    setSelectedAlbums(Array());\n    setIsAlbumSelectionVisible(false);\n  }];\n  return _jsxs(View, {\n    style: styles.mainContainer,\n    children: [_jsx(Blur, {\n      visibleWhen: isElseFeaturesVisible || longPressedAlbum != null || isPhotoAlbumSelectionVisible,\n      onPress: function onPress() {\n        setIsElseFeaturesVisible(false);\n        setLongPressedAlbum(null);\n        _setIsPhotoAlbumSelectionVisible(false);\n      },\n      style: styles.blurEffect\n    }), _jsx(Blur, {\n      visibleWhen: removalApprovalText != \"\",\n      onPress: function onPress() {\n        setRemovalApprovalText(\"\");\n      },\n      style: [styles.blurEffect, {\n        zIndex: 3\n      }]\n    }), removalApprovalsTexts.map(function (item, index) {\n      return _jsx(RemovalApproval, {\n        isVisible: removalApprovalText == item,\n        onAnyPress: function onAnyPress() {\n          setRemovalApprovalText(\"\");\n        },\n        onAgreePress: function onAgreePress() {\n          removalApprovalsOnPress[index]();\n        },\n        text: \"Do you really want to \" + item + \"?\"\n      }, item);\n    }), _jsx(TopToolBar, {\n      primaryTitle: user.profileName,\n      secondaryTitle: user.lastTimeOnline,\n      onElseFeaturesPress: function onElseFeaturesPress() {\n        setIsElseFeaturesVisible(true);\n      },\n      isMuted: isMuted,\n      isSearchButtonVisible: true,\n      onGoBackPress: function onGoBackPress() {\n        props.navigation.goBack();\n      },\n      isMediaSelectionVisible: isAlbumSelectionVisible,\n      quantityOfSelectedItems: selectedAlbums.length,\n      onCancelPress: function onCancelPress() {\n        setSelectedAlbums([]);\n        setIsAlbumSelectionVisible(false);\n      },\n      onDeleteAllPress: function onDeleteAllPress() {\n        setRemovalApprovalText(\"delete all albums\");\n      }\n    }), _jsx(ElseFeaturesButtons, {\n      isVisible: isElseFeaturesVisible,\n      setIsVisible: function setIsVisible(value) {\n        return setIsElseFeaturesVisible(value);\n      },\n      isMuted: isMuted,\n      onMutePress: function onMutePress(value) {\n        setIsMuted(value);\n      },\n      onClearChatPress: function onClearChatPress() {\n        setRemovalApprovalText(\"clear the chat\");\n      },\n      settingsPress: function settingsPress() {\n        return props.navigation.navigate(\"SettingsScreen\");\n      },\n      mode: \"channel\"\n    }), _jsx(AlbumLongPressedMenu, {\n      isVisible: longPressedAlbum != null,\n      longPressedAlbum: longPressedAlbum,\n      positionYOfLongPressedAlbum: positionYOfLongPressedAlbum,\n      onDeleteAlbumPress: function onDeleteAlbumPress() {\n        setRemovalApprovalText(\"delete an album\");\n      },\n      onSelectAlbumPress: function onSelectAlbumPress() {\n        setIsAlbumSelectionVisible(true);\n        setSelectedAlbums(selectedAlbums == null ? void 0 : selectedAlbums.concat([longPressedAlbum]));\n        setLongPressedAlbum(null);\n      }\n    }), _jsxs(ScrollView, {\n      style: {\n        flex: 1,\n        zIndex: isPhotoAlbumSelectionVisible ? 2 : 0\n      },\n      contentContainerStyle: {\n        zIndex: isPhotoAlbumSelectionVisible ? 2 : 0\n      },\n      overScrollMode: \"never\",\n      showsVerticalScrollIndicator: false,\n      onScroll: function onScroll() {\n        _setIsPhotoAlbumSelectionVisible(false);\n      },\n      children: [_jsx(Blur, {\n        visibleWhen: isPhotoAlbumSelectionVisible,\n        onPress: function onPress() {\n          _setIsPhotoAlbumSelectionVisible(false);\n        },\n        style: [styles.blurEffect, {\n          zIndex: 3\n        }]\n      }), _jsx(AvatarWithCallingButtons, {\n        avatarURL: \"https://fastly.picsum.photos/id/22/4434/3729.jpg?hmac=fjZdkSMZJNFgsoDh8Qo5zdA_nSGUAWvKLyyqmEt2xs0\",\n        onAvatarPress: function onAvatarPress() {\n          props.navigation.navigate(\"AvatarsAndInfoScreen\");\n        }\n      }), _jsx(SubscribersButton, {\n        onPress: function onPress() {\n          props.navigation.navigate(\"MembersScreen\");\n        },\n        subscribersQuantity: channel.subscribersQuantity\n      }), _jsx(Multimedia, {\n        isPhotoAlbumSelectionVisible: isPhotoAlbumSelectionVisible,\n        setIsPhotoAlbumSelectionVisible: function setIsPhotoAlbumSelectionVisible(value) {\n          return _setIsPhotoAlbumSelectionVisible(value);\n        },\n        pressedMultimediaButton: pressedMultimediaButton,\n        setPressedMultimediaButton: function setPressedMultimediaButton(value) {\n          _setPressedMultimediaButton(value);\n        },\n        onPhotoPress: function onPhotoPress(photo) {\n          tempUser.selectedPhoto = photo;\n          props.navigation.navigate(\"PhotoScreen\");\n        },\n        onAlbumPress: function onAlbumPress(item) {\n          if (isAlbumSelectionVisible) {\n            if (!selectedAlbums.includes(item)) {\n              setSelectedAlbums(selectedAlbums.concat([item]));\n            } else {\n              setSelectedAlbums(selectedAlbums.filter(function (photoOrVideo) {\n                return photoOrVideo !== item;\n              }));\n            }\n          } else {\n            tempUser.selectedAlbum = item;\n            props.navigation.navigate(\"Album\");\n          }\n        },\n        onNewAlbumPress: function onNewAlbumPress() {\n          props.navigation.navigate(\"NewAlbumScreen\");\n        },\n        onAlbumLongPress: function onAlbumLongPress(value, event) {\n          if (!isAlbumSelectionVisible) {\n            setLongPressedAlbum(value);\n            setPositionYOfLongPressedAlbum(event.nativeEvent.pageY + 0.05 * screenHeight);\n          } else {\n            if (!selectedAlbums.includes(value)) {\n              setSelectedAlbums(selectedAlbums.concat([value]));\n            } else {\n              setSelectedAlbums(selectedAlbums.filter(function (photoOrVideo) {\n                return photoOrVideo !== value;\n              }));\n            }\n          }\n        },\n        isAlbumSelectionVisible: isAlbumSelectionVisible,\n        isAlbumCheckMarkVisible: function isAlbumCheckMarkVisible(value) {\n          return selectedAlbums.includes(value);\n        }\n      })]\n    }), _jsx(BottomToolBar, {\n      isVisible: isAlbumSelectionVisible,\n      onDeletePress: function onDeletePress() {\n        setRemovalApprovalText(\"delete selected albums\");\n      },\n      onForwardPress: function onForwardPress() {\n        alert(\"Forward album...\");\n      }\n    })]\n  });\n};\nexport default MainChannelScreen;","map":{"version":3,"names":["React","useState","useEffect","View","ScrollView","Dimensions","styles","useIsFocused","TopToolBar","AvatarWithCallingButtons","Multimedia","Blur","ElseFeaturesButtons","RemovalApproval","channel","tempUser","user","AlbumLongPressedMenu","BottomToolBar","SubscribersButton","jsx","_jsx","jsxs","_jsxs","screenHeight","get","height","MainChannelScreen","props","_useState","_useState2","_slicedToArray","removalApprovalText","setRemovalApprovalText","_useState3","_useState4","pressedMultimediaButton","setPressedMultimediaButton","_useState5","_useState6","isElseFeaturesVisible","setIsElseFeaturesVisible","_useState7","_useState8","isPhotoAlbumSelectionVisible","setIsPhotoAlbumSelectionVisible","_useState9","isMuted","_useState10","setIsMuted","_useState11","_useState12","longPressedAlbum","setLongPressedAlbum","_useState13","_useState14","positionYOfLongPressedAlbum","setPositionYOfLongPressedAlbum","_useState15","_useState16","isAlbumSelectionVisible","setIsAlbumSelectionVisible","_useState17","_useState18","selectedAlbums","setSelectedAlbums","isFocused","removalApprovalsTexts","removalApprovalsOnPress","alert","albums","splice","indexOf","Array","forEach","album","style","mainContainer","children","visibleWhen","onPress","blurEffect","zIndex","map","item","index","isVisible","onAnyPress","onAgreePress","text","primaryTitle","profileName","secondaryTitle","lastTimeOnline","onElseFeaturesPress","isSearchButtonVisible","onGoBackPress","navigation","goBack","isMediaSelectionVisible","quantityOfSelectedItems","length","onCancelPress","onDeleteAllPress","setIsVisible","value","onMutePress","onClearChatPress","settingsPress","navigate","mode","onDeleteAlbumPress","onSelectAlbumPress","concat","flex","contentContainerStyle","overScrollMode","showsVerticalScrollIndicator","onScroll","avatarURL","onAvatarPress","subscribersQuantity","onPhotoPress","photo","selectedPhoto","onAlbumPress","includes","filter","photoOrVideo","selectedAlbum","onNewAlbumPress","onAlbumLongPress","event","nativeEvent","pageY","isAlbumCheckMarkVisible","onDeletePress","onForwardPress"],"sources":["/home/zatibmag/Desktop/Project/Messenger/Messenger/Pages/Profiles/ChannelProfile/MainChannelScreen/MainChannelScreen.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { View, ScrollView, Dimensions } from \"react-native\";\r\nimport { styles } from \"./Styles\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport TopToolBar from \"../../SemiComponents/MainScreen/TopToolBar\";\r\nimport AvatarWithCallingButtons from \"../../SemiComponents/MainScreen/AvatarWithCallingButtons\";\r\nimport Multimedia from \"../../SemiComponents/MainScreen/Multimedia/Multimedia\";\r\nimport Blur from \"../../SemiComponents/MainScreen/Blur\";\r\nimport ElseFeaturesButtons from \"../../SemiComponents/MainScreen/ElseFeaturesButtons\";\r\nimport RemovalApproval from \"../../SemiComponents/MainScreen/RemovalApproval\";\r\nimport {\r\n  Album,\r\n  PhotoOrVideo,\r\n  channel,\r\n  tempUser,\r\n  user,\r\n} from \"../../SemiComponents/DBUser\";\r\nimport AlbumLongPressedMenu from \"../../SemiComponents/MainScreen/Multimedia/AlbumLongPressedMenu\";\r\nimport BottomToolBar from \"../../SemiComponents/MainScreen/ButtomToolBar\";\r\nimport { GestureResponderEvent } from \"react-native-modal\";\r\nimport SubscribersButton from \"./SubscribersButton\";\r\n\r\nconst screenHeight = Dimensions.get(\"screen\").height;\r\n\r\ninterface MainChannelScreenProps {\r\n  navigation: StackNavigationProp<{}>;\r\n}\r\n\r\nconst MainChannelScreen: React.FC<MainChannelScreenProps> = (props) => {\r\n  const [removalApprovalText, setRemovalApprovalText] = useState(\"\");\r\n  const [pressedMultimediaButton, setPressedMultimediaButton] =\r\n    useState(\"Photos\");\r\n  const [isElseFeaturesVisible, setIsElseFeaturesVisible] = useState(false);\r\n  const [isPhotoAlbumSelectionVisible, setIsPhotoAlbumSelectionVisible] =\r\n    useState(false);\r\n  const [isMuted, setIsMuted] = useState(user.isMuted);\r\n  const [longPressedAlbum, setLongPressedAlbum] = useState(null);\r\n  const [positionYOfLongPressedAlbum, setPositionYOfLongPressedAlbum] =\r\n    useState(0);\r\n  const [isAlbumSelectionVisible, setIsAlbumSelectionVisible] = useState(false);\r\n  const [selectedAlbums, setSelectedAlbums] = useState<Array<Album>>([]);\r\n\r\n  const isFocused = useIsFocused();\r\n\r\n  useEffect(() => {}, [isFocused]);\r\n\r\n  const removalApprovalsTexts: string[] = [\r\n    \"clear the chat\",\r\n    \"delete an album\",\r\n    \"delete all albums\",\r\n    \"delete selected albums\",\r\n  ];\r\n  const removalApprovalsOnPress: (() => void)[] = [\r\n    () => {\r\n      alert(\"Agree\");\r\n    },\r\n    () => {\r\n      user.albums.splice(user.albums.indexOf(longPressedAlbum), 1);\r\n      setLongPressedAlbum(null);\r\n    },\r\n    () => {\r\n      user.albums = Array<Album>();\r\n      setIsAlbumSelectionVisible(false);\r\n    },\r\n    () => {\r\n      selectedAlbums.forEach((album) => {\r\n        user.albums.splice(user.albums.indexOf(album), 1);\r\n      });\r\n      setSelectedAlbums(Array<Album>());\r\n      setIsAlbumSelectionVisible(false);\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <View style={styles.mainContainer}>\r\n      {/* General blur with zIndex 1 */}\r\n      <Blur\r\n        visibleWhen={\r\n          isElseFeaturesVisible ||\r\n          longPressedAlbum != null ||\r\n          isPhotoAlbumSelectionVisible\r\n        }\r\n        onPress={() => {\r\n          setIsElseFeaturesVisible(false);\r\n          setLongPressedAlbum(null);\r\n          setIsPhotoAlbumSelectionVisible(false);\r\n        }}\r\n        style={styles.blurEffect}\r\n      />\r\n\r\n      {/* Blur over blur with zIndex 3 */}\r\n      <Blur\r\n        visibleWhen={removalApprovalText != \"\"}\r\n        onPress={() => {\r\n          setRemovalApprovalText(\"\");\r\n        }}\r\n        style={[\r\n          styles.blurEffect,\r\n          {\r\n            zIndex: 3,\r\n          },\r\n        ]}\r\n      />\r\n\r\n      {removalApprovalsTexts.map((item, index) => {\r\n        return (\r\n          <RemovalApproval\r\n            key={item}\r\n            isVisible={removalApprovalText == item}\r\n            onAnyPress={() => {\r\n              setRemovalApprovalText(\"\");\r\n            }}\r\n            onAgreePress={() => {\r\n              removalApprovalsOnPress[index]();\r\n            }}\r\n            text={\"Do you really want to \" + item + \"?\"}\r\n          />\r\n        );\r\n      })}\r\n\r\n      {/* Top tool bar with buttons*/}\r\n      <TopToolBar\r\n        primaryTitle={user.profileName}\r\n        secondaryTitle={user.lastTimeOnline}\r\n        onElseFeaturesPress={() => {\r\n          setIsElseFeaturesVisible(true);\r\n        }}\r\n        isMuted={isMuted}\r\n        isSearchButtonVisible={true}\r\n        onGoBackPress={() => {\r\n          props.navigation.goBack();\r\n        }}\r\n        isMediaSelectionVisible={isAlbumSelectionVisible}\r\n        quantityOfSelectedItems={selectedAlbums.length}\r\n        onCancelPress={() => {\r\n          setSelectedAlbums([]);\r\n          setIsAlbumSelectionVisible(false);\r\n        }}\r\n        onDeleteAllPress={() => {\r\n          setRemovalApprovalText(\"delete all albums\");\r\n        }}\r\n      />\r\n\r\n      {/* Else features which appear when else features button is pressed*/}\r\n      <ElseFeaturesButtons\r\n        isVisible={isElseFeaturesVisible}\r\n        setIsVisible={(value: boolean) => setIsElseFeaturesVisible(value)}\r\n        isMuted={isMuted}\r\n        onMutePress={(value: boolean) => {\r\n          setIsMuted(value);\r\n        }}\r\n        onClearChatPress={() => {\r\n          setRemovalApprovalText(\"clear the chat\");\r\n        }}\r\n        settingsPress={() =>\r\n          props.navigation.navigate(\"SettingsScreen\" as never)\r\n        }\r\n        mode=\"channel\"\r\n      />\r\n\r\n      <AlbumLongPressedMenu\r\n        isVisible={longPressedAlbum != null}\r\n        longPressedAlbum={longPressedAlbum}\r\n        positionYOfLongPressedAlbum={positionYOfLongPressedAlbum}\r\n        onDeleteAlbumPress={() => {\r\n          setRemovalApprovalText(\"delete an album\");\r\n        }}\r\n        onSelectAlbumPress={() => {\r\n          setIsAlbumSelectionVisible(true);\r\n          setSelectedAlbums(selectedAlbums?.concat([longPressedAlbum]));\r\n          setLongPressedAlbum(null);\r\n        }}\r\n      />\r\n\r\n      <ScrollView\r\n        style={{\r\n          flex: 1,\r\n          zIndex: isPhotoAlbumSelectionVisible ? 2 : 0,\r\n        }}\r\n        contentContainerStyle={{\r\n          zIndex: isPhotoAlbumSelectionVisible ? 2 : 0,\r\n        }}\r\n        overScrollMode=\"never\"\r\n        showsVerticalScrollIndicator={false}\r\n        onScroll={() => {\r\n          setIsPhotoAlbumSelectionVisible(false);\r\n        }}\r\n      >\r\n        <Blur\r\n          visibleWhen={isPhotoAlbumSelectionVisible}\r\n          onPress={() => {\r\n            setIsPhotoAlbumSelectionVisible(false);\r\n          }}\r\n          style={[styles.blurEffect, { zIndex: 3 }]}\r\n        />\r\n\r\n        {/* Touchable avatar image with phone and videocamera buttons*/}\r\n        <AvatarWithCallingButtons\r\n          avatarURL=\"https://fastly.picsum.photos/id/22/4434/3729.jpg?hmac=fjZdkSMZJNFgsoDh8Qo5zdA_nSGUAWvKLyyqmEt2xs0\"\r\n          onAvatarPress={() => {\r\n            props.navigation.navigate(\"AvatarsAndInfoScreen\" as never);\r\n          }}\r\n        />\r\n\r\n        <SubscribersButton\r\n          onPress={() => {\r\n            props.navigation.navigate(\"MembersScreen\" as never);\r\n          }}\r\n          subscribersQuantity={channel.subscribersQuantity}\r\n        />\r\n\r\n        {/* Multimedia bar with photo/albums, files, voice, links buttons*/}\r\n        <Multimedia\r\n          isPhotoAlbumSelectionVisible={isPhotoAlbumSelectionVisible}\r\n          setIsPhotoAlbumSelectionVisible={(value: boolean) =>\r\n            setIsPhotoAlbumSelectionVisible(value)\r\n          }\r\n          pressedMultimediaButton={pressedMultimediaButton}\r\n          setPressedMultimediaButton={(value: string) => {\r\n            setPressedMultimediaButton(value);\r\n          }}\r\n          onPhotoPress={(photo: PhotoOrVideo) => {\r\n            tempUser.selectedPhoto = photo;\r\n            props.navigation.navigate(\"PhotoScreen\" as never);\r\n          }}\r\n          onAlbumPress={(item: Album) => {\r\n            if (isAlbumSelectionVisible) {\r\n              if (!selectedAlbums.includes(item)) {\r\n                setSelectedAlbums(selectedAlbums.concat([item]));\r\n              } else {\r\n                setSelectedAlbums(\r\n                  selectedAlbums.filter((photoOrVideo) => photoOrVideo !== item)\r\n                );\r\n              }\r\n            } else {\r\n              tempUser.selectedAlbum = item;\r\n              props.navigation.navigate(\"Album\" as never);\r\n            }\r\n          }}\r\n          onNewAlbumPress={() => {\r\n            props.navigation.navigate(\"NewAlbumScreen\" as never);\r\n          }}\r\n          onAlbumLongPress={(value: Album, event: GestureResponderEvent) => {\r\n            if (!isAlbumSelectionVisible) {\r\n              setLongPressedAlbum(value);\r\n              setPositionYOfLongPressedAlbum(\r\n                event.nativeEvent.pageY + 0.05 * screenHeight\r\n              );\r\n            } else {\r\n              if (!selectedAlbums.includes(value)) {\r\n                setSelectedAlbums(selectedAlbums.concat([value]));\r\n              } else {\r\n                setSelectedAlbums(\r\n                  selectedAlbums.filter(\r\n                    (photoOrVideo) => photoOrVideo !== value\r\n                  )\r\n                );\r\n              }\r\n            }\r\n          }}\r\n          isAlbumSelectionVisible={isAlbumSelectionVisible}\r\n          isAlbumCheckMarkVisible={(value: Album) => {\r\n            return selectedAlbums.includes(value);\r\n          }}\r\n        />\r\n      </ScrollView>\r\n\r\n      <BottomToolBar\r\n        isVisible={isAlbumSelectionVisible}\r\n        onDeletePress={() => {\r\n          setRemovalApprovalText(\"delete selected albums\");\r\n        }}\r\n        onForwardPress={() => {\r\n          alert(\"Forward album...\");\r\n        }}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default MainChannelScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}