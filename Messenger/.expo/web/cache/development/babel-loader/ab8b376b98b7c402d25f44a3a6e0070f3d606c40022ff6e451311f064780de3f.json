{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { memo, useCallback } from 'react';\nimport { styles } from \"./Styles/ReplyTextType\";\nimport React from 'react';\nimport { wrapText } from \"./HelperFunctions/wrapText\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar size = [];\nvar replyTextType = function replyTextType(_ref) {\n  var _replyMessage$content;\n  var messages = _ref.messages,\n    message = _ref.message,\n    setMessageMenuVisible = _ref.setMessageMenuVisible,\n    id = _ref.id,\n    scrollView = _ref.scrollView,\n    cordsY = _ref.cordsY,\n    author = _ref.author;\n  var _onLayout = function onLayout(event) {\n    var _event$nativeEvent$la = event.nativeEvent.layout,\n      width = _event$nativeEvent$la.width,\n      height = _event$nativeEvent$la.height;\n    size = [].concat(_toConsumableArray(size), [{\n      ID: id,\n      layout: {\n        width: width,\n        height: height\n      }\n    }]);\n  };\n  var handlePress = useCallback(function (event) {\n    if (!event) return {\n      ID: id,\n      pageX: 0,\n      pageY: 0,\n      width: 0,\n      height: 0\n    };\n    var nativeEvent = event.nativeEvent;\n    var pageX = nativeEvent.pageX,\n      pageY = nativeEvent.pageY;\n    var component = size.find(function (c) {\n      return c.ID === id;\n    });\n    return {\n      ID: id,\n      pageX: pageX,\n      pageY: pageY,\n      width: component.layout.width,\n      height: component.layout.height\n    };\n  }, []);\n  var handleLinkTo = useCallback(function (messageID) {\n    var y = cordsY[--messageID][0] - (height * 0.88 / 2 - cordsY[messageID][1] / 2);\n    scrollView.current.scrollTo({\n      y: y,\n      animated: true\n    });\n  }, []);\n  var replyMessage = messages.find(function (m) {\n    return m.messageId === message.messageResponseId;\n  });\n  return _jsxs(ScrollView, {\n    horizontal: true,\n    alwaysBounceHorizontal: false,\n    pagingEnabled: true,\n    showsHorizontalScrollIndicator: false,\n    style: styles.swipeableContainer,\n    onScrollEndDrag: function onScrollEndDrag() {\n      return setMessageMenuVisible(handlePress(null), false);\n    },\n    children: [_jsx(View, {\n      style: styles.replyContainer,\n      children: _jsxs(TouchableOpacity, {\n        style: styles.innerReplyContainer,\n        activeOpacity: 1,\n        onPress: function onPress(event) {\n          return setMessageMenuVisible(handlePress(event), true);\n        },\n        children: [_jsx(Text, {\n          style: [styles.replyUserNameFont, message.author.userId == author.userId && {\n            alignSelf: 'flex-end'\n          }],\n          children: message.author.userId == author.userId ? 'You' : 'Denis'\n        }), message.author.userId == author.userId ? _jsxs(View, {\n          style: styles.replyMessageContainer,\n          children: [_jsx(TouchableOpacity, {\n            activeOpacity: 1,\n            onPress: function onPress() {\n              handleLinkTo(message.messageResponseId);\n            },\n            hitSlop: {\n              top: 10\n            },\n            children: _jsx(View, {\n              style: [styles.messageTypeTextUser, styles.replyMessagePos],\n              children: _jsx(Text, {\n                style: styles.replyMessageFont,\n                children: replyMessage != undefined && (replyMessage == null ? void 0 : (_replyMessage$content = replyMessage.content) == null ? void 0 : _replyMessage$content.length) >= 20 ? (replyMessage == null ? void 0 : replyMessage.content.replace('\\n', '').slice(0, 20)) + '...' : replyMessage == null ? void 0 : replyMessage.content\n              })\n            })\n          }), _jsx(View, {\n            style: styles.replyMessageLine\n          })]\n        }) : _jsxs(View, {\n          style: styles.replyMessageContainer,\n          children: [_jsx(View, {\n            style: styles.replyMessageLine\n          }), _jsx(TouchableOpacity, {\n            style: {\n              flex: 1\n            },\n            activeOpacity: 1,\n            children: _jsx(View, {\n              style: [styles.messageTypeTextNotUser, styles.replyMessagePos],\n              children: _jsx(Text, {\n                style: styles.replyMessageFont,\n                children: replyMessage != undefined && (replyMessage == null ? void 0 : replyMessage.content.length) >= 20 ? (replyMessage == null ? void 0 : replyMessage.content.replace('\\n', '').slice(0, 20)) + '...' : replyMessage == null ? void 0 : replyMessage.content\n              })\n            })\n          })]\n        }), _jsx(TouchableOpacity, {\n          activeOpacity: 1,\n          onPress: function onPress(event) {\n            setMessageMenuVisible(handlePress(event), true);\n          },\n          children: _jsxs(View, {\n            onLayout: function onLayout(event) {\n              return _onLayout(event);\n            },\n            style: [message.author.userId == author.userId ? styles.messageTypeTextUser : styles.messageTypeTextNotUser, {\n              marginVertical: 5\n            }, (message == null ? void 0 : message.content.length) > 40 && styles.longMessage],\n            children: [_jsx(Text, {\n              children: wrapText(message == null ? void 0 : message.content, 40)\n            }), _jsxs(Text, {\n              style: (message == null ? void 0 : message.content.length) > 40 ? [styles.messageTimeStamp, styles.longMessageTimeStamp] : styles.messageTimeStamp,\n              children: [message.isEdited ? 'edited ' : '', new Date(message.sendingTime).getHours().toString().padStart(2, '0'), \":\", new Date(message.sendingTime).getMinutes().toString().padStart(2, '0')]\n            })]\n          })\n        })]\n      })\n    }), _jsx(View, {\n      style: {\n        width: 50,\n        backgroundColor: 'pink'\n      },\n      children: _jsx(Text, {\n        children: \"Reply\"\n      })\n    })]\n  });\n};\nexport default memo(replyTextType);","map":{"version":3,"names":["memo","useCallback","styles","React","wrapText","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","Dimensions","get","width","height","size","replyTextType","_ref","_replyMessage$content","messages","message","setMessageMenuVisible","id","scrollView","cordsY","author","onLayout","event","_event$nativeEvent$la","nativeEvent","layout","concat","_toConsumableArray","ID","handlePress","pageX","pageY","component","find","c","handleLinkTo","messageID","y","current","scrollTo","animated","replyMessage","m","messageId","messageResponseId","ScrollView","horizontal","alwaysBounceHorizontal","pagingEnabled","showsHorizontalScrollIndicator","style","swipeableContainer","onScrollEndDrag","children","View","replyContainer","TouchableOpacity","innerReplyContainer","activeOpacity","onPress","Text","replyUserNameFont","userId","alignSelf","replyMessageContainer","hitSlop","top","messageTypeTextUser","replyMessagePos","replyMessageFont","undefined","content","length","replace","slice","replyMessageLine","flex","messageTypeTextNotUser","marginVertical","longMessage","messageTimeStamp","longMessageTimeStamp","isEdited","Date","sendingTime","getHours","toString","padStart","getMinutes","backgroundColor"],"sources":["D:/project/1project/Messenger/Messenger/Pages/Chats/Dialogue/MessageViewsAndTypes/ReplyTextType.tsx"],"sourcesContent":["import { View, Text, TouchableOpacity, Dimensions, ScrollView } from 'react-native';\r\nimport { MutableRefObject, useState, memo, useCallback, useRef, useEffect } from 'react';\r\nimport { styles } from './Styles/ReplyTextType';\r\nimport handlePress from './DefaultTextType';\r\nimport React from 'react';\r\nimport { MessageProps } from '../GeneralInterfaces/IMessage';\r\nimport User from '../../../../dao/Models/User';\r\nimport { wrapText } from './HelperFunctions/wrapText';\r\n\r\nconst {width, height} = Dimensions.get('window');\r\n\r\ninterface ReplyTextType {\r\n  messages: MessageProps[];\r\n  message: MessageProps;\r\n  setMessageMenuVisible: (arg0: {ID:number, pageX:number, pageY:number, width:number, height:number}, arg1: boolean)=>void;\r\n  id: number;\r\n  scrollView: MutableRefObject<any>;\r\n  cordsY: any;\r\n  author: User;\r\n}\r\n\r\nlet size:any[] = [];\r\nconst replyTextType = ({messages, message, setMessageMenuVisible, id, scrollView, cordsY, author}:ReplyTextType) => {\r\n\r\n  const onLayout = (event:any) => {\r\n    const { width, height } = event.nativeEvent.layout;\r\n    size = [...size, { ID: id, layout: { width, height }}];\r\n  };\r\n  \r\n  const handlePress = useCallback((event:({ nativeEvent: { pageX: number; pageY: number } } | null)) => {\r\n    if(!event) return { ID: id, pageX: 0, pageY: 0, width: 0, height: 0 };\r\n\r\n    const { nativeEvent } = event;\r\n    const { pageX, pageY } = nativeEvent;\r\n\r\n    const component = size.find(c => c.ID === id);\r\n\r\n    return { \r\n      ID: id,\r\n      pageX: pageX, //(pageX<(width/8)?(width/8):pageX)>(width*0.6)?(width*0.6):pageX\r\n      pageY: pageY, //(pageY<(height/12)?(height/12):pageY)>(height*5/7)?(height*5/7):pageY\r\n      width: component.layout.width,\r\n      height: component.layout.height,\r\n    };\r\n  }, []);\r\n\r\n  const handleLinkTo = useCallback((messageID:any) => {\r\n    const y = cordsY[--messageID][0] - ((height*0.88)/2-cordsY[messageID][1]/2);\r\n    scrollView.current.scrollTo({y, animated:true});\r\n  }, []);\r\n  \r\n  const replyMessage = messages.find(m => m.messageId === message.messageResponseId);\r\n\r\n  return (\r\n    <ScrollView \r\n      horizontal={true} \r\n      alwaysBounceHorizontal={false} \r\n      pagingEnabled \r\n      showsHorizontalScrollIndicator={false}\r\n      style={styles.swipeableContainer}\r\n      onScrollEndDrag={() => setMessageMenuVisible(handlePress(null), false)}\r\n    >\r\n      <View style={styles.replyContainer} >\r\n        <TouchableOpacity \r\n          style={styles.innerReplyContainer}\r\n          activeOpacity={1}\r\n          onPress={(event) => setMessageMenuVisible(handlePress(event), true)}  \r\n        >\r\n          <Text style={[styles.replyUserNameFont, message.author.userId==author.userId&&{ alignSelf: 'flex-end' }]}>\r\n            {message.author.userId==author.userId?'You':'Denis'}\r\n          </Text>\r\n          {message.author.userId==author.userId?\r\n          <View style={styles.replyMessageContainer}>\r\n            <TouchableOpacity \r\n              activeOpacity={1} \r\n              onPress={() => {handleLinkTo(message!.messageResponseId)}}\r\n              hitSlop={{ top: 10 }}\r\n            >\r\n              <View style={[styles.messageTypeTextUser, styles.replyMessagePos]}>\r\n                <Text style={styles.replyMessageFont}>\r\n                  {replyMessage!=undefined&&replyMessage?.content?.length>=20?replyMessage?.content.replace('\\n', '').slice(0,20)+'...':replyMessage?.content}\r\n                </Text>\r\n              </View>\r\n            </TouchableOpacity>\r\n            <View style={styles.replyMessageLine}/>\r\n          </View>\r\n          :\r\n          <View style={styles.replyMessageContainer}>\r\n            <View style={styles.replyMessageLine}/>\r\n            <TouchableOpacity style={{flex:1}} activeOpacity={1}>\r\n              <View style={[styles.messageTypeTextNotUser, styles.replyMessagePos]}>\r\n                <Text style={styles.replyMessageFont}>\r\n                  {replyMessage!=undefined&&replyMessage?.content.length>=20?replyMessage?.content.replace('\\n', '').slice(0,20)+'...':replyMessage?.content}\r\n                </Text>\r\n              </View>\r\n            </TouchableOpacity>\r\n          </View>}\r\n          <TouchableOpacity \r\n            activeOpacity={1} \r\n            onPress={(event) => {setMessageMenuVisible(handlePress(event), true);}}\r\n          >\r\n            <View \r\n              onLayout={(event) => onLayout(event)}\r\n              style={[message.author.userId==author.userId?styles.messageTypeTextUser:styles.messageTypeTextNotUser, {marginVertical:5}, message?.content.length>40&&styles.longMessage]}\r\n            >\r\n              <Text>{wrapText(message?.content, 40)}</Text>\r\n              <Text style={message?.content.length>40?[styles.messageTimeStamp, styles.longMessageTimeStamp]:styles.messageTimeStamp}>\r\n                {message.isEdited?'edited ':''}\r\n                {new Date(message.sendingTime).getHours().toString().padStart(2, '0')}:\r\n                {new Date(message.sendingTime).getMinutes().toString().padStart(2, '0')}\r\n              </Text>\r\n            </View>\r\n          </TouchableOpacity>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <View style={{width:50, backgroundColor:'pink'}}>\r\n        <Text>Reply</Text>\r\n      </View>\r\n    </ScrollView>\r\n)};\r\n\r\nexport default memo(replyTextType);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}