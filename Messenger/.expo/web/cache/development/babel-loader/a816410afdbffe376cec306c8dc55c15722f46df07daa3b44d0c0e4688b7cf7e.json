{"ast":null,"code":"import { EMessageType } from \"../../../../../../dao/Models/EMessageType\";\nexport var sendMessage = function sendMessage(_ref) {\n  var text = _ref.text,\n    setText = _ref.setText,\n    messages = _ref.messages,\n    setMessages = _ref.setMessages,\n    replyMessage = _ref.replyMessage,\n    onSendMessageOrCancelReplyAndEdit = _ref.onSendMessageOrCancelReplyAndEdit,\n    editMessage = _ref.editMessage,\n    messageID = _ref.messageID,\n    author = _ref.author;\n  setText('');\n  text = text.trim();\n  var messageToEdit = messages.find(function (m) {\n    return m.messageId == messageID;\n  });\n  if (text == '') {\n    onSendMessageOrCancelReplyAndEdit();\n    return;\n  }\n  if (replyMessage != null && replyMessage.content) {\n    setMessages({\n      messageId: messages.length,\n      author: author,\n      content: text,\n      sendingTime: new Date(),\n      messageType: EMessageType.text,\n      messageResponseId: replyMessage.messageId,\n      isEdited: false,\n      isDeleted: false,\n      reactionOnMessage: []\n    });\n  } else if (editMessage != null && editMessage.content && text != (messageToEdit == null ? void 0 : messageToEdit.content)) {\n    if (messageToEdit !== undefined) {\n      messageToEdit.content = text;\n      messageToEdit.isEdited = true;\n    }\n    setMessages({});\n  } else {\n    setMessages({\n      messageId: messages.length,\n      author: author,\n      content: text,\n      sendingTime: new Date(),\n      messageType: EMessageType.text,\n      isEdited: false,\n      isDeleted: false,\n      reactionOnMessage: []\n    });\n  }\n  onSendMessageOrCancelReplyAndEdit();\n};","map":{"version":3,"names":["EMessageType","sendMessage","_ref","text","setText","messages","setMessages","replyMessage","onSendMessageOrCancelReplyAndEdit","editMessage","messageID","author","trim","messageToEdit","find","m","messageId","content","length","sendingTime","Date","messageType","messageResponseId","isEdited","isDeleted","reactionOnMessage","undefined"],"sources":["D:/project/1project/Messenger/Messenger/Pages/Chats/Dialogue/components/HelperComponents/Footer/sendMessageFunc.tsx"],"sourcesContent":["import { EMessageType } from \"../../../../../../dao/Models/EMessageType\";\r\nimport User from \"../../../../../../dao/Models/User\";\r\nimport { MessageProps } from \"../../../GeneralInterfaces/IMessage\";\r\nimport { sendMessageProps } from \"../../interfaces/IDialoueFooter\";\r\n\r\nexport const sendMessage = ({text, setText, messages, setMessages, replyMessage, onSendMessageOrCancelReplyAndEdit, editMessage, messageID, author}:sendMessageProps) => {\r\n  setText('');\r\n  text = text.trim();\r\n\r\n  const messageToEdit = messages.find(m => m.messageId == messageID);\r\n\r\n  if(text == '') {\r\n    onSendMessageOrCancelReplyAndEdit();\r\n    return;\r\n  }\r\n  if(replyMessage?.content) {\r\n    setMessages({\r\n      messageId: messages.length,\r\n      author: (author as User), // SelfProgile == User ?\r\n      content: text,\r\n      sendingTime: new Date(),\r\n      messageType: EMessageType.text,\r\n      messageResponseId: replyMessage.messageId,\r\n      isEdited: false,\r\n      isDeleted: false,\r\n      reactionOnMessage: []\r\n    });\r\n  } else if(editMessage?.content&&text!=messageToEdit?.content) {\r\n    if(messageToEdit!==undefined) {\r\n      messageToEdit.content = text;\r\n      messageToEdit.isEdited = true;\r\n    }\r\n    setMessages({} as MessageProps);\r\n  } else {\r\n    setMessages({\r\n      messageId: messages.length,\r\n      author: (author as User),\r\n      content: text,\r\n      sendingTime: new Date(),\r\n      messageType: EMessageType.text,\r\n      isEdited: false,\r\n      isDeleted: false,\r\n      reactionOnMessage: []\r\n    });\r\n  }\r\n  onSendMessageOrCancelReplyAndEdit();\r\n}; "],"mappings":"AAAA,SAASA,YAAY;AAKrB,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAAC,IAAA,EAAiJ;EAAA,IAA5IC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;IAAEC,QAAQ,GAAAH,IAAA,CAARG,QAAQ;IAAEC,WAAW,GAAAJ,IAAA,CAAXI,WAAW;IAAEC,YAAY,GAAAL,IAAA,CAAZK,YAAY;IAAEC,iCAAiC,GAAAN,IAAA,CAAjCM,iCAAiC;IAAEC,WAAW,GAAAP,IAAA,CAAXO,WAAW;IAAEC,SAAS,GAAAR,IAAA,CAATQ,SAAS;IAAEC,MAAM,GAAAT,IAAA,CAANS,MAAM;EAChJP,OAAO,CAAC,EAAE,CAAC;EACXD,IAAI,GAAGA,IAAI,CAACS,IAAI,CAAC,CAAC;EAElB,IAAMC,aAAa,GAAGR,QAAQ,CAACS,IAAI,CAAC,UAAAC,CAAC;IAAA,OAAIA,CAAC,CAACC,SAAS,IAAIN,SAAS;EAAA,EAAC;EAElE,IAAGP,IAAI,IAAI,EAAE,EAAE;IACbK,iCAAiC,CAAC,CAAC;IACnC;EACF;EACA,IAAGD,YAAY,YAAZA,YAAY,CAAEU,OAAO,EAAE;IACxBX,WAAW,CAAC;MACVU,SAAS,EAAEX,QAAQ,CAACa,MAAM;MAC1BP,MAAM,EAAGA,MAAe;MACxBM,OAAO,EAAEd,IAAI;MACbgB,WAAW,EAAE,IAAIC,IAAI,CAAC,CAAC;MACvBC,WAAW,EAAErB,YAAY,CAACG,IAAI;MAC9BmB,iBAAiB,EAAEf,YAAY,CAACS,SAAS;MACzCO,QAAQ,EAAE,KAAK;MACfC,SAAS,EAAE,KAAK;MAChBC,iBAAiB,EAAE;IACrB,CAAC,CAAC;EACJ,CAAC,MAAM,IAAGhB,WAAW,YAAXA,WAAW,CAAEQ,OAAO,IAAEd,IAAI,KAAEU,aAAa,oBAAbA,aAAa,CAAEI,OAAO,GAAE;IAC5D,IAAGJ,aAAa,KAAGa,SAAS,EAAE;MAC5Bb,aAAa,CAACI,OAAO,GAAGd,IAAI;MAC5BU,aAAa,CAACU,QAAQ,GAAG,IAAI;IAC/B;IACAjB,WAAW,CAAC,CAAC,CAAiB,CAAC;EACjC,CAAC,MAAM;IACLA,WAAW,CAAC;MACVU,SAAS,EAAEX,QAAQ,CAACa,MAAM;MAC1BP,MAAM,EAAGA,MAAe;MACxBM,OAAO,EAAEd,IAAI;MACbgB,WAAW,EAAE,IAAIC,IAAI,CAAC,CAAC;MACvBC,WAAW,EAAErB,YAAY,CAACG,IAAI;MAC9BoB,QAAQ,EAAE,KAAK;MACfC,SAAS,EAAE,KAAK;MAChBC,iBAAiB,EAAE;IACrB,CAAC,CAAC;EACJ;EACAjB,iCAAiC,CAAC,CAAC;AACrC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}