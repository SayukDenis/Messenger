{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { footerstyles } from \"../Styles/FooterStyle\";\nimport ListOfFolder from \"./ListOfFolder\";\nimport Folder from \"./Footer containers/Folder\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  screenWidth = _Dimensions$get.width,\n  screenHeight = _Dimensions$get.height;\nvar Footer = function Footer(_ref) {\n  var user = _ref.user;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedFolder = _useState2[0],\n    setSelectedFolder = _useState2[1];\n  var scrollX = useRef(new Animated.Value(0)).current;\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentPosition = _useState4[0],\n    setCurrentPosition = _useState4[1];\n  var handleFolderPress = function handleFolderPress(index) {\n    if (selectedFolder === index) {\n      return;\n    }\n    setSelectedFolder(index);\n    scrollToFolder(index);\n  };\n  var scrollToIcon = function scrollToIcon(index) {\n    _jsx(\"scrollViewRefFooter\", {\n      className: \"current scrollTo\"\n    });\n  };\n  var updateSelectedFolder = function updateSelectedFolder() {\n    var newSelectedFolder = Math.floor(currentPosition / screenWidth);\n    setSelectedFolder(newSelectedFolder);\n  };\n  var handleHorizontalScroll = function handleHorizontalScroll(event) {\n    var newHorizontalPosition = event.nativeEvent.contentOffset.x;\n    if (newHorizontalPosition < 0) {\n      newHorizontalPosition = 0;\n    } else if (newHorizontalPosition > screenWidth * (user.folders.length - 1)) {\n      newHorizontalPosition = screenWidth * (user.folders.length - 1);\n    }\n    setCurrentPosition(newHorizontalPosition);\n  };\n  var handleMomentumScrollEnd = function handleMomentumScrollEnd() {\n    updateSelectedFolder();\n  };\n  var scrollToFolder = function scrollToFolder(folderId) {\n    var _scrollViewRef$curren;\n    (_scrollViewRef$curren = scrollViewRef.current) == null ? void 0 : _scrollViewRef$curren.scrollTo({\n      x: folderId * screenWidth,\n      animated: true\n    });\n  };\n  useEffect(function () {\n    scrollX.addListener(function (_ref2) {\n      var value = _ref2.value;\n      setCurrentPosition(value);\n    });\n    return function () {\n      scrollX.removeAllListeners();\n    };\n  }, []);\n  var scrollViewRef = useRef(null);\n  var scrollViewRefFooter = useRef(null);\n  var _useState5 = useState(user.folders.map(function () {\n      return screenWidth * 0.1;\n    })),\n    _useState6 = _slicedToArray(_useState5, 2),\n    widths = _useState6[0],\n    setWidths = _useState6[1];\n  var viewsRefs = [user.folders.forEach(function () {\n    return useRef(null);\n  })];\n  var _useState7 = useState(user.folders.map(function () {\n      return 0;\n    })),\n    _useState8 = _slicedToArray(_useState7, 2),\n    positionsOfFolder = _useState8[0],\n    setPositionOfFolder = _useState8[1];\n  var handleLayout = function handleLayout(event, index) {\n    var width = event.nativeEvent.layout.width;\n    var position = event.nativeEvent.layout.x;\n    var updatePosition = _toConsumableArray(positionsOfFolder);\n    updatePosition[index] = position;\n    setPositionOfFolder(updatePosition);\n    var updatedWidths = _toConsumableArray(widths);\n    updatedWidths[index] = width;\n    setWidths(updatedWidths);\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(ScrollView, {\n      horizontal: true,\n      scrollEventThrottle: 16,\n      showsHorizontalScrollIndicator: false,\n      ref: scrollViewRef,\n      pagingEnabled: true,\n      onScroll: handleHorizontalScroll,\n      onMomentumScrollEnd: handleMomentumScrollEnd,\n      nestedScrollEnabled: true,\n      children: user.folders.map(function (folder, index) {\n        return _jsx(ListOfFolder, {\n          user: user,\n          selectedFolder: index\n        }, index);\n      })\n    }), _jsx(View, {\n      style: footerstyles.container,\n      children: _jsx(ScrollView, {\n        showsHorizontalScrollIndicator: false,\n        horizontal: true,\n        style: footerstyles.scrollView,\n        scrollEventThrottle: 1,\n        ref: scrollViewRefFooter,\n        children: _jsxs(View, {\n          children: [_jsx(View, {\n            style: {\n              flexDirection: \"row\"\n            },\n            children: user.folders.map(function (folder, index) {\n              return _jsx(View, {\n                onLayout: function onLayout(event) {\n                  return handleLayout(event, index);\n                },\n                ref: viewsRefs[index],\n                children: _jsx(Folder, {\n                  text: folder.name,\n                  containerStyle: footerstyles.folderContainer,\n                  textStyle: footerstyles.folder,\n                  isSelected: index === Math.round(currentPosition / screenWidth),\n                  onPress: function onPress() {\n                    return handleFolderPress(index);\n                  }\n                }, index)\n              }, index);\n            })\n          }), _jsx(Animated.View, {\n            style: {\n              left: (currentPosition - screenWidth * Math.round(currentPosition / screenWidth)) % screenWidth / screenWidth * widths[Math.round(currentPosition / screenWidth)] + positionsOfFolder[Math.round(currentPosition / screenWidth)]\n            },\n            children: _jsx(Animated.View, {\n              style: [footerstyles.selectedFolder, {\n                width: widths[Math.round(currentPosition / screenWidth)] * 0.8,\n                marginLeft: widths[Math.floor(currentPosition / screenWidth)] * 0.1\n              }]\n            })\n          })]\n        })\n      })\n    })]\n  });\n};\nexport default Footer;","map":{"version":3,"names":["React","useRef","useState","useEffect","View","ScrollView","Dimensions","Animated","footerstyles","ListOfFolder","Folder","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","_Dimensions$get","get","screenWidth","width","screenHeight","height","Footer","_ref","user","_useState","_useState2","_slicedToArray","selectedFolder","setSelectedFolder","scrollX","Value","current","_useState3","_useState4","currentPosition","setCurrentPosition","handleFolderPress","index","scrollToFolder","scrollToIcon","className","updateSelectedFolder","newSelectedFolder","Math","floor","handleHorizontalScroll","event","newHorizontalPosition","nativeEvent","contentOffset","x","folders","length","handleMomentumScrollEnd","folderId","_scrollViewRef$curren","scrollViewRef","scrollTo","animated","addListener","_ref2","value","removeAllListeners","scrollViewRefFooter","_useState5","map","_useState6","widths","setWidths","viewsRefs","forEach","_useState7","_useState8","positionsOfFolder","setPositionOfFolder","handleLayout","layout","position","updatePosition","_toConsumableArray","updatedWidths","children","horizontal","scrollEventThrottle","showsHorizontalScrollIndicator","ref","pagingEnabled","onScroll","onMomentumScrollEnd","nestedScrollEnabled","folder","style","container","scrollView","flexDirection","onLayout","text","name","containerStyle","folderContainer","textStyle","isSelected","round","onPress","left","marginLeft"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/ChatList/Components/Footer.tsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport { View, ScrollView, StyleSheet, Text, Dimensions, Animated, TouchableOpacity, Easing, NativeMethods, LayoutChangeEvent } from 'react-native';\r\nimport MySelfUser from '../1HelpFullFolder/MySelfUser';\r\nimport { footerstyles } from '../Styles/FooterStyle';\r\nimport ListOfFolder from './ListOfFolder';\r\nimport Folder from './Footer containers/Folder';\r\n\r\n\r\ninterface FooterProps {\r\n  user: MySelfUser;\r\n}\r\n\r\nconst { width: screenWidth, height: screenHeight } = Dimensions.get('window');\r\n\r\nconst Footer: React.FC<FooterProps> = ({ user }) => {\r\n  const [selectedFolder, setSelectedFolder] = useState<number>(0);\r\n  const scrollX = useRef(new Animated.Value(0)).current;\r\n  const [currentPosition, setCurrentPosition] = useState(0);\r\n  const handleFolderPress = (index: number) => {\r\n    if (selectedFolder === index) {\r\n      return;\r\n    }\r\n    setSelectedFolder(index);\r\n    scrollToFolder(index);\r\n  };\r\n  const scrollToIcon=(index:number):void=>{\r\n    <scrollViewRefFooter className=\"current scrollTo\"></scrollViewRefFooter>\r\n  }\r\n  const updateSelectedFolder = () => {\r\n    const newSelectedFolder = Math.floor(currentPosition / screenWidth);\r\n    setSelectedFolder(newSelectedFolder);\r\n  };\r\n\r\n  const handleHorizontalScroll = (event: any) => {\r\n    let newHorizontalPosition = event.nativeEvent.contentOffset.x;\r\n    if(newHorizontalPosition<0){\r\n      newHorizontalPosition=0;\r\n    }\r\n    else if(newHorizontalPosition>screenWidth*(user.folders.length-1)){\r\n      newHorizontalPosition=screenWidth*(user.folders.length-1)\r\n    }\r\n    setCurrentPosition(newHorizontalPosition);\r\n  };\r\n\r\n  const handleMomentumScrollEnd = () => {\r\n    updateSelectedFolder();\r\n  };\r\n  \r\n  const scrollToFolder = (folderId: number) => {\r\n  \r\n   scrollViewRef.current?.scrollTo({ x: folderId * screenWidth,animated:true});\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollX.addListener(({ value }) => {\r\n      setCurrentPosition(value);\r\n    });\r\n    return () => {\r\n      scrollX.removeAllListeners();\r\n    };\r\n  }, []);\r\n\r\n  const scrollViewRef = useRef<ScrollView | null>(null);\r\n  const scrollViewRefFooter=useRef<ScrollView|null>(null);\r\n  const [widths, setWidths] = useState<number[]>(user.folders.map(() => screenWidth*0.1));\r\n\r\n  const viewsRefs:any = [user.folders.forEach(()=>useRef(null))];\r\n  const [positionsOfFolder, setPositionOfFolder] = useState<number[]>(user.folders.map(() => 0));\r\n    const handleLayout = (event:LayoutChangeEvent, index:number) => {\r\n      const { width } = event.nativeEvent.layout;\r\n      const position = event.nativeEvent.layout.x // Отримуємо ширину з події\r\n      const updatePosition=[...positionsOfFolder];\r\n      updatePosition[index]=position;\r\n      setPositionOfFolder(updatePosition);\r\n      const updatedWidths = [...widths]; // Копіюємо поточний стан\r\n      updatedWidths[index] = width; // Оновлюємо ширину для об'єкта за індексом\r\n      setWidths(updatedWidths); // Зберігаємо оновлений стан\r\n    };\r\n  \r\n  return (<>\r\n    <ScrollView\r\n      horizontal\r\n      scrollEventThrottle={16}\r\n      showsHorizontalScrollIndicator={false}\r\n      ref={scrollViewRef}\r\n      pagingEnabled\r\n      onScroll={handleHorizontalScroll}\r\n      onMomentumScrollEnd={handleMomentumScrollEnd}\r\n      nestedScrollEnabled={true}\r\n    >\r\n      {user.folders.map((folder, index) => (\r\n        <ListOfFolder key={index} user={user} selectedFolder={index} />\r\n      ))}\r\n    </ScrollView>\r\n    <View style={footerstyles.container}>\r\n      <ScrollView\r\n        showsHorizontalScrollIndicator={false}\r\n        horizontal\r\n        style={footerstyles.scrollView}\r\n        scrollEventThrottle={1}\r\n        ref={scrollViewRefFooter}\r\n      >\r\n        <View>\r\n        <View style={{flexDirection:\"row\"}}>\r\n        {user.folders.map((folder, index) => {\r\n          return(<View key={index} onLayout={(event) => handleLayout(event, index)} ref={viewsRefs[index]}><Folder\r\n            key={index}\r\n            text={folder.name}\r\n            containerStyle={footerstyles.folderContainer}\r\n            textStyle={footerstyles.folder}\r\n            isSelected={index === Math.round(currentPosition/(screenWidth))}\r\n            onPress={()=> handleFolderPress(index)}\r\n          />\r\n          </View>)\r\n          })}\r\n          </View>\r\n          <Animated.View style={{left:(((currentPosition-screenWidth*Math.round(currentPosition/screenWidth))%(screenWidth)/(screenWidth))*widths[Math.round(currentPosition/screenWidth)])+positionsOfFolder[Math.round(currentPosition/screenWidth)],}}>\r\n          <Animated.View  style={[footerstyles.selectedFolder,{width:widths[Math.round(currentPosition/screenWidth)]*0.8,marginLeft:widths[Math.floor(currentPosition/screenWidth)]*0.1}]}/>\r\n          </Animated.View>\r\n          </View>\r\n      </ScrollView>\r\n    </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}