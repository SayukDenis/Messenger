{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { setCurrentPositionForChatList, setFolderSelectedArray, setSelectedFolderForChatList } from \"../../../ReducersAndActions/Actions/ChatListActions/ChatListActions\";\nimport ListOfFolder from \"./ListOfFolder\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { setAnimationState } from \"../../../ReducersAndActions/Actions/ChatListActions/ChatListActions\";\nimport Footer from \"./Footer\";\nimport { mySelfUser } from \"../1HelpFullFolder/Initialization\";\nimport ModalWindowFolderState from \"./List of folders containers/ModalWindowFolderState\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  screenWidth = _Dimensions$get.width,\n  screenHeight = _Dimensions$get.height;\nvar Main = function Main(_ref) {\n  var user = _ref.user,\n    isTouchableForHeader = _ref.isTouchableForHeader,\n    onPressForTouchableHeader = _ref.onPressForTouchableHeader;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedLongPressFolder = _useState2[0],\n    setSelectedLongPressFolder = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    startTime = _useState4[0],\n    setStartTime = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    endDragOfChatList = _useState6[0],\n    setEndDragOfChatList = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    endTime = _useState8[0],\n    setEndTime = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isVisibleForModalFolder = _useState10[0],\n    setisVisibleForModalFolder = _useState10[1];\n  var _useState11 = useState(0),\n    _useState12 = _slicedToArray(_useState11, 2),\n    positionX = _useState12[0],\n    setPositionX = _useState12[1];\n  var _useState13 = useState(0),\n    _useState14 = _slicedToArray(_useState13, 2),\n    positionXInContainer = _useState14[0],\n    setPositionXInContainer = _useState14[1];\n  var dispatch = useDispatch();\n  var animationState = useSelector(function (state) {\n    return state.chatListReducer.animation.animationState;\n  });\n  var folderSelectedArray = useSelector(function (state) {\n    return state.chatListReducer.folderSelectedArray.folderSelectedArray;\n  });\n  useEffect(function () {});\n  var selectFolder = useSelector(function (state) {\n    return state.chatListReducer.selectedFolder.selectedFolder;\n  });\n  var scrollViewRef = useRef(null);\n  var scrollViewRefFooter = useRef(null);\n  var widths = useRef(user.folders.map(function () {\n    return screenWidth * 0.1831;\n  }));\n  var viewsRefs = [user.folders.forEach(function () {\n    return useRef(null);\n  })];\n  var positionsOfFolder = useRef(user.folders.map(function () {\n    return 0;\n  }));\n  var handleFolderPress = useRef(function (index) {\n    setEndDragOfChatList(false);\n    NewFolderSelect(index);\n    scrollToFolder(index);\n  });\n  var handleHorizontalScroll = function handleHorizontalScroll(event) {\n    var newHorizontalPosition = event.nativeEvent.contentOffset.x;\n    if (newHorizontalPosition < 0) {\n      newHorizontalPosition = 0;\n    } else if (newHorizontalPosition > screenWidth * (user.folders.length - 1)) {\n      newHorizontalPosition = screenWidth * (user.folders.length - 1);\n    }\n    dispatch(setCurrentPositionForChatList(newHorizontalPosition));\n    var newFolder = Math.round(newHorizontalPosition / screenWidth);\n    scrollToPosition(newHorizontalPosition);\n    if (newFolder != selectFolder) {\n      if (!endDragOfChatList) {\n        return;\n      }\n      NewFolderSelect(newFolder);\n    }\n  };\n  var NewFolderSelect = function NewFolderSelect(newFolder) {\n    dispatch(setSelectedFolderForChatList(newFolder));\n    var bufferFolderSelectedArray = _toConsumableArray(folderSelectedArray);\n    bufferFolderSelectedArray[selectFolder] = false;\n    bufferFolderSelectedArray[newFolder] = true;\n    dispatch(setFolderSelectedArray(bufferFolderSelectedArray));\n  };\n  var scrollToFolder = function () {\n    var _ref2 = _asyncToGenerator(function* (folderId) {\n      var _scrollViewRef$curren;\n      yield (_scrollViewRef$curren = scrollViewRef.current) == null ? void 0 : _scrollViewRef$curren.scrollToIndex({\n        index: folderId,\n        animated: true\n      });\n    });\n    return function scrollToFolder(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var scrollToPosition = function scrollToPosition(currentPosition) {\n    var _scrollViewRefFooter$;\n    (_scrollViewRefFooter$ = scrollViewRefFooter.current) == null ? void 0 : _scrollViewRefFooter$.scrollTo({\n      x: -(screenWidth * 0.92) / 2 + widths.current[Math.round(currentPosition / screenWidth)] / 2 + ((currentPosition - screenWidth * Math.round(currentPosition / screenWidth)) % screenWidth / screenWidth * widths.current[Math.round(currentPosition / screenWidth)] + positionsOfFolder.current[Math.round(currentPosition / screenWidth)]),\n      animated: false\n    });\n  };\n  var handleLayout = useRef(function (event, index) {\n    var width = event.nativeEvent.layout.width;\n    var position = event.nativeEvent.layout.x;\n    var updatePosition = _toConsumableArray(positionsOfFolder.current);\n    updatePosition[index] = position;\n    positionsOfFolder.current = updatePosition;\n    var updatedWidths = _toConsumableArray(widths.current);\n    updatedWidths[index] = width;\n    widths.current = updatedWidths;\n  });\n  var handleLongPress = useRef(function (e, index) {\n    setSelectedLongPressFolder(index);\n    var target = e.nativeEvent;\n    setPositionX(target.pageX);\n    setPositionXInContainer(target.locationX);\n    if (target.pageX - target.locationX + widths[index] > screenWidth * 0.98) {\n      var _scrollViewRefFooter$2;\n      (_scrollViewRefFooter$2 = scrollViewRefFooter.current) == null ? void 0 : _scrollViewRefFooter$2.scrollTo({\n        x: positionsOfFolder[index] - screenWidth * 0.92 + widths[index],\n        animated: false\n      });\n      setPositionX(screenWidth * 0.964 - widths[index]);\n      setPositionXInContainer(0);\n    } else if (target.pageX - target.locationX < screenWidth * 0.04) {\n      var _scrollViewRefFooter$3;\n      (_scrollViewRefFooter$3 = scrollViewRefFooter.current) == null ? void 0 : _scrollViewRefFooter$3.scrollTo({\n        x: positionsOfFolder[index],\n        animated: false\n      });\n      setPositionX(screenWidth * 0.044);\n      setPositionXInContainer(0);\n    }\n    setisVisibleForModalFolder(true);\n    dispatch(setAnimationState(true));\n  });\n  var handlePress = function handlePress() {\n    setStartTime(Date.now());\n  };\n  function handlePressOut() {\n    setEndTime(Date.now());\n    var duration = startTime - endTime;\n    if (duration < 16) {\n      setisVisibleForModalFolder(false);\n      return;\n    }\n    setStartTime(Date.now());\n  }\n  var setAnimation = function setAnimation() {\n    dispatch(setAnimationState(false));\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(ModalWindowFolderState, {\n      isVisibleForModalFolder: isVisibleForModalFolder,\n      animationState: animationState,\n      selectedLongPressFolder: selectedLongPressFolder,\n      selectedFolder: selectFolder,\n      user: user,\n      positionX: positionX,\n      positionXInContainer: positionXInContainer,\n      widths: widths.current,\n      setAnimation: setAnimation,\n      handlePress: handlePress,\n      handlePressOut: handlePressOut\n    }), _jsx(FlatList, {\n      data: user.folders,\n      horizontal: true,\n      pagingEnabled: true,\n      ref: scrollViewRef,\n      showsHorizontalScrollIndicator: false,\n      onMomentumScrollEnd: function onMomentumScrollEnd() {\n        setEndDragOfChatList(true);\n      },\n      scrollEventThrottle: 1,\n      nestedScrollEnabled: true,\n      keyExtractor: function keyExtractor(item, index) {\n        return index.toString();\n      },\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item,\n          index = _ref3.index;\n        return _jsx(View, {\n          children: _jsx(ListOfFolder, {\n            user: user,\n            currentFolder: index\n          }, index)\n        });\n      },\n      onScroll: handleHorizontalScroll,\n      windowSize: 3\n    }), _jsx(Footer, {\n      user: mySelfUser,\n      isTouchableForHeader: isTouchableForHeader,\n      scrollViewRefFooter: scrollViewRefFooter,\n      handleLayout: handleLayout,\n      isVisibleForModalFolder: isVisibleForModalFolder,\n      handleFolderPress: handleFolderPress,\n      handleLongPress: handleLongPress,\n      positionsOfFolder: positionsOfFolder,\n      widths: widths\n    }), isTouchableForHeader ? _jsx(TouchableOpacity, {\n      onPress: onPressForTouchableHeader,\n      style: {\n        height: screenHeight,\n        width: screenWidth,\n        position: \"absolute\",\n        zIndex: 4\n      }\n    }) : null]\n  });\n};\nexport default connect(null)(Main);","map":{"version":3,"names":["React","useRef","useState","useEffect","View","Dimensions","TouchableOpacity","setCurrentPositionForChatList","setFolderSelectedArray","setSelectedFolderForChatList","ListOfFolder","connect","useDispatch","useSelector","setAnimationState","Footer","mySelfUser","ModalWindowFolderState","FlatList","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","_Dimensions$get","get","screenWidth","width","screenHeight","height","Main","_ref","user","isTouchableForHeader","onPressForTouchableHeader","_useState","_useState2","_slicedToArray","selectedLongPressFolder","setSelectedLongPressFolder","_useState3","_useState4","startTime","setStartTime","_useState5","_useState6","endDragOfChatList","setEndDragOfChatList","_useState7","_useState8","endTime","setEndTime","_useState9","_useState10","isVisibleForModalFolder","setisVisibleForModalFolder","_useState11","_useState12","positionX","setPositionX","_useState13","_useState14","positionXInContainer","setPositionXInContainer","dispatch","animationState","state","chatListReducer","animation","folderSelectedArray","selectFolder","selectedFolder","scrollViewRef","scrollViewRefFooter","widths","folders","map","viewsRefs","forEach","positionsOfFolder","handleFolderPress","index","NewFolderSelect","scrollToFolder","handleHorizontalScroll","event","newHorizontalPosition","nativeEvent","contentOffset","x","length","newFolder","Math","round","scrollToPosition","bufferFolderSelectedArray","_toConsumableArray","_ref2","_asyncToGenerator","folderId","_scrollViewRef$curren","current","scrollToIndex","animated","_x","apply","arguments","currentPosition","_scrollViewRefFooter$","scrollTo","handleLayout","layout","position","updatePosition","updatedWidths","handleLongPress","e","target","pageX","locationX","_scrollViewRefFooter$2","_scrollViewRefFooter$3","handlePress","Date","now","handlePressOut","duration","setAnimation","children","data","horizontal","pagingEnabled","ref","showsHorizontalScrollIndicator","onMomentumScrollEnd","scrollEventThrottle","nestedScrollEnabled","keyExtractor","item","toString","renderItem","_ref3","currentFolder","onScroll","windowSize","onPress","style","zIndex"],"sources":["D:/project/1project/Messenger/Messenger/Pages/ChatList/Components/Main.tsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  ScrollView,\r\n  Dimensions,\r\n  Animated,\r\n  Platform,\r\n  LayoutChangeEvent,\r\n  GestureResponderEvent,\r\n  Text,\r\n  TouchableOpacity,\r\n  StatusBar,\r\n  SafeAreaView,\r\n} from \"react-native\";\r\nimport {\r\n  setCurrentPositionForChatList,\r\n  setFolderSelectedArray,\r\n  setSelectedFolderForChatList,\r\n} from \"../../../ReducersAndActions/Actions/ChatListActions/ChatListActions\";\r\nimport MySelfUser from \"../1HelpFullFolder/MySelfUser\";\r\nimport ListOfFolder from \"./ListOfFolder\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { setAnimationState } from \"../../../ReducersAndActions/Actions/ChatListActions/ChatListActions\";\r\nimport Footer from \"./Footer\";\r\nimport { mySelfUser } from \"../1HelpFullFolder/Initialization\";\r\nimport ModalWindowFolderState from \"./List of folders containers/ModalWindowFolderState\";\r\nimport { FlatList } from \"react-native\";\r\nimport Header from \"./Header\";\r\ninterface MainProps {\r\n  user: MySelfUser;\r\n  onPressForTouchableHeader: () => void;\r\n  isTouchableForHeader: boolean;\r\n}\r\n\r\nconst { width: screenWidth, height: screenHeight } = Dimensions.get(\"window\");\r\n\r\nconst Main: React.FC<MainProps> = ({\r\n  user,\r\n  isTouchableForHeader,\r\n  onPressForTouchableHeader,\r\n}) => {\r\n  const [selectedLongPressFolder, setSelectedLongPressFolder] =\r\n    useState<number>(0);\r\n  const [startTime, setStartTime] = useState(0);\r\n  const [endDragOfChatList, setEndDragOfChatList] = useState(true);\r\n  const [endTime, setEndTime] = useState(0);\r\n  const [isVisibleForModalFolder, setisVisibleForModalFolder] = useState(false);\r\n  const [positionX, setPositionX] = useState<number>(0);\r\n  const [positionXInContainer, setPositionXInContainer] = useState<number>(0);\r\n  const dispatch = useDispatch();\r\n  const animationState = useSelector((state: any) => {\r\n    return state.chatListReducer.animation.animationState;\r\n  });\r\n  const folderSelectedArray = useSelector((state: any) => {\r\n    return state.chatListReducer.folderSelectedArray.folderSelectedArray;\r\n  });\r\n  useEffect(() => {\r\n    //console.log(folderSelectedArray)\r\n  });\r\n  const selectFolder = useSelector((state: any) => {\r\n    return state.chatListReducer.selectedFolder.selectedFolder;\r\n  });\r\n\r\n  const scrollViewRef = useRef<FlatList | null>(null);\r\n  const scrollViewRefFooter = useRef<ScrollView | null>(null);\r\n\r\n  const widths = useRef<number[]>(user.folders.map(() => screenWidth * 0.1831));\r\n  const viewsRefs: any = [user.folders.forEach(() => useRef(null))];\r\n  const positionsOfFolder = useRef<number[]>(user.folders.map(() => 0));\r\n\r\n  const handleFolderPress = useRef((index: number) => {\r\n    setEndDragOfChatList(false);\r\n    NewFolderSelect(index);\r\n    scrollToFolder(index);\r\n  });\r\n\r\n  const handleHorizontalScroll = (event: any) => {\r\n    let newHorizontalPosition = event.nativeEvent.contentOffset.x;\r\n    if (newHorizontalPosition < 0) {\r\n      newHorizontalPosition = 0;\r\n    } else if (\r\n      newHorizontalPosition >\r\n      screenWidth * (user.folders.length - 1)\r\n    ) {\r\n      newHorizontalPosition = screenWidth * (user.folders.length - 1);\r\n    }\r\n    dispatch(setCurrentPositionForChatList(newHorizontalPosition));\r\n    const newFolder: number = Math.round(newHorizontalPosition / screenWidth);\r\n    //console.log(mySelfUser.folders[newFolder].name)\r\n    scrollToPosition(newHorizontalPosition);\r\n    if (newFolder != selectFolder) {\r\n      if(!endDragOfChatList){\r\n          return\r\n      }\r\n      NewFolderSelect(newFolder);\r\n    }\r\n  };\r\n  const NewFolderSelect = (newFolder: number) => {\r\n    dispatch(setSelectedFolderForChatList(newFolder));\r\n    let bufferFolderSelectedArray = [...folderSelectedArray];\r\n    bufferFolderSelectedArray[selectFolder] = false;\r\n    bufferFolderSelectedArray[newFolder] = true;\r\n    dispatch(setFolderSelectedArray(bufferFolderSelectedArray));\r\n  };\r\n  const scrollToFolder =  async (folderId: number) => {\r\n    await scrollViewRef.current?.scrollToIndex({\r\n      index: folderId,\r\n      animated: true,\r\n    });\r\n\r\n    //scrollToIconOnTouch(folderId)\r\n  };\r\n  const scrollToPosition = (currentPosition: number) => {\r\n    scrollViewRefFooter.current?.scrollTo({\r\n      x:\r\n        -(screenWidth * 0.92) / 2 +\r\n        widths.current[Math.round(currentPosition / screenWidth)] / 2 +\r\n        ((((currentPosition -\r\n          screenWidth * Math.round(currentPosition / screenWidth)) %\r\n          screenWidth) /\r\n          screenWidth) *\r\n          widths.current[Math.round(currentPosition / screenWidth)] +\r\n          positionsOfFolder.current[Math.round(currentPosition / screenWidth)]),\r\n      animated: false,\r\n    });\r\n  };\r\n\r\n  const handleLayout = useRef((event: LayoutChangeEvent, index: number) => {\r\n    const { width } = event.nativeEvent.layout;\r\n    const position = event.nativeEvent.layout.x;\r\n    const updatePosition = [...positionsOfFolder.current];\r\n    updatePosition[index] = position;\r\n    positionsOfFolder.current = updatePosition;\r\n    const updatedWidths = [...widths.current];\r\n    updatedWidths[index] = width;\r\n    widths.current = updatedWidths;\r\n  });\r\n\r\n  const handleLongPress = useRef((e: GestureResponderEvent, index: number) => {\r\n    setSelectedLongPressFolder(index);\r\n    const target = e.nativeEvent;\r\n    setPositionX(target.pageX);\r\n    setPositionXInContainer(target.locationX);\r\n    if (target.pageX - target.locationX + widths[index] > screenWidth * 0.98) {\r\n      scrollViewRefFooter.current?.scrollTo({\r\n        x: positionsOfFolder[index] - screenWidth * 0.92 + widths[index],\r\n        animated: false,\r\n      });\r\n      setPositionX(screenWidth * 0.964 - widths[index]);\r\n      setPositionXInContainer(0);\r\n    } else if (target.pageX - target.locationX < screenWidth * 0.04) {\r\n      scrollViewRefFooter.current?.scrollTo({\r\n        x: positionsOfFolder[index],\r\n        animated: false,\r\n      });\r\n      setPositionX(screenWidth * 0.044);\r\n      setPositionXInContainer(0);\r\n    }\r\n    setisVisibleForModalFolder(true);\r\n    dispatch(setAnimationState(true));\r\n  });\r\n  const handlePress = () => {\r\n    setStartTime(Date.now());\r\n  };\r\n\r\n  function handlePressOut() {\r\n    setEndTime(Date.now());\r\n    const duration = startTime - endTime;\r\n    if (duration < 16) {\r\n      setisVisibleForModalFolder(false);\r\n      return;\r\n    }\r\n    setStartTime(Date.now());\r\n  }\r\n\r\n  const setAnimation = () => {\r\n    dispatch(setAnimationState(false));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ModalWindowFolderState\r\n        isVisibleForModalFolder={isVisibleForModalFolder}\r\n        animationState={animationState}\r\n        selectedLongPressFolder={selectedLongPressFolder}\r\n        selectedFolder={selectFolder}\r\n        user={user}\r\n        positionX={positionX}\r\n        positionXInContainer={positionXInContainer}\r\n        widths={widths.current}\r\n        setAnimation={setAnimation}\r\n        handlePress={handlePress}\r\n        handlePressOut={handlePressOut}\r\n      />\r\n      <FlatList\r\n        data={user.folders}\r\n        horizontal\r\n        pagingEnabled\r\n        ref={scrollViewRef}\r\n        showsHorizontalScrollIndicator={false}\r\n        onMomentumScrollEnd={()=>{setEndDragOfChatList(true)}}\r\n        scrollEventThrottle={1}\r\n        nestedScrollEnabled={true}\r\n        keyExtractor={(item, index) => index.toString()}\r\n        renderItem={({ item, index }) => (\r\n          <View>\r\n            <ListOfFolder key={index} user={user} currentFolder={index} />\r\n          </View>\r\n        )}\r\n        onScroll={handleHorizontalScroll}\r\n        // onMomentumScrollBegin={()=>{}}\r\n        windowSize={3}\r\n        //initialNumToRender={3}\r\n      />\r\n      <Footer\r\n        user={mySelfUser}\r\n        isTouchableForHeader={isTouchableForHeader}\r\n        scrollViewRefFooter={scrollViewRefFooter}\r\n        handleLayout={handleLayout}\r\n        isVisibleForModalFolder={isVisibleForModalFolder}\r\n        handleFolderPress={handleFolderPress}\r\n        handleLongPress={handleLongPress}\r\n        positionsOfFolder={positionsOfFolder}\r\n        widths={widths}\r\n      />\r\n\r\n      {isTouchableForHeader ? (\r\n        <TouchableOpacity\r\n          onPress={onPressForTouchableHeader}\r\n          style={{\r\n            height: screenHeight,\r\n            width: screenWidth,\r\n            position: \"absolute\",\r\n            zIndex: 4,\r\n          }}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(null)(Main);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}