{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport View from \"react-native-web/dist/exports/View\";\nimport { useState, useCallback, useEffect } from 'react';\nimport DialogueHeader from \"./components/DialogueHeader\";\nimport DialogueMessages from \"./components/DialogueMessages\";\nimport DialogueFooter from \"./components/DialogueFooter\";\nimport MessageMenu from \"./components/MessageMenu\";\nimport styles from \"./DialogueStyle\";\nimport React from 'react';\nimport DeleteMessageModal from \"./components/DeleteMessageModal\";\nimport BackGroundGradinetView from \"../../SemiComponents/BackGroundGradientView\";\nimport { connect } from 'react-redux';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar coord;\nvar messageIdForReplyAndEdit;\nvar msgs;\nvar user = {\n  userId: 0,\n  name: 'Denis',\n  numberPhone: '',\n  nickname: 'Denis',\n  description: '',\n  linkToPhoto: '',\n  password: 'asdoapwd',\n  email: 'dopawdjpa',\n  timeLastEntry: new Date(),\n  tabs: new Array(),\n  schema: {}\n};\nvar authorMessageLastWatched;\nvar userMessageLastWatched;\nvar dialogue;\nvar Dialogue = function Dialogue(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  dialogue = route.params.chat;\n  authorMessageLastWatched = dialogue.lastWatchedMessage.find(function (obj) {\n    return obj.user.userId === user.userId;\n  });\n  userMessageLastWatched = dialogue.lastWatchedMessage.find(function (obj) {\n    return obj.user.userId !== user.userId;\n  });\n  var _useState = useState(-1),\n    _useState2 = _slicedToArray(_useState, 2),\n    messageID = _useState2[0],\n    setMessageID = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    messageMenuVisible = _useState4[0],\n    setMessageMenuVisible = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    listOfMessages = _useState6[0],\n    setListOfMessages = _useState6[1];\n  useEffect(function () {\n    setListOfMessages(dialogue.messages.reverse());\n  }, []);\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isReply = _useState8[0],\n    setIsReply = _useState8[1];\n  var replyHandler = useCallback(function () {\n    setIsReply(!isReply);\n    setReplyMessageHandler();\n  }, [messageID]);\n  var setReplyMessageHandler = function setReplyMessageHandler() {\n    if (!isReply) setEditMessage({});\n  };\n  var sendMessageOrCancelReplyAndEditHandler = useCallback(function () {\n    setIsEdit(false);\n    setIsReply(false);\n    setEditMessage({});\n  }, []);\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isEdit = _useState10[0],\n    setIsEdit = _useState10[1];\n  var _useState11 = useState({}),\n    _useState12 = _slicedToArray(_useState11, 2),\n    editMessage = _useState12[0],\n    setEditMessage = _useState12[1];\n  var pressEditButton = function pressEditButton() {\n    setIsEdit(!isEdit);\n    setEditMessageHandler();\n  };\n  var setEditMessageHandler = function setEditMessageHandler() {\n    if (!isEdit) {\n      setEditMessage(msgs.find(function (m) {\n        return m.messageId == messageID;\n      }));\n    } else setEditMessage({});\n  };\n  var handleMessagePressOrSwipe = useCallback(function (coordinations, pressed) {\n    coord = coordinations;\n    if (pressed) {\n      setMessageMenuVisible(true);\n      setMessageID(coordinations.ID);\n      messageIdForReplyAndEdit = coordinations.ID;\n    } else {\n      setMessageID(coordinations.ID);\n      messageIdForReplyAndEdit = coordinations.ID;\n      replyHandler();\n    }\n  }, []);\n  var updateMessageContent = function updateMessageContent(messageId, newContent) {\n    if (messageId && newContent) setListOfMessages(function (prevMessages) {\n      return prevMessages.map(function (message) {\n        return message.messageId === messageId ? _objectSpread(_objectSpread({}, message), {}, {\n          content: newContent\n        }) : message;\n      });\n    });\n  };\n  var setMessages = useCallback(function (mes) {\n    if (mes.messageId) {\n      setListOfMessages([mes].concat(_toConsumableArray(listOfMessages)));\n    } else {\n      var m = msgs.find(function (m) {\n        return m.messageId == messageID;\n      });\n      updateMessageContent(m == null ? void 0 : m.messageId, m == null ? void 0 : m.content);\n    }\n  }, [listOfMessages]);\n  useEffect(function () {\n    msgs = listOfMessages;\n  }, [listOfMessages]);\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    deleting = _useState14[0],\n    setDeleting = _useState14[1];\n  var setDeletingHandler = function setDeletingHandler() {\n    setDeleting(!deleting);\n  };\n  var onDeletePress = function onDeletePress() {\n    setListOfMessages(_toConsumableArray(listOfMessages.filter(function (m) {\n      return m.messageId != messageID;\n    })));\n    setDeleting(!deleting);\n  };\n  var handleMessageMenuPress = useCallback(function () {\n    setMessageMenuVisible(false);\n  }, []);\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    copy = _useState16[0],\n    setCopy = _useState16[1];\n  var setCopyHandler = function setCopyHandler() {\n    setCopy(!copy);\n  };\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    selecting = _useState18[0],\n    setSelecting = _useState18[1];\n  var setSelectingHandler = function setSelectingHandler() {\n    setSelecting(!selecting);\n  };\n  var _useState19 = useState(dialogue.pinnedMessage),\n    _useState20 = _slicedToArray(_useState19, 2),\n    listOfPinnedMessages = _useState20[0],\n    setListOfPinnedMessages = _useState20[1];\n  var pinMessageHandler = function pinMessageHandler(message) {\n    if (listOfPinnedMessages.find(function (m) {\n      return message.messageId === m.messageId;\n    })) {\n      var _msgs = listOfPinnedMessages.filter(function (m) {\n        return m.messageId !== message.messageId;\n      });\n      setListOfPinnedMessages(_msgs);\n      if (_msgs.length > 0) {\n        setPinnedMessage(_msgs[_msgs.length - 1]);\n      } else {\n        setPinnedMessage({});\n      }\n    } else {\n      setListOfPinnedMessages([].concat(_toConsumableArray(listOfPinnedMessages), [message]));\n      setPinnedMessage(message);\n    }\n  };\n  var _useState21 = useState({}),\n    _useState22 = _slicedToArray(_useState21, 2),\n    pinnedMessage = _useState22[0],\n    setPinnedMessage = _useState22[1];\n  console.log(listOfPinnedMessages.length);\n  var mes = msgs ? msgs.find(function (m) {\n    return m.messageId == messageID;\n  }) : listOfMessages.find(function (m) {\n    return m.messageId == messageID;\n  });\n  return _jsx(View, {\n    style: styles.dialogueContainer,\n    children: _jsxs(BackGroundGradinetView, {\n      children: [_jsx(MessageMenu, {\n        isUser: mes != undefined && mes.author.userId === (user == null ? void 0 : user.userId),\n        isVisible: messageMenuVisible,\n        onOverlayPress: handleMessageMenuPress,\n        coord: coord,\n        messages: listOfMessages,\n        onReplyPress: replyHandler,\n        onEditPress: pressEditButton,\n        onDeletePress: setDeletingHandler,\n        onCopyPress: setCopyHandler,\n        onSelectPress: setSelectingHandler,\n        onPinPress: pinMessageHandler,\n        userMessageLastWatched: userMessageLastWatched\n      }), _jsx(DialogueHeader, {\n        navigation: navigation,\n        picture: dialogue.linkToPhoto,\n        displayName: dialogue.users[1].name,\n        activityTime: 'Online recently',\n        pinnedMessage: listOfPinnedMessages[listOfPinnedMessages.length - 1],\n        countOfPinnedMessages: listOfPinnedMessages.length,\n        currentNumOfPinnedMessage: listOfPinnedMessages.findIndex(function (m) {\n          return m.messageId === pinnedMessage.messageId;\n        }) + 1,\n        selecting: selecting,\n        cancelSelection: setSelectingHandler\n      }), _jsx(DialogueMessages, {\n        setMessageMenuVisible: handleMessagePressOrSwipe,\n        messageID: messageID,\n        listOfMessages: listOfMessages,\n        isReply: isReply,\n        isEdit: isEdit,\n        author: user,\n        userMessageLastWatched: userMessageLastWatched,\n        authorMessageLastWatched: authorMessageLastWatched,\n        selecting: selecting,\n        hasPinnedMessage: listOfPinnedMessages.length > 0\n      }), _jsx(DialogueFooter, {\n        messages: listOfMessages,\n        setMessages: setMessages,\n        isReply: isReply,\n        author: user,\n        messageID: messageID,\n        isEdit: isEdit,\n        editMessage: editMessage,\n        replyMessage: isReply ? msgs.find(function (m) {\n          return m.messageId == messageIdForReplyAndEdit;\n        }) : {},\n        onSendMessageOrCancelReplyAndEdit: sendMessageOrCancelReplyAndEditHandler,\n        copyMessagePopUp: copy,\n        endCopyMessagePopUp: setCopyHandler\n      }), _jsx(DeleteMessageModal, {\n        deleting: deleting,\n        setDeletingHandler: setDeletingHandler,\n        onDeletePress: onDeletePress,\n        message: mes,\n        author: user\n      })]\n    })\n  });\n};\nexport default connect(null)(Dialogue);","map":{"version":3,"names":["useState","useCallback","useEffect","DialogueHeader","DialogueMessages","DialogueFooter","MessageMenu","styles","React","DeleteMessageModal","BackGroundGradinetView","connect","jsx","_jsx","jsxs","_jsxs","coord","messageIdForReplyAndEdit","msgs","user","userId","name","numberPhone","nickname","description","linkToPhoto","password","email","timeLastEntry","Date","tabs","Array","schema","authorMessageLastWatched","userMessageLastWatched","dialogue","Dialogue","_ref","navigation","route","params","chat","lastWatchedMessage","find","obj","_useState","_useState2","_slicedToArray","messageID","setMessageID","_useState3","_useState4","messageMenuVisible","setMessageMenuVisible","_useState5","_useState6","listOfMessages","setListOfMessages","messages","reverse","_useState7","_useState8","isReply","setIsReply","replyHandler","setReplyMessageHandler","setEditMessage","sendMessageOrCancelReplyAndEditHandler","setIsEdit","_useState9","_useState10","isEdit","_useState11","_useState12","editMessage","pressEditButton","setEditMessageHandler","m","messageId","handleMessagePressOrSwipe","coordinations","pressed","ID","updateMessageContent","newContent","prevMessages","map","message","_objectSpread","content","setMessages","mes","concat","_toConsumableArray","_useState13","_useState14","deleting","setDeleting","setDeletingHandler","onDeletePress","filter","handleMessageMenuPress","_useState15","_useState16","copy","setCopy","setCopyHandler","_useState17","_useState18","selecting","setSelecting","setSelectingHandler","_useState19","pinnedMessage","_useState20","listOfPinnedMessages","setListOfPinnedMessages","pinMessageHandler","length","setPinnedMessage","_useState21","_useState22","console","log","View","style","dialogueContainer","children","isUser","undefined","author","isVisible","onOverlayPress","onReplyPress","onEditPress","onCopyPress","onSelectPress","onPinPress","picture","displayName","users","activityTime","countOfPinnedMessages","currentNumOfPinnedMessage","findIndex","cancelSelection","hasPinnedMessage","replyMessage","onSendMessageOrCancelReplyAndEdit","copyMessagePopUp","endCopyMessagePopUp"],"sources":["D:/project/1project/Messenger/Messenger/Pages/Chats/Dialogue/Dialogue.tsx"],"sourcesContent":["import { View } from 'react-native';\r\nimport { useState, useCallback, useEffect } from 'react';\r\nimport DialogueHeader from './components/DialogueHeader';\r\nimport DialogueMessages from './components/DialogueMessages';\r\nimport DialogueFooter from './components/DialogueFooter';\r\nimport MessageMenu from './components/MessageMenu';\r\nimport styles from './DialogueStyle';\r\nimport React from 'react';\r\nimport DeleteMessageModal from './components/DeleteMessageModal';\r\nimport BackGroundGradinetView from '../../SemiComponents/BackGroundGradientView';\r\nimport * as DialogueModel from '../../../dao/Models/Chats/Dialogue';\r\nimport { MessageProps } from './GeneralInterfaces/IMessage';\r\nimport { connect } from 'react-redux';\r\nimport SelfProfile from '../../../dao/Models/SelfProfile';\r\nimport User from '../../../dao/Models/User';\r\nimport ILastWatchedMessage from '../../../dao/Models/Chats/ILastWatchedMessage';\r\nimport { Layout } from './GeneralInterfaces/ILayout';\r\n\r\nlet coord:Layout;\r\nlet messageIdForReplyAndEdit:number;\r\nlet msgs:MessageProps[];\r\n\r\nconst user:SelfProfile = {\r\n  userId: 0,\r\n  name: 'Denis',\r\n  numberPhone: '',\r\n  nickname: 'Denis',\r\n  description: '',\r\n  linkToPhoto: '',\r\n  password: 'asdoapwd',\r\n  email: 'dopawdjpa',\r\n  timeLastEntry: new Date(),\r\n  tabs: new Array(),\r\n  schema: {} as any\r\n}\r\n\r\n// const user:SelfProfile = useSelector((state: any) => state.selfProfileUser);\r\n\r\nlet authorMessageLastWatched:ILastWatchedMessage | undefined;\r\nlet userMessageLastWatched:ILastWatchedMessage | undefined;\r\nlet dialogue:DialogueModel.default;\r\nconst Dialogue = ({ navigation, route }:any) => {\r\n  \r\n  dialogue = route.params.chat as DialogueModel.default;\r\n  authorMessageLastWatched = dialogue.lastWatchedMessage.find(obj => obj.user.userId===user.userId);\r\n  userMessageLastWatched = dialogue.lastWatchedMessage.find(obj => obj.user.userId!==user.userId);\r\n\r\n  const [messageID, setMessageID] = useState(-1);\r\n\r\n  const [messageMenuVisible, setMessageMenuVisible] = useState(false);\r\n  const [listOfMessages, setListOfMessages] = useState([] as MessageProps[]);\r\n  useEffect(() => {\r\n    setListOfMessages(dialogue.messages.reverse());\r\n  }, [])\r\n  \r\n  const [isReply, setIsReply] = useState(false);\r\n\r\n  const replyHandler = useCallback(() => {\r\n    setIsReply(!isReply);\r\n    setReplyMessageHandler();\r\n  },[messageID]);\r\n\r\n  const setReplyMessageHandler = () => {\r\n    if(!isReply)\r\n      setEditMessage({} as MessageProps);\r\n  }\r\n\r\n  const sendMessageOrCancelReplyAndEditHandler = useCallback(() => {\r\n    setIsEdit(false);\r\n    setIsReply(false);\r\n    setEditMessage({} as MessageProps);\r\n  },[]);\r\n\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [editMessage, setEditMessage] = useState({} as MessageProps);\r\n\r\n  const pressEditButton = () => {\r\n    setIsEdit(!isEdit);\r\n    setEditMessageHandler();\r\n  }\r\n\r\n  const setEditMessageHandler = () => {\r\n    if(!isEdit) {\r\n      setEditMessage(msgs.find(m => m.messageId==messageID)!);\r\n    }\r\n    else\r\n      setEditMessage({} as MessageProps);\r\n  }\r\n\r\n  const handleMessagePressOrSwipe = useCallback((coordinations:Layout, pressed:boolean) => {\r\n    coord = coordinations;\r\n    if(pressed) {\r\n      setMessageMenuVisible(true);\r\n      setMessageID(coordinations.ID);\r\n      messageIdForReplyAndEdit = coordinations.ID;\r\n    } else {\r\n      setMessageID(coordinations.ID);\r\n      messageIdForReplyAndEdit = coordinations.ID;\r\n      replyHandler();\r\n    }\r\n  }, []);\r\n\r\n  const updateMessageContent = (messageId: number|undefined, newContent: string|undefined) => {\r\n    if(messageId&&newContent)\r\n      setListOfMessages(prevMessages =>\r\n        prevMessages.map(message =>\r\n          message.messageId === messageId ? { ...message, content: newContent } : message\r\n        )\r\n      );\r\n  };\r\n\r\n  const setMessages = useCallback((mes:MessageProps) => {\r\n    if(mes.messageId){\r\n      setListOfMessages([mes, ...listOfMessages]);\r\n    }\r\n    else{\r\n      const m = msgs.find(m => m.messageId==messageID);\r\n      updateMessageContent(m?.messageId, m?.content)\r\n    }\r\n  }, [listOfMessages]);\r\n\r\n  useEffect(()=> {\r\n    msgs = listOfMessages;\r\n  }, [listOfMessages]);\r\n  \r\n  const [deleting, setDeleting] = useState(false);\r\n  const setDeletingHandler = () => {\r\n    setDeleting(!deleting);\r\n  }\r\n\r\n  // якогось хуя useRef не працює якщо useState з boolean\r\n  const onDeletePress = () => {\r\n    setListOfMessages([...listOfMessages.filter(m => m.messageId!=messageID)]);\r\n    setDeleting(!deleting);\r\n  }\r\n\r\n  const handleMessageMenuPress = useCallback(() => {\r\n    setMessageMenuVisible(false);\r\n  }, []);\r\n\r\n  const [copy, setCopy] = useState(false);\r\n  const setCopyHandler = () => {\r\n    setCopy(!copy);\r\n  }\r\n  \r\n  const [selecting, setSelecting] = useState(false);\r\n  const setSelectingHandler = () => {\r\n    setSelecting(!selecting);\r\n  }\r\n\r\n  const [listOfPinnedMessages, setListOfPinnedMessages] = useState(dialogue.pinnedMessage as MessageProps[]);\r\n  const pinMessageHandler = (message: MessageProps) => {\r\n    if(listOfPinnedMessages.find(m => message.messageId === m.messageId)) {\r\n      const msgs = listOfPinnedMessages.filter(m => m.messageId !== message.messageId);\r\n      setListOfPinnedMessages(msgs);\r\n      if(msgs.length>0) {\r\n        setPinnedMessage(msgs[msgs.length-1]);\r\n      } else {\r\n        setPinnedMessage({} as MessageProps);\r\n      }\r\n    } else {\r\n      setListOfPinnedMessages([...listOfPinnedMessages, message])\r\n      setPinnedMessage(message);\r\n    }\r\n  }\r\n  const [pinnedMessage, setPinnedMessage] = useState({} as MessageProps);\r\n  // useEffect(() => {\r\n  //   setPinnedMessage(listOfPinnedMessages[listOfPinnedMessages.length-1]);\r\n  // }, [listOfPinnedMessages])\r\n  console.log(listOfPinnedMessages.length);\r\n\r\n  const mes = msgs?msgs.find(m => m.messageId==messageID):listOfMessages.find(m => m.messageId==messageID);\r\n  return  (\r\n      <View style={styles.dialogueContainer}>\r\n        <BackGroundGradinetView>\r\n          <MessageMenu \r\n            isUser={mes!=undefined&&mes.author.userId===user?.userId} \r\n            isVisible={messageMenuVisible} \r\n            onOverlayPress={handleMessageMenuPress} \r\n            coord={coord} \r\n            messages={listOfMessages}\r\n            onReplyPress={replyHandler} \r\n            onEditPress={pressEditButton} \r\n            onDeletePress={setDeletingHandler} \r\n            onCopyPress={setCopyHandler}\r\n            onSelectPress={setSelectingHandler}\r\n            onPinPress={pinMessageHandler}\r\n            userMessageLastWatched={userMessageLastWatched}\r\n          />\r\n          <DialogueHeader \r\n            navigation={navigation} \r\n            picture={dialogue.linkToPhoto}\r\n            displayName={dialogue.users[1].name}\r\n            activityTime={'Online recently'} // Last activity from user\r\n            pinnedMessage={listOfPinnedMessages[listOfPinnedMessages.length-1]}\r\n            countOfPinnedMessages={listOfPinnedMessages.length}\r\n            currentNumOfPinnedMessage={listOfPinnedMessages.findIndex(m => m.messageId === pinnedMessage.messageId)+1}\r\n            selecting={selecting}\r\n            cancelSelection={setSelectingHandler}\r\n          />\r\n          <DialogueMessages \r\n            setMessageMenuVisible={handleMessagePressOrSwipe} \r\n            messageID={messageID} \r\n            listOfMessages={listOfMessages} \r\n            isReply={isReply} \r\n            isEdit={isEdit}\r\n            author={user as User}\r\n            userMessageLastWatched={userMessageLastWatched}\r\n            authorMessageLastWatched={authorMessageLastWatched}\r\n            selecting={selecting}\r\n            hasPinnedMessage={listOfPinnedMessages.length>0}\r\n          />\r\n          <DialogueFooter \r\n            messages={listOfMessages} \r\n            setMessages={setMessages} \r\n            isReply={isReply} \r\n            author={user}\r\n            messageID={messageID} \r\n            isEdit={isEdit} \r\n            editMessage={editMessage} \r\n            replyMessage={isReply?msgs.find(m => m.messageId==messageIdForReplyAndEdit)!:{} as MessageProps} \r\n            onSendMessageOrCancelReplyAndEdit={sendMessageOrCancelReplyAndEditHandler} \r\n            copyMessagePopUp={copy}\r\n            endCopyMessagePopUp={setCopyHandler}\r\n          />\r\n          <DeleteMessageModal \r\n            deleting={deleting} \r\n            setDeletingHandler={setDeletingHandler} \r\n            onDeletePress={onDeletePress} \r\n            message={mes} \r\n            author={user as User}\r\n          />\r\n        </BackGroundGradinetView>\r\n      </View>\r\n  );\r\n};\r\n\r\nexport default connect(null)(Dialogue);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}