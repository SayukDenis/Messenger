{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { listOfChatsStyle } from \"../Styles/ListOfChatsStyle\";\nimport ChatContainer from \"./List of folders containers/ChatContainer\";\nimport { connect } from \"react-redux\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ListOfFolder = function ListOfFolder(_ref) {\n  var user = _ref.user,\n    currentFolder = _ref.currentFolder;\n  var _Dimensions$get = Dimensions.get(\"window\"),\n    screenWidth = _Dimensions$get.width,\n    screenHeight = _Dimensions$get.height;\n  return _jsx(_Fragment, {\n    children: _jsx(FlatList, {\n      data: user.folders[currentFolder].listOfChats,\n      keyExtractor: function keyExtractor(item, index) {\n        return index.toString();\n      },\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item,\n          index = _ref2.index;\n        return _jsx(ChatContainer, {\n          chat: item,\n          isCurrent: true\n        }, index);\n      },\n      ListHeaderComponent: _jsxs(_Fragment, {\n        children: [_jsx(View, {\n          style: listOfChatsStyle.gapContainerHigh\n        }), _jsx(View, {\n          style: listOfChatsStyle.lineStyle\n        })]\n      }),\n      ListFooterComponent: _jsx(View, {\n        style: listOfChatsStyle.gapContainerDown\n      }),\n      showsVerticalScrollIndicator: false,\n      windowSize: screenHeight\n    })\n  });\n};\nexport default connect(null)(ListOfFolder);","map":{"version":3,"names":["React","View","Dimensions","FlatList","listOfChatsStyle","ChatContainer","connect","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","ListOfFolder","_ref","user","currentFolder","_Dimensions$get","get","screenWidth","width","screenHeight","height","children","data","folders","listOfChats","keyExtractor","item","index","toString","renderItem","_ref2","chat","isCurrent","ListHeaderComponent","style","gapContainerHigh","lineStyle","ListFooterComponent","gapContainerDown","showsVerticalScrollIndicator","windowSize"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/ChatList/Components/ListOfFolder.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Animated,\r\n  Dimensions,\r\n  Text,\r\n  FlatList,\r\n  ScrollView,\r\n  GestureResponderEvent,\r\n} from \"react-native\";\r\nimport MySelfUser from \"../1HelpFullFolder/MySelfUser\";\r\nimport { listOfChatsStyle } from \"../Styles/ListOfChatsStyle\";\r\nimport ChatContainer from \"./List of folders containers/ChatContainer\";\r\nimport { connect, useSelector } from \"react-redux\";\r\n\r\ninterface ListOfFolderProps {\r\n  user: MySelfUser;\r\n  currentFolder: number;\r\n}\r\n\r\nconst ListOfFolder: React.FC<ListOfFolderProps> = ({\r\n  user,\r\n  currentFolder,\r\n\r\n}) => {\r\n  const { width: screenWidth, height: screenHeight } = Dimensions.get(\"window\");\r\n  \r\n  return (\r\n    <>\r\n      <FlatList\r\n        data={user.folders[currentFolder].listOfChats}\r\n        keyExtractor={(item, index) => index.toString()}\r\n        renderItem={({ item, index }) => (\r\n          <ChatContainer key={index} chat={item} isCurrent={true} />\r\n        )}\r\n        ListHeaderComponent={\r\n          <>\r\n            <View style={listOfChatsStyle.gapContainerHigh} />\r\n            <View style={listOfChatsStyle.lineStyle} />\r\n          </>\r\n        }\r\n        ListFooterComponent={<View style={listOfChatsStyle.gapContainerDown} />}\r\n        showsVerticalScrollIndicator={false}\r\n        windowSize={screenHeight}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(null)(ListOfFolder);\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAA+B,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAWnD,SAASC,gBAAgB;AACzB,OAAOC,aAAa;AACpB,SAASC,OAAO,QAAqB,aAAa;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAOnD,IAAMC,YAAyC,GAAG,SAA5CA,YAAyCA,CAAAC,IAAA,EAIzC;EAAA,IAHJC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IACJC,aAAa,GAAAF,IAAA,CAAbE,aAAa;EAGb,IAAAC,eAAA,GAAqDf,UAAU,CAACgB,GAAG,CAAC,QAAQ,CAAC;IAA9DC,WAAW,GAAAF,eAAA,CAAlBG,KAAK;IAAuBC,YAAY,GAAAJ,eAAA,CAApBK,MAAM;EAElC,OACEd,IAAA,CAAAE,SAAA;IAAAa,QAAA,EACEf,IAAA,CAACL,QAAQ;MACPqB,IAAI,EAAET,IAAI,CAACU,OAAO,CAACT,aAAa,CAAC,CAACU,WAAY;MAC9CC,YAAY,EAAE,SAAAA,aAACC,IAAI,EAAEC,KAAK;QAAA,OAAKA,KAAK,CAACC,QAAQ,CAAC,CAAC;MAAA,CAAC;MAChDC,UAAU,EAAE,SAAAA,WAAAC,KAAA;QAAA,IAAGJ,IAAI,GAAAI,KAAA,CAAJJ,IAAI;UAAEC,KAAK,GAAAG,KAAA,CAALH,KAAK;QAAA,OACxBrB,IAAA,CAACH,aAAa;UAAa4B,IAAI,EAAEL,IAAK;UAACM,SAAS,EAAE;QAAK,GAAnCL,KAAqC,CAAC;MAAA,CAC1D;MACFM,mBAAmB,EACjBvB,KAAA,CAAAF,SAAA;QAAAa,QAAA,GACEf,IAAA,CAACP,IAAI;UAACmC,KAAK,EAAEhC,gBAAgB,CAACiC;QAAiB,CAAE,CAAC,EAClD7B,IAAA,CAACP,IAAI;UAACmC,KAAK,EAAEhC,gBAAgB,CAACkC;QAAU,CAAE,CAAC;MAAA,CAC3C,CACH;MACDC,mBAAmB,EAAE/B,IAAA,CAACP,IAAI;QAACmC,KAAK,EAAEhC,gBAAgB,CAACoC;MAAiB,CAAE,CAAE;MACxEC,4BAA4B,EAAE,KAAM;MACpCC,UAAU,EAAErB;IAAa,CAC1B;EAAC,CACF,CAAC;AAEP,CAAC;AAED,eAAef,OAAO,CAAC,IAAI,CAAC,CAACO,YAAY,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}