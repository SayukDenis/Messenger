{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { styles } from \"./Styles.tsx\";\nimport MutedIcon from \"./Icons/MutedIcon.tsx\";\nimport NameAnimation from \"./NameAnimation.tsx\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Name = function Name(props) {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    textWidth = _useState2[0],\n    setTextWidth = _useState2[1];\n  var screenWidth = Dimensions.get(\"screen\").width;\n  return _jsxs(_Fragment, {\n    children: [_jsx(View, {\n      style: {\n        position: \"absolute\",\n        opacity: 0\n      },\n      children: _jsx(Text, {\n        style: props.style,\n        onLayout: function onLayout(event) {\n          setTextWidth(event.nativeEvent.layout.width);\n        },\n        children: props.primaryTitle\n      })\n    }), textWidth > screenWidth * (props.isMuted ? 0.45 : 0.484) && _jsxs(View, {\n      style: [styles.containerForProfiteTitleLongVersion, {\n        width: props.isMuted ? screenWidth * 0.6 : screenWidth * 0.55,\n        right: props.isMuted ? screenWidth * 0.215 : screenWidth * 0.24\n      }],\n      children: [_jsx(View, {\n        style: [styles.innerContainerForLongProfileTitle, {\n          width: props.isMuted ? screenWidth * 0.412 : screenWidth * 0.5\n        }],\n        children: _jsx(View, {\n          style: {\n            width: textWidth * 2\n          },\n          children: _jsx(NameAnimation, {\n            primaryTitle: props.primaryTitle,\n            textWidth: textWidth,\n            style: props.style\n          })\n        })\n      }), props.isMuted && _jsx(MutedIcon, {\n        style: styles.mutedIcon\n      })]\n    }), textWidth <= screenWidth * (props.isMuted ? 0.45 : 0.484) && _jsxs(View, {\n      style: styles.containerForProfiteTitleShortVersion,\n      children: [_jsx(Text, {\n        numberOfLines: 1,\n        style: props.style,\n        children: props.primaryTitle\n      }), props.isMuted && _jsx(MutedIcon, {\n        style: styles.mutedIcon\n      })]\n    })]\n  });\n};\nexport default React.memo(Name);","map":{"version":3,"names":["React","useState","View","Dimensions","Text","styles","MutedIcon","NameAnimation","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Name","props","_useState","_useState2","_slicedToArray","textWidth","setTextWidth","screenWidth","get","width","children","style","position","opacity","onLayout","event","nativeEvent","layout","primaryTitle","isMuted","containerForProfiteTitleLongVersion","right","innerContainerForLongProfileTitle","mutedIcon","containerForProfiteTitleShortVersion","numberOfLines","memo"],"sources":["D:/Леша/Messenger_Project/Messenger/messenger/Pages/Profiles/SemiComponents/MainScreen/Name.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React, { useState } from \"react\";\r\nimport { View, Dimensions, Text, TextStyle } from \"react-native\";\r\nimport { styles } from \"./Styles.tsx\";\r\nimport MutedIcon from \"./Icons/MutedIcon.tsx\";\r\nimport NameAnimation from \"./NameAnimation.tsx\";\r\n\r\ninterface UsernameProps {\r\n  primaryTitle: string;\r\n  isMuted?: boolean;\r\n  style: TextStyle;\r\n}\r\n\r\nconst Name: React.FC<UsernameProps> = (props) => {\r\n  const [textWidth, setTextWidth] = useState(0);\r\n  const screenWidth = Dimensions.get(\"screen\").width;\r\n\r\n  return (\r\n    <>\r\n      <View style={{ position: \"absolute\", opacity: 0 }}>\r\n        <Text\r\n          style={props.style}\r\n          onLayout={(event) => {\r\n            setTextWidth(event.nativeEvent.layout.width);\r\n          }}\r\n        >\r\n          {props.primaryTitle}\r\n        </Text>\r\n      </View>\r\n\r\n      {/* if text is too long so it will be as running line */}\r\n      {textWidth > screenWidth * (props.isMuted ? 0.45 : 0.484) && (\r\n        <View\r\n          style={[\r\n            styles.containerForProfiteTitleLongVersion,\r\n            {\r\n              width: props.isMuted ? screenWidth * 0.6 : screenWidth * 0.55,\r\n              right: props.isMuted ? screenWidth * 0.215 : screenWidth * 0.24,\r\n            },\r\n          ]}\r\n        >\r\n          <View\r\n            style={[\r\n              styles.innerContainerForLongProfileTitle,\r\n              {\r\n                width: props.isMuted ? screenWidth * 0.412 : screenWidth * 0.5,\r\n              },\r\n            ]}\r\n          >\r\n            <View style={{ width: textWidth * 2 }}>\r\n              <NameAnimation\r\n                primaryTitle={props.primaryTitle}\r\n                textWidth={textWidth}\r\n                style={props.style}\r\n              />\r\n            </View>\r\n          </View>\r\n          {props.isMuted && <MutedIcon style={styles.mutedIcon} />}\r\n        </View>\r\n      )}\r\n\r\n      {/* if text is short */}\r\n      {textWidth <= screenWidth * (props.isMuted ? 0.45 : 0.484) && (\r\n        <View style={styles.containerForProfiteTitleShortVersion}>\r\n          <Text numberOfLines={1} style={props.style}>\r\n            {props.primaryTitle}\r\n          </Text>\r\n          {props.isMuted && <MutedIcon style={styles.mutedIcon} />}\r\n        </View>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Name);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}