{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { styles } from \"./Styles\";\nimport { GetProfile } from \"../../DatabaseSimulation/DBFunctions\";\nimport * as Clipboard from \"expo-clipboard\";\nimport { FindingBioHeight } from \"./FindingBioHeight\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar screenHeight = Dimensions.get(\"screen\").height;\nvar screenWidth = Dimensions.get(\"screen\").width;\nvar figmaHeightPixelConverter = screenHeight / 648;\nvar NumberUsernameAndBio = function NumberUsernameAndBio(props) {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    bioTextHeight = _useState2[0],\n    _setBioTextHeight = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isFullBioVisible = _useState4[0],\n    setIsFullBioVisible = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    userCharacteristicsCount = _useState6[0],\n    setUserCharacteristicsCount = _useState6[1];\n  useEffect(function () {\n    var count = 0;\n    if (GetProfile().phoneNumber) count++;\n    if (GetProfile().username) count++;\n    if (GetProfile().bio) count++;\n    setUserCharacteristicsCount(count);\n  }, [GetProfile().phoneNumber, GetProfile().username, GetProfile().bio]);\n  var copyToClipboard = function copyToClipboard(text) {\n    Clipboard.setString(text);\n  };\n  return _jsx(_Fragment, {\n    children: (GetProfile().username || GetProfile().phoneNumber || GetProfile().bio) && _jsxs(_Fragment, {\n      children: [_jsx(FindingBioHeight, {\n        setBioTextHeight: function setBioTextHeight(value) {\n          _setBioTextHeight(value);\n        }\n      }), _jsxs(View, {\n        style: [styles.userInfoMainContainer, {\n          height: isFullBioVisible ? (userCharacteristicsCount - 1) * 0.053 * screenHeight + bioTextHeight : userCharacteristicsCount * 0.053 * screenHeight\n        }],\n        children: [GetProfile().phoneNumber && _jsxs(_Fragment, {\n          children: [_jsx(View, {\n            style: styles.separatingHorizontalLine\n          }), _jsxs(TouchableOpacity, {\n            style: styles.infoView,\n            onPress: function onPress() {\n              props.onNumberPress();\n            },\n            children: [_jsx(Text, {\n              style: styles.infoTitle,\n              children: \"Num:\"\n            }), _jsx(View, {\n              style: styles.separatingVerticalLine\n            }), _jsx(Text, {\n              style: [styles.infoTitle, {\n                color: \"rgba(255, 255, 255, 0.54)\"\n              }],\n              children: GetProfile().phoneNumber\n            })]\n          }), _jsx(View, {\n            style: styles.separatingHorizontalLine\n          })]\n        }), GetProfile().username && _jsxs(_Fragment, {\n          children: [!GetProfile().phoneNumber && _jsx(View, {\n            style: styles.separatingHorizontalLine\n          }), _jsxs(TouchableOpacity, {\n            onPress: function onPress() {\n              copyToClipboard(GetProfile().username);\n              props.onUsernamePress(\"Username\");\n            },\n            style: styles.infoView,\n            children: [_jsx(Text, {\n              style: styles.infoTitle,\n              children: \"Username:\"\n            }), _jsx(View, {\n              style: styles.separatingVerticalLine\n            }), _jsx(Text, {\n              numberOfLines: 1,\n              style: [styles.infoTitle, {\n                color: \"rgba(255, 255, 255, 0.54)\",\n                width: \"85%\"\n              }],\n              children: GetProfile().username\n            })]\n          }), _jsx(View, {\n            style: styles.separatingHorizontalLine\n          })]\n        }), GetProfile().bio && _jsxs(_Fragment, {\n          children: [!GetProfile().phoneNumber && !GetProfile().username && _jsx(View, {\n            style: styles.separatingHorizontalLine\n          }), _jsxs(TouchableOpacity, {\n            onPress: function onPress() {\n              setIsFullBioVisible(!isFullBioVisible);\n            },\n            style: [styles.infoView, {\n              height: isFullBioVisible ? bioTextHeight : 0.053 * screenHeight\n            }],\n            children: [_jsx(Text, {\n              style: styles.infoTitle,\n              children: \"Bio:\"\n            }), _jsx(View, {\n              style: styles.separatingVerticalLine\n            }), _jsx(Text, {\n              numberOfLines: isFullBioVisible ? 100 : 1,\n              style: [styles.infoTitle, {\n                color: \"rgba(255, 255, 255, 0.54)\"\n              }],\n              children: GetProfile().bio\n            })]\n          }), _jsx(View, {\n            style: styles.separatingHorizontalLine\n          })]\n        })]\n      })]\n    })\n  });\n};\nexport default NumberUsernameAndBio;","map":{"version":3,"names":["React","useState","useEffect","View","TouchableOpacity","Text","Dimensions","styles","GetProfile","Clipboard","FindingBioHeight","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","screenHeight","get","height","screenWidth","width","figmaHeightPixelConverter","NumberUsernameAndBio","props","_useState","_useState2","_slicedToArray","bioTextHeight","setBioTextHeight","_useState3","_useState4","isFullBioVisible","setIsFullBioVisible","_useState5","_useState6","userCharacteristicsCount","setUserCharacteristicsCount","count","phoneNumber","username","bio","copyToClipboard","text","setString","children","value","style","userInfoMainContainer","separatingHorizontalLine","infoView","onPress","onNumberPress","infoTitle","separatingVerticalLine","color","onUsernamePress","numberOfLines"],"sources":["C:/Users/T480/source/repos/Messenger/Messenger/Pages/Profiles/SemiComponents/Screens/AvatarsAndInfoScreen/NumberUsernameAndBio.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { View, TouchableOpacity, Text, Dimensions } from \"react-native\";\r\nimport { styles } from \"./Styles\";\r\nimport { GetProfile } from \"../../DatabaseSimulation/DBFunctions\";\r\nimport * as Clipboard from \"expo-clipboard\";\r\nimport { FindingBioHeight } from \"./FindingBioHeight\";\r\n\r\nconst screenHeight = Dimensions.get(\"screen\").height;\r\nconst screenWidth = Dimensions.get(\"screen\").width;\r\nconst figmaHeightPixelConverter = screenHeight / 648;\r\n\r\ninterface NumberUsernameAndBioProps {\r\n  onUsernamePress: (text: string) => void;\r\n  onNumberPress: () => void;\r\n}\r\n\r\nconst NumberUsernameAndBio: React.FC<NumberUsernameAndBioProps> = (props) => {\r\n  const [bioTextHeight, setBioTextHeight] = useState(0);\r\n  const [isFullBioVisible, setIsFullBioVisible] = useState(false);\r\n\r\n  const [userCharacteristicsCount, setUserCharacteristicsCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let count = 0;\r\n    if (GetProfile().phoneNumber) count++;\r\n    if (GetProfile().username) count++;\r\n    if (GetProfile().bio) count++;\r\n\r\n    setUserCharacteristicsCount(count);\r\n  }, [GetProfile().phoneNumber, GetProfile().username, GetProfile().bio]);\r\n\r\n  const copyToClipboard = (text: string) => {\r\n    Clipboard.setString(text);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {(GetProfile().username ||\r\n        GetProfile().phoneNumber ||\r\n        GetProfile().bio) && (\r\n        <>\r\n          <FindingBioHeight\r\n            setBioTextHeight={(value: number) => {\r\n              setBioTextHeight(value);\r\n            }}\r\n          />\r\n\r\n          <View\r\n            style={[\r\n              styles.userInfoMainContainer,\r\n              {\r\n                height: isFullBioVisible\r\n                  ? (userCharacteristicsCount - 1) * 0.053 * screenHeight +\r\n                    bioTextHeight\r\n                  : userCharacteristicsCount * 0.053 * screenHeight,\r\n              },\r\n            ]}\r\n          >\r\n            {GetProfile().phoneNumber && (\r\n              <>\r\n                <View style={styles.separatingHorizontalLine} />\r\n\r\n                {/* Number */}\r\n                <TouchableOpacity\r\n                  style={styles.infoView}\r\n                  onPress={() => {\r\n                    props.onNumberPress();\r\n                  }}\r\n                >\r\n                  <Text style={styles.infoTitle}>Num:</Text>\r\n                  <View style={styles.separatingVerticalLine} />\r\n                  <Text\r\n                    style={[\r\n                      styles.infoTitle,\r\n                      { color: \"rgba(255, 255, 255, 0.54)\" },\r\n                    ]}\r\n                  >\r\n                    {GetProfile().phoneNumber}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n\r\n                <View style={styles.separatingHorizontalLine} />\r\n              </>\r\n            )}\r\n\r\n            {GetProfile().username && (\r\n              <>\r\n                {!GetProfile().phoneNumber && (\r\n                  <View style={styles.separatingHorizontalLine} />\r\n                )}\r\n\r\n                {/* Username */}\r\n                <TouchableOpacity\r\n                  onPress={() => {\r\n                    copyToClipboard(GetProfile().username);\r\n                    props.onUsernamePress(\"Username\");\r\n                  }}\r\n                  style={styles.infoView}\r\n                >\r\n                  <Text style={styles.infoTitle}>Username:</Text>\r\n                  <View style={styles.separatingVerticalLine} />\r\n                  <Text\r\n                    numberOfLines={1}\r\n                    style={[\r\n                      styles.infoTitle,\r\n                      { color: \"rgba(255, 255, 255, 0.54)\", width: \"85%\" },\r\n                    ]}\r\n                  >\r\n                    {GetProfile().username}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n\r\n                <View style={styles.separatingHorizontalLine} />\r\n              </>\r\n            )}\r\n\r\n            {GetProfile().bio && (\r\n              <>\r\n                {!GetProfile().phoneNumber && !GetProfile().username && (\r\n                  <View style={styles.separatingHorizontalLine} />\r\n                )}\r\n\r\n                {/* Bio */}\r\n                <TouchableOpacity\r\n                  onPress={() => {\r\n                    setIsFullBioVisible(!isFullBioVisible);\r\n                  }}\r\n                  style={[\r\n                    styles.infoView,\r\n                    {\r\n                      height: isFullBioVisible\r\n                        ? bioTextHeight\r\n                        : 0.053 * screenHeight,\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Text style={styles.infoTitle}>Bio:</Text>\r\n                  <View style={styles.separatingVerticalLine} />\r\n                  <Text\r\n                    numberOfLines={isFullBioVisible ? 100 : 1}\r\n                    style={[\r\n                      styles.infoTitle,\r\n                      { color: \"rgba(255, 255, 255, 0.54)\" },\r\n                    ]}\r\n                  >\r\n                    {GetProfile().bio}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n\r\n                <View style={styles.separatingHorizontalLine} />\r\n              </>\r\n            )}\r\n          </View>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NumberUsernameAndBio;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}