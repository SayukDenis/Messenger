{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport BlurAll from \"../../../SemiComponents/BlurAll\";\nimport React, { useState } from \"react\";\nimport { EnumForChatListBlurs } from \"../Enums/EnumsForChatListBlurs\";\nimport BlurForModeOfEmployment from \"./BlurForModeOfEmployment\";\nimport { setStateForEndOfBlurForChatList } from \"../../../../ReducersAndActions/Actions/ChatListActions/ChatListActions\";\nimport ModalWindowOfPressOnModeOfEmployment from \"./ModalWindowOfPressOnModeOfEmployment\";\nimport ModalWindowOfPressOnHeadersAvatar from \"./ModalWindowOfPressOnHeadersAvatar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar BlursForChatList = function BlursForChatList(_ref) {\n  var handlePress = _ref.handlePress,\n    handlePressOut = _ref.handlePressOut;\n  var _useState = useState(EnumForChatListBlurs.None),\n    _useState2 = _slicedToArray(_useState, 2),\n    blurStatePrev = _useState2[0],\n    setBlurStatePrev = _useState2[1];\n  var blurState = useSelector(function (state) {\n    var blur = state.chatListReducer.enumForChatListBlurs.enumForChatListBlurs;\n    return blur;\n  });\n  var dispatch = useDispatch();\n  var stateForEndOfAnimationBlur = useSelector(function (state) {\n    var stateForEnd = state.chatListReducer.stateForEndOfBlurForChatList.stateForEndOfBlurForChatList;\n    return stateForEnd;\n  });\n  if (blurState == EnumForChatListBlurs.None && !stateForEndOfAnimationBlur) {\n    return;\n  }\n  if (blurStatePrev !== blurState && blurState !== EnumForChatListBlurs.None) {\n    setBlurStatePrev(blurState);\n  }\n  var setContent = function setContent(blurState) {\n    var content = null;\n    switch (blurState) {\n      case EnumForChatListBlurs.None:\n        {\n          content = blurStatePrev != EnumForChatListBlurs.None ? setContent(blurStatePrev) : null;\n          break;\n        }\n      case EnumForChatListBlurs.ModeOfEmploymentTouch:\n        dispatch(setStateForEndOfBlurForChatList(true));\n        content = _jsx(BlurForModeOfEmployment, {\n          children: _jsx(ModalWindowOfPressOnHeadersAvatar, {})\n        });\n        break;\n      case EnumForChatListBlurs.SelectModeOfEmployment:\n        dispatch(setStateForEndOfBlurForChatList(true));\n        content = _jsx(BlurForModeOfEmployment, {\n          children: _jsx(ModalWindowOfPressOnModeOfEmployment, {})\n        });\n        break;\n      case EnumForChatListBlurs.OnChatPress:\n        dispatch(setStateForEndOfBlurForChatList(true));\n        break;\n      default:\n        break;\n    }\n    return content;\n  };\n  return _jsx(BlurAll, {\n    handlePress: handlePress,\n    handlePressOut: handlePressOut,\n    children: setContent(blurState)\n  });\n};\nexport default connect(null)(BlursForChatList);","map":{"version":3,"names":["connect","useDispatch","useSelector","BlurAll","React","useState","EnumForChatListBlurs","BlurForModeOfEmployment","setStateForEndOfBlurForChatList","ModalWindowOfPressOnModeOfEmployment","ModalWindowOfPressOnHeadersAvatar","jsx","_jsx","BlursForChatList","_ref","handlePress","handlePressOut","_useState","None","_useState2","_slicedToArray","blurStatePrev","setBlurStatePrev","blurState","state","blur","chatListReducer","enumForChatListBlurs","dispatch","stateForEndOfAnimationBlur","stateForEnd","stateForEndOfBlurForChatList","setContent","content","ModeOfEmploymentTouch","children","SelectModeOfEmployment","OnChatPress"],"sources":["C:/Users/Admin/Project/Messenger/Messenger/Pages/ChatList/Components/Headers containers/BlursForChatList.tsx"],"sourcesContent":["import { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport BlurAll from \"../../../SemiComponents/BlurAll\";\r\nimport React, { ReactNode, useState } from \"react\";\r\nimport { EnumForChatListBlurs } from \"../Enums/EnumsForChatListBlurs\";\r\nimport BlurForModeOfEmployment from \"./BlurForModeOfEmployment\";\r\nimport { setStateForEndOfBlurForChatList } from \"../../../../ReducersAndActions/Actions/ChatListActions/ChatListActions\";\r\nimport ModalWindowOfPressOnModeOfEmployment from \"./ModalWindowOfPressOnModeOfEmployment\";\r\nimport ModalWindowOfPressOnHeadersAvatar from \"./ModalWindowOfPressOnHeadersAvatar\";\r\ninterface BlursForChatListProps {\r\n  handlePress: () => void;\r\n  handlePressOut: () => void;\r\n}\r\n\r\nconst BlursForChatList: React.FC<BlursForChatListProps> = ({\r\n  handlePress,\r\n  handlePressOut,\r\n}) => {\r\n  const [blurStatePrev, setBlurStatePrev] = useState(EnumForChatListBlurs.None);\r\n  const blurState = useSelector((state: any) => {\r\n    let blur: EnumForChatListBlurs =\r\n      state.chatListReducer.enumForChatListBlurs.enumForChatListBlurs;\r\n    return blur;\r\n  });\r\n  const dispatch = useDispatch();\r\n  const stateForEndOfAnimationBlur = useSelector((state: any) => {\r\n    const stateForEnd =\r\n      state.chatListReducer.stateForEndOfBlurForChatList\r\n        .stateForEndOfBlurForChatList;\r\n    return stateForEnd;\r\n  });\r\n  if (blurState == EnumForChatListBlurs.None && !stateForEndOfAnimationBlur) {\r\n    return;\r\n  }\r\n\r\n  if (blurStatePrev !== blurState && blurState !== EnumForChatListBlurs.None) {\r\n    setBlurStatePrev(blurState);\r\n  }\r\n\r\n  const setContent = (blurState: EnumForChatListBlurs) => {\r\n    let content: ReactNode = null;\r\n    switch (blurState) {\r\n      case EnumForChatListBlurs.None: {\r\n        content =\r\n          blurStatePrev != EnumForChatListBlurs.None\r\n            ? setContent(blurStatePrev)\r\n            : null;\r\n        break;\r\n      }\r\n      case EnumForChatListBlurs.ModeOfEmploymentTouch:\r\n        dispatch(setStateForEndOfBlurForChatList(true));\r\n        content = (\r\n          <BlurForModeOfEmployment>\r\n            <ModalWindowOfPressOnHeadersAvatar />\r\n          </BlurForModeOfEmployment>\r\n        );\r\n        break;\r\n      case EnumForChatListBlurs.SelectModeOfEmployment:\r\n        dispatch(setStateForEndOfBlurForChatList(true));\r\n        content = (\r\n          <BlurForModeOfEmployment>\r\n            <ModalWindowOfPressOnModeOfEmployment />\r\n          </BlurForModeOfEmployment>\r\n        );\r\n        break;\r\n      case EnumForChatListBlurs.OnChatPress:\r\n        dispatch(setStateForEndOfBlurForChatList(true));\r\n        \r\n        break\r\n      default:\r\n        break;\r\n    }\r\n    return content;\r\n  };\r\n\r\n  return (\r\n    <BlurAll handlePress={handlePress} handlePressOut={handlePressOut}>\r\n      {setContent(blurState)}\r\n    </BlurAll>\r\n  );\r\n};\r\n\r\nexport default connect(null)(BlursForChatList);\r\n"],"mappings":";AAAA,SAASA,OAAO,EAAEC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAC/D,OAAOC,OAAO;AACd,OAAOC,KAAK,IAAeC,QAAQ,QAAQ,OAAO;AAClD,SAASC,oBAAoB;AAC7B,OAAOC,uBAAuB;AAC9B,SAASC,+BAA+B;AACxC,OAAOC,oCAAoC;AAC3C,OAAOC,iCAAiC;AAA4C,SAAAC,GAAA,IAAAC,IAAA;AAMpF,IAAMC,gBAAiD,GAAG,SAApDA,gBAAiDA,CAAAC,IAAA,EAGjD;EAAA,IAFJC,WAAW,GAAAD,IAAA,CAAXC,WAAW;IACXC,cAAc,GAAAF,IAAA,CAAdE,cAAc;EAEd,IAAAC,SAAA,GAA0CZ,QAAQ,CAACC,oBAAoB,CAACY,IAAI,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAAtEI,aAAa,GAAAF,UAAA;IAAEG,gBAAgB,GAAAH,UAAA;EACtC,IAAMI,SAAS,GAAGrB,WAAW,CAAC,UAACsB,KAAU,EAAK;IAC5C,IAAIC,IAA0B,GAC5BD,KAAK,CAACE,eAAe,CAACC,oBAAoB,CAACA,oBAAoB;IACjE,OAAOF,IAAI;EACb,CAAC,CAAC;EACF,IAAMG,QAAQ,GAAG3B,WAAW,CAAC,CAAC;EAC9B,IAAM4B,0BAA0B,GAAG3B,WAAW,CAAC,UAACsB,KAAU,EAAK;IAC7D,IAAMM,WAAW,GACfN,KAAK,CAACE,eAAe,CAACK,4BAA4B,CAC/CA,4BAA4B;IACjC,OAAOD,WAAW;EACpB,CAAC,CAAC;EACF,IAAIP,SAAS,IAAIjB,oBAAoB,CAACY,IAAI,IAAI,CAACW,0BAA0B,EAAE;IACzE;EACF;EAEA,IAAIR,aAAa,KAAKE,SAAS,IAAIA,SAAS,KAAKjB,oBAAoB,CAACY,IAAI,EAAE;IAC1EI,gBAAgB,CAACC,SAAS,CAAC;EAC7B;EAEA,IAAMS,UAAU,GAAG,SAAbA,UAAUA,CAAIT,SAA+B,EAAK;IACtD,IAAIU,OAAkB,GAAG,IAAI;IAC7B,QAAQV,SAAS;MACf,KAAKjB,oBAAoB,CAACY,IAAI;QAAE;UAC9Be,OAAO,GACLZ,aAAa,IAAIf,oBAAoB,CAACY,IAAI,GACtCc,UAAU,CAACX,aAAa,CAAC,GACzB,IAAI;UACV;QACF;MACA,KAAKf,oBAAoB,CAAC4B,qBAAqB;QAC7CN,QAAQ,CAACpB,+BAA+B,CAAC,IAAI,CAAC,CAAC;QAC/CyB,OAAO,GACLrB,IAAA,CAACL,uBAAuB;UAAA4B,QAAA,EACtBvB,IAAA,CAACF,iCAAiC,IAAE;QAAC,CACd,CAC1B;QACD;MACF,KAAKJ,oBAAoB,CAAC8B,sBAAsB;QAC9CR,QAAQ,CAACpB,+BAA+B,CAAC,IAAI,CAAC,CAAC;QAC/CyB,OAAO,GACLrB,IAAA,CAACL,uBAAuB;UAAA4B,QAAA,EACtBvB,IAAA,CAACH,oCAAoC,IAAE;QAAC,CACjB,CAC1B;QACD;MACF,KAAKH,oBAAoB,CAAC+B,WAAW;QACnCT,QAAQ,CAACpB,+BAA+B,CAAC,IAAI,CAAC,CAAC;QAE/C;MACF;QACE;IACJ;IACA,OAAOyB,OAAO;EAChB,CAAC;EAED,OACErB,IAAA,CAACT,OAAO;IAACY,WAAW,EAAEA,WAAY;IAACC,cAAc,EAAEA,cAAe;IAAAmB,QAAA,EAC/DH,UAAU,CAACT,SAAS;EAAC,CACf,CAAC;AAEd,CAAC;AAED,eAAevB,OAAO,CAAC,IAAI,CAAC,CAACa,gBAAgB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}