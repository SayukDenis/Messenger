{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var RoleEmoji = function RoleEmoji(_ref) {\n  var onSelectEmoji = _ref.onSelectEmoji;\n  var emojis = [\"üòÄ\", \"üòç\", \"üëç\", \"üëã\", \"üéâ\", \"ü§Ø\", \"üòé\", \"ü¶´\", \"‚ù§Ô∏è\", \"ü§°\", \"üòÇ\", \"üò°\", \"üò≠\", \"üòã\", \"üòê\", \"ü§ì\", \"üòà\", \"ü§¢\", \"üëΩ\", \"ü§ñ\", \"üòº\"];\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedEmoji = _useState2[0],\n    setSelectedEmoji = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    EmojiMenuOpen = _useState4[0],\n    setEmojiMenuOpen = _useState4[1];\n  var chunkArray = function chunkArray(array, chunkSize) {\n    var chunks = [];\n    for (var i = 0; i < array.length; i += chunkSize) {\n      chunks.push(array.slice(i, i + chunkSize));\n    }\n    return chunks;\n  };\n  var emojiRows = chunkArray(emojis, 7);\n  return _jsx(View, {\n    style: {\n      flexDirection: \"row\",\n      backgroundColor: \"rgb(218, 182, 113)\",\n      left: \"1.25%\",\n      flexWrap: \"wrap\",\n      width: EmojiMenuOpen ? \"95%\" : \"12%\"\n    },\n    children: EmojiMenuOpen ? _jsxs(_Fragment, {\n      children: [emojiRows.map(function (row, rowIndex) {\n        return _jsx(View, {\n          style: {\n            flexDirection: \"row\"\n          },\n          children: row.map(function (emoji, index) {\n            return _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                setSelectedEmoji(emoji);\n                onSelectEmoji(emoji);\n                setEmojiMenuOpen(true);\n              },\n              style: {\n                padding: 10\n              },\n              children: _jsx(Text, {\n                style: {\n                  fontSize: 24\n                },\n                children: emoji\n              })\n            }, index);\n          })\n        }, rowIndex);\n      }), _jsx(TouchableOpacity, {\n        style: {\n          left: \"93%\",\n          top: \"2%\",\n          position: \"absolute\"\n        },\n        onPress: function onPress() {\n          setEmojiMenuOpen(false);\n        },\n        children: _jsx(Text, {\n          children: \"\\u2716\\uFE0F\"\n        })\n      })]\n    }) : _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        setSelectedEmoji(emojiRows[0][0]);\n        onSelectEmoji(emojiRows[0][0]);\n        setEmojiMenuOpen(true);\n      },\n      style: {\n        padding: 10\n      },\n      children: _jsx(Text, {\n        style: {\n          fontSize: 24\n        },\n        children: emojiRows[0][0]\n      })\n    })\n  });\n};","map":{"version":3,"names":["React","useState","TouchableOpacity","Text","View","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","RoleEmoji","_ref","onSelectEmoji","emojis","_useState","_useState2","_slicedToArray","selectedEmoji","setSelectedEmoji","_useState3","_useState4","EmojiMenuOpen","setEmojiMenuOpen","chunkArray","array","chunkSize","chunks","i","length","push","slice","emojiRows","style","flexDirection","backgroundColor","left","flexWrap","width","children","map","row","rowIndex","emoji","index","onPress","padding","fontSize","top","position"],"sources":["D:/–õ–µ—à–∞/Messenger_Project/Messenger/messenger/Pages/Profiles/GroupProfile/Role/CreateRole/RoleEmoji.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { TouchableOpacity, Text, View } from \"react-native\";\n\nexport const RoleEmoji = ({\n  onSelectEmoji,\n}: {\n  onSelectEmoji: (emoji: string) => void;\n}) => {\n  const emojis = [\n    \"üòÄ\",\n    \"üòç\",\n    \"üëç\",\n    \"üëã\",\n    \"üéâ\",\n    \"ü§Ø\",\n    \"üòé\",\n    \"ü¶´\",\n    \"‚ù§Ô∏è\",\n    \"ü§°\",\n    \"üòÇ\",\n    \"üò°\",\n    \"üò≠\",\n    \"üòã\",\n    \"üòê\",\n    \"ü§ì\",\n    \"üòà\",\n    \"ü§¢\",\n    \"üëΩ\",\n    \"ü§ñ\",\n    \"üòº\",\n  ];\n\n  const [selectedEmoji, setSelectedEmoji] = useState(\"\");\n  const [EmojiMenuOpen, setEmojiMenuOpen] = useState(false);\n\n  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ä–æ–∑–¥—ñ–ª–µ–Ω–Ω—è emoji –Ω–∞ —Ä—è–¥–∫–∏\n  const chunkArray = (array: string[], chunkSize: number) => {\n    const chunks: string[][] = [];\n    for (let i = 0; i < array.length; i += chunkSize) {\n      chunks.push(array.slice(i, i + chunkSize));\n    }\n    return chunks;\n  };\n\n  const emojiRows = chunkArray(emojis, 7); // –†–æ–∑–¥—ñ–ª–∏—Ç–∏ emojis –Ω–∞ —Ä—è–¥–∫–∏ –ø–æ 7 emoji –≤ –∫–æ–∂–Ω–æ–º—É —Ä—è–¥–∫—É\n\n  return (\n    <View\n      style={{\n        flexDirection: \"row\",\n        backgroundColor: \"rgb(218, 182, 113)\",\n        left: \"1.25%\",\n        flexWrap: \"wrap\", // –î–æ–∑–≤–æ–ª—è—î emoji –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç–∏ –Ω–∞ –Ω–æ–≤–∏–π —Ä—è–¥–æ–∫\n        width: EmojiMenuOpen ? \"95%\" : \"12%\",\n      }}\n    >\n      {EmojiMenuOpen ? (\n        <>\n          {emojiRows.map((row, rowIndex) => (\n            <View key={rowIndex} style={{ flexDirection: \"row\" }}>\n              {row.map((emoji, index) => (\n                <TouchableOpacity\n                  key={index}\n                  onPress={() => {\n                    setSelectedEmoji(emoji);\n                    onSelectEmoji(emoji);\n                    setEmojiMenuOpen(true);\n                  }}\n                  style={{ padding: 10 }}\n                >\n                  <Text style={{ fontSize: 24 }}>{emoji}</Text>\n                </TouchableOpacity>\n              ))}\n            </View>\n          ))}\n          <TouchableOpacity\n            style={{ left: \"93%\", top: \"2%\", position: \"absolute\" }}\n            onPress={() => {\n              setEmojiMenuOpen(false);\n            }}\n          >\n            <Text>‚úñÔ∏è</Text>\n          </TouchableOpacity>\n        </>\n      ) : (\n        <TouchableOpacity\n          onPress={() => {\n            setSelectedEmoji(emojiRows[0][0]);\n            onSelectEmoji(emojiRows[0][0]);\n            setEmojiMenuOpen(true);\n          }}\n          style={{ padding: 10 }}\n        >\n          <Text style={{ fontSize: 24 }}>{emojiRows[0][0]}</Text>\n        </TouchableOpacity>\n      )}\n    </View>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}