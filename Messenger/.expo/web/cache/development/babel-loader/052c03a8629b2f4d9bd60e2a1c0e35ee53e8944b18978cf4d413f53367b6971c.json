{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport SelfProfile from \"../../Models/SelfProfile\";\nimport { dataSource } from \"../../local/database\";\nimport Chat from \"../../Models/Chats/Chat\";\nimport Tab from \"../../Models/Tab\";\nimport { readChats } from \"./chatOperations\";\nimport { readTabs } from \"./tabOperations\";\nimport User from \"../../Models/User\";\nvar manager = dataSource.manager;\nexport function selfProfileOperations() {\n  return _selfProfileOperations.apply(this, arguments);\n}\nfunction _selfProfileOperations() {\n  _selfProfileOperations = _asyncToGenerator(function* () {\n    console.log('\\n\\t SelfProfile started');\n    if (!dataSource.isInitialized) yield dataSource.initialize();\n    var selfProfile = new SelfProfile('name', 'nickname', 'hashPassword');\n    var chat1 = new Chat();\n    var chat2 = new Chat();\n    var chat3 = new Chat();\n    var tab1 = new Tab('tab1');\n    var tab2 = new Tab('tab2');\n    var tab3 = new Tab('tab3');\n    selfProfile.email = 'dinis_soska_777@gmai.com';\n    selfProfile.linkToPhoto = 'file_path_to_file';\n    selfProfile.timeLastEntry = new Date();\n    selfProfile.blockedChatsId = [chat1.id, chat2.id, chat3.id];\n    selfProfile.tabs = [tab1, tab2, tab3];\n    yield manager.save(selfProfile);\n    console.log('selfProfile have been saved');\n    yield readSelfProfile();\n    yield readChats();\n    yield readTabs();\n    selfProfile.email = 'dinis_prinzesa_12@gmail.com';\n    selfProfile.linkToPhoto = 'file_path';\n    yield manager.save(selfProfile);\n    console.log('selfProfile have been updated');\n    yield readSelfProfile();\n    yield readChats();\n    yield readTabs();\n    yield manager.remove(selfProfile);\n    console.log('selfProfile have been removed');\n    yield readSelfProfile();\n    yield readChats();\n    yield readTabs();\n  });\n  return _selfProfileOperations.apply(this, arguments);\n}\nexport function readSelfProfile() {\n  return _readSelfProfile.apply(this, arguments);\n}\nfunction _readSelfProfile() {\n  _readSelfProfile = _asyncToGenerator(function* () {\n    var savedSelfProfile = yield manager.find(SelfProfile);\n    console.log(`SelfProfiles quantity: ${savedSelfProfile.length}`);\n    for (var selfProfile of savedSelfProfile) {\n      console.log(selfProfile);\n    }\n  });\n  return _readSelfProfile.apply(this, arguments);\n}\nexport function saveSelfProfile() {\n  return _saveSelfProfile.apply(this, arguments);\n}\nfunction _saveSelfProfile() {\n  _saveSelfProfile = _asyncToGenerator(function* () {\n    if (!dataSource.isInitialized) yield dataSource.initialize();\n    var selfProfile = new SelfProfile('selfProfile', 'nickname', 'hashPassword');\n    selfProfile.email = 'dinis_soska_777@gmai.com';\n    selfProfile.numberPhone = '029880213';\n    selfProfile.linkToPhoto = 'file_path_to_file';\n    selfProfile.timeLastEntry = new Date();\n    yield manager.save(selfProfile);\n    console.log('SelfProfile has been saved');\n    yield manager.save(User, selfProfile);\n    console.log('SelfProfile like as User has been saved');\n    return selfProfile;\n  });\n  return _saveSelfProfile.apply(this, arguments);\n}","map":{"version":3,"names":["SelfProfile","dataSource","Chat","Tab","readChats","readTabs","User","manager","selfProfileOperations","_selfProfileOperations","apply","arguments","_asyncToGenerator","console","log","isInitialized","initialize","selfProfile","chat1","chat2","chat3","tab1","tab2","tab3","email","linkToPhoto","timeLastEntry","Date","blockedChatsId","id","tabs","save","readSelfProfile","remove","_readSelfProfile","savedSelfProfile","find","length","saveSelfProfile","_saveSelfProfile","numberPhone"],"sources":["C:/Users/T480/source/repos/Messenger/Messenger/dao/test/manualTest/selfProfileOperations.ts"],"sourcesContent":["import SelfProfile from \"../../Models/SelfProfile\";\r\nimport { dataSource } from \"../../local/database\";\r\nimport Chat from '../../Models/Chats/Chat';\r\nimport Tab from '../../Models/Tab';\r\nimport { readChats } from \"./chatOperations\";\r\nimport { readTabs } from \"./tabOperations\";\r\nimport User from \"../../Models/User\";\r\n\r\nconst manager = dataSource.manager;\r\n\r\nexport async function selfProfileOperations() {\r\n\r\n    console.log('\\n\\t SelfProfile started')\r\n\r\n    if (!dataSource.isInitialized) await dataSource.initialize();\r\n\r\n    const selfProfile = new SelfProfile('name', 'nickname', 'hashPassword');\r\n\r\n    const chat1 = new Chat();\r\n    const chat2 = new Chat();\r\n    const chat3 = new Chat();\r\n\r\n\r\n    const tab1 = new Tab('tab1');\r\n    const tab2 = new Tab('tab2');\r\n    const tab3 = new Tab('tab3');\r\n\r\n    selfProfile.email = 'dinis_soska_777@gmai.com';\r\n    selfProfile.linkToPhoto = 'file_path_to_file';\r\n    selfProfile.timeLastEntry = new Date();\r\n    selfProfile.blockedChatsId = [chat1.id, chat2.id, chat3.id];\r\n    selfProfile.tabs = [tab1, tab2, tab3];\r\n\r\n\r\n    //Save selfProfile\r\n    await manager.save(selfProfile);\r\n    console.log('selfProfile have been saved')\r\n\r\n    //Read\r\n    await readSelfProfile();\r\n    await readChats();\r\n    await readTabs();\r\n\r\n    //Update\r\n    selfProfile.email = 'dinis_prinzesa_12@gmail.com';\r\n    selfProfile.linkToPhoto = 'file_path';\r\n\r\n    await manager.save(selfProfile);\r\n    console.log('selfProfile have been updated')\r\n\r\n    //Read\r\n    await readSelfProfile();\r\n    await readChats();\r\n    await readTabs();\r\n\r\n    //Remove\r\n    await manager.remove(selfProfile);\r\n    console.log('selfProfile have been removed');\r\n\r\n    //Read\r\n    await readSelfProfile();\r\n    await readChats();\r\n    await readTabs();\r\n}\r\n\r\nexport async function readSelfProfile() {\r\n    const savedSelfProfile = await manager.find(SelfProfile);\r\n    console.log(`SelfProfiles quantity: ${savedSelfProfile.length}`);\r\n    for (let selfProfile of savedSelfProfile) {\r\n        console.log(selfProfile);\r\n    }\r\n}\r\n\r\nexport async function saveSelfProfile() {\r\n    if (!dataSource.isInitialized) await dataSource.initialize();\r\n\r\n    const selfProfile = new SelfProfile('selfProfile', 'nickname', 'hashPassword');\r\n    selfProfile.email = 'dinis_soska_777@gmai.com';\r\n    selfProfile.numberPhone = '029880213'; \r\n    selfProfile.linkToPhoto = 'file_path_to_file';\r\n    selfProfile.timeLastEntry = new Date();\r\n    await manager.save(selfProfile);\r\n    console.log('SelfProfile has been saved')\r\n    await manager.save(User, selfProfile);\r\n    console.log('SelfProfile like as User has been saved')\r\n    return selfProfile;\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}