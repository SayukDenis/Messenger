{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport Model from \"../Model\";\nvar Role = function (_Model) {\n  _inherits(Role, _Model);\n  var _super = _createSuper(Role);\n  function Role(name, emoji) {\n    var _this;\n    _classCallCheck(this, Role);\n    _this = _super.call(this);\n    _this.removeMembers = false;\n    _this.blockMembers = false;\n    _this.manageRoles = false;\n    _this.manageBranches = false;\n    _this.seeAuditLog = false;\n    _this.considerChannels = false;\n    _this.manageServer = false;\n    _this.sendMessage = true;\n    _this.sendVoiceMessage = true;\n    _this.name = name;\n    _this.emoji = emoji;\n    return _this;\n  }\n  return _createClass(Role);\n}(Model);\nRole.schema = {\n  name: 'roles',\n  properties: {\n    roleId: 'integer',\n    name: {\n      type: 'text',\n      indexed: true\n    },\n    emoji: 'text',\n    removeMembers: {\n      type: 'bool',\n      default: false\n    },\n    blockMembers: {\n      type: 'bool',\n      default: false\n    },\n    manageRoles: {\n      type: 'bool',\n      default: false\n    },\n    manageBranches: {\n      type: 'bool',\n      default: false\n    },\n    seeAuditLog: {\n      type: 'bool',\n      default: false\n    },\n    considerChannels: {\n      type: 'bool',\n      default: false\n    },\n    manageServer: {\n      type: 'bool',\n      default: false\n    },\n    sendMessage: {\n      type: 'bool',\n      default: true\n    },\n    sendVoiceMessage: {\n      type: 'bool',\n      default: true\n    }\n  },\n  primaryKey: 'roleId'\n};\nexport { Role as default };","map":{"version":3,"names":["Model","Role","_Model","_inherits","_super","_createSuper","name","emoji","_this","_classCallCheck","call","removeMembers","blockMembers","manageRoles","manageBranches","seeAuditLog","considerChannels","manageServer","sendMessage","sendVoiceMessage","_createClass","schema","properties","roleId","type","indexed","default","primaryKey"],"sources":["/home/zatibmag/Desktop/Project/Messenger/Messenger/dao/Models/Chats/Role.ts"],"sourcesContent":["import Model from '../Model';\n\nexport default class Role extends Model {\n    constructor(name: string, emoji: string) {\n        super();\n        this.name = name;\n        this.emoji = emoji;\n    }\n    roleId?: number;\n    name!: string;\n    emoji!: string;\n    //permissions basic\n    removeMembers: boolean = false;\n    blockMembers: boolean = false;\n    manageRoles: boolean = false;\n    manageBranches: boolean = false;\n    seeAuditLog: boolean = false;\n    considerChannels: boolean = false;\n    manageServer: boolean = false;\n    //for members\n    sendMessage: boolean = true;\n    sendVoiceMessage: boolean = true;\n\n    //scheme\n    static schema = {\n        name: 'roles',\n        properties: {\n            roleId: 'integer',\n            name: { type: 'text', indexed: true },\n            emoji: 'text',\n            removeMembers: { type: 'bool', default: false },\n            blockMembers: { type: 'bool', default: false, },\n            manageRoles: { type: 'bool', default: false, },\n            manageBranches: { type: 'bool', default: false, },\n            seeAuditLog: { type: 'bool', default: false, },\n            considerChannels: { type: 'bool', default: false, },\n            manageServer: { type: 'bool', default: false, },\n            //for members\n            sendMessage: { type: 'bool', default: true, },\n            sendVoiceMessage: { type: 'bool', default: true, },\n        },\n        primaryKey: 'roleId',\n    }\n}"],"mappings":";;;;;;;AAAA,OAAOA,KAAK;AAAiB,IAERC,IAAI,aAAAC,MAAA;EAAAC,SAAA,CAAAF,IAAA,EAAAC,MAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,IAAA;EACrB,SAAAA,KAAYK,IAAY,EAAEC,KAAa,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAR,IAAA;IACrCO,KAAA,GAAAJ,MAAA,CAAAM,IAAA;IAAQF,KAAA,CAQZG,aAAa,GAAY,KAAK;IAAAH,KAAA,CAC9BI,YAAY,GAAY,KAAK;IAAAJ,KAAA,CAC7BK,WAAW,GAAY,KAAK;IAAAL,KAAA,CAC5BM,cAAc,GAAY,KAAK;IAAAN,KAAA,CAC/BO,WAAW,GAAY,KAAK;IAAAP,KAAA,CAC5BQ,gBAAgB,GAAY,KAAK;IAAAR,KAAA,CACjCS,YAAY,GAAY,KAAK;IAAAT,KAAA,CAE7BU,WAAW,GAAY,IAAI;IAAAV,KAAA,CAC3BW,gBAAgB,GAAY,IAAI;IAhB5BX,KAAA,CAAKF,IAAI,GAAGA,IAAI;IAChBE,KAAA,CAAKD,KAAK,GAAGA,KAAK;IAAC,OAAAC,KAAA;EACvB;EAAC,OAAAY,YAAA,CAAAnB,IAAA;AAAA,EAL6BD,KAAK;AAAlBC,IAAI,CAsBdoB,MAAM,GAAG;EACZf,IAAI,EAAE,OAAO;EACbgB,UAAU,EAAE;IACRC,MAAM,EAAE,SAAS;IACjBjB,IAAI,EAAE;MAAEkB,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAE;IAAK,CAAC;IACrClB,KAAK,EAAE,MAAM;IACbI,aAAa,EAAE;MAAEa,IAAI,EAAE,MAAM;MAAEE,OAAO,EAAE;IAAM,CAAC;IAC/Cd,YAAY,EAAE;MAAEY,IAAI,EAAE,MAAM;MAAEE,OAAO,EAAE;IAAO,CAAC;IAC/Cb,WAAW,EAAE;MAAEW,IAAI,EAAE,MAAM;MAAEE,OAAO,EAAE;IAAO,CAAC;IAC9CZ,cAAc,EAAE;MAAEU,IAAI,EAAE,MAAM;MAAEE,OAAO,EAAE;IAAO,CAAC;IACjDX,WAAW,EAAE;MAAES,IAAI,EAAE,MAAM;MAAEE,OAAO,EAAE;IAAO,CAAC;IAC9CV,gBAAgB,EAAE;MAAEQ,IAAI,EAAE,MAAM;MAAEE,OAAO,EAAE;IAAO,CAAC;IACnDT,YAAY,EAAE;MAAEO,IAAI,EAAE,MAAM;MAAEE,OAAO,EAAE;IAAO,CAAC;IAE/CR,WAAW,EAAE;MAAEM,IAAI,EAAE,MAAM;MAAEE,OAAO,EAAE;IAAM,CAAC;IAC7CP,gBAAgB,EAAE;MAAEK,IAAI,EAAE,MAAM;MAAEE,OAAO,EAAE;IAAM;EACrD,CAAC;EACDC,UAAU,EAAE;AAChB,CAAC;AAAA,SAxCgB1B,IAAI,IAAAyB,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}