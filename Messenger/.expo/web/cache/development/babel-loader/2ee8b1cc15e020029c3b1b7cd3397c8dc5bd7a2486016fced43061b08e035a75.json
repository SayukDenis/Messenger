{"ast":null,"code":"import _construct from \"@babel/runtime/helpers/construct\";\nimport { FlingGesture } from \"./flingGesture\";\nimport { ForceTouchGesture } from \"./forceTouchGesture\";\nimport { ComposedGesture, ExclusiveGesture, SimultaneousGesture } from \"./gestureComposition\";\nimport { LongPressGesture } from \"./longPressGesture\";\nimport { PanGesture } from \"./panGesture\";\nimport { PinchGesture } from \"./pinchGesture\";\nimport { RotationGesture } from \"./rotationGesture\";\nimport { TapGesture } from \"./tapGesture\";\nimport { NativeGesture } from \"./nativeGesture\";\nimport { ManualGesture } from \"./manualGesture\";\nimport { HoverGesture } from \"./hoverGesture\";\nexport var GestureObjects = {\n  Tap: function Tap() {\n    return new TapGesture();\n  },\n  Pan: function Pan() {\n    return new PanGesture();\n  },\n  Pinch: function Pinch() {\n    return new PinchGesture();\n  },\n  Rotation: function Rotation() {\n    return new RotationGesture();\n  },\n  Fling: function Fling() {\n    return new FlingGesture();\n  },\n  LongPress: function LongPress() {\n    return new LongPressGesture();\n  },\n  ForceTouch: function ForceTouch() {\n    return new ForceTouchGesture();\n  },\n  Native: function Native() {\n    return new NativeGesture();\n  },\n  Manual: function Manual() {\n    return new ManualGesture();\n  },\n  Hover: function Hover() {\n    return new HoverGesture();\n  },\n  Race: function Race() {\n    for (var _len = arguments.length, gestures = new Array(_len), _key = 0; _key < _len; _key++) {\n      gestures[_key] = arguments[_key];\n    }\n    return _construct(ComposedGesture, gestures);\n  },\n  Simultaneous: function Simultaneous() {\n    for (var _len2 = arguments.length, gestures = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      gestures[_key2] = arguments[_key2];\n    }\n    return _construct(SimultaneousGesture, gestures);\n  },\n  Exclusive: function Exclusive() {\n    for (var _len3 = arguments.length, gestures = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      gestures[_key3] = arguments[_key3];\n    }\n    return _construct(ExclusiveGesture, gestures);\n  }\n};","map":{"version":3,"names":["FlingGesture","ForceTouchGesture","ComposedGesture","ExclusiveGesture","SimultaneousGesture","LongPressGesture","PanGesture","PinchGesture","RotationGesture","TapGesture","NativeGesture","ManualGesture","HoverGesture","GestureObjects","Tap","Pan","Pinch","Rotation","Fling","LongPress","ForceTouch","Native","Manual","Hover","Race","_len","arguments","length","gestures","Array","_key","_construct","Simultaneous","_len2","_key2","Exclusive","_len3","_key3"],"sources":["/home/zatibmag/Desktop/Project/Messenger/Messenger/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/gestureObjects.ts"],"sourcesContent":["import { FlingGesture } from './flingGesture';\nimport { ForceTouchGesture } from './forceTouchGesture';\nimport { Gesture } from './gesture';\nimport {\n  ComposedGesture,\n  ExclusiveGesture,\n  SimultaneousGesture,\n} from './gestureComposition';\nimport { LongPressGesture } from './longPressGesture';\nimport { PanGesture } from './panGesture';\nimport { PinchGesture } from './pinchGesture';\nimport { RotationGesture } from './rotationGesture';\nimport { TapGesture } from './tapGesture';\nimport { NativeGesture } from './nativeGesture';\nimport { ManualGesture } from './manualGesture';\nimport { HoverGesture } from './hoverGesture';\n\nexport const GestureObjects = {\n  Tap: () => {\n    return new TapGesture();\n  },\n\n  Pan: () => {\n    return new PanGesture();\n  },\n\n  Pinch: () => {\n    return new PinchGesture();\n  },\n\n  Rotation: () => {\n    return new RotationGesture();\n  },\n\n  Fling: () => {\n    return new FlingGesture();\n  },\n\n  LongPress: () => {\n    return new LongPressGesture();\n  },\n\n  ForceTouch: () => {\n    return new ForceTouchGesture();\n  },\n\n  Native: () => {\n    return new NativeGesture();\n  },\n\n  Manual: () => {\n    return new ManualGesture();\n  },\n\n  Hover: () => {\n    return new HoverGesture();\n  },\n\n  /**\n   * Builds a composed gesture consisting of gestures provided as parameters.\n   * The first one that becomes active cancels the rest of gestures.\n   */\n  Race: (...gestures: Gesture[]) => {\n    return new ComposedGesture(...gestures);\n  },\n\n  /**\n   * Builds a composed gesture that allows all base gestures to run simultaneously.\n   */\n  Simultaneous(...gestures: Gesture[]) {\n    return new SimultaneousGesture(...gestures);\n  },\n\n  /**\n   * Builds a composed gesture where only one of the provided gestures can become active.\n   * Priority is decided through the order of gestures: the first one has higher priority\n   * than the second one, second one has higher priority than the third one, and so on.\n   * For example, to make a gesture that recognizes both single and double tap you need\n   * to call Exclusive(doubleTap, singleTap).\n   */\n  Exclusive(...gestures: Gesture[]) {\n    return new ExclusiveGesture(...gestures);\n  },\n};\n"],"mappings":";AAAA,SAASA,YAAT;AACA,SAASC,iBAAT;AAEA,SACEC,eADF,EAEEC,gBAFF,EAGEC,mBAHF;AAKA,SAASC,gBAAT;AACA,SAASC,UAAT;AACA,SAASC,YAAT;AACA,SAASC,eAAT;AACA,SAASC,UAAT;AACA,SAASC,aAAT;AACA,SAASC,aAAT;AACA,SAASC,YAAT;AAEA,OAAO,IAAMC,cAAc,GAAG;EAC5BC,GAAG,EAAE,SAAAA,IAAA,EAAM;IACT,OAAO,IAAIL,UAAJ,EAAP;EACD,CAH2B;EAK5BM,GAAG,EAAE,SAAAA,IAAA,EAAM;IACT,OAAO,IAAIT,UAAJ,EAAP;EACD,CAP2B;EAS5BU,KAAK,EAAE,SAAAA,MAAA,EAAM;IACX,OAAO,IAAIT,YAAJ,EAAP;EACD,CAX2B;EAa5BU,QAAQ,EAAE,SAAAA,SAAA,EAAM;IACd,OAAO,IAAIT,eAAJ,EAAP;EACD,CAf2B;EAiB5BU,KAAK,EAAE,SAAAA,MAAA,EAAM;IACX,OAAO,IAAIlB,YAAJ,EAAP;EACD,CAnB2B;EAqB5BmB,SAAS,EAAE,SAAAA,UAAA,EAAM;IACf,OAAO,IAAId,gBAAJ,EAAP;EACD,CAvB2B;EAyB5Be,UAAU,EAAE,SAAAA,WAAA,EAAM;IAChB,OAAO,IAAInB,iBAAJ,EAAP;EACD,CA3B2B;EA6B5BoB,MAAM,EAAE,SAAAA,OAAA,EAAM;IACZ,OAAO,IAAIX,aAAJ,EAAP;EACD,CA/B2B;EAiC5BY,MAAM,EAAE,SAAAA,OAAA,EAAM;IACZ,OAAO,IAAIX,aAAJ,EAAP;EACD,CAnC2B;EAqC5BY,KAAK,EAAE,SAAAA,MAAA,EAAM;IACX,OAAO,IAAIX,YAAJ,EAAP;EACD,CAvC2B;EA6C5BY,IAAI,EAAE,SAAAA,KAAA,EAA4B;IAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAxBC,QAAJ,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAIF,QAAJ,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;IAAA;IACJ,OAAAC,UAAA,CAAW7B,eAAJ,EAAuB0B,QAAvB;EACR,CA/C2B;EAoD5BI,YAAY,WAAAA,aAAA,EAAyB;IAAA,SAAAC,KAAA,GAAAP,SAAA,CAAAC,MAAA,EAArBC,QAAJ,OAAAC,KAAA,CAAAI,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;MAAIN,QAAJ,CAAAM,KAAA,IAAAR,SAAA,CAAAQ,KAAA;IAAA;IACV,OAAAH,UAAA,CAAW3B,mBAAJ,EAA2BwB,QAA3B;EACR,CAtD2B;EA+D5BO,SAAS,WAAAA,UAAA,EAAyB;IAAA,SAAAC,KAAA,GAAAV,SAAA,CAAAC,MAAA,EAArBC,QAAJ,OAAAC,KAAA,CAAAO,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;MAAIT,QAAJ,CAAAS,KAAA,IAAAX,SAAA,CAAAW,KAAA;IAAA;IACP,OAAAN,UAAA,CAAW5B,gBAAJ,EAAwByB,QAAxB;EACR;AAjE2B,CAAvB"},"metadata":{},"sourceType":"module","externalDependencies":[]}