{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { ContinousBaseGesture } from \"./gesture\";\nvar _worklet_59983906047_init_data = {\n  code: \"function changeEventCalculator(current, previous) {\\n  let changePayload;\\n  if (previous === undefined) {\\n    changePayload = {\\n      rotationChange: current.rotation\\n    };\\n  } else {\\n    changePayload = {\\n      rotationChange: current.rotation - previous.rotation\\n    };\\n  }\\n  return {\\n    ...current,\\n    ...changePayload\\n  };\\n}\",\n  location: \"C:\\\\Users\\\\T480\\\\source\\\\repos\\\\Messenger\\\\Messenger\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\handlers\\\\gestures\\\\rotationGesture.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"changeEventCalculator\\\",\\\"current\\\",\\\"previous\\\",\\\"changePayload\\\",\\\"undefined\\\",\\\"rotationChange\\\",\\\"rotation\\\"],\\\"sources\\\":[\\\"C:/Users/T480/source/repos/Messenger/Messenger/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/rotationGesture.js\\\"],\\\"mappings\\\":\\\"AAEA,SAAAA,qBAASA,CAAsBC,OAAA,EAAOC,QAAE,EAAQ;EAG9C,IAAIC,aAAa;EAEjB,IAAID,QAAQ,KAAKE,SAAS,EAAE;IAC1BD,aAAa,GAAG;MACdE,cAAc,EAAEJ,OAAO,CAACK;IAC1B,CAAC;EACH,CAAC,MAAM;IACLH,aAAa,GAAG;MACdE,cAAc,EAAEJ,OAAO,CAACK,QAAQ,GAAGJ,QAAQ,CAACI;IAC9C,CAAC;EACH;EAEA,OAAO;IAAE,GAAGL,OAAO;IACjB,GAAGE;EACL,CAAC;AACH\\\",\\\"ignoreList\\\":[]}\"\n};\nvar changeEventCalculator = function () {\n  var _e = [new global.Error(), 1, -27];\n  var _f = function _f(current, previous) {\n    var changePayload;\n    if (previous === undefined) {\n      changePayload = {\n        rotationChange: current.rotation\n      };\n    } else {\n      changePayload = {\n        rotationChange: current.rotation - previous.rotation\n      };\n    }\n    return _objectSpread(_objectSpread({}, current), changePayload);\n  };\n  _f._closure = {};\n  _f.__initData = _worklet_59983906047_init_data;\n  _f.__workletHash = 59983906047;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nexport var RotationGesture = function (_ContinousBaseGesture) {\n  function RotationGesture() {\n    var _this;\n    _classCallCheck(this, RotationGesture);\n    _this = _callSuper(this, RotationGesture);\n    _this.handlerName = 'RotationGestureHandler';\n    return _this;\n  }\n  _inherits(RotationGesture, _ContinousBaseGesture);\n  return _createClass(RotationGesture, [{\n    key: \"onChange\",\n    value: function onChange(callback) {\n      this.handlers.changeEventCalculator = changeEventCalculator;\n      return _get(_getPrototypeOf(RotationGesture.prototype), \"onChange\", this).call(this, callback);\n    }\n  }]);\n}(ContinousBaseGesture);","map":{"version":3,"names":["ContinousBaseGesture","_worklet_59983906047_init_data","code","location","sourceMap","changeEventCalculator","_e","global","Error","_f","current","previous","changePayload","undefined","rotationChange","rotation","_objectSpread","_closure","__initData","__workletHash","__stackDetails","__version","RotationGesture","_ContinousBaseGesture","_this","_classCallCheck","_callSuper","handlerName","_inherits","_createClass","key","value","onChange","callback","handlers","_get","_getPrototypeOf","prototype","call"],"sources":["C:\\Users\\T480\\source\\repos\\Messenger\\Messenger\\node_modules\\react-native-gesture-handler\\lib\\module\\handlers\\gestures\\rotationGesture.ts"],"sourcesContent":["import { ContinousBaseGesture } from './gesture';\nimport { RotationGestureHandlerEventPayload } from '../RotationGestureHandler';\nimport { GestureUpdateEvent } from '../gestureHandlerCommon';\n\ntype RotationGestureChangeEventPayload = {\n  rotationChange: number;\n};\n\nfunction changeEventCalculator(\n  current: GestureUpdateEvent<RotationGestureHandlerEventPayload>,\n  previous?: GestureUpdateEvent<RotationGestureHandlerEventPayload>\n) {\n  'worklet';\n  let changePayload: RotationGestureChangeEventPayload;\n  if (previous === undefined) {\n    changePayload = {\n      rotationChange: current.rotation,\n    };\n  } else {\n    changePayload = {\n      rotationChange: current.rotation - previous.rotation,\n    };\n  }\n\n  return { ...current, ...changePayload };\n}\n\nexport class RotationGesture extends ContinousBaseGesture<\n  RotationGestureHandlerEventPayload,\n  RotationGestureChangeEventPayload\n> {\n  constructor() {\n    super();\n\n    this.handlerName = 'RotationGestureHandler';\n  }\n\n  onChange(\n    callback: (\n      event: GestureUpdateEvent<\n        RotationGestureHandlerEventPayload & RotationGestureChangeEventPayload\n      >\n    ) => void\n  ) {\n    // @ts-ignore TS being overprotective, RotationGestureHandlerEventPayload is Record\n    this.handlers.changeEventCalculator = changeEventCalculator;\n    return super.onChange(callback);\n  }\n}\n\nexport type RotationGestureType = InstanceType<typeof RotationGesture>;\n"],"mappings":";;;;;;;;;;;AAAA,SAASA,oBAAT;AAAA,IAAAC,8BAAA;EAAAC,IAAA;EAAAC,QAAA;EAAAC,SAAA;AAAA;AAAA,IAQSC,qBAAT;EAAA,IAAAC,EAAA,QAAAC,MAAA,CAAAC,KAAA;EAAA,IAAAC,EAAA,YAAAA,GACEC,OADF,EAEEC,QAFF,EAGE;IAEA,IAAIC,aAAJ;IACA,IAAID,QAAQ,KAAKE,SAAjB,EAA4B;MAC1BD,aAAa,GAAG;QACdE,cAAc,EAAEJ,OAAO,CAACK;MADV,CAAhB;IAGD,CAJD,MAIO;MACLH,aAAa,GAAG;QACdE,cAAc,EAAEJ,OAAO,CAACK,QAAR,GAAmBJ,QAAQ,CAACI;MAD9B,CAAhB;IAGD;IAED,OAAAC,aAAA,CAAAA,aAAA,KAAYN,OAAL,GAAiBE,aAAA;EACzB;EAAAH,EAAA,CAAAQ,QAAA;EAAAR,EAAA,CAAAS,UAAA,GAAAjB,8BAAA;EAAAQ,EAAA,CAAAU,aAAA;EAAAV,EAAA,CAAAW,cAAA,GAAAd,EAAA;EAAAG,EAAA,CAAAY,SAAA;EAAA,OAAAZ,EAAA;AAAA;AAED,WAAaa,eAAN,aAAAC,qBAAA;EAIL,SAAAD,gBAAA,EAAc;IAAA,IAAAE,KAAA;IAAAC,eAAA,OAAAH,eAAA;IACZE,KAAA,GAAAE,UAAA,OAAAJ,eAAA;IAEAE,KAAA,CAAKG,WAAL,GAAmB,wBAAnB;IAAA,OAAAH,KAAA;EACD;EAAAI,SAAA,CAAAN,eAAA,EAAAC,qBAAA;EAAA,OAAAM,YAAA,CAAAP,eAAA;IAAAQ,GAAA;IAAAC,KAAA,EAED,SAAAC,SACEC,QADM,EAMN;MAEA,KAAKC,QAAL,CAAc7B,qBAAd,GAAsCA,qBAAtC;MACA,OAAA8B,IAAA,CAAAC,eAAA,CAAAd,eAAA,CAAAe,SAAA,qBAAAC,IAAA,OAAsBL,QAAf;IACR;EAAA;AAAA,EApBkCjC,oBAA9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}