{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { dataSource } from \"../../local/database\";\nimport Chat from \"../../Models/Chats/Chat\";\nimport Folder from \"../../Models/Folder\";\nimport { readChats } from \"./chatOperations\";\nvar manager = dataSource.manager;\nexport function folderOperations() {\n  return _folderOperations.apply(this, arguments);\n}\nfunction _folderOperations() {\n  _folderOperations = _asyncToGenerator(function* () {\n    console.log('\\n\\tFolders start\\n');\n    if (!dataSource.isInitialized) yield dataSource.initialize();\n    var chat1 = new Chat();\n    var chat2 = new Chat();\n    var chat3 = new Chat();\n    var chat4 = new Chat();\n    var chat5 = new Chat();\n    var chat6 = new Chat();\n    var chat7 = new Chat();\n    var chat8 = new Chat();\n    var chat9 = new Chat();\n    var folder1 = new Folder('folderName1');\n    folder1.chats = [chat1, chat2, chat3];\n    yield manager.save(folder1);\n    console.log('Folder1 has been saved');\n    var folder2 = new Folder('folderName2');\n    folder2.chats = [chat4, chat5, chat6];\n    yield manager.save(folder2);\n    console.log('Folder2 has been saved');\n    var folder3 = new Folder('folderName3');\n    folder3.chats = [chat7, chat8, chat9];\n    yield manager.save(folder3);\n    console.log('Folder3 has been saved');\n    yield readFolders();\n    yield readChats();\n    folder1.chats.push(chat4, chat5);\n    folder2.chats = [];\n    folder3.chats.push(chat1, chat2, chat5);\n    yield manager.save([folder1, folder2, folder3]);\n    console.log('Folders have been updated');\n    yield readFolders();\n    yield manager.remove([folder1, folder2, folder3]);\n    console.log('Folders have been removed');\n    yield readFolders();\n    yield readChats();\n  });\n  return _folderOperations.apply(this, arguments);\n}\nexport function readFolders() {\n  return _readFolders.apply(this, arguments);\n}\nfunction _readFolders() {\n  _readFolders = _asyncToGenerator(function* () {\n    var savedFolders = yield manager.find(Folder);\n    console.log(`Folders quantity: ${savedFolders.length}`);\n    for (var folder of savedFolders) {\n      console.log(folder);\n    }\n  });\n  return _readFolders.apply(this, arguments);\n}","map":{"version":3,"names":["dataSource","Chat","Folder","readChats","manager","folderOperations","_folderOperations","apply","arguments","_asyncToGenerator","console","log","isInitialized","initialize","chat1","chat2","chat3","chat4","chat5","chat6","chat7","chat8","chat9","folder1","chats","save","folder2","folder3","readFolders","push","remove","_readFolders","savedFolders","find","length","folder"],"sources":["C:/Users/T480/source/repos/Messenger/Messenger/dao/test/manualTest/folderOperations.ts"],"sourcesContent":["import { dataSource } from \"../../local/database\";\r\nimport Chat from '../../Models/Chats/Chat';\r\nimport Folder from \"../../Models/Folder\";\r\nimport { readChats } from \"./chatOperations\";\r\n\r\nconst manager = dataSource.manager;\r\n\r\nexport async function folderOperations() {\r\n\r\n    console.log('\\n\\tFolders start\\n');\r\n\r\n    if (!dataSource.isInitialized) await dataSource.initialize();\r\n\r\n    const chat1 = new Chat();\r\n    const chat2 = new Chat();\r\n    const chat3 = new Chat();\r\n    const chat4 = new Chat();\r\n    const chat5 = new Chat();\r\n    const chat6 = new Chat();\r\n    const chat7 = new Chat();\r\n    const chat8 = new Chat();\r\n    const chat9 = new Chat();\r\n\r\n    //Save\r\n    const folder1 = new Folder('folderName1');\r\n    folder1.chats = [chat1, chat2, chat3]\r\n    await manager.save(folder1);\r\n    console.log('Folder1 has been saved')\r\n\r\n    const folder2 = new Folder('folderName2');\r\n    folder2.chats = [chat4, chat5, chat6]\r\n    await manager.save(folder2);\r\n    console.log('Folder2 has been saved')\r\n\r\n    const folder3 = new Folder('folderName3');\r\n    folder3.chats = [chat7, chat8, chat9]\r\n    await manager.save(folder3);\r\n    console.log('Folder3 has been saved')\r\n\r\n    //Read\r\n    await readFolders();\r\n    await readChats();\r\n\r\n    //Update\r\n    folder1.chats.push(chat4, chat5);\r\n    folder2.chats = [];\r\n    folder3.chats.push(chat1, chat2, chat5);\r\n\r\n    await manager.save([folder1, folder2, folder3]);\r\n    console.log('Folders have been updated')\r\n\r\n    //Read\r\n    await readFolders();\r\n\r\n    //Remove\r\n    await manager.remove([folder1, folder2, folder3]);\r\n    console.log('Folders have been removed')\r\n\r\n    //Read\r\n    await readFolders();\r\n    await readChats();\r\n}\r\n\r\nexport async function readFolders() {\r\n    const savedFolders = await manager.find(Folder);\r\n    console.log(`Folders quantity: ${savedFolders.length}`);\r\n    for (let folder of savedFolders) {\r\n        console.log(folder);\r\n    }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}