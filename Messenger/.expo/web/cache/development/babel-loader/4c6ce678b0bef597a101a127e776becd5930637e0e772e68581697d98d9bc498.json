{"ast":null,"code":"import React from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport styles from \"../Styles\";\nimport MultimediaBar from \"./MultimediaBar\";\nimport Photos from \"./Photos\";\nimport Files from \"./Files\";\nimport Voices from \"./Voices\";\nimport Links from \"./Links\";\nimport Albums from \"./Albums\";\nimport Blur from \"../../../GeneralComponents/Blur\";\nimport { GetProfile } from \"../../../DatabaseSimulation/DBFunctions\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Multimedia = function Multimedia(props) {\n  return _jsxs(View, {\n    style: {\n      zIndex: props.isPhotoAlbumSelectionVisible ? 3 : 0,\n      top: 0.02 * Dimensions.get(\"screen\").height\n    },\n    children: [_jsx(Blur, {\n      visibleWhen: props.isPhotoAlbumSelectionVisible,\n      onPress: function onPress() {\n        props.setIsPhotoAlbumSelectionVisible(false);\n      },\n      style: [styles.blurEffect, {\n        top: 0.05 * Dimensions.get(\"screen\").height\n      }]\n    }), _jsx(MultimediaBar, {\n      isPhotoAlbumSelectionVisible: props.isPhotoAlbumSelectionVisible,\n      onLongPress: function onLongPress(value) {\n        return props.setIsPhotoAlbumSelectionVisible(value);\n      },\n      onPress: function onPress(value) {\n        props.setPressedMultimediaButton(value);\n      }\n    }), props.pressedMultimediaButton == \"Photos\" && _jsx(Photos, {\n      isPhotoSelectionVisible: props.isMultimediaSelectionVisible,\n      data: GetProfile().photosAndVideos,\n      onPress: function onPress(photo) {\n        if (props.isMultimediaSelectionVisible) {\n          props.onAnyPressWhileSelection(photo);\n        } else {\n          props.onPhotoPress(photo);\n        }\n      },\n      onLongPress: function onLongPress(value) {\n        props.onAnyLongPressExceptAlbum(value);\n      },\n      isMultimediaBarEnabled: true,\n      isCheckMarkVisible: function isCheckMarkVisible(value) {\n        return props.isCheckMarkVisible(value);\n      }\n    }), props.pressedMultimediaButton == \"Albums\" && _jsx(Albums, {\n      onNewAlbumPress: function onNewAlbumPress() {\n        props.onNewAlbumPress();\n      },\n      onLongPress: function onLongPress(value, event) {\n        props.onAlbumLongPress(value, event);\n      },\n      onPress: function onPress(value) {\n        if (props.isMultimediaSelectionVisible) {\n          props.onAnyPressWhileSelection(value);\n        } else {\n          props.onAlbumPress(value);\n        }\n      },\n      areCheckMarksVisible: props.isMultimediaSelectionVisible,\n      isCheckmarkVisible: function isCheckmarkVisible(value) {\n        return props.isCheckMarkVisible(value);\n      }\n    }), props.pressedMultimediaButton == \"Files\" && _jsx(Files, {\n      onPress: function onPress(value) {\n        if (props.isMultimediaSelectionVisible) {\n          props.onAnyPressWhileSelection(value);\n        }\n      },\n      onLongPress: function onLongPress(value) {\n        props.onAnyLongPressExceptAlbum(value);\n      },\n      onDownloadPress: function onDownloadPress() {\n        alert(\"Downloading\");\n      },\n      isCheckMarkVisible: function isCheckMarkVisible(value) {\n        return props.isCheckMarkVisible(value);\n      },\n      isSelectionVisible: props.isMultimediaSelectionVisible\n    }), props.pressedMultimediaButton == \"Voice\" && _jsx(Voices, {\n      onPress: function onPress(value) {\n        if (props.isMultimediaSelectionVisible) {\n          props.onAnyPressWhileSelection(value);\n        }\n      },\n      onLongPress: function onLongPress(value) {\n        props.onAnyLongPressExceptAlbum(value);\n      },\n      isCheckMarkVisible: function isCheckMarkVisible(value) {\n        return props.isCheckMarkVisible(value);\n      },\n      isSelectionVisible: props.isMultimediaSelectionVisible\n    }), props.pressedMultimediaButton == \"Links\" && _jsx(Links, {\n      onPress: function onPress(value) {\n        if (props.isMultimediaSelectionVisible) {\n          props.onAnyPressWhileSelection(value);\n        }\n      },\n      isSelectionVisible: props.isMultimediaSelectionVisible,\n      onLongPress: function onLongPress(value) {\n        props.onAnyLongPressExceptAlbum(value);\n      },\n      isCheckMarkVisible: function isCheckMarkVisible(value) {\n        return props.isCheckMarkVisible(value);\n      }\n    })]\n  });\n};\nexport default Multimedia;","map":{"version":3,"names":["React","Dimensions","View","styles","MultimediaBar","Photos","Files","Voices","Links","Albums","Blur","GetProfile","jsx","_jsx","jsxs","_jsxs","Multimedia","props","style","zIndex","isPhotoAlbumSelectionVisible","top","get","height","children","visibleWhen","onPress","setIsPhotoAlbumSelectionVisible","blurEffect","onLongPress","value","setPressedMultimediaButton","pressedMultimediaButton","isPhotoSelectionVisible","isMultimediaSelectionVisible","data","photosAndVideos","photo","onAnyPressWhileSelection","onPhotoPress","onAnyLongPressExceptAlbum","isMultimediaBarEnabled","isCheckMarkVisible","onNewAlbumPress","event","onAlbumLongPress","onAlbumPress","areCheckMarksVisible","isCheckmarkVisible","onDownloadPress","alert","isSelectionVisible"],"sources":["C:/Users/T480/source/repos/Messenger/Messenger/Pages/Profiles/SemiComponents/Screens/MainScreen/Multimedia/Multimedia.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React from \"react\";\r\nimport { Dimensions, View } from \"react-native\";\r\nimport styles from \"../Styles\";\r\nimport MultimediaBar from \"./MultimediaBar\";\r\nimport Photos from \"./Photos\";\r\nimport Files from \"./Files\";\r\nimport Voices from \"./Voices\";\r\nimport Links from \"./Links\";\r\nimport Albums from \"./Albums\";\r\nimport {\r\n  Album,\r\n  PhotoOrVideo,\r\n  Voice,\r\n  File,\r\n  Link,\r\n} from \"../../../DatabaseSimulation/DBClasses\";\r\nimport Blur from \"../../../GeneralComponents/Blur\";\r\nimport { GestureResponderEvent } from \"react-native-modal\";\r\nimport { GetProfile } from \"../../../DatabaseSimulation/DBFunctions\";\r\n\r\ninterface MultimediaProps {\r\n  isPhotoAlbumSelectionVisible: boolean;\r\n  setIsPhotoAlbumSelectionVisible: (value: boolean) => void;\r\n  pressedMultimediaButton: string;\r\n  setPressedMultimediaButton: (value: string) => void;\r\n  onNewAlbumPress: () => void;\r\n  onAlbumLongPress: (value: Album, event: GestureResponderEvent) => void;\r\n  isMultimediaSelectionVisible: boolean;\r\n  onAlbumPress: (value: Album) => void;\r\n  onPhotoPress: (value: PhotoOrVideo) => void;\r\n  onAnyLongPressExceptAlbum: (\r\n    value: PhotoOrVideo | File | Voice | Link\r\n  ) => void;\r\n  isCheckMarkVisible: (\r\n    value: Album | PhotoOrVideo | File | Voice | Link\r\n  ) => boolean;\r\n  onAnyPressWhileSelection: (\r\n    value: Album | PhotoOrVideo | File | Voice\r\n  ) => void;\r\n}\r\n\r\nconst Multimedia: React.FC<MultimediaProps> = (props) => {\r\n  return (\r\n    <View\r\n      style={{\r\n        zIndex: props.isPhotoAlbumSelectionVisible ? 3 : 0,\r\n        top: 0.02 * Dimensions.get(\"screen\").height,\r\n      }}\r\n    >\r\n      <Blur\r\n        visibleWhen={props.isPhotoAlbumSelectionVisible}\r\n        onPress={() => {\r\n          props.setIsPhotoAlbumSelectionVisible(false);\r\n        }}\r\n        style={[\r\n          styles.blurEffect,\r\n          { top: 0.05 * Dimensions.get(\"screen\").height },\r\n        ]}\r\n      />\r\n\r\n      <MultimediaBar\r\n        isPhotoAlbumSelectionVisible={props.isPhotoAlbumSelectionVisible}\r\n        onLongPress={(value) => props.setIsPhotoAlbumSelectionVisible(value)}\r\n        onPress={(value: string) => {\r\n          props.setPressedMultimediaButton(value);\r\n        }}\r\n      />\r\n\r\n      {props.pressedMultimediaButton == \"Photos\" && (\r\n        <Photos\r\n          isPhotoSelectionVisible={props.isMultimediaSelectionVisible}\r\n          data={GetProfile().photosAndVideos}\r\n          onPress={(photo: PhotoOrVideo) => {\r\n            if (props.isMultimediaSelectionVisible) {\r\n              props.onAnyPressWhileSelection(photo);\r\n            } else {\r\n              props.onPhotoPress(photo);\r\n            }\r\n          }}\r\n          onLongPress={(value: PhotoOrVideo) => {\r\n            props.onAnyLongPressExceptAlbum(value);\r\n          }}\r\n          isMultimediaBarEnabled={true}\r\n          isCheckMarkVisible={(value: PhotoOrVideo) =>\r\n            props.isCheckMarkVisible(value)\r\n          }\r\n        />\r\n      )}\r\n      {props.pressedMultimediaButton == \"Albums\" && (\r\n        <Albums\r\n          onNewAlbumPress={() => {\r\n            props.onNewAlbumPress();\r\n          }}\r\n          onLongPress={(value: Album, event: GestureResponderEvent) => {\r\n            props.onAlbumLongPress(value, event);\r\n          }}\r\n          onPress={(value: Album) => {\r\n            if (props.isMultimediaSelectionVisible) {\r\n              props.onAnyPressWhileSelection(value);\r\n            } else {\r\n              props.onAlbumPress(value);\r\n            }\r\n          }}\r\n          areCheckMarksVisible={props.isMultimediaSelectionVisible}\r\n          isCheckmarkVisible={(value: Album) => props.isCheckMarkVisible(value)}\r\n        />\r\n      )}\r\n      {props.pressedMultimediaButton == \"Files\" && (\r\n        <Files\r\n          onPress={(value: File) => {\r\n            if (props.isMultimediaSelectionVisible) {\r\n              props.onAnyPressWhileSelection(value);\r\n            }\r\n          }}\r\n          onLongPress={(value: File) => {\r\n            props.onAnyLongPressExceptAlbum(value);\r\n          }}\r\n          onDownloadPress={() => {\r\n            alert(\"Downloading\");\r\n          }}\r\n          isCheckMarkVisible={(value: File) => props.isCheckMarkVisible(value)}\r\n          isSelectionVisible={props.isMultimediaSelectionVisible}\r\n        />\r\n      )}\r\n      {props.pressedMultimediaButton == \"Voice\" && (\r\n        <Voices\r\n          onPress={(value: Voice) => {\r\n            if (props.isMultimediaSelectionVisible) {\r\n              props.onAnyPressWhileSelection(value);\r\n            }\r\n          }}\r\n          onLongPress={(value: Voice) => {\r\n            props.onAnyLongPressExceptAlbum(value);\r\n          }}\r\n          isCheckMarkVisible={(value: Voice) => props.isCheckMarkVisible(value)}\r\n          isSelectionVisible={props.isMultimediaSelectionVisible}\r\n        />\r\n      )}\r\n      {props.pressedMultimediaButton == \"Links\" && (\r\n        <Links\r\n          onPress={(value: Link) => {\r\n            if (props.isMultimediaSelectionVisible) {\r\n              props.onAnyPressWhileSelection(value);\r\n            }\r\n          }}\r\n          isSelectionVisible={props.isMultimediaSelectionVisible}\r\n          onLongPress={(value: Link) => {\r\n            props.onAnyLongPressExceptAlbum(value);\r\n          }}\r\n          isCheckMarkVisible={(value: Link) => props.isCheckMarkVisible(value)}\r\n        />\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Multimedia;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}