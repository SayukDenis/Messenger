{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { footerstyles } from \"../Styles/FooterStyle\";\nimport ListOfFolder from \"./ListOfFolder\";\nimport Folder from \"./Footer containers/Folder\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  screenWidth = _Dimensions$get.width,\n  screenHeight = _Dimensions$get.height;\nvar Footer = function Footer(_ref) {\n  var user = _ref.user;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedFolder = _useState2[0],\n    setSelectedFolder = _useState2[1];\n  var scrollViewRef = useRef(null);\n  var scrollX = useRef(new Animated.Value(0)).current;\n  var handleFolderPress = function handleFolderPress(index) {\n    if (selectedFolder === index) {\n      return;\n    }\n    setSelectedFolder(index);\n    scrollToFolder(index);\n  };\n  var updateSelectedFolder = function updateSelectedFolder() {\n    var newSelectedFolder = Math.floor(currentPosition / screenWidth);\n    setSelectedFolder(newSelectedFolder);\n  };\n  var handleMomentumScrollEnd = function handleMomentumScrollEnd() {\n    updateSelectedFolder();\n  };\n  var scrollToFolder = function scrollToFolder(folderId) {\n    if (scrollViewRef.current && folderId !== -1) {\n      var xOffset = folderId * screenWidth;\n      scrollViewRef.current.scrollTo({\n        x: xOffset,\n        animated: true\n      });\n    }\n  };\n  useEffect(function () {\n    scrollX.addListener(function (_ref2) {\n      var value = _ref2.value;\n      setCurrentPosition(value);\n    });\n    return function () {\n      scrollX.removeAllListeners();\n    };\n  }, []);\n  return _jsxs(View, {\n    children: [_jsx(Animated.ScrollView, {\n      horizontal: true,\n      ref: scrollViewRef,\n      pagingEnabled: true,\n      scrollEventThrottle: 100,\n      onMomentumScrollEnd: handleMomentumScrollEnd,\n      onScroll: Animated.event([{\n        nativeEvent: {\n          contentOffset: {\n            x: scrollX\n          }\n        }\n      }], {\n        useNativeDriver: false\n      }),\n      children: user.folders.map(function (folder, index) {\n        return _jsx(ListOfFolder, {\n          user: user,\n          selectedFolder: index\n        }, index);\n      })\n    }), _jsx(View, {\n      style: footerstyles.container,\n      children: _jsx(ScrollView, {\n        showsHorizontalScrollIndicator: false,\n        horizontal: true,\n        style: footerstyles.scrollView,\n        scrollEventThrottle: 100,\n        children: user.folders.map(function (folder, index) {\n          return _jsx(Folder, {\n            text: folder.name,\n            containerStyle: footerstyles.folderContainer,\n            textStyle: footerstyles.folder,\n            isSelected: selectedFolder === index,\n            onPress: function onPress() {\n              return handleFolderPress(index);\n            }\n          }, index);\n        })\n      })\n    })]\n  });\n};\nexport default Footer;","map":{"version":3,"names":["React","useRef","useState","useEffect","View","ScrollView","Dimensions","Animated","footerstyles","ListOfFolder","Folder","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","screenWidth","width","screenHeight","height","Footer","_ref","user","_useState","_useState2","_slicedToArray","selectedFolder","setSelectedFolder","scrollViewRef","scrollX","Value","current","handleFolderPress","index","scrollToFolder","updateSelectedFolder","newSelectedFolder","Math","floor","currentPosition","handleMomentumScrollEnd","folderId","xOffset","scrollTo","x","animated","addListener","_ref2","value","setCurrentPosition","removeAllListeners","children","horizontal","ref","pagingEnabled","scrollEventThrottle","onMomentumScrollEnd","onScroll","event","nativeEvent","contentOffset","useNativeDriver","folders","map","folder","style","container","showsHorizontalScrollIndicator","scrollView","text","name","containerStyle","folderContainer","textStyle","isSelected","onPress"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/ChatList/Components/Footer.tsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport { View, ScrollView, StyleSheet, Text, Dimensions, Animated } from 'react-native';\r\nimport MySelfUser from '../1HelpFullFolder/MySelfUser';\r\nimport { footerstyles } from '../Styles/FooterStyle';\r\nimport ListOfFolder from './ListOfFolder';\r\nimport Folder from './Footer containers/Folder';\r\n\r\ninterface FooterProps {\r\n  user: MySelfUser;\r\n}\r\n\r\nconst { width: screenWidth, height: screenHeight } = Dimensions.get('window');\r\n\r\nconst Footer: React.FC<FooterProps> = ({ user }) => {\r\n  const [selectedFolder, setSelectedFolder] = useState<number>(0);\r\n  const scrollViewRef = useRef<Animated.ScrollView | null>(null);\r\n  const scrollX = useRef(new Animated.Value(0)).current;\r\n\r\n  const handleFolderPress = (index: number) => {\r\n    if (selectedFolder === index) {\r\n      return;\r\n    }\r\n    setSelectedFolder(index);\r\n    scrollToFolder(index);\r\n  };\r\n\r\n  const updateSelectedFolder = () => {\r\n    const newSelectedFolder = Math.floor(currentPosition / screenWidth);\r\n    setSelectedFolder(newSelectedFolder);\r\n  };\r\n\r\n  const handleMomentumScrollEnd = () => {\r\n    updateSelectedFolder();\r\n  };\r\n\r\n  const scrollToFolder = (folderId: number) => {\r\n    if (scrollViewRef.current && folderId !== -1) {\r\n      const xOffset = folderId * screenWidth;\r\n      scrollViewRef.current.scrollTo({ x: xOffset, animated: true });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollX.addListener(({ value }) => {\r\n      setCurrentPosition(value);\r\n    });\r\n\r\n    return () => {\r\n      scrollX.removeAllListeners();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <View>\r\n      <Animated.ScrollView\r\n        horizontal\r\n        ref={scrollViewRef}\r\n        pagingEnabled\r\n        scrollEventThrottle={100}\r\n        onMomentumScrollEnd={handleMomentumScrollEnd}\r\n        onScroll={Animated.event([{ nativeEvent: { contentOffset: { x: scrollX } } }], { useNativeDriver: false })}\r\n      >\r\n        {user.folders.map((folder: any, index: number) => {\r\n          return <ListOfFolder key={index} user={user} selectedFolder={index} />;\r\n        })}\r\n      </Animated.ScrollView>\r\n\r\n      <View style={footerstyles.container}>\r\n        <ScrollView\r\n          showsHorizontalScrollIndicator={false}\r\n          horizontal\r\n          style={footerstyles.scrollView}\r\n          scrollEventThrottle={100}\r\n        >\r\n          {user.folders.map((folder, index) => (\r\n            <Folder\r\n              key={index}\r\n              text={folder.name}\r\n              containerStyle={footerstyles.folderContainer}\r\n              textStyle={footerstyles.folder}\r\n              isSelected={selectedFolder === index}\r\n              onPress={() => handleFolderPress(index)}\r\n            />\r\n          ))}\r\n        </ScrollView>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}