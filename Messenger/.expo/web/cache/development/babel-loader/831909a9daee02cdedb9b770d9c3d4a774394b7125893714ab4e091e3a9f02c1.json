{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport Model from \"./Model\";\nimport Chat from \"./Chats/Chat\";\nvar Folder = function (_Model) {\n  _inherits(Folder, _Model);\n  function Folder(folderName, chats) {\n    var _this;\n    _classCallCheck(this, Folder);\n    _this = _callSuper(this, Folder);\n    _this.chats = new Array();\n    _this.folderName = folderName;\n    _this.chats = chats != null ? chats : new Array();\n    return _this;\n  }\n  return _createClass(Folder);\n}(Model);\nFolder.schema = {\n  name: 'folders',\n  properties: {\n    folderId: 'integer',\n    folderName: 'text',\n    chats: {\n      type: 'list',\n      objectType: Chat\n    }\n  },\n  primaryKey: 'folderId'\n};\nexport { Folder as default };","map":{"version":3,"names":["Model","Chat","Folder","_Model","_inherits","folderName","chats","_this","_classCallCheck","_callSuper","Array","_createClass","schema","name","properties","folderId","type","objectType","primaryKey","default"],"sources":["D:/project/1project/Messenger/Messenger/dao/Models/Folder.ts"],"sourcesContent":["import Model from './Model';\r\nimport Chat from './Chats/Chat';\r\n\r\nexport default class Folder extends Model {\r\n    constructor(folderName: string, chats?: Array<Chat>) {\r\n        super();\r\n        this.folderName = folderName;\r\n        this.chats = chats ?? new Array;\r\n    }\r\n    folderId?: number;\r\n    folderName!: string;\r\n    chats: Array<Chat> = new Array;\r\n    //schema\r\n    static schema = {\r\n        name: 'folders',\r\n        properties: {\r\n            folderId: 'integer',\r\n            folderName: 'text',\r\n            chats: { type: 'list', objectType: Chat }\r\n        },\r\n        primaryKey: 'folderId',\r\n    }\r\n}\r\n"],"mappings":";;;;;;;AAAA,OAAOA,KAAK;AACZ,OAAOC,IAAI;AAAqB,IAEXC,MAAM,aAAAC,MAAA;EAAAC,SAAA,CAAAF,MAAA,EAAAC,MAAA;EACvB,SAAAD,OAAYG,UAAkB,EAAEC,KAAmB,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAN,MAAA;IACjDK,KAAA,GAAAE,UAAA,OAAAP,MAAA;IAAQK,KAAA,CAMZD,KAAK,GAAgB,IAAII,KAAK,CAAD,CAAC;IAL1BH,KAAA,CAAKF,UAAU,GAAGA,UAAU;IAC5BE,KAAA,CAAKD,KAAK,GAAGA,KAAK,WAALA,KAAK,GAAI,IAAII,KAAK,CAAD,CAAC;IAAC,OAAAH,KAAA;EACpC;EAAC,OAAAI,YAAA,CAAAT,MAAA;AAAA,EAL+BF,KAAK;AAApBE,MAAM,CAUhBU,MAAM,GAAG;EACZC,IAAI,EAAE,SAAS;EACfC,UAAU,EAAE;IACRC,QAAQ,EAAE,SAAS;IACnBV,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE;MAAEU,IAAI,EAAE,MAAM;MAAEC,UAAU,EAAEhB;IAAK;EAC5C,CAAC;EACDiB,UAAU,EAAE;AAChB,CAAC;AAAA,SAlBgBhB,MAAM,IAAAiB,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}