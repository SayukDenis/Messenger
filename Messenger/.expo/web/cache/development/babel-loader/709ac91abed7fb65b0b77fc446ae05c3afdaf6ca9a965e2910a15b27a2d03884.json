{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { footerstyles } from \"../Styles/FooterStyle\";\nimport Folder from \"./Footer containers/Folder\";\nimport { listOfChatsStyle } from \"../Styles/ListOfChatsStyle\";\nimport ChatContainer from \"./List of folders containers/ChatContainer\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Footer = function Footer(_ref) {\n  var user = _ref.user;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedFolder = _useState2[0],\n    setSelectedFolder = _useState2[1];\n  var handleFolderPress = function handleFolderPress(index) {\n    if (selectedFolder === index) {} else {\n      setSelectedFolder(index);\n    }\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(ScrollView, {\n      showsHorizontalScrollIndicator: false,\n      style: listOfChatsStyle.container,\n      children: [_jsx(View, {\n        style: listOfChatsStyle.gapContainer\n      }), _jsx(View, {\n        style: {\n          borderBottomColor: '#C4A56899',\n          borderBottomWidth: StyleSheet.hairlineWidth\n        }\n      }), user.folders[selectedFolder].listOfChats.map(function (chat, index) {\n        return _jsx(ChatContainer, {\n          chat: chat\n        }, index);\n      }), _jsx(View, {\n        style: listOfChatsStyle.gapContainer\n      })]\n    }), _jsx(View, {\n      style: footerstyles.container,\n      children: _jsx(ScrollView, {\n        showsHorizontalScrollIndicator: false,\n        horizontal: true,\n        style: footerstyles.scrollView,\n        children: user.folders.map(function (folder, index) {\n          return _jsx(Folder, {\n            text: folder.name,\n            containerStyle: footerstyles.folderContainer,\n            textStyle: footerstyles.folder,\n            isSelected: selectedFolder === index,\n            onPress: function onPress() {\n              return handleFolderPress(index);\n            }\n          }, index);\n        })\n      })\n    })]\n  });\n};\nexport default Footer;","map":{"version":3,"names":["React","useState","View","ScrollView","StyleSheet","footerstyles","Folder","listOfChatsStyle","ChatContainer","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Footer","_ref","user","_useState","_useState2","_slicedToArray","selectedFolder","setSelectedFolder","handleFolderPress","index","children","showsHorizontalScrollIndicator","style","container","gapContainer","borderBottomColor","borderBottomWidth","hairlineWidth","folders","listOfChats","map","chat","horizontal","scrollView","folder","text","name","containerStyle","folderContainer","textStyle","isSelected","onPress"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/ChatList/Components/Footer.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, ScrollView,StyleSheet } from 'react-native';\r\nimport MySelfUser from '../1HelpFullFolder/MySelfUser';\r\nimport { footerstyles } from '../Styles/FooterStyle';\r\nimport Folder from './Footer containers/Folder';\r\nimport { listOfChatsStyle } from '../Styles/ListOfChatsStyle';\r\nimport ChatContainer from './List of folders containers/ChatContainer';\r\ninterface FooterProps {\r\n  user: MySelfUser;\r\n}\r\n\r\nconst Footer: React.FC<FooterProps> = ({ user }) => {\r\n  const [selectedFolder, setSelectedFolder] = useState<number>(0);\r\n  \r\n  const handleFolderPress = (index: number) => {\r\n    if (selectedFolder === index) {\r\n    } else {\r\n      setSelectedFolder(index); \r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n        <ScrollView showsHorizontalScrollIndicator={false} style={listOfChatsStyle.container}>\r\n        \r\n      <View style={listOfChatsStyle.gapContainer} />\r\n      <View\r\n  style={{\r\n    borderBottomColor: '#C4A56899',\r\n    borderBottomWidth: StyleSheet.hairlineWidth,\r\n  }}\r\n/>\r\n      {user.folders[selectedFolder].listOfChats.map((chat, index) => (\r\n        <ChatContainer chat={chat} key={index} />\r\n      ))}\r\n      <View style={listOfChatsStyle.gapContainer} />\r\n    </ScrollView>\r\n    <View style={footerstyles.container}>\r\n      <ScrollView showsHorizontalScrollIndicator={false} horizontal={true} style={footerstyles.scrollView}>\r\n        {user.folders.map((folder, index) => (\r\n          <Folder\r\n            key={index}\r\n            text={folder.name}\r\n            containerStyle={footerstyles.folderContainer}\r\n            textStyle={footerstyles.folder}\r\n            isSelected={selectedFolder === index}\r\n            onPress={() => handleFolderPress(index)}\r\n          />\r\n        ))}\r\n      </ScrollView>\r\n    </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAGxC,SAASC,YAAY;AACrB,OAAOC,MAAM;AACb,SAASC,gBAAgB;AACzB,OAAOC,aAAa;AAAmD,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAKvE,IAAMC,MAA6B,GAAG,SAAhCA,MAA6BA,CAAAC,IAAA,EAAiB;EAAA,IAAXC,IAAI,GAAAD,IAAA,CAAJC,IAAI;EAC3C,IAAAC,SAAA,GAA4CjB,QAAQ,CAAS,CAAC,CAAC;IAAAkB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAxDG,cAAc,GAAAF,UAAA;IAAEG,iBAAiB,GAAAH,UAAA;EAExC,IAAMI,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,KAAa,EAAK;IAC3C,IAAIH,cAAc,KAAKG,KAAK,EAAE,CAC9B,CAAC,MAAM;MACLF,iBAAiB,CAACE,KAAK,CAAC;IAC1B;EACF,CAAC;EAED,OACEZ,KAAA,CAAAE,SAAA;IAAAW,QAAA,GACIb,KAAA,CAACT,UAAU;MAACuB,8BAA8B,EAAE,KAAM;MAACC,KAAK,EAAEpB,gBAAgB,CAACqB,SAAU;MAAAH,QAAA,GAEvFf,IAAA,CAACR,IAAI;QAACyB,KAAK,EAAEpB,gBAAgB,CAACsB;MAAa,CAAE,CAAC,EAC9CnB,IAAA,CAACR,IAAI;QACTyB,KAAK,EAAE;UACLG,iBAAiB,EAAE,WAAW;UAC9BC,iBAAiB,EAAE3B,UAAU,CAAC4B;QAChC;MAAE,CACH,CAAC,EACKf,IAAI,CAACgB,OAAO,CAACZ,cAAc,CAAC,CAACa,WAAW,CAACC,GAAG,CAAC,UAACC,IAAI,EAAEZ,KAAK;QAAA,OACxDd,IAAA,CAACF,aAAa;UAAC4B,IAAI,EAAEA;QAAK,GAAMZ,KAAQ,CAAC;MAAA,CAC1C,CAAC,EACFd,IAAA,CAACR,IAAI;QAACyB,KAAK,EAAEpB,gBAAgB,CAACsB;MAAa,CAAE,CAAC;IAAA,CACpC,CAAC,EACbnB,IAAA,CAACR,IAAI;MAACyB,KAAK,EAAEtB,YAAY,CAACuB,SAAU;MAAAH,QAAA,EAClCf,IAAA,CAACP,UAAU;QAACuB,8BAA8B,EAAE,KAAM;QAACW,UAAU,EAAE,IAAK;QAACV,KAAK,EAAEtB,YAAY,CAACiC,UAAW;QAAAb,QAAA,EACjGR,IAAI,CAACgB,OAAO,CAACE,GAAG,CAAC,UAACI,MAAM,EAAEf,KAAK;UAAA,OAC9Bd,IAAA,CAACJ,MAAM;YAELkC,IAAI,EAAED,MAAM,CAACE,IAAK;YAClBC,cAAc,EAAErC,YAAY,CAACsC,eAAgB;YAC7CC,SAAS,EAAEvC,YAAY,CAACkC,MAAO;YAC/BM,UAAU,EAAExB,cAAc,KAAKG,KAAM;YACrCsB,OAAO,EAAE,SAAAA,QAAA;cAAA,OAAMvB,iBAAiB,CAACC,KAAK,CAAC;YAAA;UAAC,GALnCA,KAMN,CAAC;QAAA,CACH;MAAC,CACQ;IAAC,CACT,CAAC;EAAA,CACL,CAAC;AAEP,CAAC;AAED,eAAeT,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}