{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useRef, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { footerstyles } from \"../Styles/FooterStyle\";\nimport Folder from \"./Footer containers/Folder\";\nimport ListOfFolder from \"./ListOfFolder\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Footer = function Footer(_ref) {\n  var user = _ref.user;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedFolder = _useState2[0],\n    setSelectedFolder = _useState2[1];\n  var handleFolderPress = function handleFolderPress(index) {\n    if (selectedFolder === index) {} else {\n      setSelectedFolder(index);\n    }\n  };\n  var scrollViewRef = useRef(null);\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentPosition = _useState4[0],\n    setCurrentPosition = _useState4[1];\n  var updateSelectedFolder = function updateSelectedFolder() {\n    var newSelectedFolder = Math.floor(currentPosition / scrollViewWidth);\n    setSelectedFolder(newSelectedFolder);\n  };\n  var handleHorizontalScroll = function handleHorizontalScroll(event) {\n    var newHorizontalPosition = event.nativeEvent.contentOffset.x;\n    setCurrentPosition(newHorizontalPosition);\n  };\n  var handleMomentumScrollEnd = function handleMomentumScrollEnd() {\n    updateSelectedFolder();\n  };\n  return _jsxs(View, {\n    children: [_jsx(ScrollView, {\n      horizontal: true,\n      ref: scrollViewRef,\n      onScroll: handleHorizontalScroll,\n      onMomentumScrollEnd: handleMomentumScrollEnd,\n      pagingEnabled: true,\n      children: _jsx(ListOfFolder, {\n        user: user,\n        selectedFolder: selectedFolder\n      })\n    }), _jsx(View, {\n      style: footerstyles.container,\n      children: _jsx(ScrollView, {\n        showsHorizontalScrollIndicator: false,\n        horizontal: true,\n        style: footerstyles.scrollView,\n        children: user.folders.map(function (folder, index) {\n          return _jsx(Folder, {\n            text: folder.name,\n            containerStyle: footerstyles.folderContainer,\n            textStyle: footerstyles.folder,\n            isSelected: selectedFolder === index,\n            onPress: function onPress() {\n              return handleFolderPress(index);\n            }\n          }, index);\n        })\n      })\n    })]\n  });\n};\nexport default Footer;","map":{"version":3,"names":["React","useRef","useState","View","ScrollView","footerstyles","Folder","ListOfFolder","jsx","_jsx","jsxs","_jsxs","Footer","_ref","user","_useState","_useState2","_slicedToArray","selectedFolder","setSelectedFolder","handleFolderPress","index","scrollViewRef","_useState3","_useState4","currentPosition","setCurrentPosition","updateSelectedFolder","newSelectedFolder","Math","floor","scrollViewWidth","handleHorizontalScroll","event","newHorizontalPosition","nativeEvent","contentOffset","x","handleMomentumScrollEnd","children","horizontal","ref","onScroll","onMomentumScrollEnd","pagingEnabled","style","container","showsHorizontalScrollIndicator","scrollView","folders","map","folder","text","name","containerStyle","folderContainer","textStyle","isSelected","onPress"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/ChatList/Components/Footer.tsx"],"sourcesContent":["import React, { ReactNode, useRef, useState } from 'react';\r\nimport { View, ScrollView,StyleSheet,Text } from 'react-native';\r\nimport MySelfUser from '../1HelpFullFolder/MySelfUser';\r\nimport { footerstyles } from '../Styles/FooterStyle';\r\nimport Folder from './Footer containers/Folder';\r\nimport { listOfChatsStyle } from '../Styles/ListOfChatsStyle';\r\nimport ChatContainer from './List of folders containers/ChatContainer';\r\n\r\nimport ListOfFolder from './ListOfFolder';\r\ninterface FooterProps {\r\n  user: MySelfUser;\r\n}\r\n\r\nconst Footer: React.FC<FooterProps> = ({ user }) => {\r\n  const [selectedFolder, setSelectedFolder] = useState<number>(0);\r\n  \r\n  const handleFolderPress = (index: number) => {\r\n    if (selectedFolder === index) {\r\n    } else {\r\n      setSelectedFolder(index); \r\n    }\r\n  };\r\n  const scrollViewRef = useRef(null);\r\n  const [currentPosition, setCurrentPosition] = useState(0);\r\n\r\n  const updateSelectedFolder = () => {\r\n    // Розраховуємо новий вибраний folderId на основі поточної позиції\r\n    const newSelectedFolder = Math.floor(currentPosition / scrollViewWidth); // Ви можете коригувати цю логіку відповідно до своїх потреб\r\n    setSelectedFolder(newSelectedFolder);\r\n  };\r\n\r\n  const handleHorizontalScroll = (event) => {\r\n    // Отримуємо нову позицію горизонтальної прокрутки\r\n    const newHorizontalPosition = event.nativeEvent.contentOffset.x;\r\n\r\n    // Оновлюємо поточну позицію\r\n    setCurrentPosition(newHorizontalPosition);\r\n  };\r\n\r\n  const handleMomentumScrollEnd = () => {\r\n    // Викликаємо функцію для оновлення вибраної папки після закінчення прокрутки\r\n    updateSelectedFolder();\r\n  };\r\n  \r\n  return (\r\n    <View>\r\n    <ScrollView horizontal={true}\r\n    ref={scrollViewRef}\r\n    onScroll={handleHorizontalScroll}\r\n    onMomentumScrollEnd={handleMomentumScrollEnd}\r\n    pagingEnabled={true}\r\n    >\r\n        <ListOfFolder user={user} selectedFolder={selectedFolder}/>\r\n    </ScrollView>\r\n\r\n\r\n<View style={footerstyles.container}>\r\n      <ScrollView showsHorizontalScrollIndicator={false} horizontal={true} style={footerstyles.scrollView}>\r\n        {user.folders.map((folder, index) => (\r\n          <Folder\r\n            key={index}\r\n            text={folder.name}\r\n            containerStyle={footerstyles.folderContainer}\r\n            textStyle={footerstyles.folder}\r\n            isSelected={selectedFolder === index}\r\n            onPress={() => handleFolderPress(index)}\r\n          />\r\n        ))}\r\n      </ScrollView>\r\n    </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAeC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAG3D,SAASC,YAAY;AACrB,OAAOC,MAAM;AAIb,OAAOC,YAAY;AAAuB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAK1C,IAAMC,MAA6B,GAAG,SAAhCA,MAA6BA,CAAAC,IAAA,EAAiB;EAAA,IAAXC,IAAI,GAAAD,IAAA,CAAJC,IAAI;EAC3C,IAAAC,SAAA,GAA4Cb,QAAQ,CAAS,CAAC,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAxDG,cAAc,GAAAF,UAAA;IAAEG,iBAAiB,GAAAH,UAAA;EAExC,IAAMI,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,KAAa,EAAK;IAC3C,IAAIH,cAAc,KAAKG,KAAK,EAAE,CAC9B,CAAC,MAAM;MACLF,iBAAiB,CAACE,KAAK,CAAC;IAC1B;EACF,CAAC;EACD,IAAMC,aAAa,GAAGrB,MAAM,CAAC,IAAI,CAAC;EAClC,IAAAsB,UAAA,GAA8CrB,QAAQ,CAAC,CAAC,CAAC;IAAAsB,UAAA,GAAAP,cAAA,CAAAM,UAAA;IAAlDE,eAAe,GAAAD,UAAA;IAAEE,kBAAkB,GAAAF,UAAA;EAE1C,IAAMG,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAA,EAAS;IAEjC,IAAMC,iBAAiB,GAAGC,IAAI,CAACC,KAAK,CAACL,eAAe,GAAGM,eAAe,CAAC;IACvEZ,iBAAiB,CAACS,iBAAiB,CAAC;EACtC,CAAC;EAED,IAAMI,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAIC,KAAK,EAAK;IAExC,IAAMC,qBAAqB,GAAGD,KAAK,CAACE,WAAW,CAACC,aAAa,CAACC,CAAC;IAG/DX,kBAAkB,CAACQ,qBAAqB,CAAC;EAC3C,CAAC;EAED,IAAMI,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAAA,EAAS;IAEpCX,oBAAoB,CAAC,CAAC;EACxB,CAAC;EAED,OACEhB,KAAA,CAACR,IAAI;IAAAoC,QAAA,GACL9B,IAAA,CAACL,UAAU;MAACoC,UAAU,EAAE,IAAK;MAC7BC,GAAG,EAAEnB,aAAc;MACnBoB,QAAQ,EAAEV,sBAAuB;MACjCW,mBAAmB,EAAEL,uBAAwB;MAC7CM,aAAa,EAAE,IAAK;MAAAL,QAAA,EAEhB9B,IAAA,CAACF,YAAY;QAACO,IAAI,EAAEA,IAAK;QAACI,cAAc,EAAEA;MAAe,CAAC;IAAC,CACnD,CAAC,EAGjBT,IAAA,CAACN,IAAI;MAAC0C,KAAK,EAAExC,YAAY,CAACyC,SAAU;MAAAP,QAAA,EAC9B9B,IAAA,CAACL,UAAU;QAAC2C,8BAA8B,EAAE,KAAM;QAACP,UAAU,EAAE,IAAK;QAACK,KAAK,EAAExC,YAAY,CAAC2C,UAAW;QAAAT,QAAA,EACjGzB,IAAI,CAACmC,OAAO,CAACC,GAAG,CAAC,UAACC,MAAM,EAAE9B,KAAK;UAAA,OAC9BZ,IAAA,CAACH,MAAM;YAEL8C,IAAI,EAAED,MAAM,CAACE,IAAK;YAClBC,cAAc,EAAEjD,YAAY,CAACkD,eAAgB;YAC7CC,SAAS,EAAEnD,YAAY,CAAC8C,MAAO;YAC/BM,UAAU,EAAEvC,cAAc,KAAKG,KAAM;YACrCqC,OAAO,EAAE,SAAAA,QAAA;cAAA,OAAMtC,iBAAiB,CAACC,KAAK,CAAC;YAAA;UAAC,GALnCA,KAMN,CAAC;QAAA,CACH;MAAC,CACQ;IAAC,CACT,CAAC;EAAA,CACD,CAAC;AAEX,CAAC;AAED,eAAeT,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}