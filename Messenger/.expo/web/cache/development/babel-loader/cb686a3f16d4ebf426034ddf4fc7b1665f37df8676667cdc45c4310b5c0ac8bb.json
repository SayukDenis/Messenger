{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useEffect } from 'react';\nimport { styles } from \"./Styles/DeleteMessageModal\";\nimport { connect } from 'react-redux';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar DeleteMessageModal = function DeleteMessageModal(_ref) {\n  var deleting = _ref.deleting,\n    setDeletingHandler = _ref.setDeletingHandler,\n    onDeletePress = _ref.onDeletePress,\n    message = _ref.message,\n    author = _ref.author;\n  useEffect(function () {}, [setDeletingHandler]);\n  return _jsx(Modal, {\n    style: styles.modalWindow,\n    visible: deleting,\n    transparent: true,\n    onRequestClose: setDeletingHandler,\n    statusBarTranslucent: true,\n    children: _jsx(TouchableOpacity, {\n      activeOpacity: 1,\n      style: styles.touchableBackground,\n      onPress: setDeletingHandler,\n      children: _jsxs(View, {\n        style: styles.mainModalMessageContainer,\n        children: [_jsx(View, {\n          style: styles.modalMessageContainer,\n          children: _jsxs(Text, {\n            style: styles.modalMessageText,\n            children: [\"Do you want to delete this message? \", (message == null ? void 0 : message.author.userId) == author.userId || 'It will be deleted only for you.']\n          })\n        }), message != undefined ? _jsxs(View, {\n          style: styles.modalButtonsContainer,\n          children: [_jsx(TouchableOpacity, {\n            activeOpacity: 1,\n            style: styles.modalLeftButtonContainer,\n            onPress: onDeletePress,\n            children: _jsx(Text, {\n              style: styles.modalButtonText,\n              children: message.author.userId == author.userId ? 'For me' : 'Agree'\n            })\n          }), _jsx(TouchableOpacity, {\n            activeOpacity: 1,\n            style: styles.modalRightButtonContainer,\n            onPress: message.author.userId == author.userId ? onDeletePress : setDeletingHandler,\n            children: _jsx(Text, {\n              style: styles.modalButtonText,\n              children: message.author.userId == author.userId ? 'For everyone' : 'Disagree'\n            })\n          })]\n        }) : null]\n      })\n    })\n  });\n};\nexport default connect(null)(DeleteMessageModal);","map":{"version":3,"names":["React","useEffect","styles","connect","jsxs","_jsxs","jsx","_jsx","DeleteMessageModal","_ref","deleting","setDeletingHandler","onDeletePress","message","author","Modal","style","modalWindow","visible","transparent","onRequestClose","statusBarTranslucent","children","TouchableOpacity","activeOpacity","touchableBackground","onPress","View","mainModalMessageContainer","modalMessageContainer","Text","modalMessageText","userId","undefined","modalButtonsContainer","modalLeftButtonContainer","modalButtonText","modalRightButtonContainer"],"sources":["D:/project/1project/Messenger/Messenger/Pages/Chats/Dialogue/components/DeleteMessageModal.tsx"],"sourcesContent":["import { View, Text, Modal, TouchableOpacity, Dimensions,  } from 'react-native';\r\nimport React, { MutableRefObject, useEffect } from 'react';\r\nimport { DeleteMessageModalProps } from './interfaces/IDeleteMessageModal';\r\nimport { styles } from './Styles/DeleteMessageModal';\r\nimport { connect } from 'react-redux';\r\n\r\nconst DeleteMessageModal = ({deleting, setDeletingHandler, onDeletePress, message, author}:DeleteMessageModalProps) => {\r\n  useEffect(()=> {\r\n    \r\n  }, [setDeletingHandler]);\r\n  return (\r\n    <Modal style={styles.modalWindow} visible={deleting} transparent={true} onRequestClose={setDeletingHandler} statusBarTranslucent={true} >\r\n      <TouchableOpacity activeOpacity={1} style={styles.touchableBackground}onPress={setDeletingHandler}>\r\n        <View style={styles.mainModalMessageContainer}>\r\n          <View style={styles.modalMessageContainer}>\r\n            <Text style={styles.modalMessageText}>\r\n              Do you want to delete this message? {message?.author.userId==author.userId||'It will be deleted only for you.'}\r\n            </Text>\r\n          </View>\r\n          {message!=undefined?(\r\n              <View style={styles.modalButtonsContainer}>\r\n                <TouchableOpacity activeOpacity={1} style={styles.modalLeftButtonContainer} onPress={onDeletePress}>\r\n                  <Text style={styles.modalButtonText}>{message.author.userId==author.userId?'For me':'Agree'}</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity activeOpacity={1} style={styles.modalRightButtonContainer} onPress={message.author.userId==author.userId?onDeletePress:setDeletingHandler}>\r\n                  <Text style={styles.modalButtonText}>{message.author.userId==author.userId?'For everyone':'Disagree'}</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            ):null}\r\n        </View>\r\n      </TouchableOpacity>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default connect(null)(DeleteMessageModal)"],"mappings":";;;;AACA,OAAOA,KAAK,IAAsBC,SAAS,QAAQ,OAAO;AAE1D,SAASC,MAAM;AACf,SAASC,OAAO,QAAQ,aAAa;AAAC,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAEtC,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAAC,IAAA,EAA+F;EAAA,IAA1FC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IAAEC,kBAAkB,GAAAF,IAAA,CAAlBE,kBAAkB;IAAEC,aAAa,GAAAH,IAAA,CAAbG,aAAa;IAAEC,OAAO,GAAAJ,IAAA,CAAPI,OAAO;IAAEC,MAAM,GAAAL,IAAA,CAANK,MAAM;EACvFb,SAAS,CAAC,YAAK,CAEf,CAAC,EAAE,CAACU,kBAAkB,CAAC,CAAC;EACxB,OACEJ,IAAA,CAACQ,KAAK;IAACC,KAAK,EAAEd,MAAM,CAACe,WAAY;IAACC,OAAO,EAAER,QAAS;IAACS,WAAW,EAAE,IAAK;IAACC,cAAc,EAAET,kBAAmB;IAACU,oBAAoB,EAAE,IAAK;IAAAC,QAAA,EACrIf,IAAA,CAACgB,gBAAgB;MAACC,aAAa,EAAE,CAAE;MAACR,KAAK,EAAEd,MAAM,CAACuB,mBAAoB;MAAAC,OAAO,EAAEf,kBAAmB;MAAAW,QAAA,EAChGjB,KAAA,CAACsB,IAAI;QAACX,KAAK,EAAEd,MAAM,CAAC0B,yBAA0B;QAAAN,QAAA,GAC5Cf,IAAA,CAACoB,IAAI;UAACX,KAAK,EAAEd,MAAM,CAAC2B,qBAAsB;UAAAP,QAAA,EACxCjB,KAAA,CAACyB,IAAI;YAACd,KAAK,EAAEd,MAAM,CAAC6B,gBAAiB;YAAAT,QAAA,GAAC,sCACA,EAAC,CAAAT,OAAO,oBAAPA,OAAO,CAAEC,MAAM,CAACkB,MAAM,KAAElB,MAAM,CAACkB,MAAM,IAAE,kCAAkC;UAAA,CAC1G;QAAC,CACH,CAAC,EACNnB,OAAO,IAAEoB,SAAS,GACf5B,KAAA,CAACsB,IAAI;UAACX,KAAK,EAAEd,MAAM,CAACgC,qBAAsB;UAAAZ,QAAA,GACxCf,IAAA,CAACgB,gBAAgB;YAACC,aAAa,EAAE,CAAE;YAACR,KAAK,EAAEd,MAAM,CAACiC,wBAAyB;YAACT,OAAO,EAAEd,aAAc;YAAAU,QAAA,EACjGf,IAAA,CAACuB,IAAI;cAACd,KAAK,EAAEd,MAAM,CAACkC,eAAgB;cAAAd,QAAA,EAAET,OAAO,CAACC,MAAM,CAACkB,MAAM,IAAElB,MAAM,CAACkB,MAAM,GAAC,QAAQ,GAAC;YAAO,CAAO;UAAC,CACnF,CAAC,EACnBzB,IAAA,CAACgB,gBAAgB;YAACC,aAAa,EAAE,CAAE;YAACR,KAAK,EAAEd,MAAM,CAACmC,yBAA0B;YAACX,OAAO,EAAEb,OAAO,CAACC,MAAM,CAACkB,MAAM,IAAElB,MAAM,CAACkB,MAAM,GAACpB,aAAa,GAACD,kBAAmB;YAAAW,QAAA,EAC1Jf,IAAA,CAACuB,IAAI;cAACd,KAAK,EAAEd,MAAM,CAACkC,eAAgB;cAAAd,QAAA,EAAET,OAAO,CAACC,MAAM,CAACkB,MAAM,IAAElB,MAAM,CAACkB,MAAM,GAAC,cAAc,GAAC;YAAU,CAAO;UAAC,CAC5F,CAAC;QAAA,CACf,CAAC,GACP,IAAI;MAAA,CACJ;IAAC,CACS;EAAC,CACd,CAAC;AAEZ,CAAC;AAED,eAAe7B,OAAO,CAAC,IAAI,CAAC,CAACK,kBAAkB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}