{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { screenHeight, screenWidth } from \"../../../../../ChatList/Constants/ConstantsForChatlist\";\nimport BackGroundColorForComponents from \"../../../../../SemiComponents/BackGroundColorForComponents\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LogoutModalWindow = function LogoutModalWindow() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isModalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var toggleModal = function toggleModal() {\n    setModalVisible(!isModalVisible);\n  };\n  var heightOfEditContainer = screenHeight * 0.043;\n  var widthOfEditContainer = screenWidth * 0.25;\n  return _jsxs(View, {\n    style: {\n      height: 'auto'\n    },\n    children: [_jsx(TouchableOpacity, {\n      style: {\n        alignItems: 'center',\n        flexDirection: 'row'\n      },\n      onPress: toggleModal,\n      children: _jsxs(View, {\n        style: {\n          alignSelf: \"center\",\n          marginTop: 20,\n          height: heightOfEditContainer,\n          width: widthOfEditContainer,\n          borderRadius: 14.5,\n          overflow: \"hidden\",\n          justifyContent: \"center\"\n        },\n        children: [_jsx(Text, {\n          style: {\n            alignSelf: \"center\",\n            color: \"red\",\n            fontSize: 17\n          },\n          children: \" Exit\"\n        }), _jsx(BackGroundColorForComponents, {\n          height: heightOfEditContainer,\n          width: widthOfEditContainer\n        })]\n      })\n    }), _jsx(Modal, {\n      animationType: \"none\",\n      transparent: true,\n      visible: isModalVisible,\n      onRequestClose: toggleModal\n    })]\n  });\n};\nexport default LogoutModalWindow;","map":{"version":3,"names":["React","useState","View","TouchableOpacity","Modal","Text","screenHeight","screenWidth","BackGroundColorForComponents","jsx","_jsx","jsxs","_jsxs","LogoutModalWindow","_useState","_useState2","_slicedToArray","isModalVisible","setModalVisible","toggleModal","heightOfEditContainer","widthOfEditContainer","style","height","children","alignItems","flexDirection","onPress","alignSelf","marginTop","width","borderRadius","overflow","justifyContent","color","fontSize","animationType","transparent","visible","onRequestClose"],"sources":["D:/project/1project/Messenger/Messenger/Pages/Settings/MainSettingPage/settingsPage/Center/LogoutModalWindow/LogoutModalWindow.tsx"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport { View, TouchableOpacity, Modal, Text } from \"react-native\";\r\nimport StyleCentre from \"../StyleCenter\";\r\nimport BlurAll from \"../../../../../SemiComponents/BlurAll\";\r\nimport { screenHeight,screenWidth } from \"../../../../../ChatList/Constants/ConstantsForChatlist\";\r\nimport BackGroundColorForComponents from \"../../../../../SemiComponents/BackGroundColorForComponents\";\r\n\r\n\r\nconst LogoutModalWindow = ()=>{\r\n\r\n    const [isModalVisible, setModalVisible] = useState(false);\r\n        const toggleModal = () => {\r\n            setModalVisible(!isModalVisible);\r\n        };\r\n        const heightOfEditContainer=screenHeight * 0.043;\r\n  const widthOfEditContainer= screenWidth * 0.25;\r\n\r\n    return(\r\n    <View style = {{height:'auto'}} >\r\n        <TouchableOpacity style={{alignItems:'center', flexDirection:'row'}} onPress={toggleModal} >\r\n            <View style={{alignSelf: \"center\",marginTop: 20,height: heightOfEditContainer,width: widthOfEditContainer,borderRadius: 14.5,overflow: \"hidden\",justifyContent: \"center\"}}>\r\n                <Text style={{ alignSelf: \"center\",color: \"red\",fontSize: 17}}> Exit</Text>\r\n                <BackGroundColorForComponents height={heightOfEditContainer} width={widthOfEditContainer} ></BackGroundColorForComponents>\r\n            </View>\r\n        </TouchableOpacity>           \r\n        <Modal \r\n             animationType=\"none\"\r\n             transparent={true}\r\n              visible={isModalVisible}\r\n              onRequestClose={toggleModal}>                                 \r\n        </Modal>\r\n                                   \r\n    </View>\r\n    )\r\n}\r\n\r\nexport default LogoutModalWindow;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,IAAA;AAItC,SAASC,YAAY,EAACC,WAAW;AACjC,OAAOC,4BAA4B;AAAmE,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGtG,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAO;EAE1B,IAAAC,SAAA,GAA0Cb,QAAQ,CAAC,KAAK,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAlDG,cAAc,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EAClC,IAAMI,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACtBD,eAAe,CAAC,CAACD,cAAc,CAAC;EACpC,CAAC;EACD,IAAMG,qBAAqB,GAACd,YAAY,GAAG,KAAK;EACtD,IAAMe,oBAAoB,GAAEd,WAAW,GAAG,IAAI;EAE5C,OACAK,KAAA,CAACV,IAAI;IAACoB,KAAK,EAAI;MAACC,MAAM,EAAC;IAAM,CAAE;IAAAC,QAAA,GAC3Bd,IAAA,CAACP,gBAAgB;MAACmB,KAAK,EAAE;QAACG,UAAU,EAAC,QAAQ;QAAEC,aAAa,EAAC;MAAK,CAAE;MAACC,OAAO,EAAER,WAAY;MAAAK,QAAA,EACtFZ,KAAA,CAACV,IAAI;QAACoB,KAAK,EAAE;UAACM,SAAS,EAAE,QAAQ;UAACC,SAAS,EAAE,EAAE;UAACN,MAAM,EAAEH,qBAAqB;UAACU,KAAK,EAAET,oBAAoB;UAACU,YAAY,EAAE,IAAI;UAACC,QAAQ,EAAE,QAAQ;UAACC,cAAc,EAAE;QAAQ,CAAE;QAAAT,QAAA,GACtKd,IAAA,CAACL,IAAI;UAACiB,KAAK,EAAE;YAAEM,SAAS,EAAE,QAAQ;YAACM,KAAK,EAAE,KAAK;YAACC,QAAQ,EAAE;UAAE,CAAE;UAAAX,QAAA,EAAC;QAAK,CAAM,CAAC,EAC3Ed,IAAA,CAACF,4BAA4B;UAACe,MAAM,EAAEH,qBAAsB;UAACU,KAAK,EAAET;QAAqB,CAAgC,CAAC;MAAA,CACxH;IAAC,CACO,CAAC,EACnBX,IAAA,CAACN,KAAK;MACDgC,aAAa,EAAC,MAAM;MACpBC,WAAW,EAAE,IAAK;MACjBC,OAAO,EAAErB,cAAe;MACxBsB,cAAc,EAAEpB;IAAY,CAC3B,CAAC;EAAA,CAEN,CAAC;AAEX,CAAC;AAED,eAAeN,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}