{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { footerstyles } from \"../Styles/FooterStyle\";\nimport Folder from \"./Footer containers/Folder\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Footer = function Footer(_ref) {\n  var user = _ref.user;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedFolder = _useState2[0],\n    setSelectedFolder = _useState2[1];\n  var handleFolderPress = function handleFolderPress(index) {\n    if (selectedFolder === index) {\n      setSelectedFolder(null);\n    } else {\n      setSelectedFolder(index);\n    }\n  };\n  return _jsx(View, {\n    style: [footerstyles.container],\n    children: _jsx(ScrollView, {\n      horizontal: true,\n      style: footerstyles.scrollView,\n      children: user.folders.map(function (folder, index) {\n        return _jsx(Folder, {\n          text: folder,\n          containerStyle: footerstyles.folder,\n          textStyle: styles.folderTextStyle,\n          isSelected: selectedFolder === index,\n          onPress: function onPress() {\n            return handleFolderPress(index);\n          }\n        }, index);\n      })\n    })\n  });\n};","map":{"version":3,"names":["footerstyles","Folder","jsx","_jsx","Footer","_ref","user","_useState","useState","_useState2","_slicedToArray","selectedFolder","setSelectedFolder","handleFolderPress","index","View","style","container","children","ScrollView","horizontal","scrollView","folders","map","folder","text","containerStyle","textStyle","styles","folderTextStyle","isSelected","onPress"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/ChatList/Components/Footer.tsx"],"sourcesContent":["import { View,ScrollView } from \"react-native\";\r\nimport MySelfUser from \"../1HelpFullFolder/MySelfUser\";\r\nimport { footerstyles } from \"../Styles/FooterStyle\";\r\nimport Folder from \"./Footer containers/Folder\";\r\ninterface FooterProps {\r\n    user: MySelfUser;\r\n  }\r\n  \r\n  const Footer: React.FC<{ user: { folders: string[] } }> = ({ user }) => {\r\n    const [selectedFolder, setSelectedFolder] = useState<number | null>(null);\r\n  \r\n    const handleFolderPress = (index: number) => {\r\n      if (selectedFolder === index) {\r\n        setSelectedFolder(null); // Вимкнути вибір, якщо вже обрано\r\n      } else {\r\n        setSelectedFolder(index); // Обрати нову папку\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <View style={[footerstyles.container]}>\r\n        <ScrollView horizontal={true} style={footerstyles.scrollView}>\r\n          {user.folders.map((folder, index) => (\r\n            <Folder\r\n              key={index}\r\n              text={folder}\r\n              containerStyle={footerstyles.folder}\r\n              textStyle={styles.folderTextStyle}\r\n              isSelected={selectedFolder === index}\r\n              onPress={() => handleFolderPress(index)}\r\n            />\r\n          ))}\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  };\r\n  "],"mappings":";;;AAEA,SAASA,YAAY;AACrB,OAAOC,MAAM;AAAmC,SAAAC,GAAA,IAAAC,IAAA;AAK9C,IAAMC,MAAiD,GAAG,SAApDA,MAAiDA,CAAAC,IAAA,EAAiB;EAAA,IAAXC,IAAI,GAAAD,IAAA,CAAJC,IAAI;EAC/D,IAAAC,SAAA,GAA4CC,QAAQ,CAAgB,IAAI,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAAlEI,cAAc,GAAAF,UAAA;IAAEG,iBAAiB,GAAAH,UAAA;EAExC,IAAMI,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,KAAa,EAAK;IAC3C,IAAIH,cAAc,KAAKG,KAAK,EAAE;MAC5BF,iBAAiB,CAAC,IAAI,CAAC;IACzB,CAAC,MAAM;MACLA,iBAAiB,CAACE,KAAK,CAAC;IAC1B;EACF,CAAC;EAED,OACEX,IAAA,CAACY,IAAI;IAACC,KAAK,EAAE,CAAChB,YAAY,CAACiB,SAAS,CAAE;IAAAC,QAAA,EACpCf,IAAA,CAACgB,UAAU;MAACC,UAAU,EAAE,IAAK;MAACJ,KAAK,EAAEhB,YAAY,CAACqB,UAAW;MAAAH,QAAA,EAC1DZ,IAAI,CAACgB,OAAO,CAACC,GAAG,CAAC,UAACC,MAAM,EAAEV,KAAK;QAAA,OAC9BX,IAAA,CAACF,MAAM;UAELwB,IAAI,EAAED,MAAO;UACbE,cAAc,EAAE1B,YAAY,CAACwB,MAAO;UACpCG,SAAS,EAAEC,MAAM,CAACC,eAAgB;UAClCC,UAAU,EAAEnB,cAAc,KAAKG,KAAM;UACrCiB,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMlB,iBAAiB,CAACC,KAAK,CAAC;UAAA;QAAC,GALnCA,KAMN,CAAC;MAAA,CACH;IAAC,CACQ;EAAC,CACT,CAAC;AAEX,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}