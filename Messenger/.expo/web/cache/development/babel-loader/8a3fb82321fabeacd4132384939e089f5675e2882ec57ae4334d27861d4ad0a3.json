{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { styles } from \"./../MessageViewsAndTypes/Styles/ReplyTextType\";\nimport React from 'react';\nimport { wrapText } from \"./../MessageViewsAndTypes/HelperFunctions/wrapText\";\nimport { screenHeight, screenWidth } from \"../../../ChatList/Constants/ConstantsForChatlist\";\nimport { CHARS_PER_LINE, FONT_SIZE } from \"../DialogueConstants\";\nimport MessageItemStatusMessageNotReviewed from \"../SVG/MessageItemStatusMessageNotReviewed\";\nimport MessageItemStatusMessageReviewed from \"../SVG/MessageItemStatusMessageReviewed\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ReplyTextDummyMessage = function ReplyTextDummyMessage(_ref) {\n  var _replyMessage$content, _userMessageLastWatch;\n  var messages = _ref.messages,\n    message = _ref.message,\n    isUser = _ref.isUser,\n    height = _ref.height,\n    userMessageLastWatched = _ref.userMessageLastWatched;\n  var replyMessage = messages.find(function (m) {\n    return m.messageId == message.messageResponseId;\n  });\n  return _jsxs(View, {\n    style: styles.replyContainer,\n    children: [_jsxs(View, {\n      style: styles.innerReplyContainer,\n      children: [_jsx(Text, {\n        style: [styles.replyUserNameFont, isUser && {\n          alignSelf: 'flex-end'\n        }],\n        children: isUser ? 'You' : 'Denis'\n      }), isUser ? _jsxs(View, {\n        style: styles.replyMessageContainer,\n        children: [_jsx(View, {\n          children: _jsxs(View, {\n            style: [styles.messageTypeTextUser, styles.replyMessagePos, {\n              overflow: 'hidden'\n            }],\n            children: [_jsx(View, {\n              style: {\n                position: 'absolute',\n                height: screenHeight,\n                width: screenWidth,\n                zIndex: -1,\n                opacity: 1,\n                backgroundColor: '#E09EFF'\n              }\n            }), _jsx(Text, {\n              style: styles.replyMessageFont,\n              children: replyMessage != undefined && (replyMessage == null ? void 0 : (_replyMessage$content = replyMessage.content) == null ? void 0 : _replyMessage$content.length) >= CHARS_PER_LINE ? (replyMessage == null ? void 0 : replyMessage.content.replace('\\n', '').slice(0, CHARS_PER_LINE)) + '...' : replyMessage == null ? void 0 : replyMessage.content\n            })]\n          })\n        }), _jsx(View, {\n          style: styles.replyMessageLine\n        })]\n      }) : _jsxs(View, {\n        style: styles.replyMessageContainer,\n        children: [_jsx(View, {\n          style: styles.replyMessageLine\n        }), _jsx(View, {\n          style: {\n            flex: 1\n          },\n          children: _jsxs(View, {\n            style: [styles.messageTypeTextNotUser, styles.replyMessagePos, {\n              overflow: 'hidden'\n            }],\n            children: [_jsx(View, {\n              style: {\n                position: 'absolute',\n                height: screenHeight,\n                width: screenWidth,\n                zIndex: -1,\n                opacity: 1,\n                backgroundColor: '#fff'\n              }\n            }), _jsx(Text, {\n              style: styles.replyMessageFont,\n              children: replyMessage != undefined && (replyMessage == null ? void 0 : replyMessage.content.length) >= CHARS_PER_LINE ? (replyMessage == null ? void 0 : replyMessage.content.replace('\\n', '').slice(0, CHARS_PER_LINE)) + '...' : replyMessage == null ? void 0 : replyMessage.content\n            })]\n          })\n        })]\n      }), _jsx(View, {\n        children: _jsxs(View, {\n          style: [isUser ? styles.messageTypeTextUser : styles.messageTypeTextNotUser, {\n            marginTop: Math.ceil(FONT_SIZE) + 1\n          }, (message == null ? void 0 : message.content.length) > CHARS_PER_LINE && styles.longMessage, {\n            overflow: 'hidden'\n          }],\n          children: [_jsx(View, {\n            style: {\n              position: 'absolute',\n              height: screenHeight,\n              width: screenWidth,\n              zIndex: -1,\n              opacity: 1,\n              backgroundColor: isUser ? '#E09EFF' : '#fff'\n            }\n          }), _jsx(Text, {\n            style: {\n              height: Math.floor(height - 11) - (message.content.length > CHARS_PER_LINE ? 9.3 : 0)\n            },\n            children: wrapText(message.content, CHARS_PER_LINE)\n          }), _jsxs(Text, {\n            style: (message == null ? void 0 : message.content.length) > CHARS_PER_LINE ? [styles.messageTimeStamp, styles.longMessageTimeStamp] : styles.messageTimeStamp,\n            children: [message.isEdited ? 'edited ' : '', new Date(message.sendingTime).getHours().toString().padStart(2, '0'), \":\", new Date(message.sendingTime).getMinutes().toString().padStart(2, '0')]\n          })]\n        })\n      })]\n    }), isUser && _jsx(View, {\n      style: {\n        position: 'absolute',\n        right: 0,\n        bottom: 5,\n        marginRight: -2.5\n      },\n      children: message.messageId <= (userMessageLastWatched == null ? void 0 : (_userMessageLastWatch = userMessageLastWatched.value) == null ? void 0 : _userMessageLastWatch.messageId) ? _jsx(MessageItemStatusMessageReviewed, {}) : _jsx(MessageItemStatusMessageNotReviewed, {})\n    })]\n  });\n};\nexport default ReplyTextDummyMessage;","map":{"version":3,"names":["styles","React","wrapText","screenHeight","screenWidth","CHARS_PER_LINE","FONT_SIZE","MessageItemStatusMessageNotReviewed","MessageItemStatusMessageReviewed","jsx","_jsx","jsxs","_jsxs","ReplyTextDummyMessage","_ref","_replyMessage$content","_userMessageLastWatch","messages","message","isUser","height","userMessageLastWatched","replyMessage","find","m","messageId","messageResponseId","View","style","replyContainer","children","innerReplyContainer","Text","replyUserNameFont","alignSelf","replyMessageContainer","messageTypeTextUser","replyMessagePos","overflow","position","width","zIndex","opacity","backgroundColor","replyMessageFont","undefined","content","length","replace","slice","replyMessageLine","flex","messageTypeTextNotUser","marginTop","Math","ceil","longMessage","floor","messageTimeStamp","longMessageTimeStamp","isEdited","Date","sendingTime","getHours","toString","padStart","getMinutes","right","bottom","marginRight","value"],"sources":["D:/project/1project/Messenger/Messenger/Pages/Chats/Dialogue/MessageMenuDummyMessages/ReplyTextDummyMessage.tsx"],"sourcesContent":["import { View, Text } from 'react-native';\r\nimport { styles } from './../MessageViewsAndTypes/Styles/ReplyTextType';\r\nimport React from 'react';\r\nimport { wrapText } from './../MessageViewsAndTypes/HelperFunctions/wrapText';\r\nimport { screenHeight, screenWidth } from '../../../ChatList/Constants/ConstantsForChatlist';\r\nimport { ReplyTextType } from './Interfaces/IReplyText';\r\nimport { CHARS_PER_LINE, FONT_SIZE } from '../DialogueConstants';\r\nimport MessageItemStatusMessageNotReviewed from '../SVG/MessageItemStatusMessageNotReviewed';\r\nimport MessageItemStatusMessageReviewed from '../SVG/MessageItemStatusMessageReviewed';\r\n\r\nconst ReplyTextDummyMessage = ({messages, message, isUser, height, userMessageLastWatched}:ReplyTextType) => {\r\n  const replyMessage = messages.find(m => m.messageId==message.messageResponseId);\r\n\r\n  return (\r\n      <View style={styles.replyContainer} >\r\n        <View style={styles.innerReplyContainer} >\r\n          <Text style={[styles.replyUserNameFont, isUser&&{ alignSelf: 'flex-end' }]}>\r\n            {isUser?'You':'Denis'}\r\n          </Text>\r\n          {isUser?\r\n          <View style={styles.replyMessageContainer}>\r\n            <View>\r\n              <View style={[styles.messageTypeTextUser, styles.replyMessagePos, { overflow: 'hidden' }]}>\r\n                <View style={{ position: 'absolute', height: screenHeight, width: screenWidth, zIndex: -1, opacity: 1, backgroundColor:'#E09EFF' }} /> \r\n                <Text style={styles.replyMessageFont}>\r\n                  {replyMessage!=undefined&&replyMessage?.content?.length>=CHARS_PER_LINE?replyMessage?.content.replace('\\n', '').slice(0,CHARS_PER_LINE)+'...':replyMessage?.content}\r\n                </Text>\r\n              </View>\r\n            </View>\r\n            <View style={styles.replyMessageLine}/>\r\n          </View>\r\n          :\r\n          <View style={styles.replyMessageContainer}>\r\n            <View style={styles.replyMessageLine}/>\r\n            <View style={{ flex:1 }} >\r\n              <View style={[styles.messageTypeTextNotUser, styles.replyMessagePos, { overflow: 'hidden' }]}>\r\n                <View style={{ position: 'absolute', height: screenHeight, width: screenWidth, zIndex: -1, opacity: 1, backgroundColor:'#fff' }} /> \r\n                <Text style={styles.replyMessageFont}>\r\n                  {replyMessage!=undefined&&replyMessage?.content.length>=CHARS_PER_LINE?replyMessage?.content.replace('\\n', '').slice(0,CHARS_PER_LINE)+'...':replyMessage?.content}\r\n                </Text>\r\n              </View>\r\n            </View>\r\n          </View>}\r\n          <View >\r\n            <View \r\n              style={[isUser?styles.messageTypeTextUser:styles.messageTypeTextNotUser, {marginTop:Math.ceil(FONT_SIZE)+1}, message?.content.length>CHARS_PER_LINE&&styles.longMessage, { overflow: 'hidden' }]}\r\n            >\r\n              <View style={{ position: 'absolute', height: screenHeight, width: screenWidth, zIndex: -1, opacity: 1, backgroundColor:isUser?'#E09EFF':'#fff' }} /> \r\n              <Text style={{ height: Math.floor(height-11)-(message.content.length>CHARS_PER_LINE?9.3:0) }}>{wrapText(message.content, CHARS_PER_LINE)}</Text>\r\n              <Text style={message?.content.length>CHARS_PER_LINE?[styles.messageTimeStamp, styles.longMessageTimeStamp]:styles.messageTimeStamp}>\r\n                {message.isEdited?'edited ':''}\r\n                {new Date(message.sendingTime).getHours().toString().padStart(2, '0')}:\r\n                {new Date(message.sendingTime).getMinutes().toString().padStart(2, '0')}\r\n              </Text>\r\n            </View>\r\n          </View>\r\n        </View>\r\n        { isUser && \r\n          <View style={{ position: 'absolute', right: 0, bottom: 5 , marginRight: -2.5 }}>\r\n            { message.messageId!<=userMessageLastWatched?.value?.messageId!?<MessageItemStatusMessageReviewed />:<MessageItemStatusMessageNotReviewed /> }\r\n          </View> }\r\n      </View>\r\n)};\r\n\r\nexport default ReplyTextDummyMessage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}