{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { footerstyles } from \"../Styles/FooterStyle\";\nimport ListOfFolder from \"./ListOfFolder\";\nimport FolderContainer from \"./Footer containers/FolderContainer\";\nimport FolderModalWindow from \"./Footer containers/FolderModalWindow\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  screenWidth = _Dimensions$get.width,\n  screenHeight = _Dimensions$get.height;\nvar Footer = function Footer(_ref) {\n  var user = _ref.user;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedFolder = _useState2[0],\n    setSelectedFolder = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedLongPressFolder = _useState4[0],\n    setSelectedLongPressFolder = _useState4[1];\n  var scrollX = useRef(new Animated.Value(0)).current;\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    currentPosition = _useState6[0],\n    setCurrentPosition = _useState6[1];\n  var handleFolderPress = function handleFolderPress(index) {\n    if (selectedFolder === index) {\n      return;\n    }\n    setSelectedFolder(index);\n    scrollToFolder(index);\n  };\n  var scrollToIcon = function scrollToIcon(index) {\n    var _scrollViewRefFooter$;\n    scrollViewRefFooter == null ? void 0 : (_scrollViewRefFooter$ = scrollViewRefFooter.current) == null ? void 0 : _scrollViewRefFooter$.scrollTo({\n      x: positionsOfFolder[index] - screenWidth * 0.92 / 2 + widths[index] / 2,\n      animated: true\n    });\n  };\n  var updateSelectedFolder = function updateSelectedFolder() {\n    var newSelectedFolder = Math.round(currentPosition / screenWidth);\n    scrollToIcon(newSelectedFolder);\n    setSelectedFolder(newSelectedFolder);\n  };\n  var handleHorizontalScroll = function handleHorizontalScroll(event) {\n    var newHorizontalPosition = event.nativeEvent.contentOffset.x;\n    if (newHorizontalPosition < 0) {\n      newHorizontalPosition = 0;\n    } else if (newHorizontalPosition > screenWidth * (user.folders.length - 1)) {\n      newHorizontalPosition = screenWidth * (user.folders.length - 1);\n    }\n    setCurrentPosition(newHorizontalPosition);\n  };\n  var handleMomentumScrollEnd = function handleMomentumScrollEnd() {\n    updateSelectedFolder();\n  };\n  var scrollToFolder = function scrollToFolder(folderId) {\n    var _scrollViewRef$curren;\n    (_scrollViewRef$curren = scrollViewRef.current) == null ? void 0 : _scrollViewRef$curren.scrollTo({\n      x: folderId * screenWidth,\n      animated: true\n    });\n    scrollToIcon(folderId);\n  };\n  useEffect(function () {\n    scrollX.addListener(function (_ref2) {\n      var value = _ref2.value;\n      setCurrentPosition(value);\n    });\n    return function () {\n      scrollX.removeAllListeners();\n    };\n  }, []);\n  var scrollViewRef = useRef(null);\n  var scrollViewRefFooter = useRef(null);\n  var _useState7 = useState(user.folders.map(function () {\n      return screenWidth * 0.1;\n    })),\n    _useState8 = _slicedToArray(_useState7, 2),\n    widths = _useState8[0],\n    setWidths = _useState8[1];\n  var viewsRefs = [user.folders.forEach(function () {\n    return useRef(null);\n  })];\n  var _useState9 = useState(user.folders.map(function () {\n      return 0;\n    })),\n    _useState10 = _slicedToArray(_useState9, 2),\n    positionsOfFolder = _useState10[0],\n    setPositionOfFolder = _useState10[1];\n  var handleLayout = function handleLayout(event, index) {\n    var width = event.nativeEvent.layout.width;\n    var position = event.nativeEvent.layout.x;\n    var updatePosition = _toConsumableArray(positionsOfFolder);\n    updatePosition[index] = position;\n    setPositionOfFolder(updatePosition);\n    var updatedWidths = _toConsumableArray(widths);\n    updatedWidths[index] = width;\n    setWidths(updatedWidths);\n  };\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isVisible = _useState12[0],\n    setIsVisible = _useState12[1];\n  var _useState13 = useState(0),\n    _useState14 = _slicedToArray(_useState13, 2),\n    positionX = _useState14[0],\n    setPositionX = _useState14[1];\n  var _useState15 = useState(0),\n    _useState16 = _slicedToArray(_useState15, 2),\n    positionXInContainer = _useState16[0],\n    setPositionXInContainer = _useState16[1];\n  var _handleLongPress = function handleLongPress(e, index) {\n    setSelectedLongPressFolder(index);\n    var target = e.nativeEvent;\n    setIsVisible(true);\n    setPositionX(target.pageX);\n    setPositionXInContainer(target.locationX);\n    if (positionX + widths[selectedLongPressFolder] / 2 > screenWidth) {\n      var _scrollViewRefFooter$2;\n      (_scrollViewRefFooter$2 = scrollViewRefFooter.current) == null ? void 0 : _scrollViewRefFooter$2.scrollTo({\n        x: positionsOfFolder[selectedLongPressFolder] + screenWidth\n      });\n    }\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(ScrollView, {\n      horizontal: true,\n      scrollEventThrottle: 16,\n      showsHorizontalScrollIndicator: false,\n      ref: scrollViewRef,\n      pagingEnabled: true,\n      onScroll: handleHorizontalScroll,\n      onMomentumScrollEnd: handleMomentumScrollEnd,\n      nestedScrollEnabled: true,\n      children: user.folders.map(function (folder, index) {\n        return _jsx(ListOfFolder, {\n          user: user,\n          selectedFolder: index\n        }, index);\n      })\n    }), isVisible ? _jsx(FolderModalWindow, {\n      folder: user.folders[selectedLongPressFolder],\n      positionX: positionX,\n      positionXInContainer: positionXInContainer,\n      widthOfFolder: widths[selectedLongPressFolder]\n    }) : null, _jsx(View, {\n      style: footerstyles.container,\n      children: _jsx(ScrollView, {\n        showsHorizontalScrollIndicator: false,\n        horizontal: true,\n        style: footerstyles.scrollView,\n        scrollEventThrottle: 1,\n        ref: scrollViewRefFooter,\n        children: _jsxs(View, {\n          children: [_jsx(View, {\n            style: {\n              flexDirection: \"row\"\n            },\n            children: user.folders.map(function (folder, index) {\n              return _jsx(View, {\n                onLayout: function onLayout(event) {\n                  return handleLayout(event, index);\n                },\n                ref: viewsRefs[index],\n                children: _jsx(FolderContainer, {\n                  folder: folder,\n                  containerStyle: footerstyles.folderContainer,\n                  textStyle: footerstyles.folder,\n                  isSelected: index === Math.round(currentPosition / screenWidth),\n                  onPress: function onPress() {\n                    return handleFolderPress(index);\n                  },\n                  width: widths[index],\n                  handleLongPress: function handleLongPress(e) {\n                    return _handleLongPress(e, index);\n                  }\n                }, index)\n              }, index);\n            })\n          }), _jsx(Animated.View, {\n            style: {\n              left: (currentPosition - screenWidth * Math.round(currentPosition / screenWidth)) % screenWidth / screenWidth * widths[Math.round(currentPosition / screenWidth)] + positionsOfFolder[Math.round(currentPosition / screenWidth)]\n            },\n            children: _jsx(Animated.View, {\n              style: [footerstyles.selectedFolder, {\n                width: widths[Math.round(currentPosition / screenWidth)] * 0.8,\n                marginLeft: widths[Math.round(currentPosition / screenWidth)] * 0.1\n              }]\n            })\n          })]\n        })\n      })\n    })]\n  });\n};\nexport default Footer;","map":{"version":3,"names":["React","useRef","useState","useEffect","View","ScrollView","Dimensions","Animated","footerstyles","ListOfFolder","FolderContainer","FolderModalWindow","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","_Dimensions$get","get","screenWidth","width","screenHeight","height","Footer","_ref","user","_useState","_useState2","_slicedToArray","selectedFolder","setSelectedFolder","_useState3","_useState4","selectedLongPressFolder","setSelectedLongPressFolder","scrollX","Value","current","_useState5","_useState6","currentPosition","setCurrentPosition","handleFolderPress","index","scrollToFolder","scrollToIcon","_scrollViewRefFooter$","scrollViewRefFooter","scrollTo","x","positionsOfFolder","widths","animated","updateSelectedFolder","newSelectedFolder","Math","round","handleHorizontalScroll","event","newHorizontalPosition","nativeEvent","contentOffset","folders","length","handleMomentumScrollEnd","folderId","_scrollViewRef$curren","scrollViewRef","addListener","_ref2","value","removeAllListeners","_useState7","map","_useState8","setWidths","viewsRefs","forEach","_useState9","_useState10","setPositionOfFolder","handleLayout","layout","position","updatePosition","_toConsumableArray","updatedWidths","_useState11","_useState12","isVisible","setIsVisible","_useState13","_useState14","positionX","setPositionX","_useState15","_useState16","positionXInContainer","setPositionXInContainer","handleLongPress","e","target","pageX","locationX","_scrollViewRefFooter$2","children","horizontal","scrollEventThrottle","showsHorizontalScrollIndicator","ref","pagingEnabled","onScroll","onMomentumScrollEnd","nestedScrollEnabled","folder","widthOfFolder","style","container","scrollView","flexDirection","onLayout","containerStyle","folderContainer","textStyle","isSelected","onPress","left","marginLeft"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/ChatList/Components/Footer.tsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Text,\r\n  Dimensions,\r\n  Animated,\r\n  TouchableOpacity,\r\n  Easing,\r\n  NativeMethods,\r\n  LayoutChangeEvent,\r\n  GestureResponderEvent,\r\n} from \"react-native\";\r\nimport MySelfUser from \"../1HelpFullFolder/MySelfUser\";\r\nimport { footerstyles } from \"../Styles/FooterStyle\";\r\nimport ListOfFolder from \"./ListOfFolder\";\r\nimport Folder from \"./Footer containers/FolderContainer\";\r\nimport FolderContainer from \"./Footer containers/FolderContainer\";\r\nimport FolderModalWindow from \"./Footer containers/FolderModalWindow\";\r\n\r\ninterface FooterProps {\r\n  user: MySelfUser;\r\n}\r\n\r\nconst { width: screenWidth, height: screenHeight } = Dimensions.get(\"window\");\r\n\r\nconst Footer: React.FC<FooterProps> = ({ user }) => {\r\n  const [selectedFolder, setSelectedFolder] = useState<number>(0);\r\n  const [selectedLongPressFolder,setSelectedLongPressFolder]=useState<number>(0);\r\n  const scrollX = useRef(new Animated.Value(0)).current;\r\n  const [currentPosition, setCurrentPosition] = useState(0);\r\n  const handleFolderPress = (index: number) => {\r\n    if (selectedFolder === index) {\r\n      return;\r\n    }\r\n    setSelectedFolder(index);\r\n    scrollToFolder(index);\r\n  };\r\n  const scrollToIcon = (index: number): void => {\r\n    scrollViewRefFooter?.current?.scrollTo({\r\n      x:\r\n        positionsOfFolder[index] - (screenWidth * 0.92) / 2 + widths[index] / 2,\r\n      animated: true,\r\n    });\r\n  };\r\n  const updateSelectedFolder = () => {\r\n    const newSelectedFolder = Math.round(currentPosition / screenWidth);\r\n    scrollToIcon(newSelectedFolder);\r\n    setSelectedFolder(newSelectedFolder);\r\n  };\r\n\r\n  const handleHorizontalScroll = (event: any) => {\r\n    let newHorizontalPosition = event.nativeEvent.contentOffset.x;\r\n    if (newHorizontalPosition < 0) {\r\n      newHorizontalPosition = 0;\r\n    } else if (\r\n      newHorizontalPosition >\r\n      screenWidth * (user.folders.length - 1)\r\n    ) {\r\n      newHorizontalPosition = screenWidth * (user.folders.length - 1);\r\n    }\r\n    setCurrentPosition(newHorizontalPosition);\r\n  };\r\n\r\n  const handleMomentumScrollEnd = () => {\r\n    updateSelectedFolder();\r\n  };\r\n\r\n  const scrollToFolder = (folderId: number) => {\r\n    scrollViewRef.current?.scrollTo({\r\n      x: folderId * screenWidth,\r\n      animated: true,\r\n    });\r\n    scrollToIcon(folderId);\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollX.addListener(({ value }) => {\r\n      setCurrentPosition(value);\r\n    });\r\n    return () => {\r\n      scrollX.removeAllListeners();\r\n    };\r\n  }, []);\r\n\r\n  const scrollViewRef = useRef<ScrollView | null>(null);\r\n  const scrollViewRefFooter = useRef<ScrollView | null>(null);\r\n  const [widths, setWidths] = useState<number[]>(\r\n    user.folders.map(() => screenWidth * 0.1)\r\n  );\r\n\r\n  const viewsRefs: any = [user.folders.forEach(() => useRef(null))];\r\n  const [positionsOfFolder, setPositionOfFolder] = useState<number[]>(\r\n    user.folders.map(() => 0)\r\n  );\r\n  const handleLayout = (event: LayoutChangeEvent, index: number) => {\r\n    const { width } = event.nativeEvent.layout;\r\n    const position = event.nativeEvent.layout.x; // Отримуємо ширину з події\r\n    const updatePosition = [...positionsOfFolder];\r\n    updatePosition[index] = position;\r\n    setPositionOfFolder(updatePosition);\r\n    const updatedWidths = [...widths]; // Копіюємо поточний стан\r\n    updatedWidths[index] = width; // Оновлюємо ширину для об'єкта за індексом\r\n    setWidths(updatedWidths); // Зберігаємо оновлений стан\r\n  };\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const [positionX, setPositionX] = useState(0);\r\n  const [positionXInContainer, setPositionXInContainer] = useState(0);\r\n  const handleLongPress = (e: GestureResponderEvent,index:number) => {\r\n    setSelectedLongPressFolder(index);\r\n    const target = e.nativeEvent;\r\n    setIsVisible(true);\r\n    setPositionX(target.pageX);\r\n    setPositionXInContainer(target.locationX);\r\n    if(positionX  + widths[selectedLongPressFolder] / 2>screenWidth){\r\n        scrollViewRefFooter.current?.scrollTo({x:positionsOfFolder[selectedLongPressFolder]+screenWidth})\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ScrollView\r\n        horizontal\r\n        scrollEventThrottle={16}\r\n        showsHorizontalScrollIndicator={false}\r\n        ref={scrollViewRef}\r\n        pagingEnabled\r\n        onScroll={handleHorizontalScroll}\r\n        onMomentumScrollEnd={handleMomentumScrollEnd}\r\n        nestedScrollEnabled={true}\r\n      >\r\n        {user.folders.map((folder, index) => (\r\n          <ListOfFolder key={index} user={user} selectedFolder={index} />\r\n        ))}\r\n      </ScrollView>\r\n      {isVisible ? (\r\n        <FolderModalWindow\r\n          folder={user.folders[selectedLongPressFolder]}\r\n          positionX={positionX}\r\n          positionXInContainer={positionXInContainer}\r\n          widthOfFolder={widths[selectedLongPressFolder]}\r\n        />\r\n      ) : null}\r\n      <View style={footerstyles.container}>\r\n        <ScrollView\r\n          showsHorizontalScrollIndicator={false}\r\n          horizontal\r\n          style={footerstyles.scrollView}\r\n          scrollEventThrottle={1}\r\n          ref={scrollViewRefFooter}\r\n        >\r\n          <View>\r\n            <View style={{ flexDirection: \"row\" }}>\r\n              {user.folders.map((folder, index) => {\r\n                return (\r\n                  <View\r\n                    key={index}\r\n                    onLayout={(event) => handleLayout(event, index)}\r\n                    ref={viewsRefs[index]}\r\n                  >\r\n                    <FolderContainer\r\n                      key={index}\r\n                      folder={folder}\r\n                      containerStyle={footerstyles.folderContainer}\r\n                      textStyle={footerstyles.folder}\r\n                      isSelected={\r\n                        index === Math.round(currentPosition / screenWidth)\r\n                      }\r\n                      onPress={() => handleFolderPress(index)}\r\n                      width={widths[index]}\r\n                      handleLongPress={(e)=>handleLongPress(e,index)}\r\n                    />\r\n                  </View>\r\n                );\r\n              })}\r\n            </View>\r\n            <Animated.View\r\n              style={{\r\n                left:\r\n                  (((currentPosition -\r\n                    screenWidth * Math.round(currentPosition / screenWidth)) %\r\n                    screenWidth) /\r\n                    screenWidth) *\r\n                    widths[Math.round(currentPosition / screenWidth)] +\r\n                  positionsOfFolder[Math.round(currentPosition / screenWidth)],\r\n              }}\r\n            >\r\n              <Animated.View\r\n                style={[\r\n                  footerstyles.selectedFolder,\r\n                  {\r\n                    width:\r\n                      widths[Math.round(currentPosition / screenWidth)] * 0.8,\r\n                    marginLeft:\r\n                      widths[Math.round(currentPosition / screenWidth)] * 0.1,\r\n                  },\r\n                ]}\r\n              />\r\n            </Animated.View>\r\n          </View>\r\n        </ScrollView>\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}