{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport { headerstyles } from \"../Styles/HeaderStyle\";\nimport MagnifyingGlass from \"./Headers containers/MagnifyingGlass\";\nimport ModeOfEmployment from \"./Headers containers/ModeOfEmployment\";\nimport Line from \"./Headers containers/Line\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  screenWidth = _Dimensions$get.width,\n  screenHeight = _Dimensions$get.height;\nexport default function Header(_ref) {\n  var mySelfUser = _ref.mySelfUser;\n  var timeForLineAnimation = 150 * 100;\n  var rotateGradusOfLines = 45;\n  var kefOfTransform = 0.75;\n  var topLineValue = useState(new Animated.Value(0))[0];\n  var middleLineValue = useState(new Animated.Value(1))[0];\n  var bottomLineValue = useState(new Animated.Value(0))[0];\n  var scrollX = useState(new Animated.Value(0))[0];\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isButtonEnabled = _useState2[0],\n    setIsButtonEnabled = _useState2[1];\n  var _useState3 = useState(1),\n    _useState4 = _slicedToArray(_useState3, 2),\n    state = _useState4[0],\n    setState = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    stateForWidth = _useState6[0],\n    setStateForWidth = _useState6[1];\n  var topLineRotation = topLineValue.interpolate({\n    inputRange: [0, 1, 2, 3],\n    outputRange: [\"0deg\", `-${rotateGradusOfLines}deg`, `-${90 + rotateGradusOfLines}deg`, `-${180}deg`]\n  });\n  var bottomLineRotation = bottomLineValue.interpolate({\n    inputRange: [0, 1, 2, 3],\n    outputRange: [\"0deg\", `${rotateGradusOfLines}deg`, `${90 + rotateGradusOfLines}deg`, `${180}deg`]\n  });\n  var positionXOfTopLine = topLineValue.interpolate({\n    inputRange: [0, 1, 2, 3],\n    outputRange: [0, screenHeight * 0.01, screenHeight * 0.01, 0]\n  });\n  var scrollXPosition = scrollX.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, -screenWidth * 0.8]\n  });\n  var hamburgerAnimation = function hamburgerAnimation(e) {\n    setIsButtonEnabled(false);\n    setState(state == 0 ? 1 : 0);\n    lineTransformation(e);\n  };\n  var lineTransformation = function lineTransformation(e) {\n    var firstAnimatedTopLine = Animated.timing(topLineValue, {\n      toValue: state == 0 ? 2 : 1,\n      duration: timeForLineAnimation * 0.7,\n      useNativeDriver: true\n    });\n    var firstAnimatedBottomLine = Animated.timing(bottomLineValue, {\n      toValue: state == 0 ? 2 : 1,\n      duration: timeForLineAnimation * 0.7,\n      useNativeDriver: true\n    });\n    var secondAnimatedTopLine = Animated.timing(topLineValue, {\n      toValue: state == 1 ? 2 : 3,\n      duration: timeForLineAnimation,\n      useNativeDriver: true\n    });\n    var secondAnimatedBottomLine = Animated.timing(bottomLineValue, {\n      toValue: state == 1 ? 2 : 3,\n      duration: timeForLineAnimation,\n      useNativeDriver: true\n    });\n    var animateForMiddleLine = Animated.timing(middleLineValue, {\n      toValue: state == 0 ? 1 : 0,\n      duration: state == 1 ? 10 : timeForLineAnimation,\n      useNativeDriver: true\n    });\n    Animated.timing(scrollX, {\n      toValue: state,\n      duration: timeForLineAnimation * 1.3,\n      useNativeDriver: true,\n      easing: Easing.bezier(0, 0, 0, 0)\n    }).start();\n    state == 1 ? animateForMiddleLine.start() : null;\n    firstAnimatedTopLine.start(function () {\n      if (state == 0) {\n        setStateForWidth(0);\n      }\n      animateForMiddleLine.start(function () {});\n      secondAnimatedTopLine.start(function () {});\n    });\n    firstAnimatedBottomLine.start(function () {\n      secondAnimatedBottomLine.start(function () {\n        setIsButtonEnabled(true);\n        if (state == 0) {\n          Animated.timing(topLineValue, {\n            toValue: 0,\n            duration: 0,\n            useNativeDriver: true\n          }).start();\n          Animated.timing(bottomLineValue, {\n            toValue: 0,\n            duration: 0,\n            useNativeDriver: true\n          }).start();\n          setIsButtonEnabled(true);\n        }\n      });\n    });\n    state == 1 ? setStateForWidth(1) : null;\n  };\n  return _jsxs(View, {\n    style: {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      right: 0,\n      zIndex: 5\n    },\n    children: [_jsx(View, {\n      style: headerstyles.gapContainer\n    }), _jsx(View, {\n      style: headerstyles.container,\n      children: _jsxs(View, {\n        style: [headerstyles.header],\n        children: [_jsxs(Animated.View, {\n          style: [{\n            justifyContent: \"flex-start\",\n            flexDirection: \"row\",\n            width: screenWidth * 0.96\n          }, {\n            transform: [{\n              translateX: scrollXPosition\n            }]\n          }],\n          children: [_jsx(MagnifyingGlass, {\n            style: headerstyles.magnifyingglass\n          }), _jsx(ModeOfEmployment, {}), _jsx(TouchableOpacity, {\n            onPress: hamburgerAnimation,\n            disabled: !isButtonEnabled,\n            children: _jsxs(View, {\n              style: headerstyles.hamburgerview,\n              children: [_jsx(Animated.View, {\n                style: {\n                  transform: [{\n                    rotate: topLineRotation\n                  }, {\n                    translateX: positionXOfTopLine\n                  }]\n                },\n                children: _jsx(Line, {\n                  screenWidth: stateForWidth == 0 ? screenWidth : screenWidth * kefOfTransform,\n                  screenHeight: screenHeight\n                })\n              }), _jsx(Animated.View, {\n                style: {\n                  opacity: middleLineValue\n                },\n                children: _jsx(Line, {\n                  screenWidth: screenWidth,\n                  screenHeight: screenHeight\n                })\n              }), _jsx(Animated.View, {\n                style: {\n                  transform: [{\n                    rotate: bottomLineRotation\n                  }, {\n                    translateX: positionXOfTopLine\n                  }]\n                },\n                children: _jsx(Line, {\n                  screenWidth: stateForWidth == 0 ? screenWidth : screenWidth * kefOfTransform,\n                  screenHeight: screenHeight\n                })\n              })]\n            })\n          })]\n        }), _jsx(Animated.View, {\n          style: [{\n            width: screenWidth * 0.8,\n            backgroundColor: \"red\"\n          }, {\n            transform: [{\n              translateX: scrollXPosition\n            }]\n          }]\n        })]\n      })\n    })]\n  });\n}","map":{"version":3,"names":["useState","React","View","TouchableOpacity","Animated","Dimensions","Easing","headerstyles","MagnifyingGlass","ModeOfEmployment","Line","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","screenWidth","width","screenHeight","height","Header","_ref","mySelfUser","timeForLineAnimation","rotateGradusOfLines","kefOfTransform","topLineValue","Value","middleLineValue","bottomLineValue","scrollX","_useState","_useState2","_slicedToArray","isButtonEnabled","setIsButtonEnabled","_useState3","_useState4","state","setState","_useState5","_useState6","stateForWidth","setStateForWidth","topLineRotation","interpolate","inputRange","outputRange","bottomLineRotation","positionXOfTopLine","scrollXPosition","hamburgerAnimation","e","lineTransformation","firstAnimatedTopLine","timing","toValue","duration","useNativeDriver","firstAnimatedBottomLine","secondAnimatedTopLine","secondAnimatedBottomLine","animateForMiddleLine","easing","bezier","start","style","position","top","left","right","zIndex","children","gapContainer","container","header","justifyContent","flexDirection","transform","translateX","magnifyingglass","onPress","disabled","hamburgerview","rotate","opacity","backgroundColor"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/ChatList/Components/Header.tsx"],"sourcesContent":["import { createRef, useDebugValue, useState } from \"react\";\r\nimport React from \"react\";\r\nimport {\r\n  View,\r\n  Image,\r\n  TouchableOpacity,\r\n  GestureResponderEvent,\r\n  Animated,\r\n  Dimensions,\r\n  ScrollView,\r\n  Easing,\r\n} from \"react-native\";\r\nimport {\r\n  useAnimatedRef,\r\n  useDerivedValue,\r\n  useSharedValue,\r\n  scrollTo,\r\n} from \"react-native-reanimated\";\r\nimport { headerstyles } from \"../Styles/HeaderStyle\";\r\nimport MagnifyingGlass from \"./Headers containers/MagnifyingGlass\";\r\nimport ModeOfEmployment from \"./Headers containers/ModeOfEmployment\";\r\nimport Line from \"./Headers containers/Line\";\r\nimport MySelfUser from \"../1HelpFullFolder/MySelfUser\";\r\nconst { width: screenWidth, height: screenHeight } = Dimensions.get(\"window\");\r\nexport default function Header({ mySelfUser }: { mySelfUser: MySelfUser }) {\r\n  const timeForLineAnimation: number = 150*100 ;\r\n  const rotateGradusOfLines: number = 45;\r\n  const kefOfTransform: number = 0.75;\r\n  const topLineValue = useState(new Animated.Value(0))[0];\r\n  const middleLineValue = useState(new Animated.Value(1))[0];\r\n  const bottomLineValue = useState(new Animated.Value(0))[0];\r\n  const scrollX = useState(new Animated.Value(0))[0];\r\n  const [isButtonEnabled, setIsButtonEnabled] = useState(true);\r\n  const [state, setState] = useState(1);\r\n  const [stateForWidth, setStateForWidth] = useState(0);\r\n  const topLineRotation = topLineValue.interpolate({\r\n    inputRange: [0, 1, 2, 3],\r\n    outputRange: [\r\n      \"0deg\",\r\n      `-${rotateGradusOfLines}deg`,\r\n      `-${90 + rotateGradusOfLines}deg`,\r\n      `-${180}deg`,\r\n    ],\r\n  });\r\n  const bottomLineRotation = bottomLineValue.interpolate({\r\n    inputRange: [0, 1, 2, 3],\r\n    outputRange: [\r\n      \"0deg\",\r\n      `${rotateGradusOfLines}deg`,\r\n      `${90 + rotateGradusOfLines}deg`,\r\n      `${180}deg`,\r\n    ],\r\n  });\r\n  const positionXOfTopLine = topLineValue.interpolate({\r\n    inputRange: [0, 1, 2, 3],\r\n    outputRange: [0, screenHeight * 0.01, screenHeight * 0.01, 0],\r\n  });\r\n  const scrollXPosition = scrollX.interpolate({\r\n    inputRange: [0, 1],\r\n    outputRange: [0, -screenWidth * 0.8],\r\n  });\r\n  const hamburgerAnimation = (e: GestureResponderEvent) => {\r\n    setIsButtonEnabled(false);\r\n    setState(state == 0 ? 1 : 0);\r\n    lineTransformation(e);\r\n  };\r\n  const lineTransformation = (e: GestureResponderEvent) => {\r\n    const firstAnimatedTopLine = Animated.timing(topLineValue, {\r\n      toValue: state == 0 ? 2 : 1,\r\n      duration: timeForLineAnimation * 0.7,\r\n      useNativeDriver: true,\r\n    });\r\n    const firstAnimatedBottomLine = Animated.timing(bottomLineValue, {\r\n      toValue: state == 0 ? 2 : 1,\r\n      duration: timeForLineAnimation * 0.7,\r\n      useNativeDriver: true,\r\n    });\r\n    const secondAnimatedTopLine = Animated.timing(topLineValue, {\r\n      toValue: state == 1 ? 2 : 3,\r\n      duration: timeForLineAnimation,\r\n      useNativeDriver: true,\r\n    });\r\n    const secondAnimatedBottomLine = Animated.timing(bottomLineValue, {\r\n      toValue: state == 1 ? 2 : 3,\r\n      duration: timeForLineAnimation,\r\n      useNativeDriver: true,\r\n    });\r\n    const animateForMiddleLine = Animated.timing(middleLineValue, {\r\n      toValue: state == 0 ? 1 : 0,\r\n      duration: state == 1 ? 10 : timeForLineAnimation,\r\n      useNativeDriver: true,\r\n    });\r\n    Animated.timing(scrollX, {\r\n      toValue: state,\r\n      duration: timeForLineAnimation * 1.3,\r\n      useNativeDriver: true,\r\n      easing: Easing.bezier(0, 0, 0, 0),\r\n    }).start();\r\n    state == 1 ? animateForMiddleLine.start() : null;\r\n    firstAnimatedTopLine.start(() => {\r\n      if (state == 0) {\r\n        setStateForWidth(0);\r\n      }\r\n      animateForMiddleLine.start(() => {});\r\n      secondAnimatedTopLine.start(() => {});\r\n    });\r\n    firstAnimatedBottomLine.start(() => {\r\n      secondAnimatedBottomLine.start(() => {\r\n        setIsButtonEnabled(true);\r\n        if (state == 0) {\r\n          Animated.timing(topLineValue, {\r\n            toValue: 0,\r\n            duration: 0,\r\n            useNativeDriver: true,\r\n          }).start();\r\n          Animated.timing(bottomLineValue, {\r\n            toValue: 0,\r\n            duration: 0,\r\n            useNativeDriver: true,\r\n          }).start();\r\n          setIsButtonEnabled(true);\r\n        }\r\n      });\r\n    });\r\n    state == 1 ? setStateForWidth(1) : null;\r\n\r\n  };\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        zIndex: 5,\r\n      }}\r\n    >\r\n      <View style={headerstyles.gapContainer} />\r\n      <View style={headerstyles.container}>\r\n        <View style={[headerstyles.header]}>\r\n          <Animated.View\r\n            style={[\r\n              {\r\n                justifyContent: \"flex-start\",\r\n                flexDirection: \"row\",\r\n                width: screenWidth * 0.96,\r\n              },\r\n              { transform: [{ translateX: scrollXPosition }] },\r\n            ]}\r\n          >\r\n            <MagnifyingGlass style={headerstyles.magnifyingglass} />\r\n            <ModeOfEmployment />\r\n            <TouchableOpacity onPress={hamburgerAnimation}  disabled={!isButtonEnabled}>\r\n              <View style={headerstyles.hamburgerview}>\r\n                <Animated.View\r\n                  style={{\r\n                    transform: [\r\n                      { rotate: topLineRotation },\r\n                      { translateX: positionXOfTopLine },\r\n                    ],\r\n                  }}\r\n                >\r\n                  <Line\r\n                    screenWidth={\r\n                      stateForWidth == 0\r\n                        ? screenWidth\r\n                        : screenWidth * kefOfTransform\r\n                    }\r\n                    screenHeight={screenHeight}\r\n                  />\r\n                </Animated.View>\r\n                <Animated.View style={{ opacity: middleLineValue }}>\r\n                  <Line screenWidth={screenWidth} screenHeight={screenHeight} />\r\n                </Animated.View>\r\n                <Animated.View\r\n                  style={{\r\n                    transform: [\r\n                      { rotate: bottomLineRotation },\r\n                      { translateX: positionXOfTopLine },\r\n                    ],\r\n                  }}\r\n                >\r\n                  <Line\r\n                    screenWidth={\r\n                      stateForWidth == 0\r\n                        ? screenWidth\r\n                        : screenWidth * kefOfTransform\r\n                    }\r\n                    screenHeight={screenHeight}\r\n                  />\r\n                </Animated.View>\r\n              </View>\r\n            </TouchableOpacity>\r\n          </Animated.View>\r\n          <Animated.View\r\n            style={[\r\n              { width: screenWidth * 0.8, backgroundColor: \"red\" },\r\n              { transform: [{ translateX: scrollXPosition }] },\r\n            ]}\r\n          >\r\n          </Animated.View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}