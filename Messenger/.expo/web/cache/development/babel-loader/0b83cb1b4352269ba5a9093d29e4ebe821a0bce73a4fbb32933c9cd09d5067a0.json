{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport StylePassCentre from \"./StylePasswordCenter\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PasswordCenter = function PasswordCenter() {\n  var MultipleSwitches = function MultipleSwitches() {\n    var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      switch1 = _useState2[0],\n      setSwitch1 = _useState2[1];\n    var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      switch2 = _useState4[0],\n      setSwitch2 = _useState4[1];\n    return _jsxs(View, {\n      style: StylePassCentre.passConteiner,\n      children: [_jsxs(TouchableOpacity, {\n        style: StylePassCentre.funcOn,\n        children: [_jsx(Text, {\n          style: StylePassCentre.styleText,\n          children: \"Off lock code\"\n        }), _jsx(Switch, {\n          trackColor: {\n            false: \"#767577\",\n            true: \"#81b0ff\"\n          },\n          thumbColor: switch1 ? \"#f5dd4b\" : \"#f4f3f4\",\n          ios_backgroundColor: \"#3e3e3e\",\n          onValueChange: function onValueChange() {\n            return setSwitch1(function (prev) {\n              return !prev;\n            });\n          },\n          value: switch1\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: StylePassCentre.funcOn,\n        children: _jsx(Text, {\n          style: StylePassCentre.styleText,\n          children: \"Edit lock code\"\n        })\n      }), _jsxs(TouchableOpacity, {\n        style: StylePassCentre.funcOn,\n        children: [_jsx(Text, {\n          style: StylePassCentre.styleText,\n          children: \"Unlock to Face or Touch id\"\n        }), _jsx(Switch, {\n          trackColor: {\n            false: \"#767577\",\n            true: \"#81b0ff\"\n          },\n          thumbColor: switch2 ? \"#f5dd4b\" : \"#f4f3f4\",\n          ios_backgroundColor: \"#3e3e3e\",\n          onValueChange: function onValueChange() {\n            return setSwitch2(function (prev) {\n              return !prev;\n            });\n          },\n          value: switch2\n        })]\n      })]\n    });\n  };\n};\nexport default PasswordCenter;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","Switch","StylePassCentre","jsx","_jsx","jsxs","_jsxs","PasswordCenter","MultipleSwitches","_useState","_useState2","_slicedToArray","switch1","setSwitch1","_useState3","_useState4","switch2","setSwitch2","style","passConteiner","children","funcOn","styleText","trackColor","false","true","thumbColor","ios_backgroundColor","onValueChange","prev","value"],"sources":["D:/project/try1/Messenger/Messenger/Pages/Settings/ConfidentialityPage/Password/PasswordCenter/PasswondCenter.tsx"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport { View, Text, TouchableOpacity, Switch } from \"react-native\";\r\nimport StylePassCentre from \"./StylePasswordCenter\";\r\n\r\nconst PasswordCenter =()=>{\r\n\r\n    const MultipleSwitches = () => {\r\n        const [switch1, setSwitch1] = useState(false);\r\n        const [switch2, setSwitch2] = useState(false);\r\n\r\n    return<View style={StylePassCentre.passConteiner}>\r\n        <TouchableOpacity style={StylePassCentre.funcOn} ><Text style={StylePassCentre.styleText} >Off lock code</Text>\r\n        <Switch\r\n          trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\r\n          thumbColor={switch1 ? \"#f5dd4b\" : \"#f4f3f4\"}\r\n          ios_backgroundColor=\"#3e3e3e\"\r\n          onValueChange={() => setSwitch1((prev) => !prev)}\r\n          value={switch1}\r\n        /> \r\n       </TouchableOpacity>\r\n        <TouchableOpacity style={StylePassCentre.funcOn} ><Text style={StylePassCentre.styleText} >Edit lock code</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={StylePassCentre.funcOn} ><Text style={StylePassCentre.styleText} >Unlock to Face or Touch id</Text>\r\n        <Switch\r\n          trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\r\n          thumbColor={switch2 ? \"#f5dd4b\" : \"#f4f3f4\"}\r\n          ios_backgroundColor=\"#3e3e3e\"\r\n          onValueChange={() => setSwitch2((prev) => !prev)}\r\n          value={switch2}\r\n        />\r\n        </TouchableOpacity>\r\n    </View>\r\n}}\r\n\r\nexport default PasswordCenter;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,MAAA;AAEtC,OAAOC,eAAe;AAA8B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpD,IAAMC,cAAc,GAAE,SAAhBA,cAAcA,CAAA,EAAM;EAEtB,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;IAC3B,IAAAC,SAAA,GAA8BZ,QAAQ,CAAC,KAAK,CAAC;MAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;MAAtCG,OAAO,GAAAF,UAAA;MAAEG,UAAU,GAAAH,UAAA;IAC1B,IAAAI,UAAA,GAA8BjB,QAAQ,CAAC,KAAK,CAAC;MAAAkB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;MAAtCE,OAAO,GAAAD,UAAA;MAAEE,UAAU,GAAAF,UAAA;IAE9B,OAAMT,KAAA,CAACR,IAAI;MAACoB,KAAK,EAAEhB,eAAe,CAACiB,aAAc;MAAAC,QAAA,GAC7Cd,KAAA,CAACN,gBAAgB;QAACkB,KAAK,EAAEhB,eAAe,CAACmB,MAAO;QAAAD,QAAA,GAAEhB,IAAA,CAACL,IAAI;UAACmB,KAAK,EAAEhB,eAAe,CAACoB,SAAU;UAAAF,QAAA,EAAE;QAAa,CAAM,CAAC,EAC/GhB,IAAA,CAACH,MAAM;UACLsB,UAAU,EAAE;YAAEC,KAAK,EAAE,SAAS;YAAEC,IAAI,EAAE;UAAU,CAAE;UAClDC,UAAU,EAAEd,OAAO,GAAG,SAAS,GAAG,SAAU;UAC5Ce,mBAAmB,EAAC,SAAS;UAC7BC,aAAa,EAAE,SAAAA,cAAA;YAAA,OAAMf,UAAU,CAAC,UAACgB,IAAI;cAAA,OAAK,CAACA,IAAI;YAAA,EAAC;UAAA,CAAC;UACjDC,KAAK,EAAElB;QAAQ,CAChB,CAAC;MAAA,CACe,CAAC,EAClBR,IAAA,CAACJ,gBAAgB;QAACkB,KAAK,EAAEhB,eAAe,CAACmB,MAAO;QAAAD,QAAA,EAAEhB,IAAA,CAACL,IAAI;UAACmB,KAAK,EAAEhB,eAAe,CAACoB,SAAU;UAAAF,QAAA,EAAE;QAAc,CAAM;MAAC,CAC9F,CAAC,EACnBd,KAAA,CAACN,gBAAgB;QAACkB,KAAK,EAAEhB,eAAe,CAACmB,MAAO;QAAAD,QAAA,GAAEhB,IAAA,CAACL,IAAI;UAACmB,KAAK,EAAEhB,eAAe,CAACoB,SAAU;UAAAF,QAAA,EAAE;QAA0B,CAAM,CAAC,EAC5HhB,IAAA,CAACH,MAAM;UACLsB,UAAU,EAAE;YAAEC,KAAK,EAAE,SAAS;YAAEC,IAAI,EAAE;UAAU,CAAE;UAClDC,UAAU,EAAEV,OAAO,GAAG,SAAS,GAAG,SAAU;UAC5CW,mBAAmB,EAAC,SAAS;UAC7BC,aAAa,EAAE,SAAAA,cAAA;YAAA,OAAMX,UAAU,CAAC,UAACY,IAAI;cAAA,OAAK,CAACA,IAAI;YAAA,EAAC;UAAA,CAAC;UACjDC,KAAK,EAAEd;QAAQ,CAChB,CAAC;MAAA,CACgB,CAAC;IAAA,CACjB,CAAC;EACX,CAAC;AAAA,CAAC;AAEF,eAAeT,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}