{"ast":null,"code":"import React, { useRef } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport MagnifyingGlass from \"./MagnifyingGlass\";\nimport ModeOfEmployment from \"./ModeOfEmployment\";\nimport HamburgerSVG from \"../SVG/HamburgerSVG\";\nimport BackButtonForHeaderChatListSVG from \"../SVG/BackButtonForHeaderChatListSVG\";\nimport { headerstyles } from \"../../Styles/HeaderStyle\";\nimport { screenWidth } from \"../../Constants/ConstantsForChatlist\";\nimport { connect } from \"react-redux\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction CentralHeaderContainer(_ref) {\n  var OnLayoutModeOfEmployment = _ref.OnLayoutModeOfEmployment,\n    PressOnModesOfEmployment = _ref.PressOnModesOfEmployment,\n    onHamburgerPress = _ref.onHamburgerPress,\n    OnHamburgerPressForDispatch = _ref.OnHamburgerPressForDispatch,\n    animationStateForTouchHamburger = _ref.animationStateForTouchHamburger,\n    navigation = _ref.navigation;\n  var onMagnifyingGlassPress = useRef(function () {\n    navigation.navigate(\"SearchForAllPages\");\n  });\n  return _jsxs(View, {\n    style: [{\n      justifyContent: \"space-between\",\n      flexDirection: \"row\",\n      width: screenWidth * 0.96\n    }],\n    children: [_jsx(TouchableOpacity, {\n      style: headerstyles.magnifyingglass,\n      onPress: onMagnifyingGlassPress.current,\n      children: _jsx(MagnifyingGlass, {})\n    }), _jsx(TouchableOpacity, {\n      onLayout: OnLayoutModeOfEmployment,\n      activeOpacity: 0.4,\n      onPress: PressOnModesOfEmployment,\n      children: _jsx(ModeOfEmployment, {})\n    }), _jsx(TouchableOpacity, {\n      style: {\n        justifyContent: \"center\"\n      },\n      onPress: function onPress() {\n        onHamburgerPress(), OnHamburgerPressForDispatch();\n      },\n      children: animationStateForTouchHamburger == 1 ? _jsx(HamburgerSVG, {}) : _jsx(BackButtonForHeaderChatListSVG, {})\n    })]\n  });\n}\nexport default connect(null)(CentralHeaderContainer);","map":{"version":3,"names":["React","useRef","TouchableOpacity","View","MagnifyingGlass","ModeOfEmployment","HamburgerSVG","BackButtonForHeaderChatListSVG","headerstyles","screenWidth","connect","jsx","_jsx","jsxs","_jsxs","CentralHeaderContainer","_ref","OnLayoutModeOfEmployment","PressOnModesOfEmployment","onHamburgerPress","OnHamburgerPressForDispatch","animationStateForTouchHamburger","navigation","onMagnifyingGlassPress","navigate","style","justifyContent","flexDirection","width","children","magnifyingglass","onPress","current","onLayout","activeOpacity"],"sources":["D:/project/1project/Messenger/Messenger/Pages/ChatList/Components/Headers containers/CentralHeaderContainer.tsx"],"sourcesContent":["import React, { useRef } from \"react\";\r\nimport { TouchableOpacity, View } from \"react-native\";\r\nimport MagnifyingGlass from \"./MagnifyingGlass\";\r\nimport ModeOfEmployment from \"./ModeOfEmployment\";\r\nimport HamburgerSVG from \"../SVG/HamburgerSVG\";\r\nimport BackButtonForHeaderChatListSVG from \"../SVG/BackButtonForHeaderChatListSVG\";\r\nimport { headerstyles } from \"../../Styles/HeaderStyle\";\r\nimport { screenWidth } from \"../../Constants/ConstantsForChatlist\";\r\nimport { connect } from \"react-redux\";\r\nfunction CentralHeaderContainer({\r\n  OnLayoutModeOfEmployment,\r\n  PressOnModesOfEmployment,\r\n  onHamburgerPress,\r\n  OnHamburgerPressForDispatch,\r\n  animationStateForTouchHamburger,\r\n  navigation\r\n}:any) {\r\n  const onMagnifyingGlassPress=useRef(()=>{\r\n    navigation.navigate(\"SearchForAllPages\")\r\n  })\r\n  return (\r\n    <View\r\n      style={[\r\n        {\r\n          justifyContent: \"space-between\",\r\n          flexDirection: \"row\",\r\n          width: screenWidth * 0.96,\r\n          \r\n        },\r\n      ]}\r\n    >\r\n      <TouchableOpacity\r\n        style={headerstyles.magnifyingglass}\r\n        onPress={onMagnifyingGlassPress.current}\r\n        \r\n      >\r\n        <MagnifyingGlass />\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity\r\n        onLayout={OnLayoutModeOfEmployment}\r\n        activeOpacity={0.4}\r\n        onPress={PressOnModesOfEmployment}\r\n      >\r\n        <ModeOfEmployment />\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity\r\n        style={{\r\n          justifyContent: \"center\",\r\n        }}\r\n        onPress={() => {\r\n          onHamburgerPress(), OnHamburgerPressForDispatch();\r\n        }}\r\n      >\r\n        {animationStateForTouchHamburger == 1 ? (\r\n          <HamburgerSVG />\r\n        ) : (\r\n          <BackButtonForHeaderChatListSVG />\r\n        )}\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default connect(null)(CentralHeaderContainer);\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AAAC,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAEtC,OAAOC,eAAe;AACtB,OAAOC,gBAAgB;AACvB,OAAOC,YAAY;AACnB,OAAOC,8BAA8B;AACrC,SAASC,YAAY;AACrB,SAASC,WAAW;AACpB,SAASC,OAAO,QAAQ,aAAa;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AACtC,SAASC,sBAAsBA,CAAAC,IAAA,EAOxB;EAAA,IANLC,wBAAwB,GAAAD,IAAA,CAAxBC,wBAAwB;IACxBC,wBAAwB,GAAAF,IAAA,CAAxBE,wBAAwB;IACxBC,gBAAgB,GAAAH,IAAA,CAAhBG,gBAAgB;IAChBC,2BAA2B,GAAAJ,IAAA,CAA3BI,2BAA2B;IAC3BC,+BAA+B,GAAAL,IAAA,CAA/BK,+BAA+B;IAC/BC,UAAU,GAAAN,IAAA,CAAVM,UAAU;EAEV,IAAMC,sBAAsB,GAACtB,MAAM,CAAC,YAAI;IACtCqB,UAAU,CAACE,QAAQ,CAAC,mBAAmB,CAAC;EAC1C,CAAC,CAAC;EACF,OACEV,KAAA,CAACX,IAAI;IACHsB,KAAK,EAAE,CACL;MACEC,cAAc,EAAE,eAAe;MAC/BC,aAAa,EAAE,KAAK;MACpBC,KAAK,EAAEnB,WAAW,GAAG;IAEvB,CAAC,CACD;IAAAoB,QAAA,GAEFjB,IAAA,CAACV,gBAAgB;MACfuB,KAAK,EAAEjB,YAAY,CAACsB,eAAgB;MACpCC,OAAO,EAAER,sBAAsB,CAACS,OAAQ;MAAAH,QAAA,EAGxCjB,IAAA,CAACR,eAAe,IAAE;IAAC,CACH,CAAC,EAEnBQ,IAAA,CAACV,gBAAgB;MACf+B,QAAQ,EAAEhB,wBAAyB;MACnCiB,aAAa,EAAE,GAAI;MACnBH,OAAO,EAAEb,wBAAyB;MAAAW,QAAA,EAElCjB,IAAA,CAACP,gBAAgB,IAAE;IAAC,CACJ,CAAC,EAEnBO,IAAA,CAACV,gBAAgB;MACfuB,KAAK,EAAE;QACLC,cAAc,EAAE;MAClB,CAAE;MACFK,OAAO,EAAE,SAAAA,QAAA,EAAM;QACbZ,gBAAgB,CAAC,CAAC,EAAEC,2BAA2B,CAAC,CAAC;MACnD,CAAE;MAAAS,QAAA,EAEDR,+BAA+B,IAAI,CAAC,GACnCT,IAAA,CAACN,YAAY,IAAE,CAAC,GAEhBM,IAAA,CAACL,8BAA8B,IAAE;IAClC,CACe,CAAC;EAAA,CACf,CAAC;AAEX;AAEA,eAAeG,OAAO,CAAC,IAAI,CAAC,CAACK,sBAAsB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}