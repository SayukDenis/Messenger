{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport NativeEventEmitter from \"react-native-web/dist/exports/NativeEventEmitter\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport { nativeShouldBeMock } from \"../reanimated2/PlatformChecker\";\nexport var JSPropUpdater = function () {\n  function JSPropUpdater() {\n    _classCallCheck(this, JSPropUpdater);\n    _defineProperty(this, \"_reanimatedEventEmitter\", void 0);\n    var reanimatedModule;\n    if (nativeShouldBeMock()) {\n      reanimatedModule = JSPropUpdater._reanimatedModuleMock;\n    } else {\n      reanimatedModule = NativeModules.ReanimatedModule;\n    }\n    this._reanimatedEventEmitter = new NativeEventEmitter(reanimatedModule);\n  }\n  _createClass(JSPropUpdater, [{\n    key: \"addOnJSPropsChangeListener\",\n    value: function addOnJSPropsChangeListener(animatedComponent) {\n      var viewTag = findNodeHandle(animatedComponent);\n      JSPropUpdater._tagToComponentMapping.set(viewTag, animatedComponent);\n      if (JSPropUpdater._tagToComponentMapping.size === 1) {\n        this._reanimatedEventEmitter.addListener('onReanimatedPropsChange', JSPropUpdater._listener);\n      }\n    }\n  }, {\n    key: \"removeOnJSPropsChangeListener\",\n    value: function removeOnJSPropsChangeListener(animatedComponent) {\n      var viewTag = findNodeHandle(animatedComponent);\n      JSPropUpdater._tagToComponentMapping.delete(viewTag);\n      if (JSPropUpdater._tagToComponentMapping.size === 0) {\n        this._reanimatedEventEmitter.removeAllListeners('onReanimatedPropsChange');\n      }\n    }\n  }], [{\n    key: \"_listener\",\n    value: function _listener(data) {\n      var component = JSPropUpdater._tagToComponentMapping.get(data.viewTag);\n      component && component._updateFromNative(data.props);\n    }\n  }]);\n  return JSPropUpdater;\n}();\n_defineProperty(JSPropUpdater, \"_tagToComponentMapping\", new Map());\n_defineProperty(JSPropUpdater, \"_reanimatedModuleMock\", {\n  addListener: function () {\n    var _addListener = _asyncToGenerator(function* () {});\n    function addListener() {\n      return _addListener.apply(this, arguments);\n    }\n    return addListener;\n  }(),\n  removeListeners: function () {\n    var _removeListeners = _asyncToGenerator(function* () {});\n    function removeListeners() {\n      return _removeListeners.apply(this, arguments);\n    }\n    return removeListeners;\n  }()\n});","map":{"version":3,"names":["nativeShouldBeMock","JSPropUpdater","_classCallCheck","_defineProperty","reanimatedModule","_reanimatedModuleMock","NativeModules","ReanimatedModule","_reanimatedEventEmitter","NativeEventEmitter","_createClass","key","value","addOnJSPropsChangeListener","animatedComponent","viewTag","findNodeHandle","_tagToComponentMapping","set","size","addListener","_listener","removeOnJSPropsChangeListener","delete","removeAllListeners","data","component","get","_updateFromNative","props","Map","_addListener","_asyncToGenerator","apply","arguments","removeListeners","_removeListeners"],"sources":["C:\\Users\\Admin\\Project\\Project\\Messenger\\Messenger\\node_modules\\react-native-reanimated\\lib\\module\\createAnimatedComponent\\JSPropUpdater.ts"],"sourcesContent":["import {\n  NativeEventEmitter,\n  NativeModules,\n  findNodeHandle,\n} from 'react-native';\nimport { nativeShouldBeMock } from '../reanimated2/PlatformChecker';\nimport type { StyleProps } from '../reanimated2';\n\ninterface ListenerData {\n  viewTag: number;\n  props: StyleProps;\n}\n\nexport class JSPropUpdater {\n  private static _tagToComponentMapping = new Map();\n  private _reanimatedEventEmitter: NativeEventEmitter;\n  private static _reanimatedModuleMock = {\n    async addListener(): Promise<void> {\n      // noop\n    },\n    async removeListeners(): Promise<void> {\n      // noop\n    },\n  };\n\n  private static _listener(data: ListenerData) {\n    const component = JSPropUpdater._tagToComponentMapping.get(data.viewTag);\n    component && component._updateFromNative(data.props);\n  }\n\n  constructor() {\n    let reanimatedModule: typeof JSPropUpdater._reanimatedModuleMock;\n    if (nativeShouldBeMock()) {\n      reanimatedModule = JSPropUpdater._reanimatedModuleMock;\n    } else {\n      reanimatedModule = NativeModules.ReanimatedModule;\n    }\n    this._reanimatedEventEmitter = new NativeEventEmitter(reanimatedModule);\n  }\n\n  public addOnJSPropsChangeListener(\n    animatedComponent: React.Component<unknown, unknown>\n  ) {\n    const viewTag = findNodeHandle(animatedComponent);\n    JSPropUpdater._tagToComponentMapping.set(viewTag, animatedComponent);\n    if (JSPropUpdater._tagToComponentMapping.size === 1) {\n      this._reanimatedEventEmitter.addListener(\n        'onReanimatedPropsChange',\n        JSPropUpdater._listener\n      );\n    }\n  }\n\n  public removeOnJSPropsChangeListener(\n    animatedComponent: React.Component<unknown, unknown>\n  ) {\n    const viewTag = findNodeHandle(animatedComponent);\n    JSPropUpdater._tagToComponentMapping.delete(viewTag);\n    if (JSPropUpdater._tagToComponentMapping.size === 0) {\n      this._reanimatedEventEmitter.removeAllListeners(\n        'onReanimatedPropsChange'\n      );\n    }\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,SAASA,kBAAkB;AAQ3B,WAAaC,aAAa;EAiBxB,SAAAA,cAAA,EAAc;IAAAC,eAAA,OAAAD,aAAA;IAAAE,eAAA;IACZ,IAAIC,gBAA4D;IAChE,IAAIJ,kBAAkB,EAAE,EAAE;MACxBI,gBAAgB,GAAGH,aAAa,CAACI,qBAAqB;IACxD,CAAC,MAAM;MACLD,gBAAgB,GAAGE,aAAa,CAACC,gBAAgB;IACnD;IACA,IAAI,CAACC,uBAAuB,GAAG,IAAIC,kBAAkB,CAACL,gBAAgB,CAAC;EACzE;EAAAM,YAAA,CAAAT,aAAA;IAAAU,GAAA;IAAAC,KAAA,EAEO,SAAAC,2BACLC,iBAAoD,EACpD;MACA,IAAMC,OAAO,GAAGC,cAAc,CAACF,iBAAiB,CAAC;MACjDb,aAAa,CAACgB,sBAAsB,CAACC,GAAG,CAACH,OAAO,EAAED,iBAAiB,CAAC;MACpE,IAAIb,aAAa,CAACgB,sBAAsB,CAACE,IAAI,KAAK,CAAC,EAAE;QACnD,IAAI,CAACX,uBAAuB,CAACY,WAAW,CACtC,yBAAyB,EACzBnB,aAAa,CAACoB,SAAS,CACxB;MACH;IACF;EAAA;IAAAV,GAAA;IAAAC,KAAA,EAEO,SAAAU,8BACLR,iBAAoD,EACpD;MACA,IAAMC,OAAO,GAAGC,cAAc,CAACF,iBAAiB,CAAC;MACjDb,aAAa,CAACgB,sBAAsB,CAACM,MAAM,CAACR,OAAO,CAAC;MACpD,IAAId,aAAa,CAACgB,sBAAsB,CAACE,IAAI,KAAK,CAAC,EAAE;QACnD,IAAI,CAACX,uBAAuB,CAACgB,kBAAkB,CAC7C,yBAAyB,CAC1B;MACH;IACF;EAAA;IAAAb,GAAA;IAAAC,KAAA,EAtCA,SAAAS,UAAyBI,IAAkB,EAAE;MAC3C,IAAMC,SAAS,GAAGzB,aAAa,CAACgB,sBAAsB,CAACU,GAAG,CAACF,IAAI,CAACV,OAAO,CAAC;MACxEW,SAAS,IAAIA,SAAS,CAACE,iBAAiB,CAACH,IAAI,CAACI,KAAK,CAAC;IACtD;EAAA;EAAA,OAAA5B,aAAA;AAAA;AAoCDE,eAAA,CAnDYF,aAAa,4BACgB,IAAI6B,GAAG,EAAE;AAAA3B,eAAA,CADtCF,aAAa,2BAGe;EAC/BmB,WAAW;IAAA,IAAAW,YAAA,GAAAC,iBAAA,cAAkB,CACjC,CACD;IAAA,SAAAZ,YAAA;MAAA,OAAAW,YAAA,CAAAE,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAAd,WAAA;EAAA;EACKe,eAAe;IAAA,IAAAC,gBAAA,GAAAJ,iBAAA,cAAkB,CACrC;IAAA,SAAAG,gBAAA;MAAA,OAAAC,gBAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAAC,eAAA;EAAA;AAEJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}