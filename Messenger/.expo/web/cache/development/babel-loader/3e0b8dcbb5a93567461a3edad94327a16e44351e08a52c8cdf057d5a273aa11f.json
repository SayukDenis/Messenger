{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ModalWindow = function ModalWindow() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isModalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var toggleModal = function toggleModal() {\n    setModalVisible(!isModalVisible);\n  };\n  return _jsxs(View, {\n    children: [_jsx(Button, {\n      title: \"\\u0412\\u0456\\u0434\\u043A\\u0440\\u0438\\u0442\\u0438 \\u041C\\u043E\\u0434\\u0430\\u043B\\u044C\\u043D\\u0435 \\u0412\\u0456\\u043A\\u043D\\u043E\",\n      onPress: toggleModal\n    }), _jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: isModalVisible,\n      onRequestClose: toggleModal,\n      children: _jsxs(View, {\n        children: [_jsx(Text, {\n          children: \"\\u0426\\u0435 \\u041C\\u043E\\u0434\\u0430\\u043B\\u044C\\u043D\\u0435 \\u0412\\u0456\\u043A\\u043D\\u043E\"\n        }), _jsx(Button, {\n          title: \"\\u0417\\u0430\\u043A\\u0440\\u0438\\u0442\\u0438\",\n          onPress: toggleModal\n        })]\n      })\n    })]\n  });\n};\nexport default ModalWindow;","map":{"version":3,"names":["React","useState","View","Text","Modal","Button","jsx","_jsx","jsxs","_jsxs","ModalWindow","_useState","_useState2","_slicedToArray","isModalVisible","setModalVisible","toggleModal","children","title","onPress","animationType","transparent","visible","onRequestClose"],"sources":["D:/project/try1/Messenger/Messenger/Pages/Settings/MainSettingPage/ModalWindow/ModalWondow.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport { View, Text, Modal, Button } from 'react-native';\r\nimport StyleModalWindow from './StyleModalWindos';\r\n\r\nconst ModalWindow = ()=>{\r\n    const [isModalVisible, setModalVisible] = useState(false);\r\n    const toggleModal = () => {\r\n        setModalVisible(!isModalVisible);\r\n      };\r\n    return <View>\r\n        \r\n    <Button title=\"Відкрити Модальне Вікно\" onPress={toggleModal} />\r\n\r\n    <Modal\r\n      animationType=\"slide\" // Задайте тип анімації\r\n      transparent={true}    // Перший параметр визначає, чи фон має бути прозорим\r\n      visible={isModalVisible} // Стан відкриття модального вікна\r\n      onRequestClose={toggleModal} // Обробник закриття модального вікна\r\n    >\r\n      <View>\r\n        <Text>Це Модальне Вікно</Text>\r\n        <Button title=\"Закрити\" onPress={toggleModal} />\r\n      </View>\r\n    </Modal>\r\n  </View>\r\n}\r\n\r\nexport default ModalWindow;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,MAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAItC,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAO;EACpB,IAAAC,SAAA,GAA0CV,QAAQ,CAAC,KAAK,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAlDG,cAAc,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EACtC,IAAMI,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACtBD,eAAe,CAAC,CAACD,cAAc,CAAC;EAClC,CAAC;EACH,OAAOL,KAAA,CAACP,IAAI;IAAAe,QAAA,GAEZV,IAAA,CAACF,MAAM;MAACa,KAAK,EAAC,kIAAyB;MAACC,OAAO,EAAEH;IAAY,CAAE,CAAC,EAEhET,IAAA,CAACH,KAAK;MACJgB,aAAa,EAAC,OAAO;MACrBC,WAAW,EAAE,IAAK;MAClBC,OAAO,EAAER,cAAe;MACxBS,cAAc,EAAEP,WAAY;MAAAC,QAAA,EAE5BR,KAAA,CAACP,IAAI;QAAAe,QAAA,GACHV,IAAA,CAACJ,IAAI;UAAAc,QAAA,EAAC;QAAiB,CAAM,CAAC,EAC9BV,IAAA,CAACF,MAAM;UAACa,KAAK,EAAC,4CAAS;UAACC,OAAO,EAAEH;QAAY,CAAE,CAAC;MAAA,CAC5C;IAAC,CACF,CAAC;EAAA,CACJ,CAAC;AACT,CAAC;AAED,eAAeN,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}