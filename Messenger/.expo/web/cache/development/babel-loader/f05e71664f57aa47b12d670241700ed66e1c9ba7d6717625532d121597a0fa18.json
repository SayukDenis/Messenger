{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { user } from \"../../DBUser\";\nimport styles from \"../Styles\";\nimport ForwardContactIcon from \"../Icons/ForwardContactIcon\";\nimport SelectIcon from \"../Icons/SelectIcon\";\nimport BinIcon from \"../Icons/BinIcon\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar screenWidth = Dimensions.get(\"screen\").width;\nvar screenHeight = Dimensions.get(\"screen\").height;\nvar AlbumLongPressedMenu = function AlbumLongPressedMenu(props) {\n  return _jsx(_Fragment, {\n    children: props.isVisible && _jsxs(View, {\n      style: [styles.elseFeaturesButtonsContainer, {\n        left: user.albums.indexOf(props.longPressedAlbum) % 2 == 1 ? 0.425 * screenWidth : 0.075 * screenWidth,\n        top: props.positionYOfLongPressedAlbum > screenHeight * 0.8 ? props.positionYOfLongPressedAlbum - 0.3 * screenHeight : props.positionYOfLongPressedAlbum\n      }],\n      children: [_jsxs(TouchableOpacity, {\n        onPress: function onPress() {},\n        style: styles.additionalFeatureButton,\n        children: [_jsx(ForwardContactIcon, {\n          style: styles.additionalFeatureIcon\n        }), _jsx(Text, {\n          style: styles.additionalFeatureTitle,\n          children: \"Forward\"\n        })]\n      }), _jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          props.onSelectAlbumPress();\n        },\n        style: styles.additionalFeatureButton,\n        children: [_jsx(SelectIcon, {\n          style: styles.additionalFeatureIcon\n        }), _jsx(Text, {\n          style: styles.additionalFeatureTitle,\n          children: \"Select\"\n        })]\n      }), _jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          props.onDeleteAlbumPress();\n        },\n        style: styles.additionalFeatureButton,\n        children: [_jsx(BinIcon, {\n          style: styles.additionalFeatureIcon\n        }), _jsx(Text, {\n          style: [styles.additionalFeatureTitle, {\n            color: \"red\"\n          }],\n          children: \"Delete an album\"\n        })]\n      })]\n    })\n  });\n};\nexport default AlbumLongPressedMenu;","map":{"version":3,"names":["React","View","Text","TouchableOpacity","Dimensions","user","styles","ForwardContactIcon","SelectIcon","BinIcon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","screenWidth","get","width","screenHeight","height","AlbumLongPressedMenu","props","children","isVisible","style","elseFeaturesButtonsContainer","left","albums","indexOf","longPressedAlbum","top","positionYOfLongPressedAlbum","onPress","additionalFeatureButton","additionalFeatureIcon","additionalFeatureTitle","onSelectAlbumPress","onDeleteAlbumPress","color"],"sources":["/home/zatibmag/Desktop/Project/Messenger/Messenger/Pages/Profiles/SemiComponents/MainScreen/Multimedia/AlbumLongPressedMenu.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React from \"react\";\r\nimport { View, Text, TouchableOpacity, Dimensions } from \"react-native\";\r\nimport { Album, user } from \"../../DBUser\";\r\nimport styles from \"../Styles\";\r\nimport ForwardContactIcon from \"../Icons/ForwardContactIcon\";\r\nimport SelectIcon from \"../Icons/SelectIcon\";\r\nimport BinIcon from \"../Icons/BinIcon\";\r\n\r\nconst screenWidth = Dimensions.get(\"screen\").width;\r\nconst screenHeight = Dimensions.get(\"screen\").height;\r\n\r\ninterface AlbumLongPressedMenuProps {\r\n  isVisible: boolean;\r\n  longPressedAlbum: Album;\r\n  positionYOfLongPressedAlbum: number;\r\n  onDeleteAlbumPress: () => void;\r\n  onSelectAlbumPress: () => void;\r\n}\r\n\r\nconst AlbumLongPressedMenu: React.FC<AlbumLongPressedMenuProps> = (props) => {\r\n  return (\r\n    <>\r\n      {props.isVisible && (\r\n        <View\r\n          style={[\r\n            styles.elseFeaturesButtonsContainer,\r\n            {\r\n              left:\r\n                user.albums.indexOf(props.longPressedAlbum) % 2 == 1\r\n                  ? 0.425 * screenWidth\r\n                  : 0.075 * screenWidth,\r\n              top:\r\n                props.positionYOfLongPressedAlbum > screenHeight * 0.8\r\n                  ? props.positionYOfLongPressedAlbum - 0.3 * screenHeight\r\n                  : props.positionYOfLongPressedAlbum,\r\n            },\r\n          ]}\r\n        >\r\n          {/* Settings button */}\r\n          <TouchableOpacity\r\n            onPress={() => {}}\r\n            style={styles.additionalFeatureButton}\r\n          >\r\n            <ForwardContactIcon style={styles.additionalFeatureIcon} />\r\n            <Text style={styles.additionalFeatureTitle}>Forward</Text>\r\n          </TouchableOpacity>\r\n\r\n          {/* Select button */}\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              props.onSelectAlbumPress();\r\n            }}\r\n            style={styles.additionalFeatureButton}\r\n          >\r\n            <SelectIcon style={styles.additionalFeatureIcon} />\r\n            <Text style={styles.additionalFeatureTitle}>Select</Text>\r\n          </TouchableOpacity>\r\n\r\n          {/* Delete album button */}\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              props.onDeleteAlbumPress();\r\n            }}\r\n            style={styles.additionalFeatureButton}\r\n          >\r\n            <BinIcon style={styles.additionalFeatureIcon} />\r\n            <Text style={[styles.additionalFeatureTitle, { color: \"red\" }]}>\r\n              Delete an album\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AlbumLongPressedMenu;\r\n"],"mappings":"AAEA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAE1B,SAAgBC,IAAI;AACpB,OAAOC,MAAM;AACb,OAAOC,kBAAkB;AACzB,OAAOC,UAAU;AACjB,OAAOC,OAAO;AAAyB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,IAAMC,WAAW,GAAGZ,UAAU,CAACa,GAAG,CAAC,QAAQ,CAAC,CAACC,KAAK;AAClD,IAAMC,YAAY,GAAGf,UAAU,CAACa,GAAG,CAAC,QAAQ,CAAC,CAACG,MAAM;AAUpD,IAAMC,oBAAyD,GAAG,SAA5DA,oBAAyDA,CAAIC,KAAK,EAAK;EAC3E,OACEX,IAAA,CAAAI,SAAA;IAAAQ,QAAA,EACGD,KAAK,CAACE,SAAS,IACdX,KAAA,CAACZ,IAAI;MACHwB,KAAK,EAAE,CACLnB,MAAM,CAACoB,4BAA4B,EACnC;QACEC,IAAI,EACFtB,IAAI,CAACuB,MAAM,CAACC,OAAO,CAACP,KAAK,CAACQ,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,GAChD,KAAK,GAAGd,WAAW,GACnB,KAAK,GAAGA,WAAW;QACzBe,GAAG,EACDT,KAAK,CAACU,2BAA2B,GAAGb,YAAY,GAAG,GAAG,GAClDG,KAAK,CAACU,2BAA2B,GAAG,GAAG,GAAGb,YAAY,GACtDG,KAAK,CAACU;MACd,CAAC,CACD;MAAAT,QAAA,GAGFV,KAAA,CAACV,gBAAgB;QACf8B,OAAO,EAAE,SAAAA,QAAA,EAAM,CAAC,CAAE;QAClBR,KAAK,EAAEnB,MAAM,CAAC4B,uBAAwB;QAAAX,QAAA,GAEtCZ,IAAA,CAACJ,kBAAkB;UAACkB,KAAK,EAAEnB,MAAM,CAAC6B;QAAsB,CAAE,CAAC,EAC3DxB,IAAA,CAACT,IAAI;UAACuB,KAAK,EAAEnB,MAAM,CAAC8B,sBAAuB;UAAAb,QAAA,EAAC;QAAO,CAAM,CAAC;MAAA,CAC1C,CAAC,EAGnBV,KAAA,CAACV,gBAAgB;QACf8B,OAAO,EAAE,SAAAA,QAAA,EAAM;UACbX,KAAK,CAACe,kBAAkB,CAAC,CAAC;QAC5B,CAAE;QACFZ,KAAK,EAAEnB,MAAM,CAAC4B,uBAAwB;QAAAX,QAAA,GAEtCZ,IAAA,CAACH,UAAU;UAACiB,KAAK,EAAEnB,MAAM,CAAC6B;QAAsB,CAAE,CAAC,EACnDxB,IAAA,CAACT,IAAI;UAACuB,KAAK,EAAEnB,MAAM,CAAC8B,sBAAuB;UAAAb,QAAA,EAAC;QAAM,CAAM,CAAC;MAAA,CACzC,CAAC,EAGnBV,KAAA,CAACV,gBAAgB;QACf8B,OAAO,EAAE,SAAAA,QAAA,EAAM;UACbX,KAAK,CAACgB,kBAAkB,CAAC,CAAC;QAC5B,CAAE;QACFb,KAAK,EAAEnB,MAAM,CAAC4B,uBAAwB;QAAAX,QAAA,GAEtCZ,IAAA,CAACF,OAAO;UAACgB,KAAK,EAAEnB,MAAM,CAAC6B;QAAsB,CAAE,CAAC,EAChDxB,IAAA,CAACT,IAAI;UAACuB,KAAK,EAAE,CAACnB,MAAM,CAAC8B,sBAAsB,EAAE;YAAEG,KAAK,EAAE;UAAM,CAAC,CAAE;UAAAhB,QAAA,EAAC;QAEhE,CAAM,CAAC;MAAA,CACS,CAAC;IAAA,CACf;EACP,CACD,CAAC;AAEP,CAAC;AAED,eAAeF,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}