{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { footerstyles } from \"../Styles/FooterStyle\";\nimport Folder from \"./Footer containers/Folder\";\nimport Swiper from 'react-native-swiper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Footer = function Footer(_ref) {\n  var user = _ref.user;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedFolder = _useState2[0],\n    setSelectedFolder = _useState2[1];\n  var handleFolderPress = function handleFolderPress(index) {\n    if (selectedFolder === index) {} else {\n      setSelectedFolder(index);\n    }\n  };\n  var swipeLeft = function swipeLeft(numberOfFolder) {\n    if (numberOfFolder != 0) {\n      setSelectedFolder(numberOfFolder - 1);\n      return selectedFolder;\n    }\n    return numberOfFolder;\n  };\n  var swipeRight = function swipeRight(numberOfFolder) {\n    if (numberOfFolder != user.folders.length - 1) {\n      setSelectedFolder(numberOfFolder + 1);\n      return selectedFolder;\n    }\n    return numberOfFolder;\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(Swiper, {}), _jsx(View, {\n      style: footerstyles.container,\n      children: _jsx(ScrollView, {\n        showsHorizontalScrollIndicator: false,\n        horizontal: true,\n        style: footerstyles.scrollView,\n        children: user.folders.map(function (folder, index) {\n          return _jsx(Folder, {\n            text: folder.name,\n            containerStyle: footerstyles.folderContainer,\n            textStyle: footerstyles.folder,\n            isSelected: selectedFolder === index,\n            onPress: function onPress() {\n              return handleFolderPress(index);\n            }\n          }, index);\n        })\n      })\n    })]\n  });\n};\nexport default Footer;","map":{"version":3,"names":["React","useState","View","ScrollView","footerstyles","Folder","Swiper","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Footer","_ref","user","_useState","_useState2","_slicedToArray","selectedFolder","setSelectedFolder","handleFolderPress","index","swipeLeft","numberOfFolder","swipeRight","folders","length","children","style","container","showsHorizontalScrollIndicator","horizontal","scrollView","map","folder","text","name","containerStyle","folderContainer","textStyle","isSelected","onPress"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/ChatList/Components/Footer.tsx"],"sourcesContent":["import React, { ReactNode, useState } from 'react';\r\nimport { View, ScrollView,StyleSheet } from 'react-native';\r\nimport MySelfUser from '../1HelpFullFolder/MySelfUser';\r\nimport { footerstyles } from '../Styles/FooterStyle';\r\nimport Folder from './Footer containers/Folder';\r\nimport { listOfChatsStyle } from '../Styles/ListOfChatsStyle';\r\nimport ChatContainer from './List of folders containers/ChatContainer';\r\nimport Swiper from 'react-native-swiper';\r\nimport ListOfFolder from './ListOfFolder';\r\ninterface FooterProps {\r\n  user: MySelfUser;\r\n}\r\n\r\nconst Footer: React.FC<FooterProps> = ({ user }) => {\r\n  const [selectedFolder, setSelectedFolder] = useState<number>(0);\r\n  \r\n  const handleFolderPress = (index: number) => {\r\n    if (selectedFolder === index) {\r\n    } else {\r\n      setSelectedFolder(index); \r\n    }\r\n  };\r\n  const swipeLeft=(numberOfFolder:number):number=>{\r\n    if(numberOfFolder!=0){\r\n      setSelectedFolder(numberOfFolder-1)\r\n      return selectedFolder;\r\n    }\r\n    return numberOfFolder;\r\n  }\r\n  const swipeRight=(numberOfFolder:number):number=>{\r\n    if(numberOfFolder!=user.folders.length-1){\r\n      setSelectedFolder(numberOfFolder+1)\r\n      return selectedFolder;\r\n    }\r\n    return numberOfFolder;\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Swiper>\r\n      {/*<ListOfFolder user={user} selectedFolder={swipeLeft(selectedFolder)}/>\r\n      <ListOfFolder user={user} selectedFolder={selectedFolder}/>\r\n  <ListOfFolder user={user} selectedFolder={swipeRight(selectedFolder)}/>*/}\r\n    \r\n    </Swiper>\r\n    \r\n    <View style={footerstyles.container}>\r\n      <ScrollView showsHorizontalScrollIndicator={false} horizontal={true} style={footerstyles.scrollView}>\r\n        {user.folders.map((folder, index) => (\r\n          <Folder\r\n            key={index}\r\n            text={folder.name}\r\n            containerStyle={footerstyles.folderContainer}\r\n            textStyle={footerstyles.folder}\r\n            isSelected={selectedFolder === index}\r\n            onPress={() => handleFolderPress(index)}\r\n          />\r\n        ))}\r\n      </ScrollView>\r\n    </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAeC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAGnD,SAASC,YAAY;AACrB,OAAOC,MAAM;AAGb,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAMzC,IAAMC,MAA6B,GAAG,SAAhCA,MAA6BA,CAAAC,IAAA,EAAiB;EAAA,IAAXC,IAAI,GAAAD,IAAA,CAAJC,IAAI;EAC3C,IAAAC,SAAA,GAA4Cf,QAAQ,CAAS,CAAC,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAxDG,cAAc,GAAAF,UAAA;IAAEG,iBAAiB,GAAAH,UAAA;EAExC,IAAMI,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,KAAa,EAAK;IAC3C,IAAIH,cAAc,KAAKG,KAAK,EAAE,CAC9B,CAAC,MAAM;MACLF,iBAAiB,CAACE,KAAK,CAAC;IAC1B;EACF,CAAC;EACD,IAAMC,SAAS,GAAC,SAAVA,SAASA,CAAEC,cAAqB,EAAU;IAC9C,IAAGA,cAAc,IAAE,CAAC,EAAC;MACnBJ,iBAAiB,CAACI,cAAc,GAAC,CAAC,CAAC;MACnC,OAAOL,cAAc;IACvB;IACA,OAAOK,cAAc;EACvB,CAAC;EACD,IAAMC,UAAU,GAAC,SAAXA,UAAUA,CAAED,cAAqB,EAAU;IAC/C,IAAGA,cAAc,IAAET,IAAI,CAACW,OAAO,CAACC,MAAM,GAAC,CAAC,EAAC;MACvCP,iBAAiB,CAACI,cAAc,GAAC,CAAC,CAAC;MACnC,OAAOL,cAAc;IACvB;IACA,OAAOK,cAAc;EACvB,CAAC;EAED,OACEZ,KAAA,CAAAF,SAAA;IAAAkB,QAAA,GACApB,IAAA,CAACF,MAAM,IAKC,CAAC,EAETE,IAAA,CAACN,IAAI;MAAC2B,KAAK,EAAEzB,YAAY,CAAC0B,SAAU;MAAAF,QAAA,EAClCpB,IAAA,CAACL,UAAU;QAAC4B,8BAA8B,EAAE,KAAM;QAACC,UAAU,EAAE,IAAK;QAACH,KAAK,EAAEzB,YAAY,CAAC6B,UAAW;QAAAL,QAAA,EACjGb,IAAI,CAACW,OAAO,CAACQ,GAAG,CAAC,UAACC,MAAM,EAAEb,KAAK;UAAA,OAC9Bd,IAAA,CAACH,MAAM;YAEL+B,IAAI,EAAED,MAAM,CAACE,IAAK;YAClBC,cAAc,EAAElC,YAAY,CAACmC,eAAgB;YAC7CC,SAAS,EAAEpC,YAAY,CAAC+B,MAAO;YAC/BM,UAAU,EAAEtB,cAAc,KAAKG,KAAM;YACrCoB,OAAO,EAAE,SAAAA,QAAA;cAAA,OAAMrB,iBAAiB,CAACC,KAAK,CAAC;YAAA;UAAC,GALnCA,KAMN,CAAC;QAAA,CACH;MAAC,CACQ;IAAC,CACT,CAAC;EAAA,CACL,CAAC;AAEP,CAAC;AAED,eAAeT,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}