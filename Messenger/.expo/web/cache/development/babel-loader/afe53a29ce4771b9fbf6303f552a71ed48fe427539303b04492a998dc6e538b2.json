{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport { headerstyles } from \"../Styles/HeaderStyle\";\nimport MagnifyingGlass from \"./Headers containers/MagnifyingGlass\";\nimport ModeOfEmployment from \"./Headers containers/ModeOfEmployment\";\nimport Line from \"./Headers containers/Line\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  screenWidth = _Dimensions$get.width,\n  screenHeight = _Dimensions$get.height;\nexport default function Header(_ref) {\n  var mySelfUser = _ref.mySelfUser;\n  var timeForLineAnimation = 400;\n  var rotateGradusOfLines = 45;\n  var kefOfTransform = 0.8;\n  var scrollViewRef = React.createRef();\n  var topLineValue = useState(new Animated.Value(0))[0];\n  var middleLineValue = useState(new Animated.Value(1))[0];\n  var bottomLineValue = useState(new Animated.Value(0))[0];\n  var scrollX = useState(new Animated.Value(0))[0];\n  var _useState = useState(1),\n    _useState2 = _slicedToArray(_useState, 2),\n    state = _useState2[0],\n    setState = _useState2[1];\n  var topLineRotation = topLineValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: [\"0deg\", `-${rotateGradusOfLines}deg`]\n  });\n  var bottomLineRotation = bottomLineValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: [\"0deg\", `${rotateGradusOfLines}deg`]\n  });\n  var positionXOfTopLine = topLineValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, screenHeight * 0.01]\n  });\n  var positionYOfTopLine = topLineValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0]\n  });\n  var scrollXPosition = scrollX.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, screenWidth]\n  });\n  var hamburgerAnimation = function hamburgerAnimation(e) {\n    setState(state == 0 ? 1 : 0);\n    handleScrollTo();\n    lineTransformation(e);\n  };\n  var lineTransformation = function lineTransformation(e) {\n    var _scrollViewRef$curren;\n    Animated.timing(topLineValue, {\n      toValue: state,\n      duration: timeForLineAnimation,\n      useNativeDriver: false\n    }).start();\n    Animated.timing(bottomLineValue, {\n      toValue: state,\n      duration: timeForLineAnimation,\n      useNativeDriver: false\n    }).start();\n    Animated.timing(middleLineValue, {\n      toValue: state == 0 ? 1 : 0,\n      duration: state == 1 ? 10 : timeForLineAnimation,\n      useNativeDriver: false\n    }).start();\n    (_scrollViewRef$curren = scrollViewRef.current) == null ? void 0 : _scrollViewRef$curren.scrollTo(x);\n  };\n  var handleScrollTo = function handleScrollTo() {\n    Animated.timing(scrollX, {\n      toValue: screenWidth,\n      duration: 500,\n      easing: Easing.linear,\n      useNativeDriver: false\n    }).start();\n  };\n  return _jsxs(View, {\n    style: {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      right: 0,\n      zIndex: 5\n    },\n    children: [_jsx(View, {\n      style: headerstyles.gapContainer\n    }), _jsx(View, {\n      style: headerstyles.container,\n      children: _jsxs(ScrollView, {\n        ref: scrollViewRef,\n        horizontal: true,\n        style: headerstyles.header,\n        showsHorizontalScrollIndicator: false,\n        scrollEnabled: true,\n        onScroll: Animated.event([{\n          nativeEvent: {\n            contentOffset: {\n              x: scrollX\n            }\n          }\n        }], {\n          useNativeDriver: false\n        }),\n        scrollEventThrottle: 16,\n        children: [_jsxs(View, {\n          style: {\n            justifyContent: \"flex-start\",\n            flexDirection: \"row\",\n            width: screenWidth * 0.96\n          },\n          children: [_jsx(MagnifyingGlass, {\n            style: headerstyles.magnifyingglass\n          }), _jsx(ModeOfEmployment, {}), _jsx(TouchableOpacity, {\n            onPress: hamburgerAnimation,\n            children: _jsxs(View, {\n              style: headerstyles.hamburgerview,\n              children: [_jsx(Animated.View, {\n                style: {\n                  transform: [{\n                    rotate: topLineRotation\n                  }, {\n                    translateX: positionXOfTopLine\n                  }, {\n                    translateY: positionYOfTopLine\n                  }]\n                },\n                children: _jsx(Line, {\n                  screenWidth: state == 0 ? screenWidth * kefOfTransform : screenWidth,\n                  screenHeight: screenHeight\n                })\n              }), _jsx(Animated.View, {\n                style: {\n                  opacity: middleLineValue\n                },\n                children: _jsx(Line, {\n                  screenWidth: screenWidth,\n                  screenHeight: screenHeight\n                })\n              }), _jsx(Animated.View, {\n                style: {\n                  transform: [{\n                    rotate: bottomLineRotation\n                  }, {\n                    translateX: positionXOfTopLine\n                  }, {\n                    translateY: positionYOfTopLine\n                  }]\n                },\n                children: _jsx(Line, {\n                  screenWidth: state == 0 ? screenWidth * kefOfTransform : screenWidth,\n                  screenHeight: screenHeight\n                })\n              })]\n            })\n          })]\n        }), _jsx(View, {\n          style: {\n            width: screenWidth * 0.8,\n            backgroundColor: \"red\"\n          }\n        })]\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","View","TouchableOpacity","Animated","Dimensions","ScrollView","Easing","headerstyles","MagnifyingGlass","ModeOfEmployment","Line","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","screenWidth","width","screenHeight","height","Header","_ref","mySelfUser","timeForLineAnimation","rotateGradusOfLines","kefOfTransform","scrollViewRef","createRef","topLineValue","Value","middleLineValue","bottomLineValue","scrollX","_useState","_useState2","_slicedToArray","state","setState","topLineRotation","interpolate","inputRange","outputRange","bottomLineRotation","positionXOfTopLine","positionYOfTopLine","scrollXPosition","hamburgerAnimation","e","handleScrollTo","lineTransformation","_scrollViewRef$curren","timing","toValue","duration","useNativeDriver","start","current","scrollTo","x","easing","linear","style","position","top","left","right","zIndex","children","gapContainer","container","ref","horizontal","header","showsHorizontalScrollIndicator","scrollEnabled","onScroll","event","nativeEvent","contentOffset","scrollEventThrottle","justifyContent","flexDirection","magnifyingglass","onPress","hamburgerview","transform","rotate","translateX","translateY","opacity","backgroundColor"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/ChatList/Components/Header.tsx"],"sourcesContent":["import React, { createRef, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Image,\r\n  TouchableOpacity,\r\n  GestureResponderEvent,\r\n  Animated,\r\n  Dimensions,\r\n  ScrollView,\r\n  Easing,\r\n} from \"react-native\";\r\nimport { headerstyles } from \"../Styles/HeaderStyle\";\r\nimport MagnifyingGlass from \"./Headers containers/MagnifyingGlass\";\r\nimport ModeOfEmployment from \"./Headers containers/ModeOfEmployment\";\r\nimport Line from \"./Headers containers/Line\";\r\nimport MySelfUser from \"../1HelpFullFolder/MySelfUser\";\r\nconst { width: screenWidth, height: screenHeight } = Dimensions.get(\"window\");\r\nexport default function Header({ mySelfUser }: { mySelfUser: MySelfUser }) {\r\n  const timeForLineAnimation: number = 400;\r\n  const rotateGradusOfLines: number = 45;\r\n  const kefOfTransform: number = 0.8;\r\n  const scrollViewRef=React.createRef<ScrollView>();\r\n  const topLineValue = useState(new Animated.Value(0))[0];\r\n  const middleLineValue = useState(new Animated.Value(1))[0];\r\n  const bottomLineValue = useState(new Animated.Value(0))[0];\r\n  const scrollX=useState(new Animated.Value(0))[0];\r\n  const [state, setState] = useState(1);\r\n  const topLineRotation = topLineValue.interpolate({\r\n    inputRange: [0, 1],\r\n    outputRange: [\"0deg\", `-${rotateGradusOfLines}deg`],\r\n  });\r\n  const bottomLineRotation = bottomLineValue.interpolate({\r\n    inputRange: [0, 1],\r\n    outputRange: [\"0deg\", `${rotateGradusOfLines}deg`],\r\n  });\r\n  const positionXOfTopLine = topLineValue.interpolate({\r\n    inputRange: [0, 1],\r\n    outputRange: [0, screenHeight * 0.01],\r\n  });\r\n\r\n  const positionYOfTopLine = topLineValue.interpolate({\r\n    inputRange: [0, 1],\r\n    outputRange: [0, 0],\r\n  });\r\n  const scrollXPosition=scrollX.interpolate({\r\n    inputRange:[0,1],\r\n    outputRange:[0,screenWidth]\r\n  })\r\n  const hamburgerAnimation = (e: GestureResponderEvent) => {\r\n    setState(state == 0 ? 1 : 0);\r\n    handleScrollTo();\r\n    lineTransformation(e);\r\n  };\r\n  const lineTransformation = (e: GestureResponderEvent) => {\r\n    Animated.timing(topLineValue, {\r\n      toValue: state,\r\n      duration: timeForLineAnimation,\r\n      useNativeDriver: false,\r\n    }).start();\r\n    Animated.timing(bottomLineValue, {\r\n      toValue: state,\r\n      duration: timeForLineAnimation,\r\n      useNativeDriver: false,\r\n    }).start();\r\n    Animated.timing(middleLineValue, {\r\n      toValue: state == 0 ? 1 : 0,\r\n      duration: state == 1 ? 10 : timeForLineAnimation, // Змінив на 1000 мс (1 секунда) для прикладу\r\n      useNativeDriver: false,\r\n    }).start();\r\n    scrollViewRef.current?.scrollTo(x)\r\n  };\r\n  const handleScrollTo=()=>\r\n  {\r\n    Animated.timing(scrollX, {\r\n      toValue: screenWidth,\r\n      duration: 500, // Тривалість анімації в мілісекундах\r\n      easing: Easing.linear, // Опціонально: виберіть тип ефекту анімації\r\n      useNativeDriver: false, // Опціонально: задайте true для покращення продуктивності\r\n    }).start();\r\n  }\r\n  return (\r\n    <View\r\n      style={{\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        zIndex: 5,\r\n      }}\r\n    >\r\n      <View style={headerstyles.gapContainer} />\r\n      <View style={headerstyles.container}>\r\n        <ScrollView\r\n          ref={scrollViewRef}\r\n          horizontal\r\n          style={headerstyles.header}\r\n          showsHorizontalScrollIndicator={false}\r\n          scrollEnabled={true}\r\n          onScroll={Animated.event(\r\n            [{ nativeEvent: { contentOffset: { x:scrollX } } }],\r\n            { useNativeDriver: false }\r\n          )}\r\n          scrollEventThrottle={16}\r\n        >\r\n          <View\r\n            style={{\r\n              justifyContent: \"flex-start\",\r\n              flexDirection: \"row\",\r\n              width: screenWidth*0.96,\r\n            }}\r\n          >\r\n            <MagnifyingGlass style={headerstyles.magnifyingglass} />\r\n            <ModeOfEmployment />\r\n            <TouchableOpacity onPress={hamburgerAnimation}>\r\n              <View style={headerstyles.hamburgerview}>\r\n                <Animated.View\r\n                  style={{\r\n                    transform: [\r\n                      { rotate: topLineRotation },\r\n                      { translateX: positionXOfTopLine },\r\n                      { translateY: positionYOfTopLine },\r\n                    ],\r\n                  }}\r\n                >\r\n                  <Line\r\n                    screenWidth={\r\n                      state == 0 ? screenWidth * kefOfTransform : screenWidth\r\n                    }\r\n                    screenHeight={screenHeight}\r\n                  />\r\n                </Animated.View>\r\n                <Animated.View style={{ opacity: middleLineValue }}>\r\n                  <Line screenWidth={screenWidth} screenHeight={screenHeight} />\r\n                </Animated.View>\r\n                <Animated.View\r\n                  style={{\r\n                    transform: [\r\n                      { rotate: bottomLineRotation },\r\n                      { translateX: positionXOfTopLine },\r\n                      { translateY: positionYOfTopLine },\r\n                    ],\r\n                  }}\r\n                >\r\n                  <Line\r\n                    screenWidth={\r\n                      state == 0 ? screenWidth * kefOfTransform : screenWidth\r\n                    }\r\n                    screenHeight={screenHeight}\r\n                  />\r\n                </Animated.View>\r\n              </View>\r\n            </TouchableOpacity>\r\n          </View>\r\n          <View style={{width:screenWidth*0.8,backgroundColor:\"red\",\r\n}}>\r\n              \r\n          </View>\r\n        </ScrollView>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}