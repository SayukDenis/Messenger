{"ast":null,"code":"import React from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  screenWidth = _Dimensions$get.width,\n  screenHeight = _Dimensions$get.height;\nvar ContainerForHeaderModeOfEmploymentWith = function ContainerForHeaderModeOfEmploymentWith(_ref) {\n  var children = _ref.children;\n  var propsOfModeOfEmployment = useSelector(function (state) {\n    var props = state.chatListReducer.layoutOfModeOfEmployment.layoutOfModeOfEmployment;\n    return props;\n  });\n  return _jsx(Animated.View, {\n    style: {\n      backgroundColor: \"#E7E6E4\",\n      height: screenHeight * 0.05,\n      width: screenWidth * 0.5,\n      right: screenWidth - propsOfModeOfEmployment.width - propsOfModeOfEmployment.x + 10 + screenWidth * 0.0031,\n      position: \"absolute\",\n      borderRadius: 30,\n      justifyContent: \"center\"\n    },\n    children: children\n  });\n};\nexport default connect(null)(ContainerForHeaderModeOfEmploymentWith);","map":{"version":3,"names":["React","connect","useSelector","Dimensions","Animated","jsx","_jsx","_Dimensions$get","get","screenWidth","width","screenHeight","height","ContainerForHeaderModeOfEmploymentWith","_ref","children","propsOfModeOfEmployment","state","props","chatListReducer","layoutOfModeOfEmployment","View","style","backgroundColor","right","x","position","borderRadius","justifyContent"],"sources":["C:/Users/Admin/Project/Messenger/Messenger/Pages/ChatList/Components/Headers containers/ContainerForHeaderModeOfEmployment.tsx"],"sourcesContent":["import { ReactNode, useEffect } from \"react\";\r\n\r\nimport React from \"react\";\r\nimport { footerstyles } from \"../../Styles/FooterStyle\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport { Dimensions, Text, Animated } from \"react-native\";\r\n\r\ninterface ContainerForHeaderModeOfEmploymentProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst { width: screenWidth, height: screenHeight } = Dimensions.get(\"window\");\r\nconst ContainerForHeaderModeOfEmploymentWith: React.FC<\r\n  ContainerForHeaderModeOfEmploymentProps\r\n> = ({ children }) => {\r\n  const propsOfModeOfEmployment: any = useSelector((state: any) => {\r\n    const props =\r\n      state.chatListReducer.layoutOfModeOfEmployment.layoutOfModeOfEmployment;\r\n    return props;\r\n  });\r\n\r\n  return (\r\n    <Animated.View\r\n      style={{\r\n        backgroundColor: \"#E7E6E4\",\r\n        height: screenHeight * 0.05,\r\n        width: screenWidth * 0.5,\r\n        right:\r\n          screenWidth -\r\n          propsOfModeOfEmployment.width -\r\n          propsOfModeOfEmployment.x +\r\n          10 +\r\n          screenWidth * 0.0031,\r\n          position:\"absolute\",\r\n        borderRadius: 30,\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      {children}\r\n    </Animated.View>\r\n  );\r\n};\r\n\r\nexport default connect(null)(ContainerForHeaderModeOfEmploymentWith);\r\n"],"mappings":"AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,OAAO,EAAEC,WAAW,QAAQ,aAAa;AAAC,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAOnD,IAAAC,eAAA,GAAqDJ,UAAU,CAACK,GAAG,CAAC,QAAQ,CAAC;EAA9DC,WAAW,GAAAF,eAAA,CAAlBG,KAAK;EAAuBC,YAAY,GAAAJ,eAAA,CAApBK,MAAM;AAClC,IAAMC,sCAEL,GAAG,SAFEA,sCAELA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EACb,IAAMC,uBAA4B,GAAGd,WAAW,CAAC,UAACe,KAAU,EAAK;IAC/D,IAAMC,KAAK,GACTD,KAAK,CAACE,eAAe,CAACC,wBAAwB,CAACA,wBAAwB;IACzE,OAAOF,KAAK;EACd,CAAC,CAAC;EAEF,OACEZ,IAAA,CAACF,QAAQ,CAACiB,IAAI;IACZC,KAAK,EAAE;MACLC,eAAe,EAAE,SAAS;MAC1BX,MAAM,EAAED,YAAY,GAAG,IAAI;MAC3BD,KAAK,EAAED,WAAW,GAAG,GAAG;MACxBe,KAAK,EACHf,WAAW,GACXO,uBAAuB,CAACN,KAAK,GAC7BM,uBAAuB,CAACS,CAAC,GACzB,EAAE,GACFhB,WAAW,GAAG,MAAM;MACpBiB,QAAQ,EAAC,UAAU;MACrBC,YAAY,EAAE,EAAE;MAChBC,cAAc,EAAE;IAClB,CAAE;IAAAb,QAAA,EAEDA;EAAQ,CACI,CAAC;AAEpB,CAAC;AAED,eAAed,OAAO,CAAC,IAAI,CAAC,CAACY,sCAAsC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}