{"ast":null,"code":"export var wrapText = function wrapText(text, maxLength) {\n  var words = text.split(' ');\n  var currentLine = '';\n  var lines = [];\n  words.forEach(function (word) {\n    if (word.length > maxLength) {\n      if (currentLine.length) lines.push(currentLine.trim());\n      currentLine = '';\n      for (var i = 0; i < word.length; i += maxLength) {\n        lines.push(word.slice(i, i + maxLength).trim());\n      }\n    } else if ((currentLine + word).length > maxLength) {\n      lines.push(currentLine.trim());\n      currentLine = word + ' ';\n    } else {\n      currentLine += word + ' ';\n    }\n  });\n  lines.push(currentLine.trim());\n  return lines.join('\\n').trim();\n};","map":{"version":3,"names":["wrapText","text","maxLength","words","split","currentLine","lines","forEach","word","length","push","trim","i","slice","join"],"sources":["D:/project/1project/Messenger/Messenger/Pages/Chats/Dialogue/MessageViewsAndTypes/HelperFunctions/wrapText.tsx"],"sourcesContent":["\r\n\r\nexport const wrapText = (text:string, maxLength:number) => {\r\n  const words = text.split(' ');\r\n  let currentLine = '';\r\n  const lines = [];\r\n\r\n  words.forEach((word) => {\r\n    if (word.length > maxLength) {\r\n      // Break the long word into chunks of maxLength characters\r\n      if(currentLine.length)\r\n        lines.push(currentLine.trim());\r\n      currentLine = '';\r\n      for (let i = 0; i < word.length; i += maxLength) {\r\n        lines.push(word.slice(i, i + maxLength).trim());\r\n      }\r\n    } else if ((currentLine + word).length > maxLength) {\r\n      lines.push(currentLine.trim());\r\n      currentLine = word + ' ';\r\n    } else {\r\n      currentLine += word + ' ';\r\n    }\r\n  });\r\n\r\n  lines.push(currentLine.trim());\r\n\r\n  return lines.join('\\n').trim();\r\n};"],"mappings":"AAEA,OAAO,IAAMA,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,IAAW,EAAEC,SAAgB,EAAK;EACzD,IAAMC,KAAK,GAAGF,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC;EAC7B,IAAIC,WAAW,GAAG,EAAE;EACpB,IAAMC,KAAK,GAAG,EAAE;EAEhBH,KAAK,CAACI,OAAO,CAAC,UAACC,IAAI,EAAK;IACtB,IAAIA,IAAI,CAACC,MAAM,GAAGP,SAAS,EAAE;MAE3B,IAAGG,WAAW,CAACI,MAAM,EACnBH,KAAK,CAACI,IAAI,CAACL,WAAW,CAACM,IAAI,CAAC,CAAC,CAAC;MAChCN,WAAW,GAAG,EAAE;MAChB,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,IAAI,CAACC,MAAM,EAAEG,CAAC,IAAIV,SAAS,EAAE;QAC/CI,KAAK,CAACI,IAAI,CAACF,IAAI,CAACK,KAAK,CAACD,CAAC,EAAEA,CAAC,GAAGV,SAAS,CAAC,CAACS,IAAI,CAAC,CAAC,CAAC;MACjD;IACF,CAAC,MAAM,IAAI,CAACN,WAAW,GAAGG,IAAI,EAAEC,MAAM,GAAGP,SAAS,EAAE;MAClDI,KAAK,CAACI,IAAI,CAACL,WAAW,CAACM,IAAI,CAAC,CAAC,CAAC;MAC9BN,WAAW,GAAGG,IAAI,GAAG,GAAG;IAC1B,CAAC,MAAM;MACLH,WAAW,IAAIG,IAAI,GAAG,GAAG;IAC3B;EACF,CAAC,CAAC;EAEFF,KAAK,CAACI,IAAI,CAACL,WAAW,CAACM,IAAI,CAAC,CAAC,CAAC;EAE9B,OAAOL,KAAK,CAACQ,IAAI,CAAC,IAAI,CAAC,CAACH,IAAI,CAAC,CAAC;AAChC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}