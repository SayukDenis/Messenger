{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { styles } from \"./Styles\";\nimport { useIsFocused } from \"@react-navigation/native\";\nimport TopToolBar from \"../../SemiComponents/MainScreen/TopToolBar\";\nimport AvatarWithCallingButtons from \"../../SemiComponents/MainScreen/AvatarWithCallingButtons\";\nimport Multimedia from \"../../SemiComponents/MainScreen/Multimedia/Multimedia\";\nimport Blur from \"../../SemiComponents/Blur\";\nimport ElseFeaturesButtons from \"../../SemiComponents/MainScreen/ElseFeaturesButtons\";\nimport RemovalApproval from \"../../SemiComponents/MainScreen/RemovalApproval\";\nimport { channel, tempUser, user } from \"../../SemiComponents/DBUser\";\nimport AlbumLongPressedMenu from \"../../SemiComponents/MainScreen/Multimedia/AlbumLongPressedMenu\";\nimport BottomToolBar from \"../../SemiComponents/MainScreen/ButtomToolBar\";\nimport SubscribersButton from \"./SubscribersButton\";\nimport TypeChannelMenu from \"./TypeChannelMenu\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar screenHeight = Dimensions.get(\"screen\").height;\nvar MainChannelScreen = function MainChannelScreen(props) {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    removalApprovalText = _useState2[0],\n    setRemovalApprovalText = _useState2[1];\n  var _useState3 = useState(\"Photos\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    pressedMultimediaButton = _useState4[0],\n    _setPressedMultimediaButton = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isElseFeaturesVisible = _useState6[0],\n    setIsElseFeaturesVisible = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isPhotoAlbumSelectionVisible = _useState8[0],\n    _setIsPhotoAlbumSelectionVisible = _useState8[1];\n  var _useState9 = useState(user.isMuted),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isMuted = _useState10[0],\n    setIsMuted = _useState10[1];\n  var _useState11 = useState(null),\n    _useState12 = _slicedToArray(_useState11, 2),\n    longPressedAlbum = _useState12[0],\n    setLongPressedAlbum = _useState12[1];\n  var _useState13 = useState(0),\n    _useState14 = _slicedToArray(_useState13, 2),\n    positionYOfLongPressedAlbum = _useState14[0],\n    setPositionYOfLongPressedAlbum = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    isAlbumSelectionVisible = _useState16[0],\n    setIsAlbumSelectionVisible = _useState16[1];\n  var _useState17 = useState([]),\n    _useState18 = _slicedToArray(_useState17, 2),\n    selectedAlbums = _useState18[0],\n    setSelectedAlbums = _useState18[1];\n  var _useState19 = useState(false),\n    _useState20 = _slicedToArray(_useState19, 2),\n    isTypeChannelPressed = _useState20[0],\n    setIsTypeChannelPressed = _useState20[1];\n  var isFocused = useIsFocused();\n  useEffect(function () {}, [isFocused]);\n  var removalApprovalsTexts = [\"clear the chat\", \"delete an album\", \"delete all albums\", \"delete selected albums\"];\n  var removalApprovalsOnPress = [function () {\n    alert(\"Agree\");\n  }, function () {\n    user.albums.splice(user.albums.indexOf(longPressedAlbum), 1);\n    setLongPressedAlbum(null);\n  }, function () {\n    user.albums = Array();\n    setIsAlbumSelectionVisible(false);\n  }, function () {\n    selectedAlbums.forEach(function (album) {\n      user.albums.splice(user.albums.indexOf(album), 1);\n    });\n    setSelectedAlbums(Array());\n    setIsAlbumSelectionVisible(false);\n  }];\n  return _jsxs(View, {\n    style: styles.mainContainer,\n    children: [_jsx(Blur, {\n      visibleWhen: isElseFeaturesVisible || longPressedAlbum != null || isPhotoAlbumSelectionVisible || isTypeChannelPressed,\n      onPress: function onPress() {\n        setIsElseFeaturesVisible(false);\n        setLongPressedAlbum(null);\n        _setIsPhotoAlbumSelectionVisible(false);\n        setIsTypeChannelPressed(false);\n      }\n    }), _jsx(Blur, {\n      visibleWhen: removalApprovalText != \"\",\n      onPress: function onPress() {\n        setRemovalApprovalText(\"\");\n      },\n      style: [styles.blurEffect, {\n        zIndex: 3\n      }]\n    }), removalApprovalsTexts.map(function (item, index) {\n      return _jsx(RemovalApproval, {\n        isVisible: removalApprovalText == item,\n        onAnyPress: function onAnyPress() {\n          setRemovalApprovalText(\"\");\n        },\n        onAgreePress: function onAgreePress() {\n          removalApprovalsOnPress[index]();\n        },\n        text: \"Do you really want to \" + item + \"?\"\n      }, item);\n    }), _jsx(TopToolBar, {\n      primaryTitle: user.profileName,\n      secondaryTitle: user.lastTimeOnline,\n      onElseFeaturesPress: function onElseFeaturesPress() {\n        setIsElseFeaturesVisible(true);\n      },\n      isMuted: isMuted,\n      isSearchButtonVisible: true,\n      onGoBackPress: function onGoBackPress() {\n        props.navigation.goBack();\n      },\n      isMediaSelectionVisible: isAlbumSelectionVisible,\n      quantityOfSelectedItems: selectedAlbums.length,\n      onCancelPress: function onCancelPress() {\n        setSelectedAlbums([]);\n        setIsAlbumSelectionVisible(false);\n      },\n      onDeleteAllPress: function onDeleteAllPress() {\n        setRemovalApprovalText(\"delete all albums\");\n      }\n    }), _jsx(ElseFeaturesButtons, {\n      isVisible: isElseFeaturesVisible,\n      setIsVisible: function setIsVisible(value) {\n        return setIsElseFeaturesVisible(value);\n      },\n      isMuted: isMuted,\n      onMutePress: function onMutePress(value) {\n        setIsMuted(value);\n      },\n      onClearChatPress: function onClearChatPress() {\n        setRemovalApprovalText(\"clear the chat\");\n      },\n      onTypeChannelPress: function onTypeChannelPress() {\n        setIsTypeChannelPressed(true);\n        setIsElseFeaturesVisible(false);\n      },\n      onSettingsPress: function onSettingsPress() {\n        return props.navigation.navigate(\"ChannelSettingsScreen\");\n      },\n      mode: \"channel\"\n    }), _jsx(TypeChannelMenu, {\n      isVisible: isTypeChannelPressed,\n      onPrivatePress: function onPrivatePress() {\n        alert(\"private\");\n      },\n      onPublicPress: function onPublicPress() {\n        alert(\"public\");\n      }\n    }), _jsx(AlbumLongPressedMenu, {\n      isVisible: longPressedAlbum != null,\n      longPressedAlbum: longPressedAlbum,\n      positionYOfLongPressedAlbum: positionYOfLongPressedAlbum,\n      onDeleteAlbumPress: function onDeleteAlbumPress() {\n        setRemovalApprovalText(\"delete an album\");\n      },\n      onSelectAlbumPress: function onSelectAlbumPress() {\n        setIsAlbumSelectionVisible(true);\n        setSelectedAlbums(selectedAlbums == null ? void 0 : selectedAlbums.concat([longPressedAlbum]));\n        setLongPressedAlbum(null);\n      }\n    }), _jsxs(ScrollView, {\n      style: {\n        flex: 1,\n        zIndex: isPhotoAlbumSelectionVisible ? 2 : 0\n      },\n      contentContainerStyle: {\n        zIndex: isPhotoAlbumSelectionVisible ? 2 : 0\n      },\n      overScrollMode: \"never\",\n      showsVerticalScrollIndicator: false,\n      onScroll: function onScroll() {\n        _setIsPhotoAlbumSelectionVisible(false);\n      },\n      children: [_jsx(Blur, {\n        visibleWhen: isPhotoAlbumSelectionVisible,\n        onPress: function onPress() {\n          _setIsPhotoAlbumSelectionVisible(false);\n        },\n        style: [styles.blurEffect, {\n          zIndex: 3\n        }]\n      }), _jsx(AvatarWithCallingButtons, {\n        avatarURL: \"https://fastly.picsum.photos/id/22/4434/3729.jpg?hmac=fjZdkSMZJNFgsoDh8Qo5zdA_nSGUAWvKLyyqmEt2xs0\",\n        onAvatarPress: function onAvatarPress() {\n          props.navigation.navigate(\"AvatarsAndInfoScreen\");\n        }\n      }), _jsx(SubscribersButton, {\n        onPress: function onPress() {\n          props.navigation.navigate(\"SubscribersScreen\");\n        },\n        subscribersQuantity: channel.subscribersQuantity\n      }), _jsx(Multimedia, {\n        isPhotoAlbumSelectionVisible: isPhotoAlbumSelectionVisible,\n        setIsPhotoAlbumSelectionVisible: function setIsPhotoAlbumSelectionVisible(value) {\n          return _setIsPhotoAlbumSelectionVisible(value);\n        },\n        pressedMultimediaButton: pressedMultimediaButton,\n        setPressedMultimediaButton: function setPressedMultimediaButton(value) {\n          _setPressedMultimediaButton(value);\n        },\n        onPhotoPress: function onPhotoPress(photo) {\n          tempUser.selectedPhoto = photo;\n          props.navigation.navigate(\"PhotoScreen\");\n        },\n        onAlbumPress: function onAlbumPress(item) {\n          if (isAlbumSelectionVisible) {\n            if (!selectedAlbums.includes(item)) {\n              setSelectedAlbums(selectedAlbums.concat([item]));\n            } else {\n              setSelectedAlbums(selectedAlbums.filter(function (photoOrVideo) {\n                return photoOrVideo !== item;\n              }));\n            }\n          } else {\n            tempUser.selectedAlbum = item;\n            props.navigation.navigate(\"Album\");\n          }\n        },\n        onNewAlbumPress: function onNewAlbumPress() {\n          props.navigation.navigate(\"NewAlbumScreen\");\n        },\n        onAlbumLongPress: function onAlbumLongPress(value, event) {\n          if (!isAlbumSelectionVisible) {\n            setLongPressedAlbum(value);\n            setPositionYOfLongPressedAlbum(event.nativeEvent.pageY + 0.05 * screenHeight);\n          } else {\n            if (!selectedAlbums.includes(value)) {\n              setSelectedAlbums(selectedAlbums.concat([value]));\n            } else {\n              setSelectedAlbums(selectedAlbums.filter(function (photoOrVideo) {\n                return photoOrVideo !== value;\n              }));\n            }\n          }\n        },\n        isAlbumSelectionVisible: isAlbumSelectionVisible,\n        isAlbumCheckMarkVisible: function isAlbumCheckMarkVisible(value) {\n          return selectedAlbums.includes(value);\n        }\n      })]\n    }), _jsx(BottomToolBar, {\n      isVisible: isAlbumSelectionVisible,\n      onDeletePress: function onDeletePress() {\n        setRemovalApprovalText(\"delete selected albums\");\n      },\n      onForwardPress: function onForwardPress() {\n        alert(\"Forward album...\");\n      }\n    })]\n  });\n};\nexport default MainChannelScreen;","map":{"version":3,"names":["React","useState","useEffect","View","ScrollView","Dimensions","styles","useIsFocused","TopToolBar","AvatarWithCallingButtons","Multimedia","Blur","ElseFeaturesButtons","RemovalApproval","channel","tempUser","user","AlbumLongPressedMenu","BottomToolBar","SubscribersButton","TypeChannelMenu","jsx","_jsx","jsxs","_jsxs","screenHeight","get","height","MainChannelScreen","props","_useState","_useState2","_slicedToArray","removalApprovalText","setRemovalApprovalText","_useState3","_useState4","pressedMultimediaButton","setPressedMultimediaButton","_useState5","_useState6","isElseFeaturesVisible","setIsElseFeaturesVisible","_useState7","_useState8","isPhotoAlbumSelectionVisible","setIsPhotoAlbumSelectionVisible","_useState9","isMuted","_useState10","setIsMuted","_useState11","_useState12","longPressedAlbum","setLongPressedAlbum","_useState13","_useState14","positionYOfLongPressedAlbum","setPositionYOfLongPressedAlbum","_useState15","_useState16","isAlbumSelectionVisible","setIsAlbumSelectionVisible","_useState17","_useState18","selectedAlbums","setSelectedAlbums","_useState19","_useState20","isTypeChannelPressed","setIsTypeChannelPressed","isFocused","removalApprovalsTexts","removalApprovalsOnPress","alert","albums","splice","indexOf","Array","forEach","album","style","mainContainer","children","visibleWhen","onPress","blurEffect","zIndex","map","item","index","isVisible","onAnyPress","onAgreePress","text","primaryTitle","profileName","secondaryTitle","lastTimeOnline","onElseFeaturesPress","isSearchButtonVisible","onGoBackPress","navigation","goBack","isMediaSelectionVisible","quantityOfSelectedItems","length","onCancelPress","onDeleteAllPress","setIsVisible","value","onMutePress","onClearChatPress","onTypeChannelPress","onSettingsPress","navigate","mode","onPrivatePress","onPublicPress","onDeleteAlbumPress","onSelectAlbumPress","concat","flex","contentContainerStyle","overScrollMode","showsVerticalScrollIndicator","onScroll","avatarURL","onAvatarPress","subscribersQuantity","onPhotoPress","photo","selectedPhoto","onAlbumPress","includes","filter","photoOrVideo","selectedAlbum","onNewAlbumPress","onAlbumLongPress","event","nativeEvent","pageY","isAlbumCheckMarkVisible","onDeletePress","onForwardPress"],"sources":["/home/zatibmag/Desktop/Project/Messenger/Messenger/Pages/Profiles/ChannelProfile/MainChannelScreen/MainChannelScreen.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { View, ScrollView, Dimensions } from \"react-native\";\r\nimport { styles } from \"./Styles\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport TopToolBar from \"../../SemiComponents/MainScreen/TopToolBar\";\r\nimport AvatarWithCallingButtons from \"../../SemiComponents/MainScreen/AvatarWithCallingButtons\";\r\nimport Multimedia from \"../../SemiComponents/MainScreen/Multimedia/Multimedia\";\r\nimport Blur from \"../../SemiComponents/Blur\";\r\nimport ElseFeaturesButtons from \"../../SemiComponents/MainScreen/ElseFeaturesButtons\";\r\nimport RemovalApproval from \"../../SemiComponents/MainScreen/RemovalApproval\";\r\nimport {\r\n  Album,\r\n  PhotoOrVideo,\r\n  channel,\r\n  tempUser,\r\n  user,\r\n} from \"../../SemiComponents/DBUser\";\r\nimport AlbumLongPressedMenu from \"../../SemiComponents/MainScreen/Multimedia/AlbumLongPressedMenu\";\r\nimport BottomToolBar from \"../../SemiComponents/MainScreen/ButtomToolBar\";\r\nimport { GestureResponderEvent } from \"react-native-modal\";\r\nimport SubscribersButton from \"./SubscribersButton\";\r\nimport TypeChannelMenu from \"./TypeChannelMenu\";\r\n\r\nconst screenHeight = Dimensions.get(\"screen\").height;\r\n\r\ninterface MainChannelScreenProps {\r\n  navigation: StackNavigationProp<{}>;\r\n}\r\n\r\nconst MainChannelScreen: React.FC<MainChannelScreenProps> = (props) => {\r\n  const [removalApprovalText, setRemovalApprovalText] = useState(\"\");\r\n  const [pressedMultimediaButton, setPressedMultimediaButton] =\r\n    useState(\"Photos\");\r\n  const [isElseFeaturesVisible, setIsElseFeaturesVisible] = useState(false);\r\n  const [isPhotoAlbumSelectionVisible, setIsPhotoAlbumSelectionVisible] =\r\n    useState(false);\r\n  const [isMuted, setIsMuted] = useState(user.isMuted);\r\n  const [longPressedAlbum, setLongPressedAlbum] = useState(null);\r\n  const [positionYOfLongPressedAlbum, setPositionYOfLongPressedAlbum] =\r\n    useState(0);\r\n  const [isAlbumSelectionVisible, setIsAlbumSelectionVisible] = useState(false);\r\n  const [selectedAlbums, setSelectedAlbums] = useState<Array<Album>>([]);\r\n  const [isTypeChannelPressed, setIsTypeChannelPressed] = useState(false);\r\n\r\n  const isFocused = useIsFocused();\r\n\r\n  useEffect(() => {}, [isFocused]);\r\n\r\n  const removalApprovalsTexts: string[] = [\r\n    \"clear the chat\",\r\n    \"delete an album\",\r\n    \"delete all albums\",\r\n    \"delete selected albums\",\r\n  ];\r\n  const removalApprovalsOnPress: (() => void)[] = [\r\n    () => {\r\n      alert(\"Agree\");\r\n    },\r\n    () => {\r\n      user.albums.splice(user.albums.indexOf(longPressedAlbum), 1);\r\n      setLongPressedAlbum(null);\r\n    },\r\n    () => {\r\n      user.albums = Array<Album>();\r\n      setIsAlbumSelectionVisible(false);\r\n    },\r\n    () => {\r\n      selectedAlbums.forEach((album) => {\r\n        user.albums.splice(user.albums.indexOf(album), 1);\r\n      });\r\n      setSelectedAlbums(Array<Album>());\r\n      setIsAlbumSelectionVisible(false);\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <View style={styles.mainContainer}>\r\n      {/* General blur with zIndex 1 */}\r\n      <Blur\r\n        visibleWhen={\r\n          isElseFeaturesVisible ||\r\n          longPressedAlbum != null ||\r\n          isPhotoAlbumSelectionVisible ||\r\n          isTypeChannelPressed\r\n        }\r\n        onPress={() => {\r\n          setIsElseFeaturesVisible(false);\r\n          setLongPressedAlbum(null);\r\n          setIsPhotoAlbumSelectionVisible(false);\r\n          setIsTypeChannelPressed(false);\r\n        }}\r\n      />\r\n\r\n      {/* Blur over blur with zIndex 3 */}\r\n      <Blur\r\n        visibleWhen={removalApprovalText != \"\"}\r\n        onPress={() => {\r\n          setRemovalApprovalText(\"\");\r\n        }}\r\n        style={[\r\n          styles.blurEffect,\r\n          {\r\n            zIndex: 3,\r\n          },\r\n        ]}\r\n      />\r\n\r\n      {removalApprovalsTexts.map((item, index) => {\r\n        return (\r\n          <RemovalApproval\r\n            key={item}\r\n            isVisible={removalApprovalText == item}\r\n            onAnyPress={() => {\r\n              setRemovalApprovalText(\"\");\r\n            }}\r\n            onAgreePress={() => {\r\n              removalApprovalsOnPress[index]();\r\n            }}\r\n            text={\"Do you really want to \" + item + \"?\"}\r\n          />\r\n        );\r\n      })}\r\n\r\n      {/* Top tool bar with buttons*/}\r\n      <TopToolBar\r\n        primaryTitle={user.profileName}\r\n        secondaryTitle={user.lastTimeOnline}\r\n        onElseFeaturesPress={() => {\r\n          setIsElseFeaturesVisible(true);\r\n        }}\r\n        isMuted={isMuted}\r\n        isSearchButtonVisible={true}\r\n        onGoBackPress={() => {\r\n          props.navigation.goBack();\r\n        }}\r\n        isMediaSelectionVisible={isAlbumSelectionVisible}\r\n        quantityOfSelectedItems={selectedAlbums.length}\r\n        onCancelPress={() => {\r\n          setSelectedAlbums([]);\r\n          setIsAlbumSelectionVisible(false);\r\n        }}\r\n        onDeleteAllPress={() => {\r\n          setRemovalApprovalText(\"delete all albums\");\r\n        }}\r\n      />\r\n\r\n      {/* Else features which appear when else features button is pressed*/}\r\n      <ElseFeaturesButtons\r\n        isVisible={isElseFeaturesVisible}\r\n        setIsVisible={(value: boolean) => setIsElseFeaturesVisible(value)}\r\n        isMuted={isMuted}\r\n        onMutePress={(value: boolean) => {\r\n          setIsMuted(value);\r\n        }}\r\n        onClearChatPress={() => {\r\n          setRemovalApprovalText(\"clear the chat\");\r\n        }}\r\n        onTypeChannelPress={() => {\r\n          setIsTypeChannelPressed(true);\r\n          setIsElseFeaturesVisible(false);\r\n        }}\r\n        onSettingsPress={() =>\r\n          props.navigation.navigate(\"ChannelSettingsScreen\" as never)\r\n        }\r\n        mode=\"channel\"\r\n      />\r\n\r\n      <TypeChannelMenu\r\n        isVisible={isTypeChannelPressed}\r\n        onPrivatePress={() => {\r\n          alert(\"private\");\r\n        }}\r\n        onPublicPress={() => {\r\n          alert(\"public\");\r\n        }}\r\n      />\r\n\r\n      <AlbumLongPressedMenu\r\n        isVisible={longPressedAlbum != null}\r\n        longPressedAlbum={longPressedAlbum}\r\n        positionYOfLongPressedAlbum={positionYOfLongPressedAlbum}\r\n        onDeleteAlbumPress={() => {\r\n          setRemovalApprovalText(\"delete an album\");\r\n        }}\r\n        onSelectAlbumPress={() => {\r\n          setIsAlbumSelectionVisible(true);\r\n          setSelectedAlbums(selectedAlbums?.concat([longPressedAlbum]));\r\n          setLongPressedAlbum(null);\r\n        }}\r\n      />\r\n\r\n      <ScrollView\r\n        style={{\r\n          flex: 1,\r\n          zIndex: isPhotoAlbumSelectionVisible ? 2 : 0,\r\n        }}\r\n        contentContainerStyle={{\r\n          zIndex: isPhotoAlbumSelectionVisible ? 2 : 0,\r\n        }}\r\n        overScrollMode=\"never\"\r\n        showsVerticalScrollIndicator={false}\r\n        onScroll={() => {\r\n          setIsPhotoAlbumSelectionVisible(false);\r\n        }}\r\n      >\r\n        <Blur\r\n          visibleWhen={isPhotoAlbumSelectionVisible}\r\n          onPress={() => {\r\n            setIsPhotoAlbumSelectionVisible(false);\r\n          }}\r\n          style={[styles.blurEffect, { zIndex: 3 }]}\r\n        />\r\n\r\n        {/* Touchable avatar image with phone and videocamera buttons*/}\r\n        <AvatarWithCallingButtons\r\n          avatarURL=\"https://fastly.picsum.photos/id/22/4434/3729.jpg?hmac=fjZdkSMZJNFgsoDh8Qo5zdA_nSGUAWvKLyyqmEt2xs0\"\r\n          onAvatarPress={() => {\r\n            props.navigation.navigate(\"AvatarsAndInfoScreen\" as never);\r\n          }}\r\n        />\r\n\r\n        <SubscribersButton\r\n          onPress={() => {\r\n            props.navigation.navigate(\"SubscribersScreen\" as never);\r\n          }}\r\n          subscribersQuantity={channel.subscribersQuantity}\r\n        />\r\n\r\n        {/* Multimedia bar with photo/albums, files, voice, links buttons*/}\r\n        <Multimedia\r\n          isPhotoAlbumSelectionVisible={isPhotoAlbumSelectionVisible}\r\n          setIsPhotoAlbumSelectionVisible={(value: boolean) =>\r\n            setIsPhotoAlbumSelectionVisible(value)\r\n          }\r\n          pressedMultimediaButton={pressedMultimediaButton}\r\n          setPressedMultimediaButton={(value: string) => {\r\n            setPressedMultimediaButton(value);\r\n          }}\r\n          onPhotoPress={(photo: PhotoOrVideo) => {\r\n            tempUser.selectedPhoto = photo;\r\n            props.navigation.navigate(\"PhotoScreen\" as never);\r\n          }}\r\n          onAlbumPress={(item: Album) => {\r\n            if (isAlbumSelectionVisible) {\r\n              if (!selectedAlbums.includes(item)) {\r\n                setSelectedAlbums(selectedAlbums.concat([item]));\r\n              } else {\r\n                setSelectedAlbums(\r\n                  selectedAlbums.filter((photoOrVideo) => photoOrVideo !== item)\r\n                );\r\n              }\r\n            } else {\r\n              tempUser.selectedAlbum = item;\r\n              props.navigation.navigate(\"Album\" as never);\r\n            }\r\n          }}\r\n          onNewAlbumPress={() => {\r\n            props.navigation.navigate(\"NewAlbumScreen\" as never);\r\n          }}\r\n          onAlbumLongPress={(value: Album, event: GestureResponderEvent) => {\r\n            if (!isAlbumSelectionVisible) {\r\n              setLongPressedAlbum(value);\r\n              setPositionYOfLongPressedAlbum(\r\n                event.nativeEvent.pageY + 0.05 * screenHeight\r\n              );\r\n            } else {\r\n              if (!selectedAlbums.includes(value)) {\r\n                setSelectedAlbums(selectedAlbums.concat([value]));\r\n              } else {\r\n                setSelectedAlbums(\r\n                  selectedAlbums.filter(\r\n                    (photoOrVideo) => photoOrVideo !== value\r\n                  )\r\n                );\r\n              }\r\n            }\r\n          }}\r\n          isAlbumSelectionVisible={isAlbumSelectionVisible}\r\n          isAlbumCheckMarkVisible={(value: Album) => {\r\n            return selectedAlbums.includes(value);\r\n          }}\r\n        />\r\n      </ScrollView>\r\n\r\n      <BottomToolBar\r\n        isVisible={isAlbumSelectionVisible}\r\n        onDeletePress={() => {\r\n          setRemovalApprovalText(\"delete selected albums\");\r\n        }}\r\n        onForwardPress={() => {\r\n          alert(\"Forward album...\");\r\n        }}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default MainChannelScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}