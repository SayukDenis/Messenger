{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleButtonList from \"./StyleButtonLIst\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ButtonList = function ButtonList() {\n  var items = [\"Saved message\", \"Look\", \"Notification\", \"Chat folders\", \"Confidentiality\", \"Language\"];\n  return _jsxs(View, {\n    children: [items.map(function (item, index) {\n      return _jsx(View, {\n        children: _jsx(TouchableOpacity, {\n          style: StyleButtonList.button,\n          children: _jsx(Text, {\n            children: item\n          })\n        })\n      }, index);\n    }), _jsx(TouchableOpacity, {\n      style: StyleButtonList.button,\n      children: _jsx(Text, {\n        children: \"Question in Telintik\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: StyleButtonList.button,\n      children: _jsx(Text, {\n        children: \"Ask a Question\"\n      })\n    })]\n  });\n};\nexport default ButtonList;","map":{"version":3,"names":["React","View","TouchableOpacity","Text","StyleButtonList","jsx","_jsx","jsxs","_jsxs","ButtonList","items","children","map","item","index","style","button"],"sources":["D:/project/try1/Messenger/Messenger/Pages/Settings/Center/ButtonLIst/Buttonlist.tsx"],"sourcesContent":["import React from 'react';\r\nimport { View, TouchableOpacity, Text } from 'react-native';\r\nimport StyleButtonList from './StyleButtonLIst';\r\n\r\nconst ButtonList = () => {\r\n    let items: string[] =[\"Saved message\",\"Look\",\"Notification\",\"Chat folders\",\"Confidentiality\",\"Language\",];\r\n    return <View>\r\n    {items.map((item, index) => (\r\n      <View key={index} >\r\n        <TouchableOpacity style={StyleButtonList.button}>\r\n          <Text>{item}</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    ))}\r\n     <TouchableOpacity style={StyleButtonList.button}>\r\n          <Text>Question in Telintik</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={StyleButtonList.button}>\r\n          <Text>Ask a Question</Text>\r\n        </TouchableOpacity>\r\n  </View>\r\n}\r\n\r\nexport default ButtonList;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAE1B,OAAOC,eAAe;AAA0B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEhD,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;EACrB,IAAIC,KAAe,GAAE,CAAC,eAAe,EAAC,MAAM,EAAC,cAAc,EAAC,cAAc,EAAC,iBAAiB,EAAC,UAAU,CAAE;EACzG,OAAOF,KAAA,CAACP,IAAI;IAAAU,QAAA,GACXD,KAAK,CAACE,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK;MAAA,OACrBR,IAAA,CAACL,IAAI;QAAAU,QAAA,EACHL,IAAA,CAACJ,gBAAgB;UAACa,KAAK,EAAEX,eAAe,CAACY,MAAO;UAAAL,QAAA,EAC9CL,IAAA,CAACH,IAAI;YAAAQ,QAAA,EAAEE;UAAI,CAAO;QAAC,CACH;MAAC,GAHVC,KAIL,CAAC;IAAA,CACR,CAAC,EACDR,IAAA,CAACJ,gBAAgB;MAACa,KAAK,EAAEX,eAAe,CAACY,MAAO;MAAAL,QAAA,EAC3CL,IAAA,CAACH,IAAI;QAAAQ,QAAA,EAAC;MAAoB,CAAM;IAAC,CACjB,CAAC,EACnBL,IAAA,CAACJ,gBAAgB;MAACa,KAAK,EAAEX,eAAe,CAACY,MAAO;MAAAL,QAAA,EAC9CL,IAAA,CAACH,IAAI;QAAAQ,QAAA,EAAC;MAAc,CAAM;IAAC,CACX,CAAC;EAAA,CACnB,CAAC;AACT,CAAC;AAED,eAAeF,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}