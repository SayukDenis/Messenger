{"ast":null,"code":"import React from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport styles from \"../Styles\";\nimport MultimediaBar from \"./MultimediaBar\";\nimport Photos from \"./Photos\";\nimport Files from \"./Files\";\nimport Voice from \"./Voice\";\nimport Links from \"./Links\";\nimport Albums from \"./Albums\";\nimport { user } from \"../../DBUser\";\nimport Blur from \"../Blur\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Multimedia = function Multimedia(props) {\n  return _jsxs(View, {\n    style: {\n      zIndex: props.isPhotoAlbumSelectionVisible ? 3 : 0\n    },\n    children: [_jsx(Blur, {\n      visibleWhen: props.isPhotoAlbumSelectionVisible,\n      onPress: function onPress() {\n        props.setIsPhotoAlbumSelectionVisible(false);\n      },\n      style: [styles.blurEffect, {\n        top: 0.05 * Dimensions.get(\"screen\").height\n      }]\n    }), _jsx(MultimediaBar, {\n      isPhotoAlbumSelectionVisible: props.isPhotoAlbumSelectionVisible,\n      onLongPress: function onLongPress(value) {\n        return props.setIsPhotoAlbumSelectionVisible(value);\n      },\n      onPress: function onPress(value) {\n        props.setPressedMultimediaButton(value);\n      }\n    }), props.pressedMultimediaButton == \"Photos\" && _jsx(Photos, {\n      isPhotoSelectionVisible: false,\n      data: user.photosAndVideos,\n      onPress: function onPress(photo) {\n        alert(\"Photo is pressed:\" + photo.url);\n      }\n    }), props.pressedMultimediaButton == \"Albums\" && _jsx(Albums, {\n      onNewAlbumPress: function onNewAlbumPress() {\n        props.onNewAlbumPress();\n      },\n      onAlbumLongPress: function onAlbumLongPress(value) {\n        props.setLongPressedAlbum(value);\n      },\n      onAlbumPress: function onAlbumPress(value) {\n        props.onAlbumPress(value);\n      },\n      setPositionYOfLongPressedAlbum: props.setPositionYOfLongPressedAlbum,\n      isAlbumSelectionVisible: props.isAlbumSelectionVisible,\n      selectedAlbums: props.selectedAlbums,\n      setSelectedAlbums: props.setSelectedAlbums\n    }), props.pressedMultimediaButton == \"Files\" && _jsx(Files, {}), props.pressedMultimediaButton == \"Voice\" && _jsx(Voice, {}), props.pressedMultimediaButton == \"Links\" && _jsx(Links, {})]\n  });\n};\nexport default Multimedia;","map":{"version":3,"names":["React","Dimensions","View","styles","MultimediaBar","Photos","Files","Voice","Links","Albums","user","Blur","jsx","_jsx","jsxs","_jsxs","Multimedia","props","style","zIndex","isPhotoAlbumSelectionVisible","children","visibleWhen","onPress","setIsPhotoAlbumSelectionVisible","blurEffect","top","get","height","onLongPress","value","setPressedMultimediaButton","pressedMultimediaButton","isPhotoSelectionVisible","data","photosAndVideos","photo","alert","url","onNewAlbumPress","onAlbumLongPress","setLongPressedAlbum","onAlbumPress","setPositionYOfLongPressedAlbum","isAlbumSelectionVisible","selectedAlbums","setSelectedAlbums"],"sources":["/home/zatibmag/Desktop/Project/Messenger/Messenger/Pages/Profiles/SemiComponents/MainScreen/Multimedia/Multimedia.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Dimensions, ScrollView, View } from \"react-native\";\r\nimport styles from \"../Styles\";\r\nimport MultimediaBar from \"./MultimediaBar\";\r\nimport Photos from \"./Photos\";\r\nimport Files from \"./Files\";\r\nimport Voice from \"./Voice\";\r\nimport Links from \"./Links\";\r\nimport Albums from \"./Albums\";\r\nimport { Album, PhotoOrVideo, user } from \"../../DBUser\";\r\nimport Blur from \"../Blur\";\r\n\r\ninterface MultimediaProps {\r\n  isPhotoAlbumSelectionVisible: boolean;\r\n  setIsPhotoAlbumSelectionVisible: (value: boolean) => void;\r\n  pressedMultimediaButton: string;\r\n  setPressedMultimediaButton: (value: string) => void;\r\n  onNewAlbumPress: () => void;\r\n  setLongPressedAlbum: (value: Album) => void;\r\n  setPositionYOfLongPressedAlbum: (value: number) => void;\r\n  isAlbumSelectionVisible: boolean;\r\n  selectedAlbums: Array<Album>;\r\n  setSelectedAlbums: (value: Array<Album>) => void;\r\n  onAlbumPress: (value: Album) => void;\r\n}\r\n\r\nconst Multimedia: React.FC<MultimediaProps> = (props) => {\r\n  return (\r\n    <View style={{ zIndex: props.isPhotoAlbumSelectionVisible ? 3 : 0 }}>\r\n      <Blur\r\n        visibleWhen={props.isPhotoAlbumSelectionVisible}\r\n        onPress={() => {\r\n          props.setIsPhotoAlbumSelectionVisible(false);\r\n        }}\r\n        style={[\r\n          styles.blurEffect,\r\n          { top: 0.05 * Dimensions.get(\"screen\").height },\r\n        ]}\r\n      />\r\n\r\n      <MultimediaBar\r\n        isPhotoAlbumSelectionVisible={props.isPhotoAlbumSelectionVisible}\r\n        onLongPress={(value) => props.setIsPhotoAlbumSelectionVisible(value)}\r\n        onPress={(value: string) => {\r\n          props.setPressedMultimediaButton(value);\r\n        }}\r\n      />\r\n\r\n      {props.pressedMultimediaButton == \"Photos\" && (\r\n        <Photos\r\n          isPhotoSelectionVisible={false}\r\n          data={user.photosAndVideos}\r\n          onPress={(photo: PhotoOrVideo) => {\r\n            alert(\"Photo is pressed:\" + photo.url);\r\n          }}\r\n        />\r\n      )}\r\n      {props.pressedMultimediaButton == \"Albums\" && (\r\n        <Albums\r\n          onNewAlbumPress={() => {\r\n            props.onNewAlbumPress();\r\n          }}\r\n          onAlbumLongPress={(value: Album) => {\r\n            props.setLongPressedAlbum(value);\r\n          }}\r\n          onAlbumPress={(value: Album) => {\r\n            props.onAlbumPress(value);\r\n          }}\r\n          setPositionYOfLongPressedAlbum={props.setPositionYOfLongPressedAlbum}\r\n          isAlbumSelectionVisible={props.isAlbumSelectionVisible}\r\n          selectedAlbums={props.selectedAlbums}\r\n          setSelectedAlbums={props.setSelectedAlbums}\r\n        />\r\n      )}\r\n      {props.pressedMultimediaButton == \"Files\" && <Files />}\r\n      {props.pressedMultimediaButton == \"Voice\" && <Voice />}\r\n      {props.pressedMultimediaButton == \"Links\" && <Links />}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Multimedia;\r\n"],"mappings":"AAEA,OAAOA,KAAK,MAA+B,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAEnD,OAAOC,MAAM;AACb,OAAOC,aAAa;AACpB,OAAOC,MAAM;AACb,OAAOC,KAAK;AACZ,OAAOC,KAAK;AACZ,OAAOC,KAAK;AACZ,OAAOC,MAAM;AACb,SAA8BC,IAAI;AAClC,OAAOC,IAAI;AAAgB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAgB3B,IAAMC,UAAqC,GAAG,SAAxCA,UAAqCA,CAAIC,KAAK,EAAK;EACvD,OACEF,KAAA,CAACb,IAAI;IAACgB,KAAK,EAAE;MAAEC,MAAM,EAAEF,KAAK,CAACG,4BAA4B,GAAG,CAAC,GAAG;IAAE,CAAE;IAAAC,QAAA,GAClER,IAAA,CAACF,IAAI;MACHW,WAAW,EAAEL,KAAK,CAACG,4BAA6B;MAChDG,OAAO,EAAE,SAAAA,QAAA,EAAM;QACbN,KAAK,CAACO,+BAA+B,CAAC,KAAK,CAAC;MAC9C,CAAE;MACFN,KAAK,EAAE,CACLf,MAAM,CAACsB,UAAU,EACjB;QAAEC,GAAG,EAAE,IAAI,GAAGzB,UAAU,CAAC0B,GAAG,CAAC,QAAQ,CAAC,CAACC;MAAO,CAAC;IAC/C,CACH,CAAC,EAEFf,IAAA,CAACT,aAAa;MACZgB,4BAA4B,EAAEH,KAAK,CAACG,4BAA6B;MACjES,WAAW,EAAE,SAAAA,YAACC,KAAK;QAAA,OAAKb,KAAK,CAACO,+BAA+B,CAACM,KAAK,CAAC;MAAA,CAAC;MACrEP,OAAO,EAAE,SAAAA,QAACO,KAAa,EAAK;QAC1Bb,KAAK,CAACc,0BAA0B,CAACD,KAAK,CAAC;MACzC;IAAE,CACH,CAAC,EAEDb,KAAK,CAACe,uBAAuB,IAAI,QAAQ,IACxCnB,IAAA,CAACR,MAAM;MACL4B,uBAAuB,EAAE,KAAM;MAC/BC,IAAI,EAAExB,IAAI,CAACyB,eAAgB;MAC3BZ,OAAO,EAAE,SAAAA,QAACa,KAAmB,EAAK;QAChCC,KAAK,CAAC,mBAAmB,GAAGD,KAAK,CAACE,GAAG,CAAC;MACxC;IAAE,CACH,CACF,EACArB,KAAK,CAACe,uBAAuB,IAAI,QAAQ,IACxCnB,IAAA,CAACJ,MAAM;MACL8B,eAAe,EAAE,SAAAA,gBAAA,EAAM;QACrBtB,KAAK,CAACsB,eAAe,CAAC,CAAC;MACzB,CAAE;MACFC,gBAAgB,EAAE,SAAAA,iBAACV,KAAY,EAAK;QAClCb,KAAK,CAACwB,mBAAmB,CAACX,KAAK,CAAC;MAClC,CAAE;MACFY,YAAY,EAAE,SAAAA,aAACZ,KAAY,EAAK;QAC9Bb,KAAK,CAACyB,YAAY,CAACZ,KAAK,CAAC;MAC3B,CAAE;MACFa,8BAA8B,EAAE1B,KAAK,CAAC0B,8BAA+B;MACrEC,uBAAuB,EAAE3B,KAAK,CAAC2B,uBAAwB;MACvDC,cAAc,EAAE5B,KAAK,CAAC4B,cAAe;MACrCC,iBAAiB,EAAE7B,KAAK,CAAC6B;IAAkB,CAC5C,CACF,EACA7B,KAAK,CAACe,uBAAuB,IAAI,OAAO,IAAInB,IAAA,CAACP,KAAK,IAAE,CAAC,EACrDW,KAAK,CAACe,uBAAuB,IAAI,OAAO,IAAInB,IAAA,CAACN,KAAK,IAAE,CAAC,EACrDU,KAAK,CAACe,uBAAuB,IAAI,OAAO,IAAInB,IAAA,CAACL,KAAK,IAAE,CAAC;EAAA,CAClD,CAAC;AAEX,CAAC;AAED,eAAeQ,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}