{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport { CodedError } from 'expo-modules-core';\nexport var ClipboardUnavailableException = function (_CodedError) {\n  _inherits(ClipboardUnavailableException, _CodedError);\n  var _super = _createSuper(ClipboardUnavailableException);\n  function ClipboardUnavailableException() {\n    _classCallCheck(this, ClipboardUnavailableException);\n    return _super.call(this, 'ERR_CLIPBOARD_UNAVAILABLE', \"The 'AsyncClipboard' API is not available on this browser\");\n  }\n  return _createClass(ClipboardUnavailableException);\n}(CodedError);\nexport var CopyFailureException = function (_CodedError2) {\n  _inherits(CopyFailureException, _CodedError2);\n  var _super2 = _createSuper(CopyFailureException);\n  function CopyFailureException(cause) {\n    _classCallCheck(this, CopyFailureException);\n    return _super2.call(this, 'ERR_COPY_FAILURE', `Failed to copy to clipboard: ${cause}`);\n  }\n  return _createClass(CopyFailureException);\n}(CodedError);\nexport var PasteFailureException = function (_CodedError3) {\n  _inherits(PasteFailureException, _CodedError3);\n  var _super3 = _createSuper(PasteFailureException);\n  function PasteFailureException(cause) {\n    _classCallCheck(this, PasteFailureException);\n    return _super3.call(this, 'ERR_COPY_FAILURE', `Failed to paste from clipboard: ${cause}`);\n  }\n  return _createClass(PasteFailureException);\n}(CodedError);\nexport var NoPermissionException = function (_CodedError4) {\n  _inherits(NoPermissionException, _CodedError4);\n  var _super4 = _createSuper(NoPermissionException);\n  function NoPermissionException() {\n    _classCallCheck(this, NoPermissionException);\n    return _super4.call(this, 'ERR_NO_PERMISSION', 'User denied permission to access clipboard');\n  }\n  return _createClass(NoPermissionException);\n}(CodedError);","map":{"version":3,"names":["CodedError","ClipboardUnavailableException","_CodedError","_inherits","_super","_createSuper","_classCallCheck","call","_createClass","CopyFailureException","_CodedError2","_super2","cause","PasteFailureException","_CodedError3","_super3","NoPermissionException","_CodedError4","_super4"],"sources":["C:\\Users\\Admin\\Project\\Project\\Messenger\\Messenger\\node_modules\\expo-clipboard\\src\\web\\Exceptions.ts"],"sourcesContent":["import { CodedError } from 'expo-modules-core';\n\nexport class ClipboardUnavailableException extends CodedError {\n  constructor() {\n    super('ERR_CLIPBOARD_UNAVAILABLE', \"The 'AsyncClipboard' API is not available on this browser\");\n  }\n}\n\nexport class CopyFailureException extends CodedError {\n  constructor(cause: string) {\n    super('ERR_COPY_FAILURE', `Failed to copy to clipboard: ${cause}`);\n  }\n}\n\nexport class PasteFailureException extends CodedError {\n  constructor(cause: string) {\n    super('ERR_COPY_FAILURE', `Failed to paste from clipboard: ${cause}`);\n  }\n}\n\nexport class NoPermissionException extends CodedError {\n  constructor() {\n    super('ERR_NO_PERMISSION', 'User denied permission to access clipboard');\n  }\n}\n"],"mappings":";;;;;;;AAAA,SAASA,UAAU,QAAQ,mBAAmB;AAE9C,WAAaC,6BAA8B,aAAAC,WAAA;EAAAC,SAAA,CAAAF,6BAAA,EAAAC,WAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,6BAAA;EACzC,SAAAA,8BAAA;IAAAK,eAAA,OAAAL,6BAAA;IAAA,OAAAG,MAAA,CAAAG,IAAA,OACQ,2BAA2B,EAAE,2DAA2D;EAChG;EAAC,OAAAC,YAAA,CAAAP,6BAAA;AAAA,EAHgDD,UAAU;AAM7D,WAAaS,oBAAqB,aAAAC,YAAA;EAAAP,SAAA,CAAAM,oBAAA,EAAAC,YAAA;EAAA,IAAAC,OAAA,GAAAN,YAAA,CAAAI,oBAAA;EAChC,SAAAA,qBAAYG,KAAa;IAAAN,eAAA,OAAAG,oBAAA;IAAA,OAAAE,OAAA,CAAAJ,IAAA,OACjB,kBAAkB,EAAE,gCAAgCK,KAAK,EAAE;EACnE;EAAC,OAAAJ,YAAA,CAAAC,oBAAA;AAAA,EAHuCT,UAAU;AAMpD,WAAaa,qBAAsB,aAAAC,YAAA;EAAAX,SAAA,CAAAU,qBAAA,EAAAC,YAAA;EAAA,IAAAC,OAAA,GAAAV,YAAA,CAAAQ,qBAAA;EACjC,SAAAA,sBAAYD,KAAa;IAAAN,eAAA,OAAAO,qBAAA;IAAA,OAAAE,OAAA,CAAAR,IAAA,OACjB,kBAAkB,EAAE,mCAAmCK,KAAK,EAAE;EACtE;EAAC,OAAAJ,YAAA,CAAAK,qBAAA;AAAA,EAHwCb,UAAU;AAMrD,WAAagB,qBAAsB,aAAAC,YAAA;EAAAd,SAAA,CAAAa,qBAAA,EAAAC,YAAA;EAAA,IAAAC,OAAA,GAAAb,YAAA,CAAAW,qBAAA;EACjC,SAAAA,sBAAA;IAAAV,eAAA,OAAAU,qBAAA;IAAA,OAAAE,OAAA,CAAAX,IAAA,OACQ,mBAAmB,EAAE,4CAA4C;EACzE;EAAC,OAAAC,YAAA,CAAAQ,qBAAA;AAAA,EAHwChB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}