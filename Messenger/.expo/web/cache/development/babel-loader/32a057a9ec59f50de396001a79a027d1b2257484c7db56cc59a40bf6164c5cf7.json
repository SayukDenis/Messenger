{"ast":null,"code":"import React from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { footerstyles } from \"../../Styles/FooterStyle\";\nimport FolderModalWindow from \"../Footer containers/FolderModalWindow\";\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\nimport { useSelector } from \"react-redux\";\nimport BlurAll from \"../../../SemiComponents/BlurAll\";\nimport CountOfUnreadMessageOnFolderComponent from \"../Footer containers/CountOfUnreadMessageOnFolderComponent\";\nimport { screenWidth } from \"../../Constants/ConstantsForChatlist\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  screenHeight = _Dimensions$get.height;\nvar ModalWindowFolderState = function ModalWindowFolderState(_ref) {\n  var isVisibleForModalFolder = _ref.isVisibleForModalFolder,\n    animationState = _ref.animationState,\n    selectedLongPressFolder = _ref.selectedLongPressFolder,\n    selectedFolder = _ref.selectedFolder,\n    positionX = _ref.positionX,\n    positionXInContainer = _ref.positionXInContainer,\n    widths = _ref.widths,\n    setAnimation = _ref.setAnimation,\n    handlePress = _ref.handlePress,\n    handlePressOut = _ref.handlePressOut;\n  var selfProfile = useSelector(function (state) {\n    return state.selfProfileUser;\n  });\n  var currentTab = useSelector(function (state) {\n    var Tab = state.chatListReducer.currentTab.currentTab;\n    return Tab;\n  });\n  if (!animationState) {\n    return null;\n  }\n  return _jsxs(BlurAll, {\n    handlePress: handlePress,\n    handlePressOut: handlePressOut,\n    children: [_jsx(FolderModalWindow, {\n      folder: selfProfile.tabs[currentTab].folders[selectedLongPressFolder],\n      positionX: positionX,\n      positionXInContainer: positionXInContainer,\n      widthOfFolder: widths.current[selectedLongPressFolder],\n      exit: isVisibleForModalFolder,\n      booleanRefForEndAnimation: setAnimation\n    }), _jsxs(TouchableOpacity, {\n      activeOpacity: 1,\n      style: [{\n        zIndex: 10,\n        position: \"absolute\",\n        left: positionX - positionXInContainer,\n        bottom: Platform.OS == \"ios\" && useSafeAreaInsets().bottom != 0 ? screenHeight * 0.0049 + useSafeAreaInsets().bottom : screenHeight * 0.0165,\n        borderRadius: 100,\n        justifyContent: \"center\",\n        height: screenHeight * 0.035,\n        overflow: \"hidden\",\n        alignSelf: \"center\",\n        flexDirection: \"row\"\n      }],\n      children: [_jsx(View, {\n        style: {\n          position: \"absolute\",\n          height: screenHeight * 0.035,\n          width: screenWidth * 0.5,\n          backgroundColor: \"#CBB2FF\"\n        }\n      }), _jsx(Text, {\n        style: [footerstyles.textPosition, selectedLongPressFolder == selectedFolder ? footerstyles.selectedText : null],\n        children: selfProfile.tabs[currentTab].folders[selectedLongPressFolder].folderName\n      }), _jsx(View, {\n        style: {\n          flexDirection: \"row\",\n          marginRight: 5\n        },\n        children: _jsx(CountOfUnreadMessageOnFolderComponent, {\n          folder: selfProfile.tabs[currentTab].folders[selectedLongPressFolder],\n          isSelected: selectedLongPressFolder == selectedFolder\n        })\n      })]\n    })]\n  });\n};\nexport default ModalWindowFolderState;","map":{"version":3,"names":["React","TouchableOpacity","Text","Dimensions","Platform","View","footerstyles","FolderModalWindow","useSafeAreaInsets","useSelector","BlurAll","CountOfUnreadMessageOnFolderComponent","screenWidth","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","screenHeight","height","ModalWindowFolderState","_ref","isVisibleForModalFolder","animationState","selectedLongPressFolder","selectedFolder","positionX","positionXInContainer","widths","setAnimation","handlePress","handlePressOut","selfProfile","state","selfProfileUser","currentTab","Tab","chatListReducer","children","folder","tabs","folders","widthOfFolder","current","exit","booleanRefForEndAnimation","activeOpacity","style","zIndex","position","left","bottom","OS","borderRadius","justifyContent","overflow","alignSelf","flexDirection","width","backgroundColor","textPosition","selectedText","folderName","marginRight","isSelected"],"sources":["D:/project/1project/Messenger/Messenger/Pages/ChatList/Components/List of folders containers/ModalWindowFolderState.tsx"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  TouchableOpacity,\r\n  StatusBar,\r\n  Text,\r\n  Dimensions,\r\n  Platform,\r\n  View,\r\n} from \"react-native\";\r\nimport { BlurView } from \"expo-blur\";\r\nimport { footerstyles } from \"../../Styles/FooterStyle\";\r\nimport FolderModalWindow from \"../Footer containers/FolderModalWindow\";\r\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\r\nimport SelfProfile from \"../../../../dao/Models/SelfProfile\";\r\nimport { useSelector } from \"react-redux\";\r\nimport BlurAll from \"../../../SemiComponents/BlurAll\";\r\nimport FolderContainer from \"../Footer containers/FolderContainer\";\r\nimport CountOfUnreadMessageOnFolderComponent from \"../Footer containers/CountOfUnreadMessageOnFolderComponent\";\r\nimport { screenWidth } from \"../../Constants/ConstantsForChatlist\";\r\nconst { height: screenHeight } = Dimensions.get(\"window\");\r\n\r\ninterface ModalWindowProps {\r\n  isVisibleForModalFolder: boolean;\r\n  animationState: boolean;\r\n  selectedLongPressFolder: number;\r\n  selectedFolder: number;\r\n  positionX: number;\r\n  positionXInContainer: number;\r\n  widths: any;\r\n  setAnimation: () => void;\r\n  handlePress: () => void;\r\n  handlePressOut: () => void;\r\n}\r\n\r\nconst ModalWindowFolderState: React.FC<ModalWindowProps> = ({\r\n  isVisibleForModalFolder,\r\n  animationState,\r\n  selectedLongPressFolder,\r\n  selectedFolder,\r\n  positionX,\r\n  positionXInContainer,\r\n  widths,\r\n  setAnimation,\r\n  handlePress,\r\n  handlePressOut,\r\n}) => {\r\n  const selfProfile: SelfProfile = useSelector((state: any) => {\r\n    return state.selfProfileUser;\r\n  });\r\n  const currentTab = useSelector((state: any) => {\r\n    let Tab = state.chatListReducer.currentTab.currentTab;\r\n    return Tab;\r\n  });\r\n  if (!animationState) {\r\n    return null;\r\n  }\r\n  return (\r\n    <BlurAll handlePress={handlePress} handlePressOut={handlePressOut}>\r\n      <FolderModalWindow\r\n        folder={selfProfile.tabs[currentTab].folders[selectedLongPressFolder]}\r\n        positionX={positionX}\r\n        positionXInContainer={positionXInContainer}\r\n        widthOfFolder={widths.current[selectedLongPressFolder]}\r\n        exit={isVisibleForModalFolder}\r\n        booleanRefForEndAnimation={setAnimation}\r\n      />\r\n      <TouchableOpacity\r\n        activeOpacity={1}\r\n        style={[\r\n          {\r\n            zIndex: 10,\r\n            position: \"absolute\",\r\n            left: positionX - positionXInContainer,\r\n            bottom:\r\n              Platform.OS == \"ios\" && useSafeAreaInsets().bottom != 0\r\n                ? screenHeight * 0.0049 + useSafeAreaInsets().bottom\r\n                : screenHeight * 0.0165,\r\n            borderRadius: 100,\r\n            justifyContent: \"center\",\r\n            height: screenHeight * 0.035,\r\n            overflow: \"hidden\",\r\n\r\n            alignSelf: \"center\",\r\n            flexDirection: \"row\",\r\n          },\r\n        ]}\r\n      >\r\n        <View\r\n          style={{\r\n            position: \"absolute\",\r\n            height: screenHeight * 0.035,\r\n            width: screenWidth * 0.5,\r\n            backgroundColor: \"#CBB2FF\",\r\n          \r\n          }}\r\n        />\r\n        <Text\r\n          style={[\r\n            footerstyles.textPosition,\r\n            selectedLongPressFolder == selectedFolder\r\n              ? footerstyles.selectedText\r\n              : null,\r\n          ]}\r\n        >\r\n          {\r\n            selfProfile.tabs[currentTab].folders[selectedLongPressFolder]\r\n              .folderName\r\n          }\r\n        </Text>\r\n\r\n        <View style={{ flexDirection: \"row\", marginRight: 5 }}>\r\n          <CountOfUnreadMessageOnFolderComponent\r\n            folder={\r\n              selfProfile.tabs[currentTab].folders[selectedLongPressFolder]\r\n            }\r\n            isSelected={selectedLongPressFolder == selectedFolder}\r\n          />\r\n        </View>\r\n      </TouchableOpacity>\r\n    </BlurAll>\r\n  );\r\n};\r\n\r\nexport default ModalWindowFolderState;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}