{"ast":null,"code":"import _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty2(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport React from 'react';\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport WorkletEventHandler from \"../reanimated2/WorkletEventHandler\";\nimport setAndForwardRef from \"./setAndForwardRef\";\nimport \"../reanimated2/layoutReanimation/animationsManager\";\nimport invariant from 'invariant';\nimport { adaptViewConfig } from \"../ConfigHelper\";\nimport { RNRenderer } from \"../reanimated2/platform-specific/RNRenderer\";\nimport { configureLayoutAnimations, enableLayoutAnimations, startMapper, stopMapper } from \"../reanimated2/core\";\nimport { isJest, isChromeDebugger, shouldBeUseWeb, isWeb } from \"../reanimated2/PlatformChecker\";\nimport { initialUpdaterRun } from \"../reanimated2/animation\";\nimport { SharedTransition, LayoutAnimationType } from \"../reanimated2/layoutReanimation\";\nimport { makeViewDescriptorsSet } from \"../reanimated2/ViewDescriptorsSet\";\nimport { getShadowNodeWrapperFromRef } from \"../reanimated2/fabricUtils\";\nimport updateProps from \"../reanimated2/UpdateProps\";\nimport NativeReanimatedModule from \"../reanimated2/NativeReanimated\";\nimport { isSharedValue } from \"../reanimated2/utils\";\nimport { removeFromPropsRegistry } from \"../reanimated2/PropsRegistry\";\nimport { JSPropUpdater } from \"./JSPropUpdater\";\nimport { getReduceMotionFromConfig } from \"../reanimated2/animation/util\";\nimport { maybeBuild } from \"../animationBuilder\";\nimport { flattenArray, has } from \"./utils\";\nvar IS_WEB = isWeb();\nfunction dummyListener() {}\nfunction onlyAnimatedStyles(styles) {\n  return styles.filter(function (style) {\n    return style === null || style === void 0 ? void 0 : style.viewDescriptors;\n  });\n}\nfunction isSameAnimatedStyle(style1, style2) {\n  return (style1 === null || style1 === void 0 ? void 0 : style1.viewsRef) === (style2 === null || style2 === void 0 ? void 0 : style2.viewsRef);\n}\nvar isSameAnimatedProps = isSameAnimatedStyle;\nfunction isInlineStyleTransform(transform) {\n  if (!transform) {\n    return false;\n  }\n  return transform.some(function (t) {\n    return hasInlineStyles(t);\n  });\n}\nfunction hasInlineStyles(style) {\n  if (!style) {\n    return false;\n  }\n  return Object.keys(style).some(function (key) {\n    var styleValue = style[key];\n    return isSharedValue(styleValue) || key === 'transform' && isInlineStyleTransform(styleValue);\n  });\n}\nfunction extractSharedValuesMapFromProps(props) {\n  var inlineProps = {};\n  for (var key in props) {\n    var value = props[key];\n    if (key === 'style') {\n      var _props$style;\n      var styles = flattenArray((_props$style = props.style) != null ? _props$style : []);\n      styles.forEach(function (style) {\n        if (!style) {\n          return;\n        }\n        for (var _ref3 of Object.entries(style)) {\n          var _ref4 = _slicedToArray(_ref3, 2);\n          var _key = _ref4[0];\n          var styleValue = _ref4[1];\n          if (isSharedValue(styleValue)) {\n            inlineProps[_key] = styleValue;\n          } else if (_key === 'transform' && isInlineStyleTransform(styleValue)) {\n            inlineProps[_key] = styleValue;\n          }\n        }\n      });\n    } else if (isSharedValue(value)) {\n      inlineProps[key] = value;\n    }\n  }\n  return inlineProps;\n}\nfunction inlinePropsHasChanged(styles1, styles2) {\n  if (Object.keys(styles1).length !== Object.keys(styles2).length) {\n    return true;\n  }\n  for (var key of Object.keys(styles1)) {\n    if (styles1[key] !== styles2[key]) return true;\n  }\n  return false;\n}\nfunction getInlinePropsUpdate(inlineProps) {\n  'worklet';\n\n  var update = {};\n  for (var _ref5 of Object.entries(inlineProps)) {\n    var _ref6 = _slicedToArray(_ref5, 2);\n    var key = _ref6[0];\n    var styleValue = _ref6[1];\n    if (key === 'transform') {\n      update[key] = styleValue.map(function (transform) {\n        return getInlinePropsUpdate(transform);\n      });\n    } else if (isSharedValue(styleValue)) {\n      update[key] = styleValue.value;\n    } else {\n      update[key] = styleValue;\n    }\n  }\n  return update;\n}\nexport default function createAnimatedComponent(Component, options) {\n  invariant(typeof Component !== 'function' || Component.prototype && Component.prototype.isReactComponent, `Looks like you're passing a function component \\`${Component.name}\\` to \\`createAnimatedComponent\\` function which supports only class components. Please wrap your function component with \\`React.forwardRef()\\` or use a class component instead.`);\n  var AnimatedComponent = function (_React$Component) {\n    _inherits(AnimatedComponent, _React$Component);\n    var _super = _createSuper(AnimatedComponent);\n    function AnimatedComponent(props) {\n      var _this;\n      _classCallCheck(this, AnimatedComponent);\n      _this = _super.call(this, props);\n      _defineProperty(_assertThisInitialized(_this), \"_styles\", null);\n      _defineProperty(_assertThisInitialized(_this), \"_animatedProps\", void 0);\n      _defineProperty(_assertThisInitialized(_this), \"_viewTag\", -1);\n      _defineProperty(_assertThisInitialized(_this), \"_isFirstRender\", true);\n      _defineProperty(_assertThisInitialized(_this), \"animatedStyle\", {\n        value: {}\n      });\n      _defineProperty(_assertThisInitialized(_this), \"initialStyle\", {});\n      _defineProperty(_assertThisInitialized(_this), \"_component\", null);\n      _defineProperty(_assertThisInitialized(_this), \"_inlinePropsViewDescriptors\", null);\n      _defineProperty(_assertThisInitialized(_this), \"_inlinePropsMapperId\", null);\n      _defineProperty(_assertThisInitialized(_this), \"_inlineProps\", {});\n      _defineProperty(_assertThisInitialized(_this), \"_sharedElementTransition\", null);\n      _defineProperty(_assertThisInitialized(_this), \"_JSPropUpdater\", new JSPropUpdater());\n      _defineProperty(_assertThisInitialized(_this), \"_setComponentRef\", setAndForwardRef({\n        getForwardedRef: function getForwardedRef() {\n          return _this.props.forwardedRef;\n        },\n        setLocalRef: function setLocalRef(ref) {\n          var tag = IS_WEB ? ref : findNodeHandle(ref);\n          var _this$props3 = _this.props,\n            layout = _this$props3.layout,\n            entering = _this$props3.entering,\n            exiting = _this$props3.exiting,\n            sharedTransitionTag = _this$props3.sharedTransitionTag;\n          if ((layout || entering || exiting || sharedTransitionTag) && tag != null) {\n            if (!shouldBeUseWeb()) {\n              enableLayoutAnimations(true, false);\n            }\n            if (layout) {\n              configureLayoutAnimations(tag, LayoutAnimationType.LAYOUT, maybeBuild(layout, undefined, AnimatedComponent.displayName));\n            }\n            if (entering) {\n              var _this$props;\n              configureLayoutAnimations(tag, LayoutAnimationType.ENTERING, maybeBuild(entering, (_this$props = _this.props) === null || _this$props === void 0 ? void 0 : _this$props.style, AnimatedComponent.displayName));\n            }\n            if (exiting) {\n              var reduceMotionInExiting = 'getReduceMotion' in exiting && typeof exiting.getReduceMotion === 'function' ? getReduceMotionFromConfig(exiting.getReduceMotion()) : getReduceMotionFromConfig();\n              if (!reduceMotionInExiting) {\n                var _this$props2;\n                configureLayoutAnimations(tag, LayoutAnimationType.EXITING, maybeBuild(exiting, (_this$props2 = _this.props) === null || _this$props2 === void 0 ? void 0 : _this$props2.style, AnimatedComponent.displayName));\n              }\n            }\n            if (sharedTransitionTag && !IS_WEB) {\n              var _this$props$sharedTra;\n              var sharedElementTransition = (_this$props$sharedTra = _this.props.sharedTransitionStyle) != null ? _this$props$sharedTra : new SharedTransition();\n              var reduceMotionInTransition = getReduceMotionFromConfig(sharedElementTransition.getReduceMotion());\n              if (!reduceMotionInTransition) {\n                sharedElementTransition.registerTransition(tag, sharedTransitionTag);\n                _this._sharedElementTransition = sharedElementTransition;\n              }\n            }\n          }\n          if (ref !== _this._component) {\n            _this._component = ref;\n          }\n        }\n      }));\n      if (isJest()) {\n        _this.animatedStyle = {\n          value: {}\n        };\n      }\n      return _this;\n    }\n    _createClass(AnimatedComponent, [{\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        var _this$_sharedElementT;\n        this._detachNativeEvents();\n        this._JSPropUpdater.removeOnJSPropsChangeListener(this);\n        this._detachStyles();\n        this._detachInlineProps();\n        (_this$_sharedElementT = this._sharedElementTransition) === null || _this$_sharedElementT === void 0 ? void 0 : _this$_sharedElementT.unregisterTransition(this._viewTag);\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this._attachNativeEvents();\n        this._JSPropUpdater.addOnJSPropsChangeListener(this);\n        this._attachAnimatedStyles();\n        this._attachInlineProps();\n      }\n    }, {\n      key: \"_getEventViewRef\",\n      value: function _getEventViewRef() {\n        var _this$_component, _getScrollableNode, _ref;\n        return (_this$_component = this._component) !== null && _this$_component !== void 0 && _this$_component.getScrollableNode ? (_getScrollableNode = (_ref = this._component).getScrollableNode) === null || _getScrollableNode === void 0 ? void 0 : _getScrollableNode.call(_ref) : this._component;\n      }\n    }, {\n      key: \"_attachNativeEvents\",\n      value: function _attachNativeEvents() {\n        var node = this._getEventViewRef();\n        var viewTag = null;\n        for (var key in this.props) {\n          var prop = this.props[key];\n          if (has('current', prop) && prop.current instanceof WorkletEventHandler) {\n            if (viewTag === null) {\n              viewTag = findNodeHandle(options !== null && options !== void 0 && options.setNativeProps ? this : node);\n            }\n            prop.current.registerForEvents(viewTag, key);\n          }\n        }\n      }\n    }, {\n      key: \"_detachNativeEvents\",\n      value: function _detachNativeEvents() {\n        for (var key in this.props) {\n          var prop = this.props[key];\n          if (has('current', prop) && prop.current instanceof WorkletEventHandler) {\n            prop.current.unregisterFromEvents();\n          }\n        }\n      }\n    }, {\n      key: \"_detachStyles\",\n      value: function _detachStyles() {\n        if (IS_WEB && this._styles !== null) {\n          for (var style of this._styles) {\n            if (style !== null && style !== void 0 && style.viewsRef) {\n              style.viewsRef.remove(this);\n            }\n          }\n        } else if (this._viewTag !== -1 && this._styles !== null) {\n          var _this$props$animatedP;\n          for (var _style of this._styles) {\n            _style.viewDescriptors.remove(this._viewTag);\n          }\n          if ((_this$props$animatedP = this.props.animatedProps) !== null && _this$props$animatedP !== void 0 && _this$props$animatedP.viewDescriptors) {\n            this.props.animatedProps.viewDescriptors.remove(this._viewTag);\n          }\n          if (global._IS_FABRIC) {\n            removeFromPropsRegistry(this._viewTag);\n          }\n        }\n      }\n    }, {\n      key: \"_reattachNativeEvents\",\n      value: function _reattachNativeEvents(prevProps) {\n        for (var key in prevProps) {\n          var prop = this.props[key];\n          if (has('current', prop) && prop.current instanceof WorkletEventHandler && prop.current.reattachNeeded) {\n            prop.current.unregisterFromEvents();\n          }\n        }\n        var viewTag = null;\n        for (var _key2 in this.props) {\n          var _prop = this.props[_key2];\n          if (has('current', _prop) && _prop.current instanceof WorkletEventHandler && _prop.current.reattachNeeded) {\n            if (viewTag === null) {\n              var node = this._getEventViewRef();\n              viewTag = findNodeHandle(options !== null && options !== void 0 && options.setNativeProps ? this : node);\n            }\n            _prop.current.registerForEvents(viewTag, _key2);\n            _prop.current.reattachNeeded = false;\n          }\n        }\n      }\n    }, {\n      key: \"_updateFromNative\",\n      value: function _updateFromNative(props) {\n        if (options !== null && options !== void 0 && options.setNativeProps) {\n          options.setNativeProps(this._component, props);\n        } else {\n          var _this$_component2, _this$_component2$set;\n          (_this$_component2 = this._component) === null || _this$_component2 === void 0 ? void 0 : (_this$_component2$set = _this$_component2.setNativeProps) === null || _this$_component2$set === void 0 ? void 0 : _this$_component2$set.call(_this$_component2, props);\n        }\n      }\n    }, {\n      key: \"_getViewInfo\",\n      value: function _getViewInfo() {\n        var _this$_component3, _getAnimatableRef, _ref2;\n        var viewTag;\n        var viewName;\n        var shadowNodeWrapper = null;\n        var viewConfig;\n        var component = (_this$_component3 = this._component) !== null && _this$_component3 !== void 0 && _this$_component3.getAnimatableRef ? (_getAnimatableRef = (_ref2 = this._component).getAnimatableRef) === null || _getAnimatableRef === void 0 ? void 0 : _getAnimatableRef.call(_ref2) : this;\n        if (IS_WEB) {\n          viewTag = this._component;\n          viewName = null;\n          shadowNodeWrapper = null;\n          viewConfig = null;\n        } else {\n          var _hostInstance$viewCon;\n          var hostInstance = RNRenderer.findHostInstance_DEPRECATED(component);\n          if (!hostInstance) {\n            throw new Error('[Reanimated] Cannot find host instance for this component. Maybe it renders nothing?');\n          }\n          viewTag = hostInstance === null || hostInstance === void 0 ? void 0 : hostInstance._nativeTag;\n          viewName = hostInstance === null || hostInstance === void 0 ? void 0 : (_hostInstance$viewCon = hostInstance.viewConfig) === null || _hostInstance$viewCon === void 0 ? void 0 : _hostInstance$viewCon.uiViewClassName;\n          viewConfig = hostInstance === null || hostInstance === void 0 ? void 0 : hostInstance.viewConfig;\n          if (global._IS_FABRIC) {\n            shadowNodeWrapper = getShadowNodeWrapperFromRef(this);\n          }\n        }\n        return {\n          viewTag: viewTag,\n          viewName: viewName,\n          shadowNodeWrapper: shadowNodeWrapper,\n          viewConfig: viewConfig\n        };\n      }\n    }, {\n      key: \"_attachAnimatedStyles\",\n      value: function _attachAnimatedStyles() {\n        var _this2 = this;\n        var _this$props$animatedP2, _this$props$animatedP3;\n        var styles = this.props.style ? onlyAnimatedStyles(flattenArray(this.props.style)) : [];\n        var prevStyles = this._styles;\n        this._styles = styles;\n        var prevAnimatedProps = this._animatedProps;\n        this._animatedProps = this.props.animatedProps;\n        var _this$_getViewInfo = this._getViewInfo(),\n          viewTag = _this$_getViewInfo.viewTag,\n          viewName = _this$_getViewInfo.viewName,\n          shadowNodeWrapper = _this$_getViewInfo.shadowNodeWrapper,\n          viewConfig = _this$_getViewInfo.viewConfig;\n        var hasReanimated2Props = ((_this$props$animatedP2 = this.props.animatedProps) === null || _this$props$animatedP2 === void 0 ? void 0 : _this$props$animatedP2.viewDescriptors) || styles.length;\n        if (hasReanimated2Props && viewConfig) {\n          adaptViewConfig(viewConfig);\n        }\n        this._viewTag = viewTag;\n        if (prevStyles) {\n          var hasOneSameStyle = styles.length === 1 && prevStyles.length === 1 && isSameAnimatedStyle(styles[0], prevStyles[0]);\n          if (!hasOneSameStyle) {\n            var _loop = function _loop(prevStyle) {\n              var isPresent = styles.some(function (style) {\n                return isSameAnimatedStyle(style, prevStyle);\n              });\n              if (!isPresent) {\n                prevStyle.viewDescriptors.remove(viewTag);\n              }\n            };\n            for (var prevStyle of prevStyles) {\n              _loop(prevStyle);\n            }\n          }\n        }\n        styles.forEach(function (style) {\n          style.viewDescriptors.add({\n            tag: viewTag,\n            name: viewName,\n            shadowNodeWrapper: shadowNodeWrapper\n          });\n          if (isJest()) {\n            _this2.animatedStyle.value = _objectSpread(_objectSpread({}, _this2.animatedStyle.value), style.initial.value);\n            style.animatedStyle.current = _this2.animatedStyle;\n          }\n        });\n        if (prevAnimatedProps && !isSameAnimatedProps(prevAnimatedProps, this.props.animatedProps)) {\n          prevAnimatedProps.viewDescriptors.remove(viewTag);\n        }\n        if ((_this$props$animatedP3 = this.props.animatedProps) !== null && _this$props$animatedP3 !== void 0 && _this$props$animatedP3.viewDescriptors) {\n          this.props.animatedProps.viewDescriptors.add({\n            tag: viewTag,\n            name: viewName,\n            shadowNodeWrapper: shadowNodeWrapper\n          });\n        }\n      }\n    }, {\n      key: \"_attachInlineProps\",\n      value: function _attachInlineProps() {\n        var newInlineProps = extractSharedValuesMapFromProps(this.props);\n        var hasChanged = inlinePropsHasChanged(newInlineProps, this._inlineProps);\n        if (hasChanged) {\n          if (!this._inlinePropsViewDescriptors) {\n            this._inlinePropsViewDescriptors = makeViewDescriptorsSet();\n            var _this$_getViewInfo2 = this._getViewInfo(),\n              viewTag = _this$_getViewInfo2.viewTag,\n              viewName = _this$_getViewInfo2.viewName,\n              shadowNodeWrapper = _this$_getViewInfo2.shadowNodeWrapper,\n              viewConfig = _this$_getViewInfo2.viewConfig;\n            if (Object.keys(newInlineProps).length && viewConfig) {\n              adaptViewConfig(viewConfig);\n            }\n            this._inlinePropsViewDescriptors.add({\n              tag: viewTag,\n              name: viewName,\n              shadowNodeWrapper: shadowNodeWrapper\n            });\n          }\n          var sharableViewDescriptors = this._inlinePropsViewDescriptors.sharableViewDescriptors;\n          var maybeViewRef = NativeReanimatedModule.native ? undefined : {\n            items: new Set([this])\n          };\n          var updaterFunction = function updaterFunction() {\n            'worklet';\n\n            var update = getInlinePropsUpdate(newInlineProps);\n            updateProps(sharableViewDescriptors, update, maybeViewRef);\n          };\n          this._inlineProps = newInlineProps;\n          if (this._inlinePropsMapperId) {\n            stopMapper(this._inlinePropsMapperId);\n          }\n          this._inlinePropsMapperId = null;\n          if (Object.keys(newInlineProps).length) {\n            this._inlinePropsMapperId = startMapper(updaterFunction, Object.values(newInlineProps));\n          }\n        }\n      }\n    }, {\n      key: \"_detachInlineProps\",\n      value: function _detachInlineProps() {\n        if (this._inlinePropsMapperId) {\n          stopMapper(this._inlinePropsMapperId);\n        }\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        this._reattachNativeEvents(prevProps);\n        this._attachAnimatedStyles();\n        this._attachInlineProps();\n      }\n    }, {\n      key: \"_filterNonAnimatedProps\",\n      value: function _filterNonAnimatedProps(inputProps) {\n        var _this3 = this;\n        var props = {};\n        var _loop2 = function _loop2() {\n          var value = inputProps[key];\n          if (key === 'style') {\n            var styleProp = inputProps.style;\n            var styles = flattenArray(styleProp != null ? styleProp : []);\n            var processedStyle = styles.map(function (style) {\n              if (style && style.viewDescriptors) {\n                style.viewsRef.add(_this3);\n                if (_this3._isFirstRender) {\n                  _this3.initialStyle = _objectSpread(_objectSpread(_objectSpread({}, style.initial.value), _this3.initialStyle), initialUpdaterRun(style.initial.updater));\n                }\n                return _this3.initialStyle;\n              } else if (hasInlineStyles(style)) {\n                if (_this3._isFirstRender) {\n                  return getInlinePropsUpdate(style);\n                }\n                var newStyle = {};\n                for (var _ref7 of Object.entries(style)) {\n                  var _ref8 = _slicedToArray(_ref7, 2);\n                  var _key3 = _ref8[0];\n                  var styleValue = _ref8[1];\n                  if (!isSharedValue(styleValue) && !(_key3 === 'transform' && isInlineStyleTransform(styleValue))) {\n                    newStyle[_key3] = styleValue;\n                  }\n                }\n                return newStyle;\n              } else {\n                return style;\n              }\n            });\n            props[key] = StyleSheet.flatten(processedStyle);\n          } else if (key === 'animatedProps') {\n            var animatedProp = inputProps.animatedProps;\n            if (animatedProp.initial !== undefined) {\n              Object.keys(animatedProp.initial.value).forEach(function (key) {\n                var _animatedProp$initial, _animatedProp$viewsRe;\n                props[key] = (_animatedProp$initial = animatedProp.initial) === null || _animatedProp$initial === void 0 ? void 0 : _animatedProp$initial.value[key];\n                (_animatedProp$viewsRe = animatedProp.viewsRef) === null || _animatedProp$viewsRe === void 0 ? void 0 : _animatedProp$viewsRe.add(_this3);\n              });\n            }\n          } else if (has('current', value) && value.current instanceof WorkletEventHandler) {\n            if (value.current.eventNames.length > 0) {\n              value.current.eventNames.forEach(function (eventName) {\n                props[eventName] = has('listeners', value.current) ? value.current.listeners[eventName] : dummyListener;\n              });\n            } else {\n              props[key] = dummyListener;\n            }\n          } else if (isSharedValue(value)) {\n            if (_this3._isFirstRender) {\n              props[key] = value.value;\n            }\n          } else if (key !== 'onGestureHandlerStateChange' || !isChromeDebugger()) {\n            props[key] = value;\n          }\n        };\n        for (var key in inputProps) {\n          _loop2();\n        }\n        return props;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var props = this._filterNonAnimatedProps(this.props);\n        if (isJest()) {\n          props.animatedStyle = this.animatedStyle;\n        }\n        if (this._isFirstRender) {\n          this._isFirstRender = false;\n        }\n        var platformProps = Platform.select({\n          web: {},\n          default: {\n            collapsable: false\n          }\n        });\n        return React.createElement(Component, _extends({}, props, {\n          ref: this._setComponentRef\n        }, platformProps));\n      }\n    }]);\n    return AnimatedComponent;\n  }(React.Component);\n  _defineProperty(AnimatedComponent, \"displayName\", void 0);\n  AnimatedComponent.displayName = `AnimatedComponent(${Component.displayName || Component.name || 'Component'})`;\n  return React.forwardRef(function (props, ref) {\n    return React.createElement(AnimatedComponent, _extends({}, props, ref === null ? null : {\n      forwardedRef: ref\n    }));\n  });\n}","map":{"version":3,"names":["React","findNodeHandle","Platform","StyleSheet","WorkletEventHandler","setAndForwardRef","invariant","adaptViewConfig","RNRenderer","configureLayoutAnimations","enableLayoutAnimations","startMapper","stopMapper","isJest","isChromeDebugger","shouldBeUseWeb","isWeb","initialUpdaterRun","SharedTransition","LayoutAnimationType","makeViewDescriptorsSet","getShadowNodeWrapperFromRef","updateProps","NativeReanimatedModule","isSharedValue","removeFromPropsRegistry","JSPropUpdater","getReduceMotionFromConfig","maybeBuild","flattenArray","has","IS_WEB","dummyListener","onlyAnimatedStyles","styles","filter","style","viewDescriptors","isSameAnimatedStyle","style1","style2","viewsRef","isSameAnimatedProps","isInlineStyleTransform","transform","some","t","hasInlineStyles","Object","keys","key","styleValue","extractSharedValuesMapFromProps","props","inlineProps","value","_props$style","forEach","_ref3","entries","_ref4","_slicedToArray","inlinePropsHasChanged","styles1","styles2","length","getInlinePropsUpdate","update","_ref5","_ref6","map","createAnimatedComponent","Component","options","prototype","isReactComponent","name","AnimatedComponent","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","_defineProperty","_assertThisInitialized","getForwardedRef","forwardedRef","setLocalRef","ref","tag","_this$props3","layout","entering","exiting","sharedTransitionTag","LAYOUT","undefined","displayName","_this$props","ENTERING","reduceMotionInExiting","getReduceMotion","_this$props2","EXITING","_this$props$sharedTra","sharedElementTransition","sharedTransitionStyle","reduceMotionInTransition","registerTransition","_sharedElementTransition","_component","animatedStyle","_createClass","componentWillUnmount","_this$_sharedElementT","_detachNativeEvents","_JSPropUpdater","removeOnJSPropsChangeListener","_detachStyles","_detachInlineProps","unregisterTransition","_viewTag","componentDidMount","_attachNativeEvents","addOnJSPropsChangeListener","_attachAnimatedStyles","_attachInlineProps","_getEventViewRef","_this$_component","_getScrollableNode","_ref","getScrollableNode","node","viewTag","prop","current","setNativeProps","registerForEvents","unregisterFromEvents","_styles","remove","_this$props$animatedP","animatedProps","global","_IS_FABRIC","_reattachNativeEvents","prevProps","reattachNeeded","_updateFromNative","_this$_component2","_this$_component2$set","_getViewInfo","_this$_component3","_getAnimatableRef","_ref2","viewName","shadowNodeWrapper","viewConfig","component","getAnimatableRef","_hostInstance$viewCon","hostInstance","findHostInstance_DEPRECATED","Error","_nativeTag","uiViewClassName","_this2","_this$props$animatedP2","_this$props$animatedP3","prevStyles","prevAnimatedProps","_animatedProps","_this$_getViewInfo","hasReanimated2Props","hasOneSameStyle","_loop","prevStyle","isPresent","add","_objectSpread","initial","newInlineProps","hasChanged","_inlineProps","_inlinePropsViewDescriptors","_this$_getViewInfo2","sharableViewDescriptors","maybeViewRef","native","items","Set","updaterFunction","_inlinePropsMapperId","values","componentDidUpdate","_filterNonAnimatedProps","inputProps","_this3","_loop2","styleProp","processedStyle","_isFirstRender","initialStyle","updater","newStyle","_ref7","_ref8","flatten","animatedProp","_animatedProp$initial","_animatedProp$viewsRe","eventNames","eventName","listeners","render","platformProps","select","web","default","collapsable","createElement","_extends","_setComponentRef","forwardRef"],"sources":["C:\\Users\\Admin\\Project\\Project\\Messenger\\Messenger\\node_modules\\react-native-reanimated\\lib\\module\\createAnimatedComponent\\createAnimatedComponent.tsx"],"sourcesContent":["import type {\n  Component,\n  ComponentClass,\n  ComponentType,\n  FunctionComponent,\n  MutableRefObject,\n  Ref,\n} from 'react';\nimport React from 'react';\nimport { findNodeHandle, Platform, StyleSheet } from 'react-native';\nimport WorkletEventHandler from '../reanimated2/WorkletEventHandler';\nimport setAndForwardRef from './setAndForwardRef';\nimport '../reanimated2/layoutReanimation/animationsManager';\nimport invariant from 'invariant';\nimport { adaptViewConfig } from '../ConfigHelper';\nimport { RNRenderer } from '../reanimated2/platform-specific/RNRenderer';\nimport {\n  configureLayoutAnimations,\n  enableLayoutAnimations,\n  startMapper,\n  stopMapper,\n} from '../reanimated2/core';\nimport {\n  isJest,\n  isChromeDebugger,\n  shouldBeUseWeb,\n  isWeb,\n} from '../reanimated2/PlatformChecker';\nimport { initialUpdaterRun } from '../reanimated2/animation';\nimport {\n  SharedTransition,\n  LayoutAnimationType,\n} from '../reanimated2/layoutReanimation';\nimport type {\n  SharedValue,\n  StyleProps,\n  ShadowNodeWrapper,\n} from '../reanimated2/commonTypes';\nimport type {\n  ViewDescriptorsSet,\n  ViewRefSet,\n} from '../reanimated2/ViewDescriptorsSet';\nimport { makeViewDescriptorsSet } from '../reanimated2/ViewDescriptorsSet';\nimport { getShadowNodeWrapperFromRef } from '../reanimated2/fabricUtils';\nimport updateProps from '../reanimated2/UpdateProps';\nimport NativeReanimatedModule from '../reanimated2/NativeReanimated';\nimport { isSharedValue } from '../reanimated2/utils';\nimport type { AnimateProps } from '../reanimated2/helperTypes';\nimport { removeFromPropsRegistry } from '../reanimated2/PropsRegistry';\nimport { JSPropUpdater } from './JSPropUpdater';\nimport { getReduceMotionFromConfig } from '../reanimated2/animation/util';\nimport { maybeBuild } from '../animationBuilder';\nimport type { AnimatedComponentProps, AnimatedProps } from './utils';\nimport { flattenArray, has } from './utils';\n\nconst IS_WEB = isWeb();\n\nfunction dummyListener() {\n  // empty listener we use to assign to listener properties for which animated\n  // event is used.\n}\n\nfunction onlyAnimatedStyles(styles: StyleProps[]) {\n  return styles.filter((style) => style?.viewDescriptors);\n}\n\nfunction isSameAnimatedStyle(\n  style1?: StyleProps,\n  style2?: StyleProps\n): boolean {\n  // We cannot use equality check to compare useAnimatedStyle outputs directly.\n  // Instead, we can compare its viewsRefs.\n  return style1?.viewsRef === style2?.viewsRef;\n}\n\nconst isSameAnimatedProps = isSameAnimatedStyle;\n\nfunction isInlineStyleTransform(transform: any): boolean {\n  if (!transform) {\n    return false;\n  }\n  return transform.some((t: Record<string, any>) => hasInlineStyles(t));\n}\n\nfunction hasInlineStyles(style: StyleProps): boolean {\n  if (!style) {\n    return false;\n  }\n  return Object.keys(style).some((key) => {\n    const styleValue = style[key];\n    return (\n      isSharedValue(styleValue) ||\n      (key === 'transform' && isInlineStyleTransform(styleValue))\n    );\n  });\n}\n\nfunction extractSharedValuesMapFromProps(\n  props: AnimatedComponentProps<InitialComponentProps>\n): Record<string, any> {\n  const inlineProps: Record<string, any> = {};\n\n  for (const key in props) {\n    const value = props[key];\n    if (key === 'style') {\n      const styles = flattenArray<StyleProps>(props.style ?? []);\n      styles.forEach((style) => {\n        if (!style) {\n          return;\n        }\n        for (const [key, styleValue] of Object.entries(style)) {\n          if (isSharedValue(styleValue)) {\n            inlineProps[key] = styleValue;\n          } else if (\n            key === 'transform' &&\n            isInlineStyleTransform(styleValue)\n          ) {\n            inlineProps[key] = styleValue;\n          }\n        }\n      });\n    } else if (isSharedValue(value)) {\n      inlineProps[key] = value;\n    }\n  }\n\n  return inlineProps;\n}\n\nfunction inlinePropsHasChanged(styles1: StyleProps, styles2: StyleProps) {\n  if (Object.keys(styles1).length !== Object.keys(styles2).length) {\n    return true;\n  }\n\n  for (const key of Object.keys(styles1)) {\n    if (styles1[key] !== styles2[key]) return true;\n  }\n\n  return false;\n}\n\nfunction getInlinePropsUpdate(inlineProps: Record<string, any>) {\n  'worklet';\n  const update: Record<string, any> = {};\n  for (const [key, styleValue] of Object.entries(inlineProps)) {\n    if (key === 'transform') {\n      update[key] = styleValue.map((transform: Record<string, any>) => {\n        return getInlinePropsUpdate(transform);\n      });\n    } else if (isSharedValue(styleValue)) {\n      update[key] = styleValue.value;\n    } else {\n      update[key] = styleValue;\n    }\n  }\n  return update;\n}\n\ntype Options<P> = {\n  setNativeProps: (ref: ComponentRef, props: P) => void;\n};\n\ninterface ComponentRef extends Component {\n  setNativeProps?: (props: Record<string, unknown>) => void;\n  getScrollableNode?: () => ComponentRef;\n  getAnimatableRef?: () => ComponentRef;\n}\n\ninterface InitialComponentProps extends Record<string, unknown> {\n  ref?: Ref<Component>;\n  collapsable?: boolean;\n}\n\nexport default function createAnimatedComponent<P extends object>(\n  component: FunctionComponent<P>,\n  options?: Options<P>\n): FunctionComponent<AnimateProps<P>>;\n\nexport default function createAnimatedComponent<P extends object>(\n  component: ComponentClass<P>,\n  options?: Options<P>\n): ComponentClass<AnimateProps<P>>;\n\nexport default function createAnimatedComponent(\n  Component: ComponentType<InitialComponentProps>,\n  options?: Options<InitialComponentProps>\n): any {\n  invariant(\n    typeof Component !== 'function' ||\n      (Component.prototype && Component.prototype.isReactComponent),\n    `Looks like you're passing a function component \\`${Component.name}\\` to \\`createAnimatedComponent\\` function which supports only class components. Please wrap your function component with \\`React.forwardRef()\\` or use a class component instead.`\n  );\n\n  class AnimatedComponent extends React.Component<\n    AnimatedComponentProps<InitialComponentProps>\n  > {\n    _styles: StyleProps[] | null = null;\n    _animatedProps?: Partial<AnimatedComponentProps<AnimatedProps>>;\n    _viewTag = -1;\n    _isFirstRender = true;\n    animatedStyle: { value: StyleProps } = { value: {} };\n    initialStyle = {};\n    _component: ComponentRef | HTMLElement | null = null;\n    _inlinePropsViewDescriptors: ViewDescriptorsSet | null = null;\n    _inlinePropsMapperId: number | null = null;\n    _inlineProps: StyleProps = {};\n    _sharedElementTransition: SharedTransition | null = null;\n    _JSPropUpdater = new JSPropUpdater();\n    static displayName: string;\n\n    constructor(props: AnimatedComponentProps<InitialComponentProps>) {\n      super(props);\n      if (isJest()) {\n        this.animatedStyle = { value: {} };\n      }\n    }\n\n    componentWillUnmount() {\n      this._detachNativeEvents();\n      this._JSPropUpdater.removeOnJSPropsChangeListener(this);\n      this._detachStyles();\n      this._detachInlineProps();\n      this._sharedElementTransition?.unregisterTransition(this._viewTag);\n    }\n\n    componentDidMount() {\n      this._attachNativeEvents();\n      this._JSPropUpdater.addOnJSPropsChangeListener(this);\n      this._attachAnimatedStyles();\n      this._attachInlineProps();\n    }\n\n    _getEventViewRef() {\n      // Make sure to get the scrollable node for components that implement\n      // `ScrollResponder.Mixin`.\n      return (this._component as ComponentRef)?.getScrollableNode\n        ? (this._component as ComponentRef).getScrollableNode?.()\n        : this._component;\n    }\n\n    _attachNativeEvents() {\n      const node = this._getEventViewRef() as ComponentRef;\n      let viewTag = null; // We set it only if needed\n\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (\n          has('current', prop) &&\n          prop.current instanceof WorkletEventHandler\n        ) {\n          if (viewTag === null) {\n            viewTag = findNodeHandle(options?.setNativeProps ? this : node);\n          }\n          prop.current.registerForEvents(viewTag as number, key);\n        }\n      }\n    }\n\n    _detachNativeEvents() {\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (\n          has('current', prop) &&\n          prop.current instanceof WorkletEventHandler\n        ) {\n          prop.current.unregisterFromEvents();\n        }\n      }\n    }\n\n    _detachStyles() {\n      if (IS_WEB && this._styles !== null) {\n        for (const style of this._styles) {\n          if (style?.viewsRef) {\n            style.viewsRef.remove(this);\n          }\n        }\n      } else if (this._viewTag !== -1 && this._styles !== null) {\n        for (const style of this._styles) {\n          style.viewDescriptors.remove(this._viewTag);\n        }\n        if (this.props.animatedProps?.viewDescriptors) {\n          this.props.animatedProps.viewDescriptors.remove(this._viewTag);\n        }\n        if (global._IS_FABRIC) {\n          removeFromPropsRegistry(this._viewTag);\n        }\n      }\n    }\n\n    _reattachNativeEvents(\n      prevProps: AnimatedComponentProps<InitialComponentProps>\n    ) {\n      for (const key in prevProps) {\n        const prop = this.props[key];\n        if (\n          has('current', prop) &&\n          prop.current instanceof WorkletEventHandler &&\n          prop.current.reattachNeeded\n        ) {\n          prop.current.unregisterFromEvents();\n        }\n      }\n\n      let viewTag = null;\n\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (\n          has('current', prop) &&\n          prop.current instanceof WorkletEventHandler &&\n          prop.current.reattachNeeded\n        ) {\n          if (viewTag === null) {\n            const node = this._getEventViewRef() as ComponentRef;\n            viewTag = findNodeHandle(options?.setNativeProps ? this : node);\n          }\n          prop.current.registerForEvents(viewTag as number, key);\n          prop.current.reattachNeeded = false;\n        }\n      }\n    }\n\n    _updateFromNative(props: StyleProps) {\n      if (options?.setNativeProps) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        options.setNativeProps(this._component as ComponentRef, props);\n      } else {\n        // eslint-disable-next-line no-unused-expressions\n        (this._component as ComponentRef)?.setNativeProps?.(props);\n      }\n    }\n\n    _getViewInfo() {\n      let viewTag: number | HTMLElement | null;\n      let viewName: string | null;\n      let shadowNodeWrapper: ShadowNodeWrapper | null = null;\n      let viewConfig;\n      // Component can specify ref which should be animated when animated version of the component is created.\n      // Otherwise, we animate the component itself.\n      const component = (this._component as ComponentRef)?.getAnimatableRef\n        ? (this._component as ComponentRef).getAnimatableRef?.()\n        : this;\n\n      if (IS_WEB) {\n        // At this point I assume that `_setComponentRef` was already called and `_component` is set.\n        // `this._component` on web represents HTMLElement of our component, that's why we use casting\n        viewTag = this._component as HTMLElement;\n        viewName = null;\n        shadowNodeWrapper = null;\n        viewConfig = null;\n      } else {\n        // hostInstance can be null for a component that doesn't render anything (render function returns null). Example: svg Stop: https://github.com/react-native-svg/react-native-svg/blob/develop/src/elements/Stop.tsx\n        const hostInstance = RNRenderer.findHostInstance_DEPRECATED(component);\n        if (!hostInstance) {\n          throw new Error(\n            '[Reanimated] Cannot find host instance for this component. Maybe it renders nothing?'\n          );\n        }\n        // we can access view tag in the same way it's accessed here https://github.com/facebook/react/blob/e3f4eb7272d4ca0ee49f27577156b57eeb07cf73/packages/react-native-renderer/src/ReactFabric.js#L146\n        viewTag = hostInstance?._nativeTag;\n        /**\n         * RN uses viewConfig for components for storing different properties of the component(example: https://github.com/facebook/react-native/blob/master/packages/react-native/Libraries/Components/ScrollView/ScrollViewViewConfig.js#L16).\n         * The name we're looking for is in the field named uiViewClassName.\n         */\n        viewName = hostInstance?.viewConfig?.uiViewClassName;\n\n        viewConfig = hostInstance?.viewConfig;\n\n        if (global._IS_FABRIC) {\n          shadowNodeWrapper = getShadowNodeWrapperFromRef(this);\n        }\n      }\n      return { viewTag, viewName, shadowNodeWrapper, viewConfig };\n    }\n\n    _attachAnimatedStyles() {\n      const styles = this.props.style\n        ? onlyAnimatedStyles(flattenArray<StyleProps>(this.props.style))\n        : [];\n      const prevStyles = this._styles;\n      this._styles = styles;\n\n      const prevAnimatedProps = this._animatedProps;\n      this._animatedProps = this.props.animatedProps;\n\n      const { viewTag, viewName, shadowNodeWrapper, viewConfig } =\n        this._getViewInfo();\n\n      // update UI props whitelist for this view\n      const hasReanimated2Props =\n        this.props.animatedProps?.viewDescriptors || styles.length;\n      if (hasReanimated2Props && viewConfig) {\n        adaptViewConfig(viewConfig);\n      }\n\n      this._viewTag = viewTag as number;\n\n      // remove old styles\n      if (prevStyles) {\n        // in most of the cases, views have only a single animated style and it remains unchanged\n        const hasOneSameStyle =\n          styles.length === 1 &&\n          prevStyles.length === 1 &&\n          isSameAnimatedStyle(styles[0], prevStyles[0]);\n\n        if (!hasOneSameStyle) {\n          // otherwise, remove each style that is not present in new styles\n          for (const prevStyle of prevStyles) {\n            const isPresent = styles.some((style) =>\n              isSameAnimatedStyle(style, prevStyle)\n            );\n            if (!isPresent) {\n              prevStyle.viewDescriptors.remove(viewTag);\n            }\n          }\n        }\n      }\n\n      styles.forEach((style) => {\n        style.viewDescriptors.add({\n          tag: viewTag,\n          name: viewName,\n          shadowNodeWrapper,\n        });\n        if (isJest()) {\n          /**\n           * We need to connect Jest's TestObject instance whose contains just props object\n           * with the updateProps() function where we update the properties of the component.\n           * We can't update props object directly because TestObject contains a copy of props - look at render function:\n           * const props = this._filterNonAnimatedProps(this.props);\n           */\n          this.animatedStyle.value = {\n            ...this.animatedStyle.value,\n            ...style.initial.value,\n          };\n          style.animatedStyle.current = this.animatedStyle;\n        }\n      });\n\n      // detach old animatedProps\n      if (\n        prevAnimatedProps &&\n        !isSameAnimatedProps(prevAnimatedProps, this.props.animatedProps)\n      ) {\n        prevAnimatedProps.viewDescriptors!.remove(viewTag as number);\n      }\n\n      // attach animatedProps property\n      if (this.props.animatedProps?.viewDescriptors) {\n        this.props.animatedProps.viewDescriptors.add({\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          tag: viewTag as number,\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          name: viewName!,\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          shadowNodeWrapper: shadowNodeWrapper!,\n        });\n      }\n    }\n\n    _attachInlineProps() {\n      const newInlineProps: Record<string, any> =\n        extractSharedValuesMapFromProps(this.props);\n      const hasChanged = inlinePropsHasChanged(\n        newInlineProps,\n        this._inlineProps\n      );\n\n      if (hasChanged) {\n        if (!this._inlinePropsViewDescriptors) {\n          this._inlinePropsViewDescriptors = makeViewDescriptorsSet();\n\n          const { viewTag, viewName, shadowNodeWrapper, viewConfig } =\n            this._getViewInfo();\n\n          if (Object.keys(newInlineProps).length && viewConfig) {\n            adaptViewConfig(viewConfig);\n          }\n\n          this._inlinePropsViewDescriptors.add({\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            tag: viewTag as number,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            name: viewName!,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            shadowNodeWrapper: shadowNodeWrapper!,\n          });\n        }\n        const sharableViewDescriptors =\n          this._inlinePropsViewDescriptors.sharableViewDescriptors;\n\n        const maybeViewRef = NativeReanimatedModule.native\n          ? undefined\n          : ({ items: new Set([this]) } as ViewRefSet<any>); // see makeViewsRefSet\n\n        const updaterFunction = () => {\n          'worklet';\n          const update = getInlinePropsUpdate(newInlineProps);\n          updateProps(sharableViewDescriptors, update, maybeViewRef);\n        };\n        this._inlineProps = newInlineProps;\n        if (this._inlinePropsMapperId) {\n          stopMapper(this._inlinePropsMapperId);\n        }\n        this._inlinePropsMapperId = null;\n        if (Object.keys(newInlineProps).length) {\n          this._inlinePropsMapperId = startMapper(\n            updaterFunction,\n            Object.values(newInlineProps)\n          );\n        }\n      }\n    }\n\n    _detachInlineProps() {\n      if (this._inlinePropsMapperId) {\n        stopMapper(this._inlinePropsMapperId);\n      }\n    }\n\n    componentDidUpdate(\n      prevProps: AnimatedComponentProps<InitialComponentProps>\n    ) {\n      this._reattachNativeEvents(prevProps);\n      this._attachAnimatedStyles();\n      this._attachInlineProps();\n    }\n\n    _setComponentRef = setAndForwardRef<Component | HTMLElement>({\n      getForwardedRef: () =>\n        this.props.forwardedRef as MutableRefObject<\n          Component<Record<string, unknown>, Record<string, unknown>, unknown>\n        >,\n      setLocalRef: (ref) => {\n        // TODO update config\n\n        const tag = IS_WEB\n          ? (ref as HTMLElement)\n          : findNodeHandle(ref as Component);\n\n        const { layout, entering, exiting, sharedTransitionTag } = this.props;\n        if (\n          (layout || entering || exiting || sharedTransitionTag) &&\n          tag != null\n        ) {\n          if (!shouldBeUseWeb()) {\n            enableLayoutAnimations(true, false);\n          }\n          if (layout) {\n            configureLayoutAnimations(\n              tag,\n              LayoutAnimationType.LAYOUT,\n              maybeBuild(\n                layout,\n                undefined /* We don't have to warn user if style has common properties with animation for LAYOUT */,\n                AnimatedComponent.displayName\n              )\n            );\n          }\n          if (entering) {\n            configureLayoutAnimations(\n              tag,\n              LayoutAnimationType.ENTERING,\n              maybeBuild(\n                entering,\n                this.props?.style,\n                AnimatedComponent.displayName\n              )\n            );\n          }\n          if (exiting) {\n            const reduceMotionInExiting =\n              'getReduceMotion' in exiting &&\n              typeof exiting.getReduceMotion === 'function'\n                ? getReduceMotionFromConfig(exiting.getReduceMotion())\n                : getReduceMotionFromConfig();\n            if (!reduceMotionInExiting) {\n              configureLayoutAnimations(\n                tag,\n                LayoutAnimationType.EXITING,\n                maybeBuild(\n                  exiting,\n                  this.props?.style,\n                  AnimatedComponent.displayName\n                )\n              );\n            }\n          }\n          if (sharedTransitionTag && !IS_WEB) {\n            const sharedElementTransition =\n              this.props.sharedTransitionStyle ?? new SharedTransition();\n            const reduceMotionInTransition = getReduceMotionFromConfig(\n              sharedElementTransition.getReduceMotion()\n            );\n            if (!reduceMotionInTransition) {\n              sharedElementTransition.registerTransition(\n                tag as number,\n                sharedTransitionTag\n              );\n              this._sharedElementTransition = sharedElementTransition;\n            }\n          }\n        }\n\n        if (ref !== this._component) {\n          this._component = ref;\n        }\n      },\n    });\n\n    _filterNonAnimatedProps(\n      inputProps: AnimatedComponentProps<InitialComponentProps>\n    ): Record<string, unknown> {\n      const props: Record<string, unknown> = {};\n      for (const key in inputProps) {\n        const value = inputProps[key];\n        if (key === 'style') {\n          const styleProp = inputProps.style;\n          const styles = flattenArray<StyleProps>(styleProp ?? []);\n          const processedStyle: StyleProps = styles.map((style) => {\n            if (style && style.viewDescriptors) {\n              // this is how we recognize styles returned by useAnimatedStyle\n              style.viewsRef.add(this);\n              if (this._isFirstRender) {\n                this.initialStyle = {\n                  ...style.initial.value,\n                  ...this.initialStyle,\n                  ...initialUpdaterRun<StyleProps>(style.initial.updater),\n                };\n              }\n              return this.initialStyle;\n            } else if (hasInlineStyles(style)) {\n              if (this._isFirstRender) {\n                return getInlinePropsUpdate(style);\n              }\n              const newStyle: StyleProps = {};\n              for (const [key, styleValue] of Object.entries(style)) {\n                if (\n                  !isSharedValue(styleValue) &&\n                  !(key === 'transform' && isInlineStyleTransform(styleValue))\n                ) {\n                  newStyle[key] = styleValue;\n                }\n              }\n              return newStyle;\n            } else {\n              return style;\n            }\n          });\n          props[key] = StyleSheet.flatten(processedStyle);\n        } else if (key === 'animatedProps') {\n          const animatedProp = inputProps.animatedProps as Partial<\n            AnimatedComponentProps<AnimatedProps>\n          >;\n          if (animatedProp.initial !== undefined) {\n            Object.keys(animatedProp.initial.value).forEach((key) => {\n              props[key] = animatedProp.initial?.value[key];\n              animatedProp.viewsRef?.add(this);\n            });\n          }\n        } else if (\n          has('current', value) &&\n          value.current instanceof WorkletEventHandler\n        ) {\n          if (value.current.eventNames.length > 0) {\n            value.current.eventNames.forEach((eventName) => {\n              props[eventName] = has('listeners', value.current)\n                ? (value.current.listeners as Record<string, unknown>)[\n                    eventName\n                  ]\n                : dummyListener;\n            });\n          } else {\n            props[key] = dummyListener;\n          }\n        } else if (isSharedValue(value)) {\n          if (this._isFirstRender) {\n            props[key] = (value as SharedValue<any>).value;\n          }\n        } else if (\n          key !== 'onGestureHandlerStateChange' ||\n          !isChromeDebugger()\n        ) {\n          props[key] = value;\n        }\n      }\n      return props;\n    }\n\n    render() {\n      const props = this._filterNonAnimatedProps(this.props);\n      if (isJest()) {\n        props.animatedStyle = this.animatedStyle;\n      }\n\n      if (this._isFirstRender) {\n        this._isFirstRender = false;\n      }\n\n      const platformProps = Platform.select({\n        web: {},\n        default: { collapsable: false },\n      });\n\n      return (\n        <Component\n          {...props}\n          // Casting is used here, because ref can be null - in that case it cannot be assigned to HTMLElement.\n          // After spending some time trying to figure out what to do with this problem, we decided to leave it this way\n          ref={this._setComponentRef as (ref: Component) => void}\n          {...platformProps}\n        />\n      );\n    }\n  }\n\n  AnimatedComponent.displayName = `AnimatedComponent(${\n    Component.displayName || Component.name || 'Component'\n  })`;\n\n  return React.forwardRef<Component>((props, ref) => {\n    return (\n      <AnimatedComponent\n        {...props}\n        {...(ref === null ? null : { forwardedRef: ref })}\n      />\n    );\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}