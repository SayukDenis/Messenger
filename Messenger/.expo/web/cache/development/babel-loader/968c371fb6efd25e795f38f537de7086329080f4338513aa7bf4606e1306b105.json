{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleButtonList from \"./StyleButtonLIst\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar ButtonList = function ButtonList(_ref) {\n  var navigation = _ref.navigation;\n  var items = [\"Saved message\", \"Look\", \"Notification\", \"Chat folders\", \"Confidentiality\", \"Language\"];\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      initialRouteName: \"Home\",\n      children: items.map(function (item, index) {\n        return _jsx(View, {\n          children: _jsx(TouchableOpacity, {\n            style: StyleButtonList.button,\n            onPress: function onPress() {\n              return navigation.navigate(item);\n            },\n            children: _jsx(Text, {\n              children: item\n            })\n          })\n        }, index);\n      })\n    })\n  });\n};\nexport default ButtonList;","map":{"version":3,"names":["React","NavigationContainer","createStackNavigator","View","Text","TouchableOpacity","StyleButtonList","jsx","_jsx","Stack","ButtonList","_ref","navigation","items","children","Navigator","initialRouteName","map","item","index","style","button","onPress","navigate"],"sources":["D:/project/try1/Messenger/Messenger/Pages/Settings/MainSettingPage/settingsPage/Center/ButtonLIst/Buttonlist.tsx"],"sourcesContent":["import React from 'react';\r\nimport { NavigationContainer, RouteProp } from '@react-navigation/native';\r\nimport { createStackNavigator, StackNavigationProp } from '@react-navigation/stack';\r\nimport { View, Text, TouchableOpacity } from 'react-native';\r\nimport StyleButtonList from './StyleButtonLIst';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\n// Оголошення типу для навігації\r\ntype RootStackParamList = {\r\n  Home: undefined;\r\n  SavedMessage: undefined;\r\n  Look: undefined;\r\n  Notification: undefined;\r\n  ChatFolders: undefined;\r\n  Confidentiality: undefined;\r\n  Language: undefined;\r\n};\r\n\r\ntype ButtonListScreenNavigationProp = StackNavigationProp<RootStackParamList, 'Home'>;\r\n\r\nconst ButtonList = ({ navigation }: { navigation: ButtonListScreenNavigationProp }) => {\r\n  let items: string[] = [\"Saved message\", \"Look\", \"Notification\", \"Chat folders\", \"Confidentiality\", \"Language\"];\r\n  \r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator initialRouteName=\"Home\">\r\n        {items.map((item, index) => (\r\n          <View key={index}>\r\n            <TouchableOpacity\r\n              style={StyleButtonList.button}\r\n              onPress={() => navigation.navigate(item)}\r\n            >\r\n              <Text>{item}</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        ))}\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default ButtonList;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAmB,0BAA0B;AACzE,SAASC,oBAAoB,QAA6B,yBAAyB;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAEpF,OAAOC,eAAe;AAA0B,SAAAC,GAAA,IAAAC,IAAA;AAEhD,IAAMC,KAAK,GAAGP,oBAAoB,CAAC,CAAC;AAepC,IAAMQ,UAAU,GAAG,SAAbA,UAAUA,CAAAC,IAAA,EAAuE;EAAA,IAAjEC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC9B,IAAIC,KAAe,GAAG,CAAC,eAAe,EAAE,MAAM,EAAE,cAAc,EAAE,cAAc,EAAE,iBAAiB,EAAE,UAAU,CAAC;EAE9G,OACEL,IAAA,CAACP,mBAAmB;IAAAa,QAAA,EAClBN,IAAA,CAACC,KAAK,CAACM,SAAS;MAACC,gBAAgB,EAAC,MAAM;MAAAF,QAAA,EACrCD,KAAK,CAACI,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK;QAAA,OACrBX,IAAA,CAACL,IAAI;UAAAW,QAAA,EACHN,IAAA,CAACH,gBAAgB;YACfe,KAAK,EAAEd,eAAe,CAACe,MAAO;YAC9BC,OAAO,EAAE,SAAAA,QAAA;cAAA,OAAMV,UAAU,CAACW,QAAQ,CAACL,IAAI,CAAC;YAAA,CAAC;YAAAJ,QAAA,EAEzCN,IAAA,CAACJ,IAAI;cAAAU,QAAA,EAAEI;YAAI,CAAO;UAAC,CACH;QAAC,GANVC,KAOL,CAAC;MAAA,CACR;IAAC,CACa;EAAC,CACC,CAAC;AAE1B,CAAC;AAED,eAAeT,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}