{"ast":null,"code":"import React, { useEffect, useRef } from \"react\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { connect } from \"react-redux\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport MuteForSwipeableSvg from \"../../SVG/MuteForSwipeableSvg\";\nimport UnMuteForSwipeableSvg from \"../../SVG/UnMuteForSwipeableSvg\";\nimport { screenHeight, screenWidth } from \"../../../Constants/ConstantsForChatlist\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar NotificationStatusContainerForRightContainerForSwipe = function NotificationStatusContainerForRightContainerForSwipe(_ref) {\n  var procentOfSwipe = _ref.procentOfSwipe,\n    scaleForNotRender = _ref.scaleForNotRender;\n  var randomBoolean = useRef(false);\n  useEffect(function () {\n    randomBoolean.current = Math.random() < 0.5;\n  }, []);\n  return _jsxs(Animated.View, {\n    style: {\n      position: \"absolute\",\n      width: screenWidth * 0.2 * scaleForNotRender.__getValue(),\n      overflow: \"hidden\",\n      zIndex: 0,\n      top: 0,\n      bottom: 0,\n      left: 0\n    },\n    children: [_jsx(LinearGradient, {\n      colors: [\"rgba(255, 135, 35, 1)\", \"rgba(255, 135, 35, 0.1)\"],\n      start: {\n        x: 0.2,\n        y: -2 * procentOfSwipe\n      },\n      end: {\n        x: 0,\n        y: 1.2 * procentOfSwipe\n      },\n      style: {\n        position: \"absolute\",\n        width: screenWidth * 0.2,\n        height: screenHeight * 0.08\n      }\n    }), _jsx(Animated.View, {\n      style: {\n        width: screenWidth * 0.2,\n        height: screenHeight * 0.08,\n        justifyContent: \"center\",\n        position: \"absolute\"\n      },\n      children: _jsx(Animated.View, {\n        style: {\n          justifyContent: \"center\",\n          flexDirection: \"row\"\n        },\n        children: _jsxs(Animated.View, {\n          style: {\n            justifyContent: \"center\"\n          },\n          children: [_jsx(Animated.View, {\n            style: {\n              flexDirection: \"row\",\n              justifyContent: \"center\"\n            },\n            children: randomBoolean.current ? _jsx(MuteForSwipeableSvg, {\n              width: screenWidth * 0.085,\n              height: screenHeight * 0.05,\n              color: \"white\"\n            }) : _jsx(UnMuteForSwipeableSvg, {\n              width: screenWidth * 0.085,\n              height: screenHeight * 0.05,\n              color: \"white\"\n            })\n          }), _jsx(Animated.Text, {\n            style: {\n              color: \"white\",\n              alignSelf: \"center\"\n            },\n            children: \"Notification\"\n          })]\n        })\n      })\n    })]\n  });\n};\nexport default connect(null)(NotificationStatusContainerForRightContainerForSwipe);","map":{"version":3,"names":["React","useEffect","useRef","Animated","connect","LinearGradient","MuteForSwipeableSvg","UnMuteForSwipeableSvg","screenHeight","screenWidth","jsx","_jsx","jsxs","_jsxs","NotificationStatusContainerForRightContainerForSwipe","_ref","procentOfSwipe","scaleForNotRender","randomBoolean","current","Math","random","View","style","position","width","__getValue","overflow","zIndex","top","bottom","left","children","colors","start","x","y","end","height","justifyContent","flexDirection","color","Text","alignSelf"],"sources":["D:/project/1project/Messenger/Messenger/Pages/ChatList/Components/List of folders containers/CompontentsForChatListContainer/NotificationStatusContainerForRightContainerForSwipe.tsx"],"sourcesContent":["// NotificationStatusContainerForRightContainerForSwipe.tsx\r\nimport React, { MutableRefObject, useEffect, useRef } from \"react\";\r\nimport { Animated } from \"react-native\";\r\nimport { connect } from \"react-redux\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport MuteForSwipeableSvg from \"../../SVG/MuteForSwipeableSvg\";\r\nimport UnMuteForSwipeableSvg from \"../../SVG/UnMuteForSwipeableSvg\";\r\nimport { screenHeight, screenWidth } from \"../../../Constants/ConstantsForChatlist\";\r\n\r\ninterface NotificationStatusContainerProps {\r\n  procentOfSwipe: number;\r\n  scaleForNotRender:any\r\n}\r\n\r\nconst NotificationStatusContainerForRightContainerForSwipe: React.FC<NotificationStatusContainerProps> = ({\r\n  procentOfSwipe,\r\n  scaleForNotRender,\r\n\r\n}) => {\r\n  const   randomBoolean:MutableRefObject<boolean>=useRef(false)\r\n  useEffect(() => {\r\n    randomBoolean.current = Math.random() < 0.5;\r\n  }, []);\r\n  return (\r\n    <Animated.View\r\n      style={{\r\n        position: \"absolute\",\r\n        width: screenWidth * 0.2 * scaleForNotRender.__getValue(),\r\n        overflow: \"hidden\",\r\n        zIndex: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n      }}\r\n    >\r\n      <LinearGradient\r\n        colors={[\"rgba(255, 135, 35, 1)\", \"rgba(255, 135, 35, 0.1)\"]}\r\n        start={{\r\n          x: 0.2,\r\n          y: -2 * procentOfSwipe,\r\n        }}\r\n        end={{\r\n          x: 0,\r\n          y: 1.2 * procentOfSwipe,\r\n        }}\r\n        style={{\r\n          position: \"absolute\",\r\n          width: screenWidth * 0.2,\r\n          height: screenHeight * 0.08,\r\n        }}\r\n      />\r\n      <Animated.View\r\n        style={{\r\n          width: screenWidth * 0.2,\r\n          height: screenHeight * 0.08,\r\n          justifyContent: \"center\",\r\n          position: \"absolute\",\r\n        }}\r\n      >\r\n        <Animated.View\r\n          style={{\r\n            justifyContent: \"center\",\r\n            flexDirection: \"row\",\r\n          }}\r\n        >\r\n          <Animated.View\r\n            style={{\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Animated.View\r\n              style={{\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              {randomBoolean.current ? (\r\n                <MuteForSwipeableSvg\r\n                  width={screenWidth * 0.085}\r\n                  height={screenHeight * 0.05}\r\n                  color=\"white\"\r\n                />\r\n              ) : (\r\n                <UnMuteForSwipeableSvg\r\n                  width={screenWidth * 0.085}\r\n                  height={screenHeight * 0.05}\r\n                  color=\"white\"\r\n                />\r\n              )}\r\n            </Animated.View>\r\n            <Animated.Text\r\n              style={{\r\n                color: \"white\",\r\n                alignSelf: \"center\",\r\n              }}\r\n            >\r\n              Notification\r\n            </Animated.Text>\r\n          </Animated.View>\r\n        </Animated.View>\r\n      </Animated.View>\r\n    </Animated.View>\r\n  );\r\n};\r\n\r\nexport default connect(null)(NotificationStatusContainerForRightContainerForSwipe);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}