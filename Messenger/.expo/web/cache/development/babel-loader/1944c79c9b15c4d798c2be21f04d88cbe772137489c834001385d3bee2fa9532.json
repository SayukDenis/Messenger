{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { styles } from \"./Styles\";\nimport { useIsFocused } from \"@react-navigation/native\";\nimport Multimedia from \"../MainScreen/Multimedia/Multimedia\";\nimport Blur from \"../../GeneralComponents/Blur\";\nimport RemovalApproval from \"../../GeneralComponents/RemovalApproval\";\nimport { GetProfile } from \"../../DatabaseSimulation/DBFunctions\";\nimport { Album } from \"../../DatabaseSimulation/DBClasses\";\nimport AlbumLongPressedMenu from \"../MainScreen/Multimedia/AlbumLongPressedMenu\";\nimport BottomToolBar from \"../MainScreen/ButtomToolBar\";\nimport AvatarsNameAndGoBackButton from \"./AvatarsNameAndGoBackButton\";\nimport TopMenuWhenSelection from \"../../GeneralComponents/TopMenuWhenSelection\";\nimport NumberUsernameAndBio from \"./NumberUsernameAndBio\";\nimport CurrentAvatarBar from \"./CurrentAvatarBar\";\nimport MessageAboutCopying from \"./MessageAboutCopying\";\nimport CallingMenu from \"./CallingMenu\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { pickedProfile } from \"../../DatabaseSimulation/DBVariables\";\nimport CopyLinkButton from \"./CopyLinkButton\";\nimport SubscribersButton from \"./SubscribersButton\";\nimport * as Clipboard from \"expo-clipboard\";\nimport { channel } from \"../../DatabaseSimulation/DBChannel\";\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar screenHeight = Dimensions.get(\"screen\").height;\nvar AvatarsAndInfoScreen = function AvatarsAndInfoScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    removalApprovalText = _useState2[0],\n    setRemovalApprovalText = _useState2[1];\n  var _useState3 = useState(\"Photos\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    pressedMultimediaButton = _useState4[0],\n    _setPressedMultimediaButton = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isPhotoAlbumSelectionVisible = _useState6[0],\n    _setIsPhotoAlbumSelectionVisible = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    longPressedAlbum = _useState8[0],\n    setLongPressedAlbum = _useState8[1];\n  var _useState9 = useState(0),\n    _useState10 = _slicedToArray(_useState9, 2),\n    positionYOfLongPressedAlbum = _useState10[0],\n    setPositionYOfLongPressedAlbum = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isMultimediaSelectionVisible = _useState12[0],\n    setIsMultimediaSelectionVisible = _useState12[1];\n  var _useState13 = useState([]),\n    _useState14 = _slicedToArray(_useState13, 2),\n    selectedMultimedia = _useState14[0],\n    setSelectedMultimedia = _useState14[1];\n  var _useState15 = useState(GetProfile().avatars[0]),\n    _useState16 = _slicedToArray(_useState15, 2),\n    currentAvatar = _useState16[0],\n    setCurrentAvatar = _useState16[1];\n  var _useState17 = useState(\"\"),\n    _useState18 = _slicedToArray(_useState17, 2),\n    copiedInfoName = _useState18[0],\n    setCopiedInfoName = _useState18[1];\n  var _useState19 = useState(false),\n    _useState20 = _slicedToArray(_useState19, 2),\n    isNumberPressed = _useState20[0],\n    setIsNumberPressed = _useState20[1];\n  var isFocused = useIsFocused();\n  useEffect(function () {}, [isFocused]);\n  var removalApprovalsTexts = [\"delete an album\", \"delete all albums\", \"delete selected albums\"];\n  var removalApprovalsOnPress = [function () {\n    GetProfile().albums.splice(GetProfile().albums.indexOf(longPressedAlbum), 1);\n    setLongPressedAlbum(null);\n  }, function () {\n    GetProfile().albums = Array();\n    setIsMultimediaSelectionVisible(false);\n  }, function () {\n    selectedMultimedia.forEach(function (album) {\n      if (album instanceof Album) {\n        GetProfile().albums.splice(GetProfile().albums.indexOf(album), 1);\n      }\n    });\n    setSelectedMultimedia(Array());\n    setIsMultimediaSelectionVisible(false);\n  }];\n  var HandleMultimediaLongPress = function HandleMultimediaLongPress(value) {\n    setIsMultimediaSelectionVisible(true);\n    if (!selectedMultimedia.includes(value)) {\n      setSelectedMultimedia(selectedMultimedia.concat([value]));\n    } else {\n      setSelectedMultimedia(selectedMultimedia.filter(function (photoOrVideo) {\n        return photoOrVideo !== value;\n      }));\n    }\n  };\n  var copyToClipboard = function copyToClipboard(text) {\n    Clipboard.setString(text);\n  };\n  return _jsxs(LinearGradient, {\n    colors: [\"#cf9b95\", \"#c98bb8\", \"#c37adb\"],\n    style: {\n      flex: 1\n    },\n    children: [_jsx(Blur, {\n      visibleWhen: isPhotoAlbumSelectionVisible || longPressedAlbum != null || isNumberPressed,\n      onPress: function onPress() {\n        _setIsPhotoAlbumSelectionVisible(false);\n        setLongPressedAlbum(null);\n        setIsNumberPressed(false);\n      },\n      style: styles.blurEffect\n    }), _jsx(Blur, {\n      visibleWhen: removalApprovalText != \"\",\n      onPress: function onPress() {\n        setRemovalApprovalText(\"\");\n      },\n      style: [styles.blurEffect, {\n        zIndex: 3\n      }]\n    }), removalApprovalsTexts.map(function (item, index) {\n      return _jsx(RemovalApproval, {\n        isVisible: removalApprovalText == item,\n        onAnyPress: function onAnyPress() {\n          setRemovalApprovalText(\"\");\n        },\n        onAgreePress: function onAgreePress() {\n          removalApprovalsOnPress[index]();\n        },\n        text: \"Do you really want to \" + item + \"?\"\n      }, item);\n    }), _jsx(TopMenuWhenSelection, {\n      isVisible: isMultimediaSelectionVisible,\n      quantityOfSelectedItems: selectedMultimedia.length,\n      onCancelPress: function onCancelPress() {\n        setSelectedMultimedia([]);\n        setIsMultimediaSelectionVisible(false);\n      },\n      onDeleteAllPress: function onDeleteAllPress() {\n        setRemovalApprovalText(\"delete all albums\");\n      }\n    }), _jsx(AlbumLongPressedMenu, {\n      isVisible: longPressedAlbum != null,\n      longPressedAlbum: longPressedAlbum,\n      positionYOfLongPressedAlbum: positionYOfLongPressedAlbum,\n      onDeleteAlbumPress: function onDeleteAlbumPress() {\n        setRemovalApprovalText(\"delete an album\");\n      },\n      onSelectAlbumPress: function onSelectAlbumPress() {\n        setIsMultimediaSelectionVisible(true);\n        setSelectedMultimedia(selectedMultimedia == null ? void 0 : selectedMultimedia.concat([longPressedAlbum]));\n        setLongPressedAlbum(null);\n      }\n    }), _jsx(BottomToolBar, {\n      isVisible: isMultimediaSelectionVisible,\n      onDeletePress: function onDeletePress() {\n        setRemovalApprovalText(\"delete selected albums\");\n      },\n      onForwardPress: function onForwardPress() {\n        alert(\"Forward album...\");\n      }\n    }), _jsx(CallingMenu, {\n      isVisible: isNumberPressed,\n      onCopyPress: function onCopyPress() {\n        setCopiedInfoName(\"Number\");\n      },\n      onCancelPress: function onCancelPress() {\n        setIsNumberPressed(false);\n      }\n    }), _jsxs(ScrollView, {\n      style: {\n        flex: 1,\n        zIndex: isPhotoAlbumSelectionVisible ? 2 : 0\n      },\n      contentContainerStyle: {\n        zIndex: isPhotoAlbumSelectionVisible ? 2 : 0\n      },\n      overScrollMode: \"never\",\n      showsVerticalScrollIndicator: false,\n      onScroll: function onScroll() {\n        _setIsPhotoAlbumSelectionVisible(false);\n      },\n      children: [_jsx(Blur, {\n        visibleWhen: isPhotoAlbumSelectionVisible,\n        onPress: function onPress() {\n          _setIsPhotoAlbumSelectionVisible(false);\n        },\n        style: [styles.blurEffect, {\n          zIndex: 3\n        }]\n      }), _jsx(AvatarsNameAndGoBackButton, {\n        onGoBackPress: function onGoBackPress() {\n          navigation.goBack();\n        },\n        currentAvatar: currentAvatar,\n        onRightPress: function onRightPress() {\n          setCurrentAvatar(GetProfile().avatars[(GetProfile().avatars.indexOf(currentAvatar) + 1) % GetProfile().avatars.length]);\n        },\n        onLeftPress: function onLeftPress() {\n          setCurrentAvatar(GetProfile().avatars[GetProfile().avatars.indexOf(currentAvatar) - 1 > -1 ? GetProfile().avatars.indexOf(currentAvatar) - 1 : GetProfile().avatars.length - 1]);\n        }\n      }), _jsx(CurrentAvatarBar, {\n        currentAvatar: currentAvatar\n      }), pickedProfile.current == \"channel\" && _jsxs(_Fragment, {\n        children: [_jsx(CopyLinkButton, {\n          onPress: function onPress() {\n            copyToClipboard(channel.link);\n            setCopiedInfoName(\"Channel link\");\n          }\n        }), _jsx(SubscribersButton, {\n          onPress: function onPress() {\n            navigation.navigate(\"SubscribersScreen\");\n          }\n        })]\n      }), _jsx(NumberUsernameAndBio, {\n        onUsernamePress: function onUsernamePress(text) {\n          setCopiedInfoName(text);\n        },\n        onNumberPress: function onNumberPress() {\n          return setIsNumberPressed(true);\n        }\n      }), _jsx(View, {\n        style: {\n          top: 0.03 * screenHeight,\n          height: 0.02 * screenHeight\n        }\n      }), _jsx(Multimedia, {\n        isPhotoAlbumSelectionVisible: isPhotoAlbumSelectionVisible,\n        setIsPhotoAlbumSelectionVisible: function setIsPhotoAlbumSelectionVisible(value) {\n          return _setIsPhotoAlbumSelectionVisible(value);\n        },\n        pressedMultimediaButton: pressedMultimediaButton,\n        setPressedMultimediaButton: function setPressedMultimediaButton(value) {\n          _setPressedMultimediaButton(value);\n        },\n        onAnyPressWhileSelection: function onAnyPressWhileSelection(value) {\n          if (isMultimediaSelectionVisible) {\n            if (!selectedMultimedia.includes(value)) {\n              setSelectedMultimedia(selectedMultimedia.concat([value]));\n            } else {\n              setSelectedMultimedia(selectedMultimedia.filter(function (item) {\n                return item !== value;\n              }));\n            }\n          }\n        },\n        onPhotoPress: function onPhotoPress(value) {\n          GetProfile().selectedPhoto = value;\n          navigation.navigate(\"PhotoScreen\");\n        },\n        onAlbumPress: function onAlbumPress(value) {\n          GetProfile().selectedAlbum = value;\n          navigation.navigate(\"Album\");\n        },\n        onNewAlbumPress: function onNewAlbumPress() {\n          navigation.navigate(\"NewAlbumScreen\");\n        },\n        onAnyLongPressExceptAlbum: function onAnyLongPressExceptAlbum(value) {\n          HandleMultimediaLongPress(value);\n        },\n        onAlbumLongPress: function onAlbumLongPress(value, event) {\n          if (!isMultimediaSelectionVisible) {\n            setLongPressedAlbum(value);\n            setPositionYOfLongPressedAlbum(event.nativeEvent.pageY + 0.05 * screenHeight);\n          } else {\n            HandleMultimediaLongPress(value);\n          }\n        },\n        isMultimediaSelectionVisible: isMultimediaSelectionVisible,\n        isCheckMarkVisible: function isCheckMarkVisible(value) {\n          return selectedMultimedia.includes(value);\n        }\n      })]\n    }), _jsx(MessageAboutCopying, {\n      isVisible: copiedInfoName != \"\",\n      onEnd: function onEnd() {\n        setCopiedInfoName(\"\");\n      },\n      text: copiedInfoName + \" is copied\"\n    })]\n  });\n};\nexport default AvatarsAndInfoScreen;","map":{"version":3,"names":["React","useState","useEffect","View","ScrollView","Dimensions","styles","useIsFocused","Multimedia","Blur","RemovalApproval","GetProfile","Album","AlbumLongPressedMenu","BottomToolBar","AvatarsNameAndGoBackButton","TopMenuWhenSelection","NumberUsernameAndBio","CurrentAvatarBar","MessageAboutCopying","CallingMenu","LinearGradient","pickedProfile","CopyLinkButton","SubscribersButton","Clipboard","channel","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","screenHeight","get","height","AvatarsAndInfoScreen","_ref","navigation","_useState","_useState2","_slicedToArray","removalApprovalText","setRemovalApprovalText","_useState3","_useState4","pressedMultimediaButton","setPressedMultimediaButton","_useState5","_useState6","isPhotoAlbumSelectionVisible","setIsPhotoAlbumSelectionVisible","_useState7","_useState8","longPressedAlbum","setLongPressedAlbum","_useState9","_useState10","positionYOfLongPressedAlbum","setPositionYOfLongPressedAlbum","_useState11","_useState12","isMultimediaSelectionVisible","setIsMultimediaSelectionVisible","_useState13","_useState14","selectedMultimedia","setSelectedMultimedia","_useState15","avatars","_useState16","currentAvatar","setCurrentAvatar","_useState17","_useState18","copiedInfoName","setCopiedInfoName","_useState19","_useState20","isNumberPressed","setIsNumberPressed","isFocused","removalApprovalsTexts","removalApprovalsOnPress","albums","splice","indexOf","Array","forEach","album","HandleMultimediaLongPress","value","includes","concat","filter","photoOrVideo","copyToClipboard","text","setString","colors","style","flex","children","visibleWhen","onPress","blurEffect","zIndex","map","item","index","isVisible","onAnyPress","onAgreePress","quantityOfSelectedItems","length","onCancelPress","onDeleteAllPress","onDeleteAlbumPress","onSelectAlbumPress","onDeletePress","onForwardPress","alert","onCopyPress","contentContainerStyle","overScrollMode","showsVerticalScrollIndicator","onScroll","onGoBackPress","goBack","onRightPress","onLeftPress","current","link","navigate","onUsernamePress","onNumberPress","top","onAnyPressWhileSelection","onPhotoPress","selectedPhoto","onAlbumPress","selectedAlbum","onNewAlbumPress","onAnyLongPressExceptAlbum","onAlbumLongPress","event","nativeEvent","pageY","isCheckMarkVisible","onEnd"],"sources":["C:/Users/T480/source/repos/Messenger/Messenger/Pages/Profiles/SemiComponents/Screens/AvatarsAndInfoScreen/AvatarsAndInfoScreen.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { View, ScrollView, Dimensions } from \"react-native\";\r\nimport { styles } from \"./Styles\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport Multimedia from \"../MainScreen/Multimedia/Multimedia\";\r\nimport Blur from \"../../GeneralComponents/Blur\";\r\nimport RemovalApproval from \"../../GeneralComponents/RemovalApproval\";\r\nimport { GetProfile } from \"../../DatabaseSimulation/DBFunctions\";\r\nimport {\r\n  Album,\r\n  PhotoOrVideo,\r\n  File,\r\n  Voice,\r\n  Link,\r\n} from \"../../DatabaseSimulation/DBClasses\";\r\nimport AlbumLongPressedMenu from \"../MainScreen/Multimedia/AlbumLongPressedMenu\";\r\nimport BottomToolBar from \"../MainScreen/ButtomToolBar\";\r\nimport AvatarsNameAndGoBackButton from \"./AvatarsNameAndGoBackButton\";\r\nimport TopMenuWhenSelection from \"../../GeneralComponents/TopMenuWhenSelection\";\r\nimport NumberUsernameAndBio from \"./NumberUsernameAndBio\";\r\nimport CurrentAvatarBar from \"./CurrentAvatarBar\";\r\nimport MessageAboutCopying from \"./MessageAboutCopying\";\r\nimport CallingMenu from \"./CallingMenu\";\r\nimport { GestureResponderEvent } from \"react-native-modal\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { pickedProfile } from \"../../DatabaseSimulation/DBVariables\";\r\nimport CopyLinkButton from \"./CopyLinkButton\";\r\nimport SubscribersButton from \"./SubscribersButton\";\r\nimport * as Clipboard from \"expo-clipboard\";\r\nimport { channel } from \"../../DatabaseSimulation/DBChannel\";\r\n\r\nconst screenHeight = Dimensions.get(\"screen\").height;\r\n\r\ntype AvatarsAndInfoScreenProps = {\r\n  navigation: StackNavigationProp<{}>; // Встановіть правильний тип для navigation\r\n};\r\n\r\nconst AvatarsAndInfoScreen: React.FC<AvatarsAndInfoScreenProps> = ({\r\n  navigation,\r\n}) => {\r\n  const [removalApprovalText, setRemovalApprovalText] = useState(\"\");\r\n  const [pressedMultimediaButton, setPressedMultimediaButton] =\r\n    useState(\"Photos\");\r\n  const [isPhotoAlbumSelectionVisible, setIsPhotoAlbumSelectionVisible] =\r\n    useState(false);\r\n  const [longPressedAlbum, setLongPressedAlbum] = useState(null);\r\n  const [positionYOfLongPressedAlbum, setPositionYOfLongPressedAlbum] =\r\n    useState(0);\r\n  const [isMultimediaSelectionVisible, setIsMultimediaSelectionVisible] =\r\n    useState(false);\r\n  const [selectedMultimedia, setSelectedMultimedia] = useState<\r\n    Array<Album | PhotoOrVideo | File | Voice | Link>\r\n  >([]);\r\n  const [currentAvatar, setCurrentAvatar] = useState(GetProfile().avatars[0]);\r\n  const [copiedInfoName, setCopiedInfoName] = useState(\"\");\r\n  const [isNumberPressed, setIsNumberPressed] = useState(false);\r\n\r\n  const isFocused = useIsFocused();\r\n\r\n  useEffect(() => {}, [isFocused]);\r\n\r\n  const removalApprovalsTexts: string[] = [\r\n    \"delete an album\",\r\n    \"delete all albums\",\r\n    \"delete selected albums\",\r\n  ];\r\n\r\n  const removalApprovalsOnPress: (() => void)[] = [\r\n    () => {\r\n      GetProfile().albums.splice(\r\n        GetProfile().albums.indexOf(longPressedAlbum),\r\n        1\r\n      );\r\n      setLongPressedAlbum(null);\r\n    },\r\n    () => {\r\n      GetProfile().albums = Array<Album>();\r\n      setIsMultimediaSelectionVisible(false);\r\n    },\r\n    () => {\r\n      selectedMultimedia.forEach((album) => {\r\n        if (album instanceof Album) {\r\n          GetProfile().albums.splice(GetProfile().albums.indexOf(album), 1);\r\n        }\r\n      });\r\n      setSelectedMultimedia(Array<Album>());\r\n      setIsMultimediaSelectionVisible(false);\r\n    },\r\n  ];\r\n\r\n  const HandleMultimediaLongPress = (\r\n    value: PhotoOrVideo | Album | File | Voice | Link\r\n  ) => {\r\n    setIsMultimediaSelectionVisible(true);\r\n    if (!selectedMultimedia.includes(value)) {\r\n      setSelectedMultimedia(selectedMultimedia.concat([value]));\r\n    } else {\r\n      setSelectedMultimedia(\r\n        selectedMultimedia.filter((photoOrVideo) => photoOrVideo !== value)\r\n      );\r\n    }\r\n  };\r\n\r\n  const copyToClipboard = (text: string) => {\r\n    Clipboard.setString(text);\r\n  };\r\n\r\n  return (\r\n    <LinearGradient\r\n      colors={[\"#cf9b95\", \"#c98bb8\", \"#c37adb\"]}\r\n      style={{ flex: 1 }}\r\n    >\r\n      {/* General blur with zIndex 1 */}\r\n      <Blur\r\n        visibleWhen={\r\n          isPhotoAlbumSelectionVisible ||\r\n          longPressedAlbum != null ||\r\n          isNumberPressed\r\n        }\r\n        onPress={() => {\r\n          setIsPhotoAlbumSelectionVisible(false);\r\n          setLongPressedAlbum(null);\r\n          setIsNumberPressed(false);\r\n        }}\r\n        style={styles.blurEffect}\r\n      />\r\n\r\n      {/* Blur over blur with zIndex 3 */}\r\n      <Blur\r\n        visibleWhen={removalApprovalText != \"\"}\r\n        onPress={() => {\r\n          setRemovalApprovalText(\"\");\r\n        }}\r\n        style={[\r\n          styles.blurEffect,\r\n          {\r\n            zIndex: 3,\r\n          },\r\n        ]}\r\n      />\r\n\r\n      {removalApprovalsTexts.map((item, index) => {\r\n        return (\r\n          <RemovalApproval\r\n            key={item}\r\n            isVisible={removalApprovalText == item}\r\n            onAnyPress={() => {\r\n              setRemovalApprovalText(\"\");\r\n            }}\r\n            onAgreePress={() => {\r\n              removalApprovalsOnPress[index]();\r\n            }}\r\n            text={\"Do you really want to \" + item + \"?\"}\r\n          />\r\n        );\r\n      })}\r\n\r\n      <TopMenuWhenSelection\r\n        isVisible={isMultimediaSelectionVisible}\r\n        quantityOfSelectedItems={selectedMultimedia.length}\r\n        onCancelPress={() => {\r\n          setSelectedMultimedia([]);\r\n          setIsMultimediaSelectionVisible(false);\r\n        }}\r\n        onDeleteAllPress={() => {\r\n          setRemovalApprovalText(\"delete all albums\");\r\n        }}\r\n      />\r\n\r\n      <AlbumLongPressedMenu\r\n        isVisible={longPressedAlbum != null}\r\n        longPressedAlbum={longPressedAlbum}\r\n        positionYOfLongPressedAlbum={positionYOfLongPressedAlbum}\r\n        onDeleteAlbumPress={() => {\r\n          setRemovalApprovalText(\"delete an album\");\r\n        }}\r\n        onSelectAlbumPress={() => {\r\n          setIsMultimediaSelectionVisible(true);\r\n          setSelectedMultimedia(selectedMultimedia?.concat([longPressedAlbum]));\r\n          setLongPressedAlbum(null);\r\n        }}\r\n      />\r\n\r\n      <BottomToolBar\r\n        isVisible={isMultimediaSelectionVisible}\r\n        onDeletePress={() => {\r\n          setRemovalApprovalText(\"delete selected albums\");\r\n        }}\r\n        onForwardPress={() => {\r\n          alert(\"Forward album...\");\r\n        }}\r\n      />\r\n\r\n      <CallingMenu\r\n        isVisible={isNumberPressed}\r\n        onCopyPress={() => {\r\n          setCopiedInfoName(\"Number\");\r\n        }}\r\n        onCancelPress={() => {\r\n          setIsNumberPressed(false);\r\n        }}\r\n      />\r\n\r\n      <ScrollView\r\n        style={{\r\n          flex: 1,\r\n          zIndex: isPhotoAlbumSelectionVisible ? 2 : 0,\r\n        }}\r\n        contentContainerStyle={{\r\n          zIndex: isPhotoAlbumSelectionVisible ? 2 : 0,\r\n        }}\r\n        overScrollMode=\"never\"\r\n        showsVerticalScrollIndicator={false}\r\n        onScroll={() => {\r\n          setIsPhotoAlbumSelectionVisible(false);\r\n        }}\r\n      >\r\n        <Blur\r\n          visibleWhen={isPhotoAlbumSelectionVisible}\r\n          onPress={() => {\r\n            setIsPhotoAlbumSelectionVisible(false);\r\n          }}\r\n          style={[styles.blurEffect, { zIndex: 3 }]}\r\n        />\r\n\r\n        <AvatarsNameAndGoBackButton\r\n          onGoBackPress={() => {\r\n            navigation.goBack();\r\n          }}\r\n          currentAvatar={currentAvatar}\r\n          onRightPress={() => {\r\n            setCurrentAvatar(\r\n              GetProfile().avatars[\r\n                (GetProfile().avatars.indexOf(currentAvatar) + 1) %\r\n                  GetProfile().avatars.length\r\n              ]\r\n            );\r\n          }}\r\n          onLeftPress={() => {\r\n            setCurrentAvatar(\r\n              GetProfile().avatars[\r\n                GetProfile().avatars.indexOf(currentAvatar) - 1 > -1\r\n                  ? GetProfile().avatars.indexOf(currentAvatar) - 1\r\n                  : GetProfile().avatars.length - 1\r\n              ]\r\n            );\r\n          }}\r\n        />\r\n\r\n        <CurrentAvatarBar currentAvatar={currentAvatar} />\r\n\r\n        {pickedProfile.current == \"channel\" && (\r\n          <>\r\n            <CopyLinkButton\r\n              onPress={() => {\r\n                copyToClipboard(channel.link);\r\n                setCopiedInfoName(\"Channel link\");\r\n              }}\r\n            />\r\n            <SubscribersButton\r\n              onPress={() => {\r\n                navigation.navigate(\"SubscribersScreen\" as never);\r\n              }}\r\n            />\r\n          </>\r\n        )}\r\n\r\n        <NumberUsernameAndBio\r\n          onUsernamePress={(text: string) => {\r\n            setCopiedInfoName(text);\r\n          }}\r\n          onNumberPress={() => setIsNumberPressed(true)}\r\n        />\r\n\r\n        <View\r\n          style={{\r\n            top: 0.03 * screenHeight,\r\n            height: 0.02 * screenHeight,\r\n          }}\r\n        />\r\n\r\n        {/* Multimedia with photo/albums, files, voice, links*/}\r\n        <Multimedia\r\n          isPhotoAlbumSelectionVisible={isPhotoAlbumSelectionVisible}\r\n          setIsPhotoAlbumSelectionVisible={(value: boolean) =>\r\n            setIsPhotoAlbumSelectionVisible(value)\r\n          }\r\n          pressedMultimediaButton={pressedMultimediaButton}\r\n          setPressedMultimediaButton={(value: string) => {\r\n            setPressedMultimediaButton(value);\r\n          }}\r\n          onAnyPressWhileSelection={(\r\n            value: Album | PhotoOrVideo | File | Voice | Link\r\n          ) => {\r\n            if (isMultimediaSelectionVisible) {\r\n              if (!selectedMultimedia.includes(value)) {\r\n                setSelectedMultimedia(selectedMultimedia.concat([value]));\r\n              } else {\r\n                setSelectedMultimedia(\r\n                  selectedMultimedia.filter((item) => item !== value)\r\n                );\r\n              }\r\n            }\r\n          }}\r\n          onPhotoPress={(value: PhotoOrVideo) => {\r\n            GetProfile().selectedPhoto = value;\r\n            navigation.navigate(\"PhotoScreen\" as never);\r\n          }}\r\n          onAlbumPress={(value: Album) => {\r\n            GetProfile().selectedAlbum = value;\r\n            navigation.navigate(\"Album\" as never);\r\n          }}\r\n          onNewAlbumPress={() => {\r\n            navigation.navigate(\"NewAlbumScreen\" as never);\r\n          }}\r\n          onAnyLongPressExceptAlbum={(\r\n            value: PhotoOrVideo | File | Voice | Link\r\n          ) => {\r\n            HandleMultimediaLongPress(value);\r\n          }}\r\n          onAlbumLongPress={(value: Album, event: GestureResponderEvent) => {\r\n            if (!isMultimediaSelectionVisible) {\r\n              setLongPressedAlbum(value);\r\n              setPositionYOfLongPressedAlbum(\r\n                event.nativeEvent.pageY + 0.05 * screenHeight\r\n              );\r\n            } else {\r\n              HandleMultimediaLongPress(value);\r\n            }\r\n          }}\r\n          isMultimediaSelectionVisible={isMultimediaSelectionVisible}\r\n          isCheckMarkVisible={(\r\n            value: Album | PhotoOrVideo | File | Voice | Link\r\n          ) => selectedMultimedia.includes(value)}\r\n        />\r\n      </ScrollView>\r\n\r\n      <MessageAboutCopying\r\n        isVisible={copiedInfoName != \"\"}\r\n        onEnd={() => {\r\n          setCopiedInfoName(\"\");\r\n        }}\r\n        text={copiedInfoName + \" is copied\"}\r\n      />\r\n    </LinearGradient>\r\n  );\r\n};\r\n\r\nexport default AvatarsAndInfoScreen;\r\n"],"mappings":";AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAEnD,SAASC,MAAM;AAEf,SAASC,YAAY,QAAQ,0BAA0B;AACvD,OAAOC,UAAU;AACjB,OAAOC,IAAI;AACX,OAAOC,eAAe;AACtB,SAASC,UAAU;AACnB,SACEC,KAAK;AAMP,OAAOC,oBAAoB;AAC3B,OAAOC,aAAa;AACpB,OAAOC,0BAA0B;AACjC,OAAOC,oBAAoB;AAC3B,OAAOC,oBAAoB;AAC3B,OAAOC,gBAAgB;AACvB,OAAOC,mBAAmB;AAC1B,OAAOC,WAAW;AAElB,SAASC,cAAc,QAAQ,sBAAsB;AACrD,SAASC,aAAa;AACtB,OAAOC,cAAc;AACrB,OAAOC,iBAAiB;AACxB,OAAO,KAAKC,SAAS,MAAM,gBAAgB;AAC3C,SAASC,OAAO;AAA6C,SAAAC,GAAA,IAAAC,IAAA,EAAAC,QAAA,IAAAC,SAAA,EAAAC,IAAA,IAAAC,KAAA;AAE7D,IAAMC,YAAY,GAAG5B,UAAU,CAAC6B,GAAG,CAAC,QAAQ,CAAC,CAACC,MAAM;AAMpD,IAAMC,oBAAyD,GAAG,SAA5DA,oBAAyDA,CAAAC,IAAA,EAEzD;EAAA,IADJC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAEV,IAAAC,SAAA,GAAsDtC,QAAQ,CAAC,EAAE,CAAC;IAAAuC,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3DG,mBAAmB,GAAAF,UAAA;IAAEG,sBAAsB,GAAAH,UAAA;EAClD,IAAAI,UAAA,GACE3C,QAAQ,CAAC,QAAQ,CAAC;IAAA4C,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IADbE,uBAAuB,GAAAD,UAAA;IAAEE,2BAA0B,GAAAF,UAAA;EAE1D,IAAAG,UAAA,GACE/C,QAAQ,CAAC,KAAK,CAAC;IAAAgD,UAAA,GAAAR,cAAA,CAAAO,UAAA;IADVE,4BAA4B,GAAAD,UAAA;IAAEE,gCAA+B,GAAAF,UAAA;EAEpE,IAAAG,UAAA,GAAgDnD,QAAQ,CAAC,IAAI,CAAC;IAAAoD,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAAvDE,gBAAgB,GAAAD,UAAA;IAAEE,mBAAmB,GAAAF,UAAA;EAC5C,IAAAG,UAAA,GACEvD,QAAQ,CAAC,CAAC,CAAC;IAAAwD,WAAA,GAAAhB,cAAA,CAAAe,UAAA;IADNE,2BAA2B,GAAAD,WAAA;IAAEE,8BAA8B,GAAAF,WAAA;EAElE,IAAAG,WAAA,GACE3D,QAAQ,CAAC,KAAK,CAAC;IAAA4D,WAAA,GAAApB,cAAA,CAAAmB,WAAA;IADVE,4BAA4B,GAAAD,WAAA;IAAEE,+BAA+B,GAAAF,WAAA;EAEpE,IAAAG,WAAA,GAAoD/D,QAAQ,CAE1D,EAAE,CAAC;IAAAgE,WAAA,GAAAxB,cAAA,CAAAuB,WAAA;IAFEE,kBAAkB,GAAAD,WAAA;IAAEE,qBAAqB,GAAAF,WAAA;EAGhD,IAAAG,WAAA,GAA0CnE,QAAQ,CAACU,UAAU,CAAC,CAAC,CAAC0D,OAAO,CAAC,CAAC,CAAC,CAAC;IAAAC,WAAA,GAAA7B,cAAA,CAAA2B,WAAA;IAApEG,aAAa,GAAAD,WAAA;IAAEE,gBAAgB,GAAAF,WAAA;EACtC,IAAAG,WAAA,GAA4CxE,QAAQ,CAAC,EAAE,CAAC;IAAAyE,WAAA,GAAAjC,cAAA,CAAAgC,WAAA;IAAjDE,cAAc,GAAAD,WAAA;IAAEE,iBAAiB,GAAAF,WAAA;EACxC,IAAAG,WAAA,GAA8C5E,QAAQ,CAAC,KAAK,CAAC;IAAA6E,WAAA,GAAArC,cAAA,CAAAoC,WAAA;IAAtDE,eAAe,GAAAD,WAAA;IAAEE,kBAAkB,GAAAF,WAAA;EAE1C,IAAMG,SAAS,GAAG1E,YAAY,CAAC,CAAC;EAEhCL,SAAS,CAAC,YAAM,CAAC,CAAC,EAAE,CAAC+E,SAAS,CAAC,CAAC;EAEhC,IAAMC,qBAA+B,GAAG,CACtC,iBAAiB,EACjB,mBAAmB,EACnB,wBAAwB,CACzB;EAED,IAAMC,uBAAuC,GAAG,CAC9C,YAAM;IACJxE,UAAU,CAAC,CAAC,CAACyE,MAAM,CAACC,MAAM,CACxB1E,UAAU,CAAC,CAAC,CAACyE,MAAM,CAACE,OAAO,CAAChC,gBAAgB,CAAC,EAC7C,CACF,CAAC;IACDC,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC,EACD,YAAM;IACJ5C,UAAU,CAAC,CAAC,CAACyE,MAAM,GAAGG,KAAK,CAAQ,CAAC;IACpCxB,+BAA+B,CAAC,KAAK,CAAC;EACxC,CAAC,EACD,YAAM;IACJG,kBAAkB,CAACsB,OAAO,CAAC,UAACC,KAAK,EAAK;MACpC,IAAIA,KAAK,YAAY7E,KAAK,EAAE;QAC1BD,UAAU,CAAC,CAAC,CAACyE,MAAM,CAACC,MAAM,CAAC1E,UAAU,CAAC,CAAC,CAACyE,MAAM,CAACE,OAAO,CAACG,KAAK,CAAC,EAAE,CAAC,CAAC;MACnE;IACF,CAAC,CAAC;IACFtB,qBAAqB,CAACoB,KAAK,CAAQ,CAAC,CAAC;IACrCxB,+BAA+B,CAAC,KAAK,CAAC;EACxC,CAAC,CACF;EAED,IAAM2B,yBAAyB,GAAG,SAA5BA,yBAAyBA,CAC7BC,KAAiD,EAC9C;IACH5B,+BAA+B,CAAC,IAAI,CAAC;IACrC,IAAI,CAACG,kBAAkB,CAAC0B,QAAQ,CAACD,KAAK,CAAC,EAAE;MACvCxB,qBAAqB,CAACD,kBAAkB,CAAC2B,MAAM,CAAC,CAACF,KAAK,CAAC,CAAC,CAAC;IAC3D,CAAC,MAAM;MACLxB,qBAAqB,CACnBD,kBAAkB,CAAC4B,MAAM,CAAC,UAACC,YAAY;QAAA,OAAKA,YAAY,KAAKJ,KAAK;MAAA,EACpE,CAAC;IACH;EACF,CAAC;EAED,IAAMK,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,IAAY,EAAK;IACxCxE,SAAS,CAACyE,SAAS,CAACD,IAAI,CAAC;EAC3B,CAAC;EAED,OACEjE,KAAA,CAACX,cAAc;IACb8E,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAE;IAC1CC,KAAK,EAAE;MAAEC,IAAI,EAAE;IAAE,CAAE;IAAAC,QAAA,GAGnB1E,IAAA,CAACnB,IAAI;MACH8F,WAAW,EACTrD,4BAA4B,IAC5BI,gBAAgB,IAAI,IAAI,IACxByB,eACD;MACDyB,OAAO,EAAE,SAAAA,QAAA,EAAM;QACbrD,gCAA+B,CAAC,KAAK,CAAC;QACtCI,mBAAmB,CAAC,IAAI,CAAC;QACzByB,kBAAkB,CAAC,KAAK,CAAC;MAC3B,CAAE;MACFoB,KAAK,EAAE9F,MAAM,CAACmG;IAAW,CAC1B,CAAC,EAGF7E,IAAA,CAACnB,IAAI;MACH8F,WAAW,EAAE7D,mBAAmB,IAAI,EAAG;MACvC8D,OAAO,EAAE,SAAAA,QAAA,EAAM;QACb7D,sBAAsB,CAAC,EAAE,CAAC;MAC5B,CAAE;MACFyD,KAAK,EAAE,CACL9F,MAAM,CAACmG,UAAU,EACjB;QACEC,MAAM,EAAE;MACV,CAAC;IACD,CACH,CAAC,EAEDxB,qBAAqB,CAACyB,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK,EAAK;MAC1C,OACEjF,IAAA,CAAClB,eAAe;QAEdoG,SAAS,EAAEpE,mBAAmB,IAAIkE,IAAK;QACvCG,UAAU,EAAE,SAAAA,WAAA,EAAM;UAChBpE,sBAAsB,CAAC,EAAE,CAAC;QAC5B,CAAE;QACFqE,YAAY,EAAE,SAAAA,aAAA,EAAM;UAClB7B,uBAAuB,CAAC0B,KAAK,CAAC,CAAC,CAAC;QAClC,CAAE;QACFZ,IAAI,EAAE,wBAAwB,GAAGW,IAAI,GAAG;MAAI,GARvCA,IASN,CAAC;IAEN,CAAC,CAAC,EAEFhF,IAAA,CAACZ,oBAAoB;MACnB8F,SAAS,EAAEhD,4BAA6B;MACxCmD,uBAAuB,EAAE/C,kBAAkB,CAACgD,MAAO;MACnDC,aAAa,EAAE,SAAAA,cAAA,EAAM;QACnBhD,qBAAqB,CAAC,EAAE,CAAC;QACzBJ,+BAA+B,CAAC,KAAK,CAAC;MACxC,CAAE;MACFqD,gBAAgB,EAAE,SAAAA,iBAAA,EAAM;QACtBzE,sBAAsB,CAAC,mBAAmB,CAAC;MAC7C;IAAE,CACH,CAAC,EAEFf,IAAA,CAACf,oBAAoB;MACnBiG,SAAS,EAAExD,gBAAgB,IAAI,IAAK;MACpCA,gBAAgB,EAAEA,gBAAiB;MACnCI,2BAA2B,EAAEA,2BAA4B;MACzD2D,kBAAkB,EAAE,SAAAA,mBAAA,EAAM;QACxB1E,sBAAsB,CAAC,iBAAiB,CAAC;MAC3C,CAAE;MACF2E,kBAAkB,EAAE,SAAAA,mBAAA,EAAM;QACxBvD,+BAA+B,CAAC,IAAI,CAAC;QACrCI,qBAAqB,CAACD,kBAAkB,oBAAlBA,kBAAkB,CAAE2B,MAAM,CAAC,CAACvC,gBAAgB,CAAC,CAAC,CAAC;QACrEC,mBAAmB,CAAC,IAAI,CAAC;MAC3B;IAAE,CACH,CAAC,EAEF3B,IAAA,CAACd,aAAa;MACZgG,SAAS,EAAEhD,4BAA6B;MACxCyD,aAAa,EAAE,SAAAA,cAAA,EAAM;QACnB5E,sBAAsB,CAAC,wBAAwB,CAAC;MAClD,CAAE;MACF6E,cAAc,EAAE,SAAAA,eAAA,EAAM;QACpBC,KAAK,CAAC,kBAAkB,CAAC;MAC3B;IAAE,CACH,CAAC,EAEF7F,IAAA,CAACR,WAAW;MACV0F,SAAS,EAAE/B,eAAgB;MAC3B2C,WAAW,EAAE,SAAAA,YAAA,EAAM;QACjB9C,iBAAiB,CAAC,QAAQ,CAAC;MAC7B,CAAE;MACFuC,aAAa,EAAE,SAAAA,cAAA,EAAM;QACnBnC,kBAAkB,CAAC,KAAK,CAAC;MAC3B;IAAE,CACH,CAAC,EAEFhD,KAAA,CAAC5B,UAAU;MACTgG,KAAK,EAAE;QACLC,IAAI,EAAE,CAAC;QACPK,MAAM,EAAExD,4BAA4B,GAAG,CAAC,GAAG;MAC7C,CAAE;MACFyE,qBAAqB,EAAE;QACrBjB,MAAM,EAAExD,4BAA4B,GAAG,CAAC,GAAG;MAC7C,CAAE;MACF0E,cAAc,EAAC,OAAO;MACtBC,4BAA4B,EAAE,KAAM;MACpCC,QAAQ,EAAE,SAAAA,SAAA,EAAM;QACd3E,gCAA+B,CAAC,KAAK,CAAC;MACxC,CAAE;MAAAmD,QAAA,GAEF1E,IAAA,CAACnB,IAAI;QACH8F,WAAW,EAAErD,4BAA6B;QAC1CsD,OAAO,EAAE,SAAAA,QAAA,EAAM;UACbrD,gCAA+B,CAAC,KAAK,CAAC;QACxC,CAAE;QACFiD,KAAK,EAAE,CAAC9F,MAAM,CAACmG,UAAU,EAAE;UAAEC,MAAM,EAAE;QAAE,CAAC;MAAE,CAC3C,CAAC,EAEF9E,IAAA,CAACb,0BAA0B;QACzBgH,aAAa,EAAE,SAAAA,cAAA,EAAM;UACnBzF,UAAU,CAAC0F,MAAM,CAAC,CAAC;QACrB,CAAE;QACFzD,aAAa,EAAEA,aAAc;QAC7B0D,YAAY,EAAE,SAAAA,aAAA,EAAM;UAClBzD,gBAAgB,CACd7D,UAAU,CAAC,CAAC,CAAC0D,OAAO,CAClB,CAAC1D,UAAU,CAAC,CAAC,CAAC0D,OAAO,CAACiB,OAAO,CAACf,aAAa,CAAC,GAAG,CAAC,IAC9C5D,UAAU,CAAC,CAAC,CAAC0D,OAAO,CAAC6C,MAAM,CAEjC,CAAC;QACH,CAAE;QACFgB,WAAW,EAAE,SAAAA,YAAA,EAAM;UACjB1D,gBAAgB,CACd7D,UAAU,CAAC,CAAC,CAAC0D,OAAO,CAClB1D,UAAU,CAAC,CAAC,CAAC0D,OAAO,CAACiB,OAAO,CAACf,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAChD5D,UAAU,CAAC,CAAC,CAAC0D,OAAO,CAACiB,OAAO,CAACf,aAAa,CAAC,GAAG,CAAC,GAC/C5D,UAAU,CAAC,CAAC,CAAC0D,OAAO,CAAC6C,MAAM,GAAG,CAAC,CAEvC,CAAC;QACH;MAAE,CACH,CAAC,EAEFtF,IAAA,CAACV,gBAAgB;QAACqD,aAAa,EAAEA;MAAc,CAAE,CAAC,EAEjDjD,aAAa,CAAC6G,OAAO,IAAI,SAAS,IACjCnG,KAAA,CAAAF,SAAA;QAAAwE,QAAA,GACE1E,IAAA,CAACL,cAAc;UACbiF,OAAO,EAAE,SAAAA,QAAA,EAAM;YACbR,eAAe,CAACtE,OAAO,CAAC0G,IAAI,CAAC;YAC7BxD,iBAAiB,CAAC,cAAc,CAAC;UACnC;QAAE,CACH,CAAC,EACFhD,IAAA,CAACJ,iBAAiB;UAChBgF,OAAO,EAAE,SAAAA,QAAA,EAAM;YACblE,UAAU,CAAC+F,QAAQ,CAAC,mBAA4B,CAAC;UACnD;QAAE,CACH,CAAC;MAAA,CACF,CACH,EAEDzG,IAAA,CAACX,oBAAoB;QACnBqH,eAAe,EAAE,SAAAA,gBAACrC,IAAY,EAAK;UACjCrB,iBAAiB,CAACqB,IAAI,CAAC;QACzB,CAAE;QACFsC,aAAa,EAAE,SAAAA,cAAA;UAAA,OAAMvD,kBAAkB,CAAC,IAAI,CAAC;QAAA;MAAC,CAC/C,CAAC,EAEFpD,IAAA,CAACzB,IAAI;QACHiG,KAAK,EAAE;UACLoC,GAAG,EAAE,IAAI,GAAGvG,YAAY;UACxBE,MAAM,EAAE,IAAI,GAAGF;QACjB;MAAE,CACH,CAAC,EAGFL,IAAA,CAACpB,UAAU;QACT0C,4BAA4B,EAAEA,4BAA6B;QAC3DC,+BAA+B,EAAE,SAAAA,gCAACwC,KAAc;UAAA,OAC9CxC,gCAA+B,CAACwC,KAAK,CAAC;QAAA,CACvC;QACD7C,uBAAuB,EAAEA,uBAAwB;QACjDC,0BAA0B,EAAE,SAAAA,2BAAC4C,KAAa,EAAK;UAC7C5C,2BAA0B,CAAC4C,KAAK,CAAC;QACnC,CAAE;QACF8C,wBAAwB,EAAE,SAAAA,yBACxB9C,KAAiD,EAC9C;UACH,IAAI7B,4BAA4B,EAAE;YAChC,IAAI,CAACI,kBAAkB,CAAC0B,QAAQ,CAACD,KAAK,CAAC,EAAE;cACvCxB,qBAAqB,CAACD,kBAAkB,CAAC2B,MAAM,CAAC,CAACF,KAAK,CAAC,CAAC,CAAC;YAC3D,CAAC,MAAM;cACLxB,qBAAqB,CACnBD,kBAAkB,CAAC4B,MAAM,CAAC,UAACc,IAAI;gBAAA,OAAKA,IAAI,KAAKjB,KAAK;cAAA,EACpD,CAAC;YACH;UACF;QACF,CAAE;QACF+C,YAAY,EAAE,SAAAA,aAAC/C,KAAmB,EAAK;UACrChF,UAAU,CAAC,CAAC,CAACgI,aAAa,GAAGhD,KAAK;UAClCrD,UAAU,CAAC+F,QAAQ,CAAC,aAAsB,CAAC;QAC7C,CAAE;QACFO,YAAY,EAAE,SAAAA,aAACjD,KAAY,EAAK;UAC9BhF,UAAU,CAAC,CAAC,CAACkI,aAAa,GAAGlD,KAAK;UAClCrD,UAAU,CAAC+F,QAAQ,CAAC,OAAgB,CAAC;QACvC,CAAE;QACFS,eAAe,EAAE,SAAAA,gBAAA,EAAM;UACrBxG,UAAU,CAAC+F,QAAQ,CAAC,gBAAyB,CAAC;QAChD,CAAE;QACFU,yBAAyB,EAAE,SAAAA,0BACzBpD,KAAyC,EACtC;UACHD,yBAAyB,CAACC,KAAK,CAAC;QAClC,CAAE;QACFqD,gBAAgB,EAAE,SAAAA,iBAACrD,KAAY,EAAEsD,KAA4B,EAAK;UAChE,IAAI,CAACnF,4BAA4B,EAAE;YACjCP,mBAAmB,CAACoC,KAAK,CAAC;YAC1BhC,8BAA8B,CAC5BsF,KAAK,CAACC,WAAW,CAACC,KAAK,GAAG,IAAI,GAAGlH,YACnC,CAAC;UACH,CAAC,MAAM;YACLyD,yBAAyB,CAACC,KAAK,CAAC;UAClC;QACF,CAAE;QACF7B,4BAA4B,EAAEA,4BAA6B;QAC3DsF,kBAAkB,EAAE,SAAAA,mBAClBzD,KAAiD;UAAA,OAC9CzB,kBAAkB,CAAC0B,QAAQ,CAACD,KAAK,CAAC;QAAA;MAAC,CACzC,CAAC;IAAA,CACQ,CAAC,EAEb/D,IAAA,CAACT,mBAAmB;MAClB2F,SAAS,EAAEnC,cAAc,IAAI,EAAG;MAChC0E,KAAK,EAAE,SAAAA,MAAA,EAAM;QACXzE,iBAAiB,CAAC,EAAE,CAAC;MACvB,CAAE;MACFqB,IAAI,EAAEtB,cAAc,GAAG;IAAa,CACrC,CAAC;EAAA,CACY,CAAC;AAErB,CAAC;AAED,eAAevC,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}