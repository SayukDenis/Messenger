{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport User from \"../../Models/User\";\nimport { dataSource } from \"../../local/database\";\nimport Message from \"../../Models/Message\";\nimport { EMessageType } from \"../../Models/EMessageType\";\nimport Chat from \"../../Models/Chats/Chat\";\nvar manager = dataSource.manager;\nexport function chatOperations() {\n  return _chatOperations.apply(this, arguments);\n}\nfunction _chatOperations() {\n  _chatOperations = _asyncToGenerator(function* () {\n    console.log('\\n\\tChats start\\n');\n    if (!dataSource.isInitialized) yield dataSource.initialize();\n    var user = new User('user', 'nickname');\n    user = yield manager.save(user);\n    console.log('User has been saved');\n    var message1 = new Message(user, 'content1', EMessageType.text);\n    message1.numberInChat = 1;\n    message1.messageResponseId = 1;\n    message1.messageForwardId = 4;\n    message1.isEdited = true;\n    message1.reactionOnMessage = [{\n      userId: user.userId,\n      reaction: 'thumbs-up'\n    }];\n    var message2 = new Message(user, 'content2', EMessageType.img);\n    message2.numberInChat = 2;\n    message2.messageResponseId = undefined;\n    message2.messageForwardId = undefined;\n    message2.isEdited = false;\n    message2.reactionOnMessage = [];\n    var message3 = new Message(user, 'content3', EMessageType.text);\n    message3.numberInChat = 1;\n    message3.messageResponseId = 0;\n    message3.messageForwardId = 2;\n    message3.isEdited = true;\n    message3.reactionOnMessage = [{\n      userId: user.userId,\n      reaction: 'dislike'\n    }, {\n      userId: user.userId,\n      reaction: 'like'\n    }];\n    var chat = new Chat();\n    chat.linkToPhoto = 'someLink';\n    chat.lastWatchedMessage = [{\n      userId: 12,\n      messageId: 124\n    }];\n    chat.messages = [message1, message2, message3];\n    chat = yield manager.save(chat);\n    console.log('Chat has been saved');\n    yield readChats();\n    yield manager.remove(chat);\n    console.log('Chats have been removed');\n    yield readChats();\n  });\n  return _chatOperations.apply(this, arguments);\n}\nexport function readChats() {\n  return _readChats.apply(this, arguments);\n}\nfunction _readChats() {\n  _readChats = _asyncToGenerator(function* () {\n    var savedChats = yield manager.find(Chat);\n    console.log(`Chats quantity: ${savedChats.length}`);\n    for (var chat of savedChats) {\n      console.log(chat);\n    }\n  });\n  return _readChats.apply(this, arguments);\n}","map":{"version":3,"names":["User","dataSource","Message","EMessageType","Chat","manager","chatOperations","_chatOperations","apply","arguments","_asyncToGenerator","console","log","isInitialized","initialize","user","save","message1","text","numberInChat","messageResponseId","messageForwardId","isEdited","reactionOnMessage","userId","reaction","message2","img","undefined","message3","chat","linkToPhoto","lastWatchedMessage","messageId","messages","readChats","remove","_readChats","savedChats","find","length"],"sources":["C:/Users/T480/source/repos/Messenger/Messenger/dao/test/manualTest/chatOperations.ts"],"sourcesContent":["import User from '../../Models/User';\r\nimport { dataSource } from '../../local/database';\r\nimport Message from '../../Models/Message';\r\nimport { EMessageType } from '../../Models/EMessageType';\r\nimport Chat from '../../Models/Chats/Chat';\r\n\r\nconst manager = dataSource.manager;\r\n\r\nexport async function chatOperations() {\r\n    console.log('\\n\\tChats start\\n');\r\n\r\n    if (!dataSource.isInitialized) await dataSource.initialize();\r\n\r\n    // Create a user\r\n    let user = new User('user', 'nickname');\r\n    user = await manager.save(user);\r\n    console.log('User has been saved');\r\n\r\n    // Create Messages\r\n    let message1 = new Message(user, 'content1', EMessageType.text);\r\n    message1.numberInChat = 1;\r\n    message1.messageResponseId = 1;\r\n    message1.messageForwardId = 4;\r\n    message1.isEdited = true;\r\n    message1.reactionOnMessage = [{ userId: user.userId, reaction: 'thumbs-up' }];\r\n\r\n    let message2 = new Message(user, 'content2', EMessageType.img);\r\n    message2.numberInChat = 2;\r\n    message2.messageResponseId = undefined;\r\n    message2.messageForwardId = undefined;\r\n    message2.isEdited = false;\r\n    message2.reactionOnMessage = [];\r\n\r\n    let message3 = new Message(user, 'content3', EMessageType.text);\r\n    message3.numberInChat = 1;\r\n    message3.messageResponseId = 0;\r\n    message3.messageForwardId = 2;\r\n    message3.isEdited = true;\r\n    message3.reactionOnMessage = [\r\n        { userId: user.userId, reaction: 'dislike' },\r\n        { userId: user.userId, reaction: 'like' }\r\n    ];\r\n\r\n\r\n    //Saved chat\r\n    let chat = new Chat();\r\n    chat.linkToPhoto = 'someLink';\r\n    chat.lastWatchedMessage = [{ userId: 12, messageId: 124 }];\r\n    chat.messages = [message1, message2, message3];\r\n    chat = await manager.save(chat);\r\n    console.log('Chat has been saved');\r\n\r\n    // Read chats\r\n    await readChats();\r\n\r\n    // Delete chats\r\n    await manager.remove(chat);\r\n    console.log('Chats have been removed');\r\n\r\n    // Read chats\r\n    await readChats();\r\n}\r\n\r\nexport async function readChats() {\r\n    const savedChats = await manager.find(Chat);\r\n    console.log(`Chats quantity: ${savedChats.length}`);\r\n    for (let chat of savedChats) {\r\n        console.log(chat);\r\n    }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}