{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { styles } from \"./Styles.tsx\";\nimport GoBackButton from \"../GoBackButton.tsx\";\nimport SearchIcon from \"./Icons/SearchIcon.tsx\";\nimport ElseFeaturesIcon from \"./Icons/ElseFeaturesIcon.tsx\";\nimport Name from \"./Name.tsx\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TopToolBar = function TopToolBar(props) {\n  var blockStatusTitle = \"Blocked\";\n  return _jsxs(View, {\n    style: styles.topToolBar,\n    children: [_jsx(Name, {\n      primaryTitle: props.primaryTitle,\n      isMuted: props.isMuted,\n      style: styles.profileTitle\n    }), props.isBlocked && _jsx(Text, {\n      style: styles.blockStatus,\n      children: props.isBlocked ? blockStatusTitle : \"\"\n    }), _jsx(Text, {\n      style: styles.secondaryTitle,\n      children: props.secondaryTitle\n    }), _jsx(GoBackButton, {\n      onPress: function onPress() {\n        return props.onGoBackPress();\n      }\n    }), props.isSearchButtonVisible && _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        alert(\"Searching...\");\n      },\n      style: styles.searchMessagesButton,\n      children: _jsx(SearchIcon, {})\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        if (props.setIsElseFeaturesVisible != undefined) props.setIsElseFeaturesVisible(true);\n      },\n      style: styles.elseFeaturesButton,\n      children: _jsx(ElseFeaturesIcon, {})\n    })]\n  });\n};\nexport default TopToolBar;","map":{"version":3,"names":["React","View","TouchableOpacity","Text","styles","GoBackButton","SearchIcon","ElseFeaturesIcon","Name","jsx","_jsx","jsxs","_jsxs","TopToolBar","props","blockStatusTitle","style","topToolBar","children","primaryTitle","isMuted","profileTitle","isBlocked","blockStatus","secondaryTitle","onPress","onGoBackPress","isSearchButtonVisible","alert","searchMessagesButton","setIsElseFeaturesVisible","undefined","elseFeaturesButton"],"sources":["D:/Леша/Messenger_Project/Messenger/messenger/Pages/Profiles/SemiComponents/MainScreen/TopToolBar.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React from \"react\";\r\nimport { View, TouchableOpacity, Text } from \"react-native\";\r\nimport { styles } from \"./Styles.tsx\";\r\nimport GoBackButton from \"../GoBackButton.tsx\";\r\nimport SearchIcon from \"./Icons/SearchIcon.tsx\";\r\nimport ElseFeaturesIcon from \"./Icons/ElseFeaturesIcon.tsx\";\r\nimport Name from \"./Name.tsx\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\n\r\ninterface TopToolBarProps {\r\n  setIsElseFeaturesVisible?: (value: boolean) => void;\r\n  primaryTitle: string;\r\n  secondaryTitle?: string;\r\n  isMuted?: boolean;\r\n  isBlocked?: boolean;\r\n  isSearchButtonVisible: boolean;\r\n  onGoBackPress: () => void;\r\n}\r\n\r\nconst TopToolBar: React.FC<TopToolBarProps> = (props) => {\r\n  const blockStatusTitle: string = \"Blocked\";\r\n  return (\r\n    <View style={styles.topToolBar}>\r\n      {/* Main name */}\r\n      <Name\r\n        primaryTitle={props.primaryTitle}\r\n        isMuted={props.isMuted}\r\n        style={styles.profileTitle}\r\n      />\r\n\r\n      {/* if blocked */}\r\n      {props.isBlocked && (\r\n        <Text style={styles.blockStatus}>\r\n          {props.isBlocked ? blockStatusTitle : \"\"}\r\n        </Text>\r\n      )}\r\n\r\n      {/* Secondary title */}\r\n      <Text style={styles.secondaryTitle}>{props.secondaryTitle}</Text>\r\n\r\n      {/* Going back button */}\r\n      <GoBackButton onPress={() => props.onGoBackPress()} />\r\n\r\n      {/* Search message button */}\r\n      {props.isSearchButtonVisible && (\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            alert(\"Searching...\");\r\n          }}\r\n          style={styles.searchMessagesButton}\r\n        >\r\n          <SearchIcon />\r\n        </TouchableOpacity>\r\n      )}\r\n\r\n      {/* Else features button */}\r\n      <TouchableOpacity\r\n        onPress={() => {\r\n          if (props.setIsElseFeaturesVisible != undefined)\r\n            props.setIsElseFeaturesVisible(true);\r\n        }}\r\n        style={styles.elseFeaturesButton}\r\n      >\r\n        <ElseFeaturesIcon />\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default TopToolBar;\r\n"],"mappings":"AAEA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAE1B,SAASC,MAAM;AACf,OAAOC,YAAY;AACnB,OAAOC,UAAU;AACjB,OAAOC,gBAAgB;AACvB,OAAOC,IAAI;AAAmB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAa9B,IAAMC,UAAqC,GAAG,SAAxCA,UAAqCA,CAAIC,KAAK,EAAK;EACvD,IAAMC,gBAAwB,GAAG,SAAS;EAC1C,OACEH,KAAA,CAACX,IAAI;IAACe,KAAK,EAAEZ,MAAM,CAACa,UAAW;IAAAC,QAAA,GAE7BR,IAAA,CAACF,IAAI;MACHW,YAAY,EAAEL,KAAK,CAACK,YAAa;MACjCC,OAAO,EAAEN,KAAK,CAACM,OAAQ;MACvBJ,KAAK,EAAEZ,MAAM,CAACiB;IAAa,CAC5B,CAAC,EAGDP,KAAK,CAACQ,SAAS,IACdZ,IAAA,CAACP,IAAI;MAACa,KAAK,EAAEZ,MAAM,CAACmB,WAAY;MAAAL,QAAA,EAC7BJ,KAAK,CAACQ,SAAS,GAAGP,gBAAgB,GAAG;IAAE,CACpC,CACP,EAGDL,IAAA,CAACP,IAAI;MAACa,KAAK,EAAEZ,MAAM,CAACoB,cAAe;MAAAN,QAAA,EAAEJ,KAAK,CAACU;IAAc,CAAO,CAAC,EAGjEd,IAAA,CAACL,YAAY;MAACoB,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMX,KAAK,CAACY,aAAa,CAAC,CAAC;MAAA;IAAC,CAAE,CAAC,EAGrDZ,KAAK,CAACa,qBAAqB,IAC1BjB,IAAA,CAACR,gBAAgB;MACfuB,OAAO,EAAE,SAAAA,QAAA,EAAM;QACbG,KAAK,CAAC,cAAc,CAAC;MACvB,CAAE;MACFZ,KAAK,EAAEZ,MAAM,CAACyB,oBAAqB;MAAAX,QAAA,EAEnCR,IAAA,CAACJ,UAAU,IAAE;IAAC,CACE,CACnB,EAGDI,IAAA,CAACR,gBAAgB;MACfuB,OAAO,EAAE,SAAAA,QAAA,EAAM;QACb,IAAIX,KAAK,CAACgB,wBAAwB,IAAIC,SAAS,EAC7CjB,KAAK,CAACgB,wBAAwB,CAAC,IAAI,CAAC;MACxC,CAAE;MACFd,KAAK,EAAEZ,MAAM,CAAC4B,kBAAmB;MAAAd,QAAA,EAEjCR,IAAA,CAACH,gBAAgB,IAAE;IAAC,CACJ,CAAC;EAAA,CACf,CAAC;AAEX,CAAC;AAED,eAAeM,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}