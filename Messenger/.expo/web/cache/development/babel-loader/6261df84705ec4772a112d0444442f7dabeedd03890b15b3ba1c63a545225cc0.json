{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { styles } from \"../Styles\";\nimport { useIsFocused } from \"@react-navigation/native\";\nimport GoBackButton from \"../../../SemiComponents/GoBackButton\";\nimport { channel, contacts } from \"../../../SemiComponents/DBUser\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport CheckmarkIcon from \"../../../DialogueProfile/PermissionScreen/Icons/CheckMarkIcon\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar AddMemberScreen = function AddMemberScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    searchedName = _useState2[0],\n    setSearchedName = _useState2[1];\n  var _useState3 = useState(channel.subscribers),\n    _useState4 = _slicedToArray(_useState3, 2),\n    subscribers = _useState4[0],\n    setSubscribers = _useState4[1];\n  var isFocused = useIsFocused();\n  useEffect(function () {}, [isFocused]);\n  return _jsxs(View, {\n    style: styles.mainContainer,\n    children: [_jsxs(View, {\n      style: styles.topToolBar,\n      children: [_jsx(GoBackButton, {\n        onPress: function onPress() {\n          return navigation.goBack();\n        }\n      }), _jsx(View, {\n        style: styles.searchInChatContainer,\n        children: _jsx(TextInput, {\n          style: styles.newBranchNameInput,\n          onChangeText: function onChangeText(text) {\n            setSearchedName(text);\n          },\n          value: searchedName,\n          placeholder: \"Search\",\n          maxLength: 25,\n          placeholderTextColor: \"rgb(136, 130, 130)\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.doneButtonContainer,\n        onPress: function onPress() {\n          channel.subscribers = subscribers;\n          navigation.goBack();\n        },\n        children: _jsx(Text, {\n          style: styles.doneButtonTitle,\n          children: \"Done\"\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.separatingLine\n    }), _jsxs(ScrollView, {\n      children: [_jsx(View, {\n        style: styles.contactsTitleContainer,\n        children: _jsx(Text, {\n          style: styles.contactsTitle,\n          children: \"Contacts\"\n        })\n      }), _jsx(FlatList, {\n        data: contacts,\n        keyExtractor: function keyExtractor(item) {\n          return contacts.indexOf(item).toString();\n        },\n        horizontal: false,\n        numColumns: 1,\n        scrollEnabled: false,\n        contentContainerStyle: {\n          top: 0.035 * Dimensions.get(\"screen\").height,\n          paddingBottom: 0.07 * Dimensions.get(\"screen\").height,\n          zIndex: 0\n        },\n        style: {\n          zIndex: 0\n        },\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item,\n            index = _ref2.index;\n          return _jsx(_Fragment, {\n            children: (!searchedName || item.name.startsWith(searchedName)) && _jsxs(TouchableOpacity, {\n              onPress: function onPress() {\n                if (!channel.subscribers.includes(item)) {\n                  setSubscribers(subscribers.concat([item]));\n                }\n              },\n              style: [styles.contactContainer, {\n                borderTopWidth: index === 0 ? 0 : 0.2\n              }],\n              children: [_jsx(Image, {\n                source: {\n                  uri: item.avatar\n                },\n                style: styles.contactAvatarInList\n              }), _jsx(View, {\n                style: styles.contactTitleContainer,\n                children: _jsx(Text, {\n                  numberOfLines: 1,\n                  style: styles.contactTitleInList,\n                  children: item.name\n                })\n              }), _jsx(View, {\n                style: styles.contactCheckMarkContainer,\n                children: subscribers.includes(item) && _jsx(CheckmarkIcon, {\n                  style: styles.checkmarkIcon,\n                  stroke: \"black\"\n                })\n              })]\n            })\n          });\n        }\n      })]\n    })]\n  });\n};\nexport default AddMemberScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TouchableOpacity","TextInput","Dimensions","FlatList","Image","styles","useIsFocused","GoBackButton","channel","contacts","ScrollView","CheckmarkIcon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AddMemberScreen","_ref","navigation","_useState","_useState2","_slicedToArray","searchedName","setSearchedName","_useState3","subscribers","_useState4","setSubscribers","isFocused","style","mainContainer","children","topToolBar","onPress","goBack","searchInChatContainer","newBranchNameInput","onChangeText","text","value","placeholder","maxLength","placeholderTextColor","doneButtonContainer","doneButtonTitle","separatingLine","contactsTitleContainer","contactsTitle","data","keyExtractor","item","indexOf","toString","horizontal","numColumns","scrollEnabled","contentContainerStyle","top","get","height","paddingBottom","zIndex","renderItem","_ref2","index","name","startsWith","includes","concat","contactContainer","borderTopWidth","source","uri","avatar","contactAvatarInList","contactTitleContainer","numberOfLines","contactTitleInList","contactCheckMarkContainer","checkmarkIcon","stroke"],"sources":["/home/zatibmag/Desktop/Project/Messenger/Messenger/Pages/Profiles/ChannelProfile/SubscribersScreen/AddSubscriberScreen/AddSubscriberScreen.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  TextInput,\r\n  Dimensions,\r\n  FlatList,\r\n  Image,\r\n} from \"react-native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport { styles } from \"../Styles\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport GoBackButton from \"../../../SemiComponents/GoBackButton\";\r\nimport { channel, contacts } from \"../../../SemiComponents/DBUser\";\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\nimport CheckmarkIcon from \"../../../DialogueProfile/PermissionScreen/Icons/CheckMarkIcon\";\r\n\r\ninterface AddMemberScreenProps {\r\n  navigation: StackNavigationProp<{}>;\r\n}\r\n\r\nconst AddMemberScreen: React.FC<AddMemberScreenProps> = ({ navigation }) => {\r\n  const [searchedName, setSearchedName] = useState(\"\");\r\n  const [subscribers, setSubscribers] = useState(channel.subscribers);\r\n\r\n  const isFocused = useIsFocused();\r\n\r\n  useEffect(() => {}, [isFocused]);\r\n\r\n  return (\r\n    <View style={styles.mainContainer}>\r\n      <View style={styles.topToolBar}>\r\n        {/* Going back button */}\r\n        <GoBackButton onPress={() => navigation.goBack()} />\r\n\r\n        {/* Search in chat view */}\r\n        <View style={styles.searchInChatContainer}>\r\n          <TextInput\r\n            style={styles.newBranchNameInput}\r\n            onChangeText={(text: string) => {\r\n              setSearchedName(text);\r\n            }}\r\n            value={searchedName}\r\n            placeholder=\"Search\"\r\n            maxLength={25}\r\n            placeholderTextColor=\"rgb(136, 130, 130)\"\r\n          />\r\n        </View>\r\n\r\n        {/* Done button */}\r\n        <TouchableOpacity\r\n          style={styles.doneButtonContainer}\r\n          onPress={() => {\r\n            channel.subscribers = subscribers;\r\n            navigation.goBack();\r\n          }}\r\n        >\r\n          <Text style={styles.doneButtonTitle}>Done</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <View style={styles.separatingLine} />\r\n\r\n      <ScrollView>\r\n        <View style={styles.contactsTitleContainer}>\r\n          <Text style={styles.contactsTitle}>Contacts</Text>\r\n        </View>\r\n        {/* Contacts list */}\r\n        <FlatList\r\n          data={contacts}\r\n          keyExtractor={(item) => contacts.indexOf(item).toString()}\r\n          horizontal={false}\r\n          numColumns={1}\r\n          scrollEnabled={false}\r\n          contentContainerStyle={{\r\n            top: 0.035 * Dimensions.get(\"screen\").height,\r\n            paddingBottom: 0.07 * Dimensions.get(\"screen\").height,\r\n            zIndex: 0,\r\n          }}\r\n          style={{ zIndex: 0 }}\r\n          renderItem={({ item, index }) => (\r\n            <>\r\n              {(!searchedName || item.name.startsWith(searchedName)) && (\r\n                <TouchableOpacity\r\n                  onPress={() => {\r\n                    if (!channel.subscribers.includes(item)) {\r\n                      setSubscribers(subscribers.concat([item]));\r\n                    }\r\n                  }}\r\n                  style={[\r\n                    styles.contactContainer,\r\n                    { borderTopWidth: index === 0 ? 0 : 0.2 },\r\n                  ]}\r\n                >\r\n                  <Image\r\n                    source={{ uri: item.avatar }}\r\n                    style={styles.contactAvatarInList}\r\n                  />\r\n                  <View style={styles.contactTitleContainer}>\r\n                    <Text numberOfLines={1} style={styles.contactTitleInList}>\r\n                      {item.name}\r\n                    </Text>\r\n                  </View>\r\n                  <View style={styles.contactCheckMarkContainer}>\r\n                    {subscribers.includes(item) && (\r\n                      <CheckmarkIcon\r\n                        style={styles.checkmarkIcon}\r\n                        stroke=\"black\"\r\n                      />\r\n                    )}\r\n                  </View>\r\n                </TouchableOpacity>\r\n              )}\r\n            </>\r\n          )}\r\n        />\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default AddMemberScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}