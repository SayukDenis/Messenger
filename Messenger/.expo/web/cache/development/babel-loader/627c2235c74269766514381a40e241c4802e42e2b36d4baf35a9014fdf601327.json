{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport Message from \"../Message\";\nimport Model from \"../Model\";\nimport Branch from \"./Branch\";\nvar Chat = function (_Model) {\n  _inherits(Chat, _Model);\n  function Chat(linkToPhoto, messages, branches, pinnedMessage, pinnedMessageForAll, lastWatchedMessage) {\n    var _this;\n    _classCallCheck(this, Chat);\n    _this = _callSuper(this, Chat);\n    _this.linkToPhoto = linkToPhoto;\n    _this.messages = messages != null ? messages : new Array();\n    _this.branches = branches != null ? branches : new Array();\n    _this.pinnedMessage = pinnedMessage != null ? pinnedMessage : new Array();\n    _this.pinnedMessageForAll = pinnedMessageForAll != null ? pinnedMessageForAll : new Array();\n    _this.lastWatchedMessage = lastWatchedMessage != null ? lastWatchedMessage : new Array();\n    return _this;\n  }\n  return _createClass(Chat);\n}(Model);\nChat.schema = {\n  name: 'chats',\n  properties: {\n    linkToPhoto: 'text?',\n    messages: {\n      type: 'list',\n      objectType: Message\n    },\n    branches: {\n      type: 'list',\n      objectType: Branch\n    },\n    pinnedMessage: {\n      type: 'list',\n      objectType: Message\n    },\n    pinnedMessageForAll: {\n      type: 'list',\n      objectType: Message\n    },\n    lastWatchedMessage: {\n      type: 'list',\n      objectType: {}\n    }\n  },\n  embedded: true\n};\nexport { Chat as default };\n;","map":{"version":3,"names":["Message","Model","Branch","Chat","_Model","_inherits","linkToPhoto","messages","branches","pinnedMessage","pinnedMessageForAll","lastWatchedMessage","_this","_classCallCheck","_callSuper","Array","_createClass","schema","name","properties","type","objectType","embedded","default"],"sources":["D:/project/1project/Messenger/Messenger/dao/Models/Chats/Chat.ts"],"sourcesContent":["import Message from '../Message';\r\nimport Model from '../Model';\r\nimport Branch from './Branch';\r\nimport ILastWatchedMessage from './ILastWatchedMessage';\r\n\r\nexport default class Chat extends Model {\r\n    constructor(linkToPhoto?: string, messages?: Array<Message>, branches?: Array<Branch>,\r\n        pinnedMessage?: Array<Message>, pinnedMessageForAll?: Array<Message>,\r\n        lastWatchedMessage?: Array<ILastWatchedMessage>) {\r\n        super();\r\n\r\n        this.linkToPhoto = linkToPhoto ;\r\n        this.messages = messages ?? new Array;\r\n        this.branches = branches ?? new Array;\r\n        this.pinnedMessage = pinnedMessage ?? new Array;\r\n        this.pinnedMessageForAll = pinnedMessageForAll ?? new Array;\r\n        this.lastWatchedMessage = lastWatchedMessage ?? new Array;\r\n    }\r\n    linkToPhoto?: string;\r\n    messages: Array<Message>;\r\n    branches: Array<Branch>;\r\n    pinnedMessage: Array<Message>;\r\n    pinnedMessageForAll: Array<Message>;\r\n    //last watched message of each User\r\n    lastWatchedMessage: Array<ILastWatchedMessage>;\r\n    //schema\r\n    static schema = {\r\n        name: 'chats',\r\n        properties: {\r\n            linkToPhoto: 'text?',\r\n            messages: { type: 'list', objectType: Message },\r\n            branches: { type: 'list', objectType: Branch },\r\n            pinnedMessage: { type: 'list', objectType: Message },\r\n            pinnedMessageForAll: { type: 'list', objectType: Message },\r\n            lastWatchedMessage: { type: 'list', objectType: {} as ILastWatchedMessage },\r\n        },\r\n        embedded: true,\r\n    }\r\n};"],"mappings":";;;;;;;AAAA,OAAOA,OAAO;AACd,OAAOC,KAAK;AACZ,OAAOC,MAAM;AAAiB,IAGTC,IAAI,aAAAC,MAAA;EAAAC,SAAA,CAAAF,IAAA,EAAAC,MAAA;EACrB,SAAAD,KAAYG,WAAoB,EAAEC,QAAyB,EAAEC,QAAwB,EACjFC,aAA8B,EAAEC,mBAAoC,EACpEC,kBAA+C,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAV,IAAA;IACjDS,KAAA,GAAAE,UAAA,OAAAX,IAAA;IAEAS,KAAA,CAAKN,WAAW,GAAGA,WAAW;IAC9BM,KAAA,CAAKL,QAAQ,GAAGA,QAAQ,WAARA,QAAQ,GAAI,IAAIQ,KAAK,CAAD,CAAC;IACrCH,KAAA,CAAKJ,QAAQ,GAAGA,QAAQ,WAARA,QAAQ,GAAI,IAAIO,KAAK,CAAD,CAAC;IACrCH,KAAA,CAAKH,aAAa,GAAGA,aAAa,WAAbA,aAAa,GAAI,IAAIM,KAAK,CAAD,CAAC;IAC/CH,KAAA,CAAKF,mBAAmB,GAAGA,mBAAmB,WAAnBA,mBAAmB,GAAI,IAAIK,KAAK,CAAD,CAAC;IAC3DH,KAAA,CAAKD,kBAAkB,GAAGA,kBAAkB,WAAlBA,kBAAkB,GAAI,IAAII,KAAK,CAAD,CAAC;IAAC,OAAAH,KAAA;EAC9D;EAAC,OAAAI,YAAA,CAAAb,IAAA;AAAA,EAZ6BF,KAAK;AAAlBE,IAAI,CAqBdc,MAAM,GAAG;EACZC,IAAI,EAAE,OAAO;EACbC,UAAU,EAAE;IACRb,WAAW,EAAE,OAAO;IACpBC,QAAQ,EAAE;MAAEa,IAAI,EAAE,MAAM;MAAEC,UAAU,EAAErB;IAAQ,CAAC;IAC/CQ,QAAQ,EAAE;MAAEY,IAAI,EAAE,MAAM;MAAEC,UAAU,EAAEnB;IAAO,CAAC;IAC9CO,aAAa,EAAE;MAAEW,IAAI,EAAE,MAAM;MAAEC,UAAU,EAAErB;IAAQ,CAAC;IACpDU,mBAAmB,EAAE;MAAEU,IAAI,EAAE,MAAM;MAAEC,UAAU,EAAErB;IAAQ,CAAC;IAC1DW,kBAAkB,EAAE;MAAES,IAAI,EAAE,MAAM;MAAEC,UAAU,EAAE,CAAC;IAAyB;EAC9E,CAAC;EACDC,QAAQ,EAAE;AACd,CAAC;AAAA,SAhCgBnB,IAAI,IAAAoB,OAAA;AAiCxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}