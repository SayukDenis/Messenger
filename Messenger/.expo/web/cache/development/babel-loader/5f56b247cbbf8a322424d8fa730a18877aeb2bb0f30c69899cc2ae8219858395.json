{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { styles } from \"../Styles\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { GetProfile } from \"../../../DatabaseSimulation/DBFunctions\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Button = _createClass(function Button(name, title, quantity) {\n  _classCallCheck(this, Button);\n  this.name = name;\n  this.title = title;\n  this.quantity = quantity;\n});\nvar MultimediaBar = function MultimediaBar(props) {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    maxQuantitiesTitleWidth = _useState2[0],\n    setMaxQuantitiesTitleWidth = _useState2[1];\n  var photosQuantity = 600;\n  var videosQuantity = 20;\n  var albumsQuantity = 50;\n  var _useState3 = useState(\"Photos\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    pressedMultimediaButton = _useState4[0],\n    setPressedMultimediaButton = _useState4[1];\n  var _useState5 = useState(\"Photos\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    photosAndAlbumsState = _useState6[0],\n    setPhotosAndAlbumsState = _useState6[1];\n  var buttonData = [{\n    name: \"Photos\",\n    title: \"Photos\",\n    quantity: photosQuantity\n  }, {\n    name: \"Albums\",\n    title: \"Albums\",\n    quantity: GetProfile().albums.length\n  }, {\n    name: \"Files\",\n    title: \"Files\",\n    quantity: GetProfile().files.length\n  }, {\n    name: \"Voice\",\n    title: \"Voice\",\n    quantity: GetProfile().voice.length\n  }, {\n    name: \"Links\",\n    title: \"Links\",\n    quantity: GetProfile().links.length\n  }];\n  var CalculateMaxQuantitiesTitleWidth = function CalculateMaxQuantitiesTitleWidth() {\n    return _jsxs(View, {\n      style: {\n        position: \"absolute\",\n        opacity: 0\n      },\n      children: [_jsx(Text, {\n        style: styles.multimediaQuantityTitle,\n        onLayout: function onLayout(event) {\n          event.nativeEvent.layout.width > maxQuantitiesTitleWidth && setMaxQuantitiesTitleWidth(event.nativeEvent.layout.width);\n        },\n        children: `${photosQuantity.toLocaleString()} ${\"photos\"}, ${videosQuantity.toLocaleString()} ${\"videos\"}`\n      }), buttonData.map(function (button) {\n        return button.name != \"Photos\" && button.name != \"Albums\" && _jsx(Text, {\n          style: styles.multimediaQuantityTitle,\n          onLayout: function onLayout(event) {\n            event.nativeEvent.layout.width > maxQuantitiesTitleWidth && setMaxQuantitiesTitleWidth(event.nativeEvent.layout.width);\n          },\n          children: `${button.quantity.toLocaleString()} ${button.title.toLowerCase()}`\n        }, button.name);\n      })]\n    });\n  };\n  useEffect(function () {\n    setMaxQuantitiesTitleWidth(0);\n  }, []);\n  return _jsxs(View, {\n    style: [styles.multimediaBar, {\n      zIndex: props.isPhotoAlbumSelectionVisible === true ? 2 : 0\n    }],\n    children: [_jsx(CalculateMaxQuantitiesTitleWidth, {}), _jsxs(View, {\n      style: [styles.multimediaQuantitiesContainer, {\n        width: maxQuantitiesTitleWidth + 20\n      }],\n      children: [_jsx(LinearGradient, {\n        colors: [\"#cf9b95\", \"#c98bb8\", \"#c37adb\"],\n        style: [styles.linearGradientForQuantitiesContainer, {\n          width: maxQuantitiesTitleWidth + 20\n        }]\n      }), pressedMultimediaButton === \"Photos\" && _jsx(Text, {\n        style: styles.multimediaQuantityTitle,\n        children: `${photosQuantity.toLocaleString()} ${\"photos\"}, ${videosQuantity.toLocaleString()} ${\"videos\"}`\n      }), buttonData.map(function (button) {\n        return button.name != \"Photos\" && pressedMultimediaButton === button.name && _jsx(Text, {\n          style: styles.multimediaQuantityTitle,\n          children: `${button.quantity.toLocaleString()} ${button.title.toLowerCase()}`\n        }, button.name);\n      })]\n    }), _jsxs(TouchableOpacity, {\n      onPress: function onPress() {\n        setPressedMultimediaButton(photosAndAlbumsState);\n        props.onPress(photosAndAlbumsState);\n        props.onLongPress(false);\n      },\n      onLongPress: function onLongPress() {\n        props.onLongPress(true);\n      },\n      children: [props.isPhotoAlbumSelectionVisible === true && _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          props.onLongPress(false);\n          setPhotosAndAlbumsState(function (prevState) {\n            return prevState == \"Photos\" ? \"Albums\" : \"Photos\";\n          });\n          setPressedMultimediaButton(photosAndAlbumsState == \"Photos\" ? \"Albums\" : \"Photos\");\n          props.onPress(photosAndAlbumsState == \"Photos\" ? \"Albums\" : \"Photos\");\n        },\n        style: styles.albumsOrPhotosAppearingButton,\n        children: _jsx(Text, {\n          style: styles.multimediaTitle,\n          children: photosAndAlbumsState === \"Albums\" ? \"Photos\" : \"Albums\"\n        })\n      }), _jsxs(View, {\n        style: styles.photosOrAlbumsSelectedName,\n        children: [_jsx(Text, {\n          style: [styles.multimediaTitle, {\n            color: pressedMultimediaButton == \"Photos\" || pressedMultimediaButton == \"Albums\" ? \"rgb(124, 79, 145)\" : \"rgb(43, 29, 29)\"\n          }],\n          children: photosAndAlbumsState === \"Albums\" ? \"Albums\" : \"Photos\"\n        }), pressedMultimediaButton === photosAndAlbumsState && _jsx(View, {\n          style: styles.rectangleUnderPhotosOrAlbumsButton\n        })]\n      })]\n    }), buttonData.map(function (button) {\n      return button.name != \"Photos\" && button.name != \"Albums\" && _jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          setPressedMultimediaButton(button.name);\n          props.onPress(button.name);\n          props.onLongPress(false);\n        },\n        style: button.name === \"Files\" ? styles.filesButton : null,\n        children: [_jsx(Text, {\n          style: [styles.multimediaTitle, {\n            color: button.name == pressedMultimediaButton ? \"rgb(124, 79, 145)\" : \"rgb(43, 29, 29)\"\n          }],\n          children: button.title\n        }), pressedMultimediaButton === button.name && _jsx(View, {\n          style: styles.rectangleUnderMultimediaButton\n        })]\n      }, button.name);\n    })]\n  });\n};\nexport default MultimediaBar;","map":{"version":3,"names":["React","useEffect","useState","View","TouchableOpacity","Text","styles","LinearGradient","GetProfile","jsx","_jsx","jsxs","_jsxs","Button","_createClass","name","title","quantity","_classCallCheck","MultimediaBar","props","_useState","_useState2","_slicedToArray","maxQuantitiesTitleWidth","setMaxQuantitiesTitleWidth","photosQuantity","videosQuantity","albumsQuantity","_useState3","_useState4","pressedMultimediaButton","setPressedMultimediaButton","_useState5","_useState6","photosAndAlbumsState","setPhotosAndAlbumsState","buttonData","albums","length","files","voice","links","CalculateMaxQuantitiesTitleWidth","style","position","opacity","children","multimediaQuantityTitle","onLayout","event","nativeEvent","layout","width","toLocaleString","map","button","toLowerCase","multimediaBar","zIndex","isPhotoAlbumSelectionVisible","multimediaQuantitiesContainer","colors","linearGradientForQuantitiesContainer","onPress","onLongPress","prevState","albumsOrPhotosAppearingButton","multimediaTitle","photosOrAlbumsSelectedName","color","rectangleUnderPhotosOrAlbumsButton","filesButton","rectangleUnderMultimediaButton"],"sources":["C:/Users/T480/source/repos/Messenger/Messenger/Pages/Profiles/SemiComponents/Screens/MainScreen/Multimedia/MultimediaBar.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { View, TouchableOpacity, Text } from \"react-native\";\r\nimport { styles } from \"../Styles\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { GetProfile } from \"../../../DatabaseSimulation/DBFunctions\";\r\n\r\nclass Button {\r\n  name: string;\r\n  title: string;\r\n  quantity: number;\r\n  constructor(name: string, title: string, quantity: number) {\r\n    this.name = name;\r\n    this.title = title;\r\n    this.quantity = quantity;\r\n  }\r\n}\r\n\r\ninterface MultimediaBarProps {\r\n  isPhotoAlbumSelectionVisible: boolean;\r\n  onLongPress: (value: boolean) => void;\r\n  onPress: (value: string) => void;\r\n}\r\n\r\nconst MultimediaBar: React.FC<MultimediaBarProps> = (props) => {\r\n  const [maxQuantitiesTitleWidth, setMaxQuantitiesTitleWidth] = useState(0);\r\n\r\n  const photosQuantity: number = 600;\r\n  const videosQuantity: number = 20;\r\n  const albumsQuantity: number = 50;\r\n\r\n  // Shows which multimedia button is currently pressed\r\n  const [pressedMultimediaButton, setPressedMultimediaButton] =\r\n    useState(\"Photos\");\r\n\r\n  // Shows photos or albums is selected\r\n  const [photosAndAlbumsState, setPhotosAndAlbumsState] = useState(\"Photos\");\r\n\r\n  const buttonData: Button[] = [\r\n    {\r\n      name: \"Photos\",\r\n      title: \"Photos\",\r\n      quantity: photosQuantity,\r\n    },\r\n    {\r\n      name: \"Albums\",\r\n      title: \"Albums\",\r\n      quantity: GetProfile().albums.length,\r\n    },\r\n    {\r\n      name: \"Files\",\r\n      title: \"Files\",\r\n      quantity: GetProfile().files.length,\r\n    },\r\n    {\r\n      name: \"Voice\",\r\n      title: \"Voice\",\r\n      quantity: GetProfile().voice.length,\r\n    },\r\n    {\r\n      name: \"Links\",\r\n      title: \"Links\",\r\n      quantity: GetProfile().links.length,\r\n    },\r\n  ];\r\n\r\n  // Finding max width for multimedia quantities containter\r\n  const CalculateMaxQuantitiesTitleWidth = () => {\r\n    return (\r\n      <View style={{ position: \"absolute\", opacity: 0 }}>\r\n        <Text\r\n          style={styles.multimediaQuantityTitle}\r\n          onLayout={(event) => {\r\n            event.nativeEvent.layout.width > maxQuantitiesTitleWidth &&\r\n              setMaxQuantitiesTitleWidth(event.nativeEvent.layout.width);\r\n          }}\r\n        >\r\n          {`${photosQuantity.toLocaleString()} ${\"photos\"}, ${videosQuantity.toLocaleString()} ${\"videos\"}`}\r\n        </Text>\r\n        {buttonData.map(\r\n          (button) =>\r\n            button.name != \"Photos\" &&\r\n            button.name != \"Albums\" && (\r\n              <Text\r\n                key={button.name}\r\n                style={styles.multimediaQuantityTitle}\r\n                onLayout={(event) => {\r\n                  event.nativeEvent.layout.width > maxQuantitiesTitleWidth &&\r\n                    setMaxQuantitiesTitleWidth(event.nativeEvent.layout.width);\r\n                }}\r\n              >{`${button.quantity.toLocaleString()} ${button.title.toLowerCase()}`}</Text>\r\n            )\r\n        )}\r\n      </View>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    setMaxQuantitiesTitleWidth(0);\r\n  }, []);\r\n\r\n  return (\r\n    <View\r\n      style={[\r\n        styles.multimediaBar,\r\n        { zIndex: props.isPhotoAlbumSelectionVisible === true ? 2 : 0 },\r\n      ]}\r\n    >\r\n      <CalculateMaxQuantitiesTitleWidth />\r\n      {/* Container that shows quantities of currently pressed multimedia */}\r\n      <View\r\n        style={[\r\n          styles.multimediaQuantitiesContainer,\r\n          { width: maxQuantitiesTitleWidth + 20 },\r\n        ]}\r\n      >\r\n        <LinearGradient\r\n          colors={[\"#cf9b95\", \"#c98bb8\", \"#c37adb\"]}\r\n          style={[\r\n            styles.linearGradientForQuantitiesContainer,\r\n            { width: maxQuantitiesTitleWidth + 20 },\r\n          ]}\r\n        />\r\n        {pressedMultimediaButton === \"Photos\" && (\r\n          <Text\r\n            style={styles.multimediaQuantityTitle}\r\n          >{`${photosQuantity.toLocaleString()} ${\"photos\"}, ${videosQuantity.toLocaleString()} ${\"videos\"}`}</Text>\r\n        )}\r\n        {buttonData.map(\r\n          (button) =>\r\n            button.name != \"Photos\" &&\r\n            pressedMultimediaButton === button.name && (\r\n              <Text\r\n                key={button.name}\r\n                style={styles.multimediaQuantityTitle}\r\n              >{`${button.quantity.toLocaleString()} ${button.title.toLowerCase()}`}</Text>\r\n            )\r\n        )}\r\n      </View>\r\n\r\n      {/* Photos or albums button, after long pressing selection between photos and albums appears */}\r\n      <TouchableOpacity\r\n        onPress={() => {\r\n          setPressedMultimediaButton(photosAndAlbumsState);\r\n          props.onPress(photosAndAlbumsState);\r\n          props.onLongPress(false);\r\n        }}\r\n        onLongPress={() => {\r\n          props.onLongPress(true);\r\n        }}\r\n      >\r\n        {props.isPhotoAlbumSelectionVisible === true && (\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              props.onLongPress(false);\r\n              setPhotosAndAlbumsState((prevState) =>\r\n                prevState == \"Photos\" ? \"Albums\" : \"Photos\"\r\n              );\r\n              setPressedMultimediaButton(\r\n                photosAndAlbumsState == \"Photos\" ? \"Albums\" : \"Photos\"\r\n              );\r\n              props.onPress(\r\n                photosAndAlbumsState == \"Photos\" ? \"Albums\" : \"Photos\"\r\n              );\r\n            }}\r\n            style={styles.albumsOrPhotosAppearingButton}\r\n          >\r\n            <Text style={styles.multimediaTitle}>\r\n              {photosAndAlbumsState === \"Albums\" ? \"Photos\" : \"Albums\"}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        )}\r\n        <View style={styles.photosOrAlbumsSelectedName}>\r\n          <Text\r\n            style={[\r\n              styles.multimediaTitle,\r\n              {\r\n                color:\r\n                  pressedMultimediaButton == \"Photos\" ||\r\n                  pressedMultimediaButton == \"Albums\"\r\n                    ? \"rgb(124, 79, 145)\"\r\n                    : \"rgb(43, 29, 29)\",\r\n              },\r\n            ]}\r\n          >\r\n            {photosAndAlbumsState === \"Albums\" ? \"Albums\" : \"Photos\"}\r\n          </Text>\r\n          {pressedMultimediaButton === photosAndAlbumsState && (\r\n            <View style={styles.rectangleUnderPhotosOrAlbumsButton} />\r\n          )}\r\n        </View>\r\n      </TouchableOpacity>\r\n\r\n      {/* Files, voice, links buttons */}\r\n      {buttonData.map(\r\n        (button) =>\r\n          button.name != \"Photos\" &&\r\n          button.name != \"Albums\" && (\r\n            <TouchableOpacity\r\n              key={button.name}\r\n              onPress={() => {\r\n                setPressedMultimediaButton(button.name);\r\n                props.onPress(button.name);\r\n                props.onLongPress(false);\r\n              }}\r\n              style={button.name === \"Files\" ? styles.filesButton : null}\r\n            >\r\n              <Text\r\n                style={[\r\n                  styles.multimediaTitle,\r\n                  {\r\n                    color:\r\n                      button.name == pressedMultimediaButton\r\n                        ? \"rgb(124, 79, 145)\"\r\n                        : \"rgb(43, 29, 29)\",\r\n                  },\r\n                ]}\r\n              >\r\n                {button.title}\r\n              </Text>\r\n              {pressedMultimediaButton === button.name && (\r\n                <View style={styles.rectangleUnderMultimediaButton} />\r\n              )}\r\n            </TouchableOpacity>\r\n          )\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default MultimediaBar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}