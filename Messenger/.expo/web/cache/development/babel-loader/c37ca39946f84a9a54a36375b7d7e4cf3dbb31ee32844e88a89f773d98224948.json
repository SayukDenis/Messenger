{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _class;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport { createPermissionHook, Platform, UnavailabilityError } from 'expo-modules-core';\nimport * as React from 'react';\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport ExponentCamera from \"./ExponentCamera\";\nimport CameraManager from \"./ExponentCameraManager\";\nimport { ConversionTables, ensureNativeProps } from \"./utils/props\";\nvar EventThrottleMs = 500;\nvar _PICTURE_SAVED_CALLBACKS = {};\nvar _GLOBAL_PICTURE_ID = 1;\nfunction ensurePictureOptions(options) {\n  var pictureOptions = !options || typeof options !== 'object' ? {} : options;\n  if (!pictureOptions.quality) {\n    pictureOptions.quality = 1;\n  }\n  if (pictureOptions.onPictureSaved) {\n    var id = _GLOBAL_PICTURE_ID++;\n    _PICTURE_SAVED_CALLBACKS[id] = pictureOptions.onPictureSaved;\n    pictureOptions.id = id;\n    pictureOptions.fastMode = true;\n  }\n  return pictureOptions;\n}\nfunction ensureRecordingOptions(options) {\n  var recordingOptions = options || {};\n  if (!recordingOptions || typeof recordingOptions !== 'object') {\n    recordingOptions = {};\n  } else if (typeof recordingOptions.quality === 'string') {\n    recordingOptions.quality = Camera.Constants.VideoQuality[recordingOptions.quality];\n  }\n  return recordingOptions;\n}\nfunction _onPictureSaved(_ref) {\n  var nativeEvent = _ref.nativeEvent;\n  var id = nativeEvent.id,\n    data = nativeEvent.data;\n  var callback = _PICTURE_SAVED_CALLBACKS[id];\n  if (callback) {\n    callback(data);\n    delete _PICTURE_SAVED_CALLBACKS[id];\n  }\n}\nvar Camera = function (_React$Component) {\n  _inherits(Camera, _React$Component);\n  function Camera() {\n    var _this;\n    _classCallCheck(this, Camera);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, Camera, [].concat(args));\n    _this._lastEvents = {};\n    _this._lastEventsTimes = {};\n    _this._onCameraReady = function () {\n      if (_this.props.onCameraReady) {\n        _this.props.onCameraReady();\n      }\n    };\n    _this._onMountError = function (_ref2) {\n      var nativeEvent = _ref2.nativeEvent;\n      if (_this.props.onMountError) {\n        _this.props.onMountError(nativeEvent);\n      }\n    };\n    _this._onResponsiveOrientationChanged = function (_ref3) {\n      var nativeEvent = _ref3.nativeEvent;\n      if (_this.props.onResponsiveOrientationChanged) {\n        _this.props.onResponsiveOrientationChanged(nativeEvent);\n      }\n    };\n    _this._onObjectDetected = function (callback) {\n      return function (_ref4) {\n        var nativeEvent = _ref4.nativeEvent;\n        var type = nativeEvent.type;\n        if (_this._lastEvents[type] && _this._lastEventsTimes[type] && JSON.stringify(nativeEvent) === _this._lastEvents[type] && new Date().getTime() - _this._lastEventsTimes[type].getTime() < EventThrottleMs) {\n          return;\n        }\n        if (callback) {\n          callback(nativeEvent);\n          _this._lastEventsTimes[type] = new Date();\n          _this._lastEvents[type] = JSON.stringify(nativeEvent);\n        }\n      };\n    };\n    _this._setReference = function (ref) {\n      if (ref) {\n        _this._cameraRef = ref;\n        if (Platform.OS === 'web') {\n          _this._cameraHandle = ref;\n        } else {\n          _this._cameraHandle = findNodeHandle(ref);\n        }\n      } else {\n        _this._cameraRef = null;\n        _this._cameraHandle = null;\n      }\n    };\n    return _this;\n  }\n  _createClass(Camera, [{\n    key: \"takePictureAsync\",\n    value: function () {\n      var _takePictureAsync = _asyncToGenerator(function* (options) {\n        var pictureOptions = ensurePictureOptions(options);\n        return yield CameraManager.takePicture(pictureOptions, this._cameraHandle);\n      });\n      function takePictureAsync(_x) {\n        return _takePictureAsync.apply(this, arguments);\n      }\n      return takePictureAsync;\n    }()\n  }, {\n    key: \"getSupportedRatiosAsync\",\n    value: (function () {\n      var _getSupportedRatiosAsync = _asyncToGenerator(function* () {\n        if (!CameraManager.getSupportedRatios) {\n          throw new UnavailabilityError('Camera', 'getSupportedRatiosAsync');\n        }\n        return yield CameraManager.getSupportedRatios(this._cameraHandle);\n      });\n      function getSupportedRatiosAsync() {\n        return _getSupportedRatiosAsync.apply(this, arguments);\n      }\n      return getSupportedRatiosAsync;\n    }())\n  }, {\n    key: \"getAvailablePictureSizesAsync\",\n    value: (function () {\n      var _getAvailablePictureSizesAsync = _asyncToGenerator(function* (ratio) {\n        if (!CameraManager.getAvailablePictureSizes) {\n          throw new UnavailabilityError('Camera', 'getAvailablePictureSizesAsync');\n        }\n        return yield CameraManager.getAvailablePictureSizes(ratio, this._cameraHandle);\n      });\n      function getAvailablePictureSizesAsync(_x2) {\n        return _getAvailablePictureSizesAsync.apply(this, arguments);\n      }\n      return getAvailablePictureSizesAsync;\n    }())\n  }, {\n    key: \"recordAsync\",\n    value: (function () {\n      var _recordAsync = _asyncToGenerator(function* (options) {\n        if (!CameraManager.record) {\n          throw new UnavailabilityError('Camera', 'recordAsync');\n        }\n        var recordingOptions = ensureRecordingOptions(options);\n        return yield CameraManager.record(recordingOptions, this._cameraHandle);\n      });\n      function recordAsync(_x3) {\n        return _recordAsync.apply(this, arguments);\n      }\n      return recordAsync;\n    }())\n  }, {\n    key: \"stopRecording\",\n    value: function stopRecording() {\n      if (!CameraManager.stopRecording) {\n        throw new UnavailabilityError('Camera', 'stopRecording');\n      }\n      CameraManager.stopRecording(this._cameraHandle);\n    }\n  }, {\n    key: \"pausePreview\",\n    value: function pausePreview() {\n      if (!CameraManager.pausePreview) {\n        throw new UnavailabilityError('Camera', 'pausePreview');\n      }\n      CameraManager.pausePreview(this._cameraHandle);\n    }\n  }, {\n    key: \"resumePreview\",\n    value: function resumePreview() {\n      if (!CameraManager.resumePreview) {\n        throw new UnavailabilityError('Camera', 'resumePreview');\n      }\n      CameraManager.resumePreview(this._cameraHandle);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var nativeProps = ensureNativeProps(this.props);\n      var onBarCodeScanned = this.props.onBarCodeScanned ? this._onObjectDetected(this.props.onBarCodeScanned) : undefined;\n      var onFacesDetected = this._onObjectDetected(this.props.onFacesDetected);\n      return React.createElement(ExponentCamera, _objectSpread(_objectSpread({}, nativeProps), {}, {\n        ref: this._setReference,\n        onCameraReady: this._onCameraReady,\n        onMountError: this._onMountError,\n        onBarCodeScanned: onBarCodeScanned,\n        onFacesDetected: onFacesDetected,\n        onPictureSaved: _onPictureSaved,\n        onResponsiveOrientationChanged: this._onResponsiveOrientationChanged\n      }));\n    }\n  }], [{\n    key: \"isAvailableAsync\",\n    value: (function () {\n      var _isAvailableAsync = _asyncToGenerator(function* () {\n        if (!CameraManager.isAvailableAsync) {\n          throw new UnavailabilityError('expo-camera', 'isAvailableAsync');\n        }\n        return yield CameraManager.isAvailableAsync();\n      });\n      function isAvailableAsync() {\n        return _isAvailableAsync.apply(this, arguments);\n      }\n      return isAvailableAsync;\n    }())\n  }, {\n    key: \"getAvailableCameraTypesAsync\",\n    value: (function () {\n      var _getAvailableCameraTypesAsync = _asyncToGenerator(function* () {\n        if (!CameraManager.getAvailableCameraTypesAsync) {\n          throw new UnavailabilityError('expo-camera', 'getAvailableCameraTypesAsync');\n        }\n        return yield CameraManager.getAvailableCameraTypesAsync();\n      });\n      function getAvailableCameraTypesAsync() {\n        return _getAvailableCameraTypesAsync.apply(this, arguments);\n      }\n      return getAvailableCameraTypesAsync;\n    }())\n  }, {\n    key: \"getAvailableVideoCodecsAsync\",\n    value: function () {\n      var _getAvailableVideoCodecsAsync = _asyncToGenerator(function* () {\n        if (!CameraManager.getAvailableVideoCodecsAsync) {\n          throw new UnavailabilityError('Camera', 'getAvailableVideoCodecsAsync');\n        }\n        return yield CameraManager.getAvailableVideoCodecsAsync();\n      });\n      function getAvailableVideoCodecsAsync() {\n        return _getAvailableVideoCodecsAsync.apply(this, arguments);\n      }\n      return getAvailableVideoCodecsAsync;\n    }()\n  }, {\n    key: \"getPermissionsAsync\",\n    value: function () {\n      var _getPermissionsAsync = _asyncToGenerator(function* () {\n        console.warn(`\"getPermissionsAsync()\" is now deprecated. Please use \"getCameraPermissionsAsync()\" or \"getMicrophonePermissionsAsync()\" instead.`);\n        return CameraManager.getPermissionsAsync();\n      });\n      function getPermissionsAsync() {\n        return _getPermissionsAsync.apply(this, arguments);\n      }\n      return getPermissionsAsync;\n    }()\n  }, {\n    key: \"requestPermissionsAsync\",\n    value: function () {\n      var _requestPermissionsAsync = _asyncToGenerator(function* () {\n        console.warn(`\"requestPermissionsAsync()\" is now deprecated. Please use \"requestCameraPermissionsAsync()\" or \"requestMicrophonePermissionsAsync()\" instead.`);\n        return CameraManager.requestPermissionsAsync();\n      });\n      function requestPermissionsAsync() {\n        return _requestPermissionsAsync.apply(this, arguments);\n      }\n      return requestPermissionsAsync;\n    }()\n  }, {\n    key: \"getCameraPermissionsAsync\",\n    value: function () {\n      var _getCameraPermissionsAsync = _asyncToGenerator(function* () {\n        return CameraManager.getCameraPermissionsAsync();\n      });\n      function getCameraPermissionsAsync() {\n        return _getCameraPermissionsAsync.apply(this, arguments);\n      }\n      return getCameraPermissionsAsync;\n    }()\n  }, {\n    key: \"requestCameraPermissionsAsync\",\n    value: function () {\n      var _requestCameraPermissionsAsync = _asyncToGenerator(function* () {\n        return CameraManager.requestCameraPermissionsAsync();\n      });\n      function requestCameraPermissionsAsync() {\n        return _requestCameraPermissionsAsync.apply(this, arguments);\n      }\n      return requestCameraPermissionsAsync;\n    }()\n  }, {\n    key: \"getMicrophonePermissionsAsync\",\n    value: function () {\n      var _getMicrophonePermissionsAsync = _asyncToGenerator(function* () {\n        return CameraManager.getMicrophonePermissionsAsync();\n      });\n      function getMicrophonePermissionsAsync() {\n        return _getMicrophonePermissionsAsync.apply(this, arguments);\n      }\n      return getMicrophonePermissionsAsync;\n    }()\n  }, {\n    key: \"requestMicrophonePermissionsAsync\",\n    value: function () {\n      var _requestMicrophonePermissionsAsync = _asyncToGenerator(function* () {\n        return CameraManager.requestMicrophonePermissionsAsync();\n      });\n      function requestMicrophonePermissionsAsync() {\n        return _requestMicrophonePermissionsAsync.apply(this, arguments);\n      }\n      return requestMicrophonePermissionsAsync;\n    }()\n  }]);\n  return Camera;\n}(React.Component);\n_class = Camera;\nCamera.Constants = {\n  Type: CameraManager.Type,\n  FlashMode: CameraManager.FlashMode,\n  AutoFocus: CameraManager.AutoFocus,\n  WhiteBalance: CameraManager.WhiteBalance,\n  VideoQuality: CameraManager.VideoQuality,\n  VideoStabilization: CameraManager.VideoStabilization || {},\n  VideoCodec: CameraManager.VideoCodec\n};\nCamera.ConversionTables = ConversionTables;\nCamera.defaultProps = {\n  zoom: 0,\n  ratio: '4:3',\n  focusDepth: 0,\n  faceDetectorSettings: {},\n  type: CameraManager.Type.back,\n  autoFocus: CameraManager.AutoFocus.on,\n  flashMode: CameraManager.FlashMode.off,\n  whiteBalance: CameraManager.WhiteBalance.auto\n};\nCamera.useCameraPermissions = createPermissionHook({\n  getMethod: _class.getCameraPermissionsAsync,\n  requestMethod: _class.requestCameraPermissionsAsync\n});\nCamera.useMicrophonePermissions = createPermissionHook({\n  getMethod: _class.getMicrophonePermissionsAsync,\n  requestMethod: _class.requestMicrophonePermissionsAsync\n});\nexport { Camera as default };\nvar Constants = Camera.Constants,\n  getPermissionsAsync = Camera.getPermissionsAsync,\n  requestPermissionsAsync = Camera.requestPermissionsAsync,\n  getCameraPermissionsAsync = Camera.getCameraPermissionsAsync,\n  requestCameraPermissionsAsync = Camera.requestCameraPermissionsAsync,\n  getMicrophonePermissionsAsync = Camera.getMicrophonePermissionsAsync,\n  requestMicrophonePermissionsAsync = Camera.requestMicrophonePermissionsAsync;\nexport { Constants, getPermissionsAsync, requestPermissionsAsync, getCameraPermissionsAsync, requestCameraPermissionsAsync, getMicrophonePermissionsAsync, requestMicrophonePermissionsAsync };","map":{"version":3,"names":["createPermissionHook","Platform","UnavailabilityError","React","findNodeHandle","ExponentCamera","CameraManager","ConversionTables","ensureNativeProps","EventThrottleMs","_PICTURE_SAVED_CALLBACKS","_GLOBAL_PICTURE_ID","ensurePictureOptions","options","pictureOptions","quality","onPictureSaved","id","fastMode","ensureRecordingOptions","recordingOptions","Camera","Constants","VideoQuality","_onPictureSaved","_ref","nativeEvent","data","callback","_React$Component","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_lastEvents","_lastEventsTimes","_onCameraReady","props","onCameraReady","_onMountError","_ref2","onMountError","_onResponsiveOrientationChanged","_ref3","onResponsiveOrientationChanged","_onObjectDetected","_ref4","type","JSON","stringify","Date","getTime","_setReference","ref","_cameraRef","OS","_cameraHandle","_createClass","key","value","_takePictureAsync","_asyncToGenerator","takePicture","takePictureAsync","_x","apply","_getSupportedRatiosAsync","getSupportedRatios","getSupportedRatiosAsync","_getAvailablePictureSizesAsync","ratio","getAvailablePictureSizes","getAvailablePictureSizesAsync","_x2","_recordAsync","record","recordAsync","_x3","stopRecording","pausePreview","resumePreview","render","nativeProps","onBarCodeScanned","undefined","onFacesDetected","createElement","_objectSpread","_isAvailableAsync","isAvailableAsync","_getAvailableCameraTypesAsync","getAvailableCameraTypesAsync","_getAvailableVideoCodecsAsync","getAvailableVideoCodecsAsync","_getPermissionsAsync","console","warn","getPermissionsAsync","_requestPermissionsAsync","requestPermissionsAsync","_getCameraPermissionsAsync","getCameraPermissionsAsync","_requestCameraPermissionsAsync","requestCameraPermissionsAsync","_getMicrophonePermissionsAsync","getMicrophonePermissionsAsync","_requestMicrophonePermissionsAsync","requestMicrophonePermissionsAsync","Component","_class","Type","FlashMode","AutoFocus","WhiteBalance","VideoStabilization","VideoCodec","defaultProps","zoom","focusDepth","faceDetectorSettings","back","autoFocus","on","flashMode","off","whiteBalance","auto","useCameraPermissions","getMethod","requestMethod","useMicrophonePermissions","default"],"sources":["D:\\project\\1project\\Messenger\\Messenger\\node_modules\\expo-camera\\src\\Camera.tsx"],"sourcesContent":["import { createPermissionHook, Platform, UnavailabilityError } from 'expo-modules-core';\nimport * as React from 'react';\nimport { findNodeHandle } from 'react-native';\n\nimport {\n  CameraCapturedPicture,\n  CameraOrientation,\n  CameraPictureOptions,\n  CameraProps,\n  CameraRecordingOptions,\n  CameraType,\n  ConstantsType,\n  PermissionResponse,\n  VideoCodec,\n} from './Camera.types';\nimport ExponentCamera from './ExponentCamera';\nimport CameraManager from './ExponentCameraManager';\nimport { ConversionTables, ensureNativeProps } from './utils/props';\n\nconst EventThrottleMs = 500;\n\nconst _PICTURE_SAVED_CALLBACKS = {};\n\nlet _GLOBAL_PICTURE_ID = 1;\n\nfunction ensurePictureOptions(options?: CameraPictureOptions): CameraPictureOptions {\n  const pictureOptions: CameraPictureOptions =\n    !options || typeof options !== 'object' ? {} : options;\n\n  if (!pictureOptions.quality) {\n    pictureOptions.quality = 1;\n  }\n  if (pictureOptions.onPictureSaved) {\n    const id = _GLOBAL_PICTURE_ID++;\n    _PICTURE_SAVED_CALLBACKS[id] = pictureOptions.onPictureSaved;\n    pictureOptions.id = id;\n    pictureOptions.fastMode = true;\n  }\n  return pictureOptions;\n}\n\nfunction ensureRecordingOptions(options?: CameraRecordingOptions): CameraRecordingOptions {\n  let recordingOptions = options || {};\n\n  if (!recordingOptions || typeof recordingOptions !== 'object') {\n    recordingOptions = {};\n  } else if (typeof recordingOptions.quality === 'string') {\n    recordingOptions.quality = Camera.Constants.VideoQuality[recordingOptions.quality];\n  }\n\n  return recordingOptions;\n}\n\nfunction _onPictureSaved({\n  nativeEvent,\n}: {\n  nativeEvent: { data: CameraCapturedPicture; id: number };\n}) {\n  const { id, data } = nativeEvent;\n  const callback = _PICTURE_SAVED_CALLBACKS[id];\n  if (callback) {\n    callback(data);\n    delete _PICTURE_SAVED_CALLBACKS[id];\n  }\n}\n\nexport default class Camera extends React.Component<CameraProps> {\n  /**\n   * Check whether the current device has a camera. This is useful for web and simulators cases.\n   * This isn't influenced by the Permissions API (all platforms), or HTTP usage (in the browser).\n   * You will still need to check if the native permission has been accepted.\n   * @platform web\n   */\n  static async isAvailableAsync(): Promise<boolean> {\n    if (!CameraManager.isAvailableAsync) {\n      throw new UnavailabilityError('expo-camera', 'isAvailableAsync');\n    }\n\n    return await CameraManager.isAvailableAsync();\n  }\n\n  /**\n   * Returns a list of camera types `['front', 'back']`. This is useful for desktop browsers which only have front-facing cameras.\n   * @platform web\n   */\n  static async getAvailableCameraTypesAsync(): Promise<CameraType[]> {\n    if (!CameraManager.getAvailableCameraTypesAsync) {\n      throw new UnavailabilityError('expo-camera', 'getAvailableCameraTypesAsync');\n    }\n\n    return await CameraManager.getAvailableCameraTypesAsync();\n  }\n\n  // @needsAudit\n  /**\n   * Queries the device for the available video codecs that can be used in video recording.\n   * @return A promise that resolves to a list of strings that represents available codecs.\n   * @platform ios\n   */\n  static async getAvailableVideoCodecsAsync(): Promise<VideoCodec[]> {\n    if (!CameraManager.getAvailableVideoCodecsAsync) {\n      throw new UnavailabilityError('Camera', 'getAvailableVideoCodecsAsync');\n    }\n\n    return await CameraManager.getAvailableVideoCodecsAsync();\n  }\n\n  static Constants: ConstantsType = {\n    Type: CameraManager.Type,\n    FlashMode: CameraManager.FlashMode,\n    AutoFocus: CameraManager.AutoFocus,\n    WhiteBalance: CameraManager.WhiteBalance,\n    VideoQuality: CameraManager.VideoQuality,\n    VideoStabilization: CameraManager.VideoStabilization || {},\n    VideoCodec: CameraManager.VideoCodec,\n  };\n\n  // Values under keys from this object will be transformed to native options\n  static ConversionTables = ConversionTables;\n\n  static defaultProps: CameraProps = {\n    zoom: 0,\n    ratio: '4:3',\n    focusDepth: 0,\n    faceDetectorSettings: {},\n    type: CameraManager.Type.back,\n    autoFocus: CameraManager.AutoFocus.on,\n    flashMode: CameraManager.FlashMode.off,\n    whiteBalance: CameraManager.WhiteBalance.auto,\n  };\n\n  // @needsAudit\n  /**\n   * @deprecated Use `getCameraPermissionsAsync` or `getMicrophonePermissionsAsync` instead.\n   * Checks user's permissions for accessing camera.\n   */\n  static async getPermissionsAsync(): Promise<PermissionResponse> {\n    console.warn(\n      `\"getPermissionsAsync()\" is now deprecated. Please use \"getCameraPermissionsAsync()\" or \"getMicrophonePermissionsAsync()\" instead.`\n    );\n    return CameraManager.getPermissionsAsync();\n  }\n\n  // @needsAudit\n  /**\n   * Asks the user to grant permissions for accessing camera.\n   * On iOS this will require apps to specify both `NSCameraUsageDescription` and `NSMicrophoneUsageDescription` entries in the **Info.plist**.\n   * @return A promise that resolves to an object of type [PermissionResponse](#permissionresponse).\n   * @deprecated Use `requestCameraPermissionsAsync` or `requestMicrophonePermissionsAsync` instead.\n   */\n  static async requestPermissionsAsync(): Promise<PermissionResponse> {\n    console.warn(\n      `\"requestPermissionsAsync()\" is now deprecated. Please use \"requestCameraPermissionsAsync()\" or \"requestMicrophonePermissionsAsync()\" instead.`\n    );\n    return CameraManager.requestPermissionsAsync();\n  }\n\n  // @needsAudit\n  /**\n   * Checks user's permissions for accessing camera.\n   * @return A promise that resolves to an object of type [PermissionResponse](#permissionresponse).\n   */\n  static async getCameraPermissionsAsync(): Promise<PermissionResponse> {\n    return CameraManager.getCameraPermissionsAsync();\n  }\n\n  // @needsAudit\n  /**\n   * Asks the user to grant permissions for accessing camera.\n   * On iOS this will require apps to specify an `NSCameraUsageDescription` entry in the **Info.plist**.\n   * @return A promise that resolves to an object of type [PermissionResponse](#permissionresponse).\n   */\n  static async requestCameraPermissionsAsync(): Promise<PermissionResponse> {\n    return CameraManager.requestCameraPermissionsAsync();\n  }\n\n  // @needsAudit\n  /**\n   * Check or request permissions to access the camera.\n   * This uses both `requestCameraPermissionsAsync` and `getCameraPermissionsAsync` to interact with the permissions.\n   *\n   * @example\n   * ```ts\n   * const [status, requestPermission] = Camera.useCameraPermissions();\n   * ```\n   */\n  static useCameraPermissions = createPermissionHook({\n    getMethod: Camera.getCameraPermissionsAsync,\n    requestMethod: Camera.requestCameraPermissionsAsync,\n  });\n\n  // @needsAudit\n  /**\n   * Checks user's permissions for accessing microphone.\n   * @return A promise that resolves to an object of type [PermissionResponse](#permissionresponse).\n   */\n  static async getMicrophonePermissionsAsync(): Promise<PermissionResponse> {\n    return CameraManager.getMicrophonePermissionsAsync();\n  }\n\n  // @needsAudit\n  /**\n   * Asks the user to grant permissions for accessing the microphone.\n   * On iOS this will require apps to specify an `NSMicrophoneUsageDescription` entry in the **Info.plist**.\n   * @return A promise that resolves to an object of type [PermissionResponse](#permissionresponse).\n   */\n  static async requestMicrophonePermissionsAsync(): Promise<PermissionResponse> {\n    return CameraManager.requestMicrophonePermissionsAsync();\n  }\n\n  // @needsAudit\n  /**\n   * Check or request permissions to access the microphone.\n   * This uses both `requestMicrophonePermissionsAsync` and `getMicrophonePermissionsAsync` to interact with the permissions.\n   *\n   * @example\n   * ```ts\n   * const [status, requestPermission] = Camera.useMicrophonePermissions();\n   * ```\n   */\n  static useMicrophonePermissions = createPermissionHook({\n    getMethod: Camera.getMicrophonePermissionsAsync,\n    requestMethod: Camera.requestMicrophonePermissionsAsync,\n  });\n\n  _cameraHandle?: number | null;\n  _cameraRef?: React.Component | null;\n  _lastEvents: { [eventName: string]: string } = {};\n  _lastEventsTimes: { [eventName: string]: Date } = {};\n\n  // @needsAudit\n  /**\n   * Takes a picture and saves it to app's cache directory. Photos are rotated to match device's orientation\n   * (if `options.skipProcessing` flag is not enabled) and scaled to match the preview. Anyway on Android it is essential\n   * to set ratio prop to get a picture with correct dimensions.\n   * > **Note**: Make sure to wait for the [`onCameraReady`](#oncameraready) callback before calling this method.\n   * @param options An object in form of `CameraPictureOptions` type.\n   * @return Returns a Promise that resolves to `CameraCapturedPicture` object, where `uri` is a URI to the local image file on iOS,\n   * Android, and a base64 string on web (usable as the source for an `Image` element). The `width` and `height` properties specify\n   * the dimensions of the image. `base64` is included if the `base64` option was truthy, and is a string containing the JPEG data\n   * of the image in Base64--prepend that with `'data:image/jpg;base64,'` to get a data URI, which you can use as the source\n   * for an `Image` element for example. `exif` is included if the `exif` option was truthy, and is an object containing EXIF\n   * data for the image--the names of its properties are EXIF tags and their values are the values for those tags.\n   *\n   * > On native platforms, the local image URI is temporary. Use [`FileSystem.copyAsync`](filesystem.md#filesystemcopyasyncoptions)\n   * > to make a permanent copy of the image.\n   */\n  async takePictureAsync(options?: CameraPictureOptions): Promise<CameraCapturedPicture> {\n    const pictureOptions = ensurePictureOptions(options);\n\n    return await CameraManager.takePicture(pictureOptions, this._cameraHandle);\n  }\n\n  /**\n   * Get aspect ratios that are supported by the device and can be passed via `ratio` prop.\n   * @return Returns a Promise that resolves to an array of strings representing ratios, eg. `['4:3', '1:1']`.\n   * @platform android\n   */\n  async getSupportedRatiosAsync(): Promise<string[]> {\n    if (!CameraManager.getSupportedRatios) {\n      throw new UnavailabilityError('Camera', 'getSupportedRatiosAsync');\n    }\n\n    return await CameraManager.getSupportedRatios(this._cameraHandle);\n  }\n\n  /**\n   * Get picture sizes that are supported by the device for given `ratio`.\n   * @param ratio A string representing aspect ratio of sizes to be returned.\n   * @return Returns a Promise that resolves to an array of strings representing picture sizes that can be passed to `pictureSize` prop.\n   * The list varies across Android devices but is the same for every iOS.\n   */\n  async getAvailablePictureSizesAsync(ratio?: string): Promise<string[]> {\n    if (!CameraManager.getAvailablePictureSizes) {\n      throw new UnavailabilityError('Camera', 'getAvailablePictureSizesAsync');\n    }\n    return await CameraManager.getAvailablePictureSizes(ratio, this._cameraHandle);\n  }\n\n  /**\n   * Starts recording a video that will be saved to cache directory. Videos are rotated to match device's orientation.\n   * Flipping camera during a recording results in stopping it.\n   * @param options A map of `CameraRecordingOptions` type.\n   * @return Returns a Promise that resolves to an object containing video file `uri` property and a `codec` property on iOS.\n   * The Promise is returned if `stopRecording` was invoked, one of `maxDuration` and `maxFileSize` is reached or camera preview is stopped.\n   * @platform android\n   * @platform ios\n   */\n  async recordAsync(options?: CameraRecordingOptions): Promise<{ uri: string }> {\n    if (!CameraManager.record) {\n      throw new UnavailabilityError('Camera', 'recordAsync');\n    }\n\n    const recordingOptions = ensureRecordingOptions(options);\n    return await CameraManager.record(recordingOptions, this._cameraHandle);\n  }\n\n  /**\n   * Stops recording if any is in progress.\n   */\n  stopRecording() {\n    if (!CameraManager.stopRecording) {\n      throw new UnavailabilityError('Camera', 'stopRecording');\n    }\n\n    CameraManager.stopRecording(this._cameraHandle);\n  }\n\n  /**\n   * Pauses the camera preview. It is not recommended to use `takePictureAsync` when preview is paused.\n   */\n  pausePreview() {\n    if (!CameraManager.pausePreview) {\n      throw new UnavailabilityError('Camera', 'pausePreview');\n    }\n\n    CameraManager.pausePreview(this._cameraHandle);\n  }\n\n  /**\n   * Resumes the camera preview.\n   */\n  resumePreview() {\n    if (!CameraManager.resumePreview) {\n      throw new UnavailabilityError('Camera', 'resumePreview');\n    }\n\n    CameraManager.resumePreview(this._cameraHandle);\n  }\n\n  _onCameraReady = () => {\n    if (this.props.onCameraReady) {\n      this.props.onCameraReady();\n    }\n  };\n\n  _onMountError = ({ nativeEvent }: { nativeEvent: { message: string } }) => {\n    if (this.props.onMountError) {\n      this.props.onMountError(nativeEvent);\n    }\n  };\n\n  _onResponsiveOrientationChanged = ({\n    nativeEvent,\n  }: {\n    nativeEvent: { orientation: CameraOrientation };\n  }) => {\n    if (this.props.onResponsiveOrientationChanged) {\n      this.props.onResponsiveOrientationChanged(nativeEvent);\n    }\n  };\n\n  _onObjectDetected =\n    (callback?: Function) =>\n    ({ nativeEvent }: { nativeEvent: any }) => {\n      const { type } = nativeEvent;\n      if (\n        this._lastEvents[type] &&\n        this._lastEventsTimes[type] &&\n        JSON.stringify(nativeEvent) === this._lastEvents[type] &&\n        new Date().getTime() - this._lastEventsTimes[type].getTime() < EventThrottleMs\n      ) {\n        return;\n      }\n\n      if (callback) {\n        callback(nativeEvent);\n        this._lastEventsTimes[type] = new Date();\n        this._lastEvents[type] = JSON.stringify(nativeEvent);\n      }\n    };\n\n  _setReference = (ref?: React.Component) => {\n    if (ref) {\n      this._cameraRef = ref;\n      // TODO(Bacon): Unify these - perhaps with hooks?\n      if (Platform.OS === 'web') {\n        this._cameraHandle = ref as any;\n      } else {\n        this._cameraHandle = findNodeHandle(ref);\n      }\n    } else {\n      this._cameraRef = null;\n      this._cameraHandle = null;\n    }\n  };\n\n  render() {\n    const nativeProps = ensureNativeProps(this.props);\n\n    const onBarCodeScanned = this.props.onBarCodeScanned\n      ? this._onObjectDetected(this.props.onBarCodeScanned)\n      : undefined;\n\n    const onFacesDetected = this._onObjectDetected(this.props.onFacesDetected);\n\n    return (\n      <ExponentCamera\n        {...nativeProps}\n        ref={this._setReference}\n        onCameraReady={this._onCameraReady}\n        onMountError={this._onMountError}\n        onBarCodeScanned={onBarCodeScanned}\n        onFacesDetected={onFacesDetected}\n        onPictureSaved={_onPictureSaved}\n        onResponsiveOrientationChanged={this._onResponsiveOrientationChanged}\n      />\n    );\n  }\n}\n\nexport const {\n  Constants,\n  getPermissionsAsync,\n  requestPermissionsAsync,\n  getCameraPermissionsAsync,\n  requestCameraPermissionsAsync,\n  getMicrophonePermissionsAsync,\n  requestMicrophonePermissionsAsync,\n} = Camera;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}