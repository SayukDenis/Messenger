{"ast":null,"code":"import React, { useRef } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { heightOfHeader, screenWidth } from \"../../Constants/ConstantsForChatlist\";\nimport ButtonForSettings from \"../../../SemiComponents/ButtonForSettings\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MainForCreateChannelAngGroupOrWriteMessage = function MainForCreateChannelAngGroupOrWriteMessage(_ref) {\n  var navigation = _ref.navigation;\n  var marginTop = 15;\n  var marginLeft = screenWidth * 0.03;\n  var PressOnCreateGroup = useRef(function () {\n    navigation.navigate(\"Create Group Page\");\n  });\n  return _jsxs(View, {\n    style: {\n      marginTop: heightOfHeader + marginTop\n    },\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 17,\n        marginLeft: marginLeft,\n        marginBottom: 10\n      },\n      children: \"Create group/channel\"\n    }), _jsx(TouchableOpacity, {\n      style: {\n        marginBottom: 2\n      },\n      children: _jsx(ButtonForSettings, {\n        text: \"Create channel\"\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: PressOnCreateGroup.current,\n      children: _jsx(ButtonForSettings, {\n        text: \"Create group\"\n      })\n    }), _jsx(Text, {\n      style: {\n        fontSize: 17,\n        marginLeft: marginLeft,\n        marginBottom: 10,\n        marginTop: marginTop\n      },\n      children: \"Message\"\n    }), _jsx(TouchableOpacity, {\n      children: _jsx(ButtonForSettings, {\n        text: \"Write message\"\n      })\n    })]\n  });\n};\nexport default MainForCreateChannelAngGroupOrWriteMessage;","map":{"version":3,"names":["React","useRef","Text","TouchableOpacity","View","heightOfHeader","screenWidth","ButtonForSettings","jsx","_jsx","jsxs","_jsxs","MainForCreateChannelAngGroupOrWriteMessage","_ref","navigation","marginTop","marginLeft","PressOnCreateGroup","navigate","style","children","fontSize","marginBottom","text","onPress","current"],"sources":["D:/project/1project/Messenger/Messenger/Pages/ChatList/Components/CreateChannelAndGroupOrWriteMessage/MainForCreateChannelAndGroupOrWriteMessage.tsx"],"sourcesContent":["import React, { useRef } from \"react\";\r\nimport { Text, TouchableOpacity, View } from \"react-native\";\r\nimport { heightOfHeader, screenHeight, screenWidth } from \"../../Constants/ConstantsForChatlist\";\r\nimport ButtonForSettings from \"../../../SemiComponents/ButtonForSettings\";\r\n\r\ninterface MainForCreateChannelAngGroupOrWriteMessageProps {\r\n  navigation:any\r\n}\r\n\r\nconst MainForCreateChannelAngGroupOrWriteMessage: React.FC<\r\n  MainForCreateChannelAngGroupOrWriteMessageProps\r\n> = ({navigation}) => {\r\n    const marginTop=15;\r\n    const marginLeft=screenWidth*0.03;\r\n    const PressOnCreateGroup=useRef(()=>{\r\n      navigation.navigate(\"Create Group Page\")\r\n    })\r\n  return (\r\n    <View style={{ marginTop: heightOfHeader + marginTop }}>\r\n      <Text style={{ fontSize: 17, marginLeft ,marginBottom:10}}>\r\n        {\"Create group/channel\"}\r\n      </Text>\r\n      <TouchableOpacity style={{marginBottom:2}}>\r\n        <ButtonForSettings text=\"Create channel\"/>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity onPress={PressOnCreateGroup.current}>\r\n        <ButtonForSettings text=\"Create group\"/>\r\n      </TouchableOpacity>\r\n      <Text style={{ fontSize: 17, marginLeft ,marginBottom:10,marginTop}}>\r\n        {\"Message\"}\r\n      </Text>\r\n      <TouchableOpacity>\r\n        <ButtonForSettings text=\"Write message\"/>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default MainForCreateChannelAngGroupOrWriteMessage;\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAEtC,SAASC,cAAc,EAAgBC,WAAW;AAClD,OAAOC,iBAAiB;AAAkD,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAM1E,IAAMC,0CAEL,GAAG,SAFEA,0CAELA,CAAAC,IAAA,EAAqB;EAAA,IAAhBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EACZ,IAAMC,SAAS,GAAC,EAAE;EAClB,IAAMC,UAAU,GAACV,WAAW,GAAC,IAAI;EACjC,IAAMW,kBAAkB,GAAChB,MAAM,CAAC,YAAI;IAClCa,UAAU,CAACI,QAAQ,CAAC,mBAAmB,CAAC;EAC1C,CAAC,CAAC;EACJ,OACEP,KAAA,CAACP,IAAI;IAACe,KAAK,EAAE;MAAEJ,SAAS,EAAEV,cAAc,GAAGU;IAAU,CAAE;IAAAK,QAAA,GACrDX,IAAA,CAACP,IAAI;MAACiB,KAAK,EAAE;QAAEE,QAAQ,EAAE,EAAE;QAAEL,UAAU,EAAVA,UAAU;QAAEM,YAAY,EAAC;MAAE,CAAE;MAAAF,QAAA,EACvD;IAAsB,CACnB,CAAC,EACPX,IAAA,CAACN,gBAAgB;MAACgB,KAAK,EAAE;QAACG,YAAY,EAAC;MAAC,CAAE;MAAAF,QAAA,EACxCX,IAAA,CAACF,iBAAiB;QAACgB,IAAI,EAAC;MAAgB,CAAC;IAAC,CAC1B,CAAC,EACnBd,IAAA,CAACN,gBAAgB;MAACqB,OAAO,EAAEP,kBAAkB,CAACQ,OAAQ;MAAAL,QAAA,EACpDX,IAAA,CAACF,iBAAiB;QAACgB,IAAI,EAAC;MAAc,CAAC;IAAC,CACxB,CAAC,EACnBd,IAAA,CAACP,IAAI;MAACiB,KAAK,EAAE;QAAEE,QAAQ,EAAE,EAAE;QAAEL,UAAU,EAAVA,UAAU;QAAEM,YAAY,EAAC,EAAE;QAACP,SAAS,EAATA;MAAS,CAAE;MAAAK,QAAA,EACjE;IAAS,CACN,CAAC,EACPX,IAAA,CAACN,gBAAgB;MAAAiB,QAAA,EACfX,IAAA,CAACF,iBAAiB;QAACgB,IAAI,EAAC;MAAe,CAAC;IAAC,CACzB,CAAC;EAAA,CACf,CAAC;AAEX,CAAC;AAED,eAAeX,0CAA0C"},"metadata":{},"sourceType":"module","externalDependencies":[]}