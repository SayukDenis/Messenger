{"ast":null,"code":"import React, { useRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport ContactsSvg from \"../SVG/ContactsSvg\";\nimport AddFolderSvg from \"../SVG/AddFolderSvg\";\nimport WriteMessageSvg from \"../SVG/WriteMessageSvg\";\nimport UserIconSvg from \"../SVG/UserIconSvg\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { screenHeight, screenWidth } from \"../../Constants/ConstantsForChatlist\";\nimport { setBooleanForTouchOnHamburgerInHeaderChatList } from \"../../../../ReducersAndActions/Actions/ChatListActions/ChatListActions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RightContainer = function RightContainer(_ref) {\n  var navigation = _ref.navigation;\n  var dispatch = useDispatch();\n  var PressForDispatch = function PressForDispatch() {\n    setTimeout(function () {\n      return dispatch(setBooleanForTouchOnHamburgerInHeaderChatList(false));\n    }, 350);\n  };\n  var kefForSizeOfSvg = 0.073;\n  var PressOnUserIcon = useRef(function () {\n    navigation.navigate(\"NavigationForSettings\");\n    PressForDispatch();\n  });\n  var PressOnContactsIcon = useRef(function () {\n    navigation.navigate(\"ContactsPage\");\n    PressForDispatch();\n  });\n  var PressaOnAddFolderIcon = useRef(function () {\n    navigation.navigate(\"Chat folders\");\n    PressForDispatch();\n  });\n  var PressOnWriteMessage = useRef(function () {\n    navigation.navigate(\"Create channel and group or write message\");\n    PressForDispatch();\n  });\n  return _jsxs(Animated.View, {\n    style: [{\n      width: screenWidth * 0.765,\n      flexDirection: \"row\",\n      justifyContent: \"space-between\"\n    }],\n    children: [_jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        justifyContent: \"center\"\n      },\n      children: [_jsx(TouchableOpacity, {\n        onPress: PressOnContactsIcon.current,\n        style: {\n          alignSelf: \"center\",\n          marginLeft: screenWidth * 0\n        },\n        children: _jsx(ContactsSvg, {\n          width: screenWidth * kefForSizeOfSvg,\n          height: screenHeight * kefForSizeOfSvg\n        })\n      }), _jsx(TouchableOpacity, {\n        style: {\n          alignSelf: \"center\",\n          marginLeft: screenWidth * 0.05\n        },\n        onPress: PressaOnAddFolderIcon.current,\n        children: _jsx(AddFolderSvg, {\n          width: screenWidth * kefForSizeOfSvg,\n          height: screenHeight * kefForSizeOfSvg\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: PressOnWriteMessage.current,\n        style: {\n          alignSelf: \"center\",\n          marginLeft: screenWidth * 0.05\n        },\n        children: _jsx(WriteMessageSvg, {\n          width: screenWidth * kefForSizeOfSvg,\n          height: screenHeight * kefForSizeOfSvg\n        })\n      })]\n    }), _jsx(TouchableOpacity, {\n      onPress: PressOnUserIcon.current,\n      style: {\n        alignSelf: \"center\"\n      },\n      children: _jsx(UserIconSvg, {\n        width: screenWidth * kefForSizeOfSvg,\n        height: screenHeight * kefForSizeOfSvg\n      })\n    })]\n  });\n};\nexport default connect(null)(RightContainer);","map":{"version":3,"names":["React","useRef","View","Animated","ContactsSvg","AddFolderSvg","WriteMessageSvg","UserIconSvg","connect","useDispatch","TouchableOpacity","screenHeight","screenWidth","setBooleanForTouchOnHamburgerInHeaderChatList","jsx","_jsx","jsxs","_jsxs","RightContainer","_ref","navigation","dispatch","PressForDispatch","setTimeout","kefForSizeOfSvg","PressOnUserIcon","navigate","PressOnContactsIcon","PressaOnAddFolderIcon","PressOnWriteMessage","style","width","flexDirection","justifyContent","children","onPress","current","alignSelf","marginLeft","height"],"sources":["D:/project/1project/Messenger/Messenger/Pages/ChatList/Components/Headers containers/RightContainer.tsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { View, Animated, Dimensions } from \"react-native\";\r\nimport ContactsSvg from \"../SVG/ContactsSvg\";\r\nimport AddFolderSvg from \"../SVG/AddFolderSvg\";\r\nimport WriteMessageSvg from \"../SVG/WriteMessageSvg\";\r\nimport UserIconSvg from \"../SVG/UserIconSvg\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\r\nimport { screenHeight, screenWidth } from \"../../Constants/ConstantsForChatlist\";\r\nimport { setBooleanForTouchOnHamburgerInHeaderChatList } from \"../../../../ReducersAndActions/Actions/ChatListActions/ChatListActions\";\r\n\r\nconst RightContainer = ({ navigation }: any) => {\r\n  const dispatch = useDispatch();\r\n  const PressForDispatch = () => {\r\n    setTimeout(()=>\r\n    dispatch(\r\n      setBooleanForTouchOnHamburgerInHeaderChatList(false)\r\n    ),350)\r\n  };\r\n  const kefForSizeOfSvg: number = 0.073;\r\n  const PressOnUserIcon = useRef(() => {\r\n    navigation.navigate(\"NavigationForSettings\");\r\n    PressForDispatch()\r\n  })\r\n  const PressOnContactsIcon = useRef(() => {\r\n    navigation.navigate(\"ContactsPage\");\r\n    PressForDispatch()\r\n  });\r\n  const PressaOnAddFolderIcon = useRef(() => {\r\n    navigation.navigate(\"Chat folders\");\r\n    PressForDispatch()\r\n  });\r\n  const PressOnWriteMessage = useRef(() => {\r\n    navigation.navigate(\"Create channel and group or write message\");\r\n    PressForDispatch()\r\n  });\r\n  return (\r\n    <Animated.View\r\n      style={[\r\n        {\r\n          width: screenWidth * 0.765,\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-between\",\r\n        },\r\n      ]}\r\n    >\r\n      <View\r\n        style={{\r\n          flexDirection: \"row\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <TouchableOpacity\r\n          onPress={PressOnContactsIcon.current}\r\n          style={{ alignSelf: \"center\", marginLeft: screenWidth * 0 }}\r\n        >\r\n          <ContactsSvg\r\n            width={screenWidth * kefForSizeOfSvg}\r\n            height={screenHeight * kefForSizeOfSvg}\r\n          />\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          style={{ alignSelf: \"center\", marginLeft: screenWidth * 0.05 }}\r\n          onPress={PressaOnAddFolderIcon.current}\r\n        >\r\n          <AddFolderSvg\r\n            width={screenWidth * kefForSizeOfSvg}\r\n            height={screenHeight * kefForSizeOfSvg}\r\n          />\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          onPress={PressOnWriteMessage.current}\r\n          style={{ alignSelf: \"center\", marginLeft: screenWidth * 0.05 }}\r\n        >\r\n          <WriteMessageSvg\r\n            width={screenWidth * kefForSizeOfSvg}\r\n            height={screenHeight * kefForSizeOfSvg}\r\n          />\r\n        </TouchableOpacity>\r\n      </View>\r\n      <TouchableOpacity\r\n        onPress={PressOnUserIcon.current}\r\n        style={{\r\n          alignSelf: \"center\",\r\n        }}\r\n      >\r\n        <UserIconSvg\r\n          width={screenWidth * kefForSizeOfSvg}\r\n          height={screenHeight * kefForSizeOfSvg}\r\n        />\r\n      </TouchableOpacity>\r\n    </Animated.View>\r\n  );\r\n};\r\n\r\nexport default connect(null)(RightContainer);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}