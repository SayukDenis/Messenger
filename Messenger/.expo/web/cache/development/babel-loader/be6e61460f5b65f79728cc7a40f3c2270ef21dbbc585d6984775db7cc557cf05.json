{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport 'reflect-metadata';\nimport * as FileSystem from 'expo-file-system';\nimport { messagesOperations } from \"./messageOperations\";\nimport { usersOperations } from \"./usersOperations\";\nimport { chatOperations } from \"./chatOperations\";\nimport { selfProfileOperations } from \"./selfProfileOperations\";\nimport { tabOperations } from \"./tabOperations\";\nimport { folderOperations } from \"./folderOperations\";\nimport { branchOperations } from \"./branchOperations\";\nimport { branchTreeOperations } from \"./branchTreeOperations\";\nimport { roleOperations } from \"./roleOperations\";\nimport { mainChatOperations } from \"./mainChatOperations\";\nimport { dialogueOperations } from \"./dialogueOperations\";\nimport { channelOperations } from \"./channelOperations\";\nimport { groupOperations } from \"./groupOperations\";\nexport function Run() {\n  return _Run.apply(this, arguments);\n}\nfunction _Run() {\n  _Run = _asyncToGenerator(function* () {\n    console.log(\"shiiiiiiiiiiiit\");\n    yield deleteDb();\n    yield usersOperations();\n    yield messagesOperations();\n    yield chatOperations();\n    yield selfProfileOperations();\n    yield tabOperations();\n    yield folderOperations();\n    yield branchOperations();\n    yield branchTreeOperations();\n    yield roleOperations();\n    yield mainChatOperations();\n    yield dialogueOperations();\n    yield channelOperations();\n    yield groupOperations();\n  });\n  return _Run.apply(this, arguments);\n}\nfunction deleteDb() {\n  return _deleteDb.apply(this, arguments);\n}\nfunction _deleteDb() {\n  _deleteDb = _asyncToGenerator(function* () {\n    var path = FileSystem.documentDirectory + '/SQLite/messenger.db';\n    var info = yield FileSystem.getInfoAsync(path);\n    console.log(info);\n    if (info.exists) yield FileSystem.deleteAsync(path).then(function (x) {\n      return console.log('successfully deleted database');\n    });\n  });\n  return _deleteDb.apply(this, arguments);\n}","map":{"version":3,"names":["FileSystem","messagesOperations","usersOperations","chatOperations","selfProfileOperations","tabOperations","folderOperations","branchOperations","branchTreeOperations","roleOperations","mainChatOperations","dialogueOperations","channelOperations","groupOperations","Run","_Run","apply","arguments","_asyncToGenerator","console","log","deleteDb","_deleteDb","path","documentDirectory","info","getInfoAsync","exists","deleteAsync","then","x"],"sources":["C:/Users/T480/source/repos/Messenger/Messenger/dao/test/manualTest/_orchestrator.ts"],"sourcesContent":["import 'reflect-metadata';\r\nimport { dataSource } from '../../local/database';\r\nimport * as FileSystem from 'expo-file-system';\r\nimport { messagesOperations } from './messageOperations';\r\nimport { usersOperations } from './usersOperations';\r\nimport { chatOperations } from './chatOperations';\r\nimport { selfProfileOperations } from './selfProfileOperations';\r\nimport { tabOperations } from './tabOperations';\r\nimport { folderOperations } from './folderOperations';\r\nimport { branchOperations } from './branchOperations';\r\nimport { branchTreeOperations } from './branchTreeOperations';\r\nimport { roleOperations } from './roleOperations';\r\nimport { mainChatOperations } from './mainChatOperations';\r\nimport { dialogueOperations } from './dialogueOperations';\r\nimport { channel } from 'diagnostics_channel';\r\nimport { channelOperations } from './channelOperations';\r\nimport { groupOperations } from './groupOperations';\r\n\r\n\r\nexport async function Run() {\r\n    console.log(\"shiiiiiiiiiiiit\")\r\n    await deleteDb();\r\n    await usersOperations();\r\n    await messagesOperations();\r\n    await chatOperations();\r\n    await selfProfileOperations();\r\n    await tabOperations();\r\n    await folderOperations();\r\n    await branchOperations()\r\n    await branchTreeOperations();\r\n    await roleOperations();\r\n    await mainChatOperations();\r\n    await dialogueOperations();\r\n    await channelOperations();\r\n    await groupOperations();\r\n}\r\n\r\nasync function deleteDb() {\r\n    const path = FileSystem.documentDirectory + '/SQLite/messenger.db';\r\n    const info = await FileSystem.getInfoAsync(path);\r\n    console.log(info);\r\n    if (info.exists)\r\n        await FileSystem.deleteAsync(path).then(x => console.log('successfully deleted database'))\r\n}"],"mappings":";AAAA,OAAO,kBAAkB;AAEzB,OAAO,KAAKA,UAAU,MAAM,kBAAkB;AAC9C,SAASC,kBAAkB;AAC3B,SAASC,eAAe;AACxB,SAASC,cAAc;AACvB,SAASC,qBAAqB;AAC9B,SAASC,aAAa;AACtB,SAASC,gBAAgB;AACzB,SAASC,gBAAgB;AACzB,SAASC,oBAAoB;AAC7B,SAASC,cAAc;AACvB,SAASC,kBAAkB;AAC3B,SAASC,kBAAkB;AAE3B,SAASC,iBAAiB;AAC1B,SAASC,eAAe;AAGxB,gBAAsBC,GAAGA,CAAA;EAAA,OAAAC,IAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAgBxB,SAAAF,KAAA;EAAAA,IAAA,GAAAG,iBAAA,CAhBM,aAAqB;IACxBC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9B,MAAMC,QAAQ,CAAC,CAAC;IAChB,MAAMnB,eAAe,CAAC,CAAC;IACvB,MAAMD,kBAAkB,CAAC,CAAC;IAC1B,MAAME,cAAc,CAAC,CAAC;IACtB,MAAMC,qBAAqB,CAAC,CAAC;IAC7B,MAAMC,aAAa,CAAC,CAAC;IACrB,MAAMC,gBAAgB,CAAC,CAAC;IACxB,MAAMC,gBAAgB,CAAC,CAAC;IACxB,MAAMC,oBAAoB,CAAC,CAAC;IAC5B,MAAMC,cAAc,CAAC,CAAC;IACtB,MAAMC,kBAAkB,CAAC,CAAC;IAC1B,MAAMC,kBAAkB,CAAC,CAAC;IAC1B,MAAMC,iBAAiB,CAAC,CAAC;IACzB,MAAMC,eAAe,CAAC,CAAC;EAC3B,CAAC;EAAA,OAAAE,IAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAEcI,QAAQA,CAAA;EAAA,OAAAC,SAAA,CAAAN,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAK,UAAA;EAAAA,SAAA,GAAAJ,iBAAA,CAAvB,aAA0B;IACtB,IAAMK,IAAI,GAAGvB,UAAU,CAACwB,iBAAiB,GAAG,sBAAsB;IAClE,IAAMC,IAAI,SAASzB,UAAU,CAAC0B,YAAY,CAACH,IAAI,CAAC;IAChDJ,OAAO,CAACC,GAAG,CAACK,IAAI,CAAC;IACjB,IAAIA,IAAI,CAACE,MAAM,EACX,MAAM3B,UAAU,CAAC4B,WAAW,CAACL,IAAI,CAAC,CAACM,IAAI,CAAC,UAAAC,CAAC;MAAA,OAAIX,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAAA,EAAC;EAClG,CAAC;EAAA,OAAAE,SAAA,CAAAN,KAAA,OAAAC,SAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}