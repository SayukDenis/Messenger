{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { listOfChatsStyle } from \"../Styles/ListOfChatsStyle\";\nimport ChatContainer from \"./List of folders containers/ChatContainer\";\nimport { SwipeListView } from 'react-native-swipe-list-view';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ListOfFolder = function ListOfFolder(_ref) {\n  var user = _ref.user,\n    selectedFolder = _ref.selectedFolder;\n  var _Dimensions$get = Dimensions.get('window'),\n    screenWidth = _Dimensions$get.width,\n    screenHeight = _Dimensions$get.height;\n  var Container = React.forwardRef(function (_ref2, ref) {\n    var item = _ref2.item,\n      index = _ref2.index;\n    if (index == 0) {\n      return _jsxs(_Fragment, {\n        children: [_jsx(View, {\n          style: listOfChatsStyle.gapContainerHigh\n        }), _jsx(View, {\n          style: listOfChatsStyle.lineStyle\n        }), _jsx(ChatContainer, {\n          chat: item\n        })]\n      });\n    } else if (index == user.folders[selectedFolder].listOfChats.length - 1) {\n      return _jsxs(_Fragment, {\n        children: [_jsx(ChatContainer, {\n          chat: item\n        }), _jsx(View, {\n          style: listOfChatsStyle.gapContainerDown\n        })]\n      });\n    }\n    return _jsx(ChatContainer, {\n      chat: item\n    });\n  });\n  var rightAction = function rightAction() {\n    return _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        flex: 1\n      },\n      children: [_jsx(Animated.View, {\n        style: {\n          width: screenWidth * 0.1,\n          backgroundColor: 'yellow',\n          alignItems: 'center',\n          justifyContent: 'center',\n          transform: [{}]\n        },\n        children: _jsx(Text, {\n          children: \"Yellow\"\n        })\n      }), _jsx(Animated.View, {\n        style: {\n          width: screenWidth * 0.1,\n          backgroundColor: 'red',\n          alignItems: 'center',\n          justifyContent: 'center',\n          transform: [{\n            translateX: translateX\n          }]\n        },\n        children: _jsx(Text, {\n          children: \"Red\"\n        })\n      })]\n    });\n  };\n  return _jsx(_Fragment, {\n    children: _jsx(SwipeListView, {\n      data: user.folders[selectedFolder].listOfChats,\n      renderItem: function renderItem(data) {\n        return _jsx(Container, {\n          item: data.item,\n          index: data.index\n        });\n      },\n      disableRightSwipe: true,\n      renderHiddenItem: rightAction,\n      rightOpenValue: -Dimensions.get('window').width,\n      useNativeDriver: false\n    })\n  });\n};\nexport default ListOfFolder;","map":{"version":3,"names":["React","View","Animated","Dimensions","Text","listOfChatsStyle","ChatContainer","SwipeListView","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","ListOfFolder","_ref","user","selectedFolder","_Dimensions$get","get","screenWidth","width","screenHeight","height","Container","forwardRef","_ref2","ref","item","index","children","style","gapContainerHigh","lineStyle","chat","folders","listOfChats","length","gapContainerDown","rightAction","flexDirection","alignItems","justifyContent","flex","backgroundColor","transform","translateX","data","renderItem","disableRightSwipe","renderHiddenItem","rightOpenValue","useNativeDriver"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/ChatList/Components/ListOfFolder.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Animated, Dimensions, Text } from 'react-native';\r\nimport MySelfUser from '../1HelpFullFolder/MySelfUser';\r\nimport { listOfChatsStyle } from '../Styles/ListOfChatsStyle';\r\nimport ChatContainer from './List of folders containers/ChatContainer';\r\nimport { SwipeListView, SwipeRow } from 'react-native-swipe-list-view';\r\n\r\n\r\ninterface ListOfFolderProps {\r\n  user: MySelfUser;\r\n  selectedFolder: number;\r\n}\r\n\r\nconst ListOfFolder: React.FC<ListOfFolderProps> = ({ user, selectedFolder }) => {\r\n  const { width: screenWidth, height: screenHeight } = Dimensions.get('window');\r\n  const Container = React.forwardRef(({ item, index }: any, ref) => {\r\n    if (index == 0) {\r\n      return (\r\n        <>\r\n          <View style={listOfChatsStyle.gapContainerHigh} />\r\n          <View style={listOfChatsStyle.lineStyle} />\r\n          <ChatContainer chat={item} />\r\n        </>\r\n      );\r\n    } else if (index == user.folders[selectedFolder].listOfChats.length - 1) {\r\n      return (\r\n        <>\r\n          <ChatContainer chat={item} />\r\n          <View style={listOfChatsStyle.gapContainerDown} />\r\n        </>\r\n      );\r\n    }\r\n    return <ChatContainer chat={item} />;\r\n  });\r\n\r\n  const rightAction = (\r\n\r\n  ) => {\r\n\r\n\r\n    return (\r\n      <View\r\n        style={{\r\n          flexDirection: 'row',\r\n          alignItems: 'center',\r\n          justifyContent: 'flex-end',\r\n          flex: 1,\r\n        }}\r\n      >\r\n        {/* Жовтий елемент */}\r\n        <Animated.View\r\n          style={{\r\n            width: screenWidth * 0.1, // 10% ширини екрану\r\n            backgroundColor: 'yellow',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            transform: [{ }],\r\n          }}\r\n        >\r\n          <Text>Yellow</Text>\r\n        </Animated.View>\r\n\r\n        {/* Червоний елемент */}\r\n        <Animated.View\r\n          style={{\r\n            width: screenWidth * 0.1, // 10% ширини екрану\r\n            backgroundColor: 'red',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            transform: [{ translateX }],\r\n          }}\r\n        >\r\n          <Text>Red</Text>\r\n        </Animated.View>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n<SwipeListView\r\n  data={user.folders[selectedFolder].listOfChats}\r\n  renderItem={(data: any) => {\r\n    return <Container item={data.item} index={data.index} />;\r\n  }}\r\n  disableRightSwipe\r\n  renderHiddenItem={rightAction}\r\n  rightOpenValue={-Dimensions.get('window').width}\r\n  useNativeDriver={false} \r\n/>\r\n\r\n    </>);\r\n};\r\n\r\nexport default ListOfFolder;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}