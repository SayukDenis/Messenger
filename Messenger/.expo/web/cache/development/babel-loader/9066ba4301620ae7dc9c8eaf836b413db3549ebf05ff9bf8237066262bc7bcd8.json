{"ast":null,"code":"import React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar NavigationForAuthorization = function NavigationForAuthorization() {\n  return _jsx(_Fragment, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Settings\",\n      screenOptions: {\n        headerShown: false\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"Settings\",\n        component: Settingspage\n      }), _jsx(Stack.Screen, {\n        name: \"Saved message\",\n        component: SavedmessagePage\n      }), _jsx(Stack.Screen, {\n        name: \"Edit page\",\n        component: EditPageNavigator\n      }), _jsx(Stack.Screen, {\n        name: \"Question page\",\n        component: QuestionPage\n      }), _jsx(Stack.Screen, {\n        name: \"Chat folders\",\n        component: ChatFolderPageNAvigator\n      }), _jsx(Stack.Screen, {\n        name: \"Confidentiality\",\n        component: ConfidentialityPageNavigator\n      })]\n    })\n  });\n};\nvar ConfidentialityPageNavigator = function ConfidentialityPageNavigator() {\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"ConfidentialityPage\",\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"ConfidentialityPage\",\n      component: ConfidentialityPage\n    }), _jsx(Stack.Screen, {\n      name: \"BlockUsers\",\n      component: BlockUser\n    }), _jsx(Stack.Screen, {\n      name: \"PasswordPage\",\n      component: PasswordPage\n    })]\n  });\n};\nvar EditPageNavigator = function EditPageNavigator() {\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"EditPage\",\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"EditPage\",\n      component: EditPage\n    }), _jsx(Stack.Screen, {\n      name: \"EditBioPage\",\n      component: EditBioPage\n    }), _jsx(Stack.Screen, {\n      name: \"EditUsernamePage\",\n      component: EditUsernamePage\n    })]\n  });\n};\nvar ChatFolderPageNAvigator = function ChatFolderPageNAvigator() {\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"Chatfolders\",\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Chatfolders\",\n      component: ChatFolderPage\n    }), _jsx(Stack.Screen, {\n      name: \"AddFolderPage\",\n      component: AddFolderPage\n    })]\n  });\n};\nexport default NavigationForAuthorization;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","NavigationForAuthorization","children","Stack","Navigator","initialRouteName","screenOptions","headerShown","Screen","name","component","Settingspage","SavedmessagePage","EditPageNavigator","QuestionPage","ChatFolderPageNAvigator","ConfidentialityPageNavigator","ConfidentialityPage","BlockUser","PasswordPage","EditPage","EditBioPage","EditUsernamePage","ChatFolderPage","AddFolderPage"],"sources":["D:/repo/Messenger/Messenger/Pages/Authorization/NavigationForAuthorization.tsx"],"sourcesContent":["import React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport Authorization from './Authorization';\r\nimport PhoneCodeRegistration from './Pages/PhoneCodeRegistration';\r\nimport Registration from './Pages/Registration';\r\n\r\nconst NavigationForAuthorization = () => {\r\n    return (\r\n      <>\r\n        <Stack.Navigator\r\n          initialRouteName=\"Settings\"\r\n          screenOptions={{\r\n            headerShown: false, \r\n            \r\n          }}\r\n        >\r\n          <Stack.Screen name=\"Settings\" component={Settingspage} />\r\n          <Stack.Screen name=\"Saved message\" component={SavedmessagePage} />\r\n          <Stack.Screen name=\"Edit page\" component={EditPageNavigator} />\r\n          <Stack.Screen name=\"Question page\" component={QuestionPage} />\r\n          <Stack.Screen name=\"Chat folders\" component={ChatFolderPageNAvigator} />\r\n          <Stack.Screen name=\"Confidentiality\" component={ConfidentialityPageNavigator} />\r\n        </Stack.Navigator>\r\n      </>\r\n    );\r\n  };\r\n  \r\n  const ConfidentialityPageNavigator=()=> {\r\n    return (\r\n      <Stack.Navigator\r\n      initialRouteName=\"ConfidentialityPage\"\r\n      screenOptions={{\r\n        headerShown: false,\r\n      }}\r\n    >\r\n        <Stack.Screen name=\"ConfidentialityPage\" component={ConfidentialityPage} />\r\n        <Stack.Screen name=\"BlockUsers\" component={BlockUser} />\r\n        <Stack.Screen name=\"PasswordPage\" component={PasswordPage} />\r\n      </Stack.Navigator>\r\n    );\r\n  }\r\n  const EditPageNavigator=()=> {\r\n    return (\r\n      <Stack.Navigator\r\n      initialRouteName=\"EditPage\"\r\n      screenOptions={{\r\n        headerShown: false,\r\n      }}\r\n    >\r\n        <Stack.Screen name=\"EditPage\" component={EditPage} />\r\n        <Stack.Screen name=\"EditBioPage\" component={EditBioPage} />\r\n        <Stack.Screen name=\"EditUsernamePage\" component={EditUsernamePage} />\r\n      </Stack.Navigator>\r\n    );\r\n  }\r\n  \r\n  const ChatFolderPageNAvigator=()=> {\r\n    return (\r\n      <Stack.Navigator\r\n      initialRouteName=\"Chatfolders\"\r\n      screenOptions={{\r\n        headerShown: false,\r\n      }}\r\n    >\r\n        <Stack.Screen name=\"Chatfolders\" component={ChatFolderPage} />\r\n        <Stack.Screen name=\"AddFolderPage\" component={AddFolderPage} />\r\n      </Stack.Navigator>\r\n    );\r\n  }\r\n  \r\n  export default NavigationForAuthorization;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}