{"ast":null,"code":"import React from \"react\";\nimport { screenHeight, screenWidth } from \"../../../Constants/ConstantsForChatlist\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SelectedForAddMember from \"./SelectedForAddMemberl\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar AddMemberContainerForUser = function AddMemberContainerForUser(_ref) {\n  var user = _ref.user,\n    isSelected = _ref.isSelected;\n  var height = screenHeight * 0.06;\n  var width = screenWidth;\n  return _jsxs(_Fragment, {\n    children: [_jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        height: height,\n        width: width,\n        justifyContent: \"space-between\"\n      },\n      children: [_jsxs(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        children: [_jsx(Image, {\n          source: {\n            uri: user.linkToPhoto\n          },\n          style: {\n            height: screenHeight * 0.05,\n            alignSelf: \"center\",\n            aspectRatio: 1,\n            borderRadius: height,\n            marginLeft: 10\n          }\n        }), _jsx(Text, {\n          style: {\n            alignSelf: \"center\",\n            marginLeft: 10,\n            fontSize: 14.5\n          },\n          children: user.name\n        })]\n      }), _jsxs(View, {\n        style: {\n          height: screenHeight * 0.026,\n          aspectRatio: 1,\n          alignSelf: \"center\",\n          marginRight: 10,\n          borderRadius: height,\n          borderWidth: 0.5,\n          borderColor: \"#AF95CF\",\n          overflow: \"hidden\",\n          justifyContent: \"center\"\n        },\n        children: [isSelected && _jsx(View, {\n          style: {\n            alignSelf: \"center\",\n            marginLeft: screenWidth * 0.002,\n            marginTop: screenHeight * 0.003\n          },\n          children: _jsx(SelectedForAddMember, {\n            radius: screenHeight * 0.026\n          })\n        }), _jsx(View, {\n          style: {\n            height: screenHeight * 0.026,\n            aspectRatio: 1,\n            position: \"absolute\",\n            backgroundColor: \"#FEE0A3\",\n            opacity: 0.5,\n            zIndex: -1\n          }\n        })]\n      })]\n    }), _jsx(View, {\n      style: {\n        width: screenWidth,\n        height: 2,\n        opacity: 0.1,\n        backgroundColor: \"gray\"\n      }\n    })]\n  });\n};\nexport default AddMemberContainerForUser;","map":{"version":3,"names":["React","screenHeight","screenWidth","Image","Text","View","SelectedForAddMember","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AddMemberContainerForUser","_ref","user","isSelected","height","width","children","style","flexDirection","justifyContent","source","uri","linkToPhoto","alignSelf","aspectRatio","borderRadius","marginLeft","fontSize","name","marginRight","borderWidth","borderColor","overflow","marginTop","radius","position","backgroundColor","opacity","zIndex"],"sources":["D:/project/1project/Messenger/Messenger/Pages/ChatList/Components/CreateChannelAndGroupOrWriteMessage/Add member/AddMemberContainerForUser.tsx"],"sourcesContent":["import User from \"../../../../../dao/Models/User\";\r\nimport React from \"react\";\r\nimport {\r\n  screenHeight,\r\n  screenWidth,\r\n} from \"../../../Constants/ConstantsForChatlist\";\r\nimport { Image, Text } from \"react-native\";\r\nimport { View } from \"react-native\";\r\nimport SelectedForAddMember from \"./SelectedForAddMemberl\";\r\ninterface AddMemberContainerForUserProps {\r\n  user: User;\r\n  isSelected: boolean;\r\n}\r\n\r\nconst AddMemberContainerForUser: React.FC<AddMemberContainerForUserProps> = ({\r\n  user,\r\n  isSelected,\r\n}) => {\r\n  const height = screenHeight * 0.06;\r\n  const width = screenWidth;\r\n  return (\r\n    <>\r\n      <View\r\n        style={{\r\n          flexDirection: \"row\",\r\n          height,\r\n          width,\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <View style={{ flexDirection: \"row\" }}>\r\n          <Image\r\n            source={{ uri: user.linkToPhoto }}\r\n            style={{\r\n              height: screenHeight * 0.05,\r\n              alignSelf: \"center\",\r\n              aspectRatio: 1,\r\n              borderRadius: height,\r\n              marginLeft: 10,\r\n            }}\r\n          />\r\n          <Text style={{ alignSelf: \"center\", marginLeft: 10, fontSize: 14.5 }}>\r\n            {user.name}\r\n          </Text>\r\n        </View>\r\n        <View\r\n          style={{\r\n            height: screenHeight * 0.026,\r\n            aspectRatio: 1,\r\n\r\n            alignSelf: \"center\",\r\n            marginRight: 10,\r\n            borderRadius: height,\r\n            borderWidth: 0.5,\r\n            borderColor: \"#AF95CF\",\r\n            overflow: \"hidden\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          {isSelected && (\r\n            <View\r\n              style={{\r\n                alignSelf: \"center\",\r\n                marginLeft: screenWidth * 0.002,\r\n                marginTop: screenHeight * 0.003,\r\n              }}\r\n            >\r\n              <SelectedForAddMember radius={screenHeight * 0.026} />\r\n            </View>\r\n          )}\r\n\r\n          <View\r\n            style={{\r\n              height: screenHeight * 0.026,\r\n              aspectRatio: 1,\r\n              position: \"absolute\",\r\n              backgroundColor: \"#FEE0A3\",\r\n              opacity: 0.5,\r\n              zIndex:-1\r\n            }}\r\n          />\r\n        </View>\r\n      </View>\r\n      <View\r\n        style={{\r\n          width: screenWidth,\r\n          height: 2,\r\n          opacity: 0.1,\r\n          backgroundColor: \"gray\",\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddMemberContainerForUser;\r\n"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,YAAY,EACZC,WAAW;AACoC,OAAAC,KAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAGjD,OAAOC,oBAAoB;AAAgC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAM3D,IAAMC,yBAAmE,GAAG,SAAtEA,yBAAmEA,CAAAC,IAAA,EAGnE;EAAA,IAFJC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IACJC,UAAU,GAAAF,IAAA,CAAVE,UAAU;EAEV,IAAMC,MAAM,GAAGhB,YAAY,GAAG,IAAI;EAClC,IAAMiB,KAAK,GAAGhB,WAAW;EACzB,OACEQ,KAAA,CAAAE,SAAA;IAAAO,QAAA,GACET,KAAA,CAACL,IAAI;MACHe,KAAK,EAAE;QACLC,aAAa,EAAE,KAAK;QACpBJ,MAAM,EAANA,MAAM;QACNC,KAAK,EAALA,KAAK;QACLI,cAAc,EAAE;MAClB,CAAE;MAAAH,QAAA,GAEFT,KAAA,CAACL,IAAI;QAACe,KAAK,EAAE;UAAEC,aAAa,EAAE;QAAM,CAAE;QAAAF,QAAA,GACpCX,IAAA,CAACL,KAAK;UACJoB,MAAM,EAAE;YAAEC,GAAG,EAAET,IAAI,CAACU;UAAY,CAAE;UAClCL,KAAK,EAAE;YACLH,MAAM,EAAEhB,YAAY,GAAG,IAAI;YAC3ByB,SAAS,EAAE,QAAQ;YACnBC,WAAW,EAAE,CAAC;YACdC,YAAY,EAAEX,MAAM;YACpBY,UAAU,EAAE;UACd;QAAE,CACH,CAAC,EACFrB,IAAA,CAACJ,IAAI;UAACgB,KAAK,EAAE;YAAEM,SAAS,EAAE,QAAQ;YAAEG,UAAU,EAAE,EAAE;YAAEC,QAAQ,EAAE;UAAK,CAAE;UAAAX,QAAA,EAClEJ,IAAI,CAACgB;QAAI,CACN,CAAC;MAAA,CACH,CAAC,EACPrB,KAAA,CAACL,IAAI;QACHe,KAAK,EAAE;UACLH,MAAM,EAAEhB,YAAY,GAAG,KAAK;UAC5B0B,WAAW,EAAE,CAAC;UAEdD,SAAS,EAAE,QAAQ;UACnBM,WAAW,EAAE,EAAE;UACfJ,YAAY,EAAEX,MAAM;UACpBgB,WAAW,EAAE,GAAG;UAChBC,WAAW,EAAE,SAAS;UACtBC,QAAQ,EAAE,QAAQ;UAClBb,cAAc,EAAE;QAClB,CAAE;QAAAH,QAAA,GAEDH,UAAU,IACTR,IAAA,CAACH,IAAI;UACHe,KAAK,EAAE;YACLM,SAAS,EAAE,QAAQ;YACnBG,UAAU,EAAE3B,WAAW,GAAG,KAAK;YAC/BkC,SAAS,EAAEnC,YAAY,GAAG;UAC5B,CAAE;UAAAkB,QAAA,EAEFX,IAAA,CAACF,oBAAoB;YAAC+B,MAAM,EAAEpC,YAAY,GAAG;UAAM,CAAE;QAAC,CAClD,CACP,EAEDO,IAAA,CAACH,IAAI;UACHe,KAAK,EAAE;YACLH,MAAM,EAAEhB,YAAY,GAAG,KAAK;YAC5B0B,WAAW,EAAE,CAAC;YACdW,QAAQ,EAAE,UAAU;YACpBC,eAAe,EAAE,SAAS;YAC1BC,OAAO,EAAE,GAAG;YACZC,MAAM,EAAC,CAAC;UACV;QAAE,CACH,CAAC;MAAA,CACE,CAAC;IAAA,CACH,CAAC,EACPjC,IAAA,CAACH,IAAI;MACHe,KAAK,EAAE;QACLF,KAAK,EAAEhB,WAAW;QAClBe,MAAM,EAAE,CAAC;QACTuB,OAAO,EAAE,GAAG;QACZD,eAAe,EAAE;MACnB;IAAE,CACH,CAAC;EAAA,CACF,CAAC;AAEP,CAAC;AAED,eAAe1B,yBAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}