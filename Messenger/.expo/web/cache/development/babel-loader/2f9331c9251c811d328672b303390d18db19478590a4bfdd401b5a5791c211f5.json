{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport { GestureHandlerRootView, Swipeable } from 'react-native-gesture-handler';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ScrollPan = function (_React$Component) {\n  _inherits(ScrollPan, _React$Component);\n  var _super = _createSuper(ScrollPan);\n  function ScrollPan() {\n    var _this;\n    _classCallCheck(this, ScrollPan);\n    _this = _super.call(this, 0);\n    _this.wrapperPanResponder = PanResponder.create({\n      onStartShouldSetPanResponder: function onStartShouldSetPanResponder(e, g) {\n        return true;\n      },\n      onPanResponderGrant: function onPanResponderGrant() {\n        console.log('GRANTED TO WRAPPER');\n      },\n      onPanResponderMove: function onPanResponderMove(evt, gestureState) {\n        console.log('WRAPPER MOVED');\n      }\n    });\n    _this.scollerPanResponder = PanResponder.create({\n      onStartShouldSetPanResponder: function onStartShouldSetPanResponder(e, g) {\n        return true;\n      },\n      onPanResponderGrant: function onPanResponderGrant() {\n        console.log('GRANTED TO SCROLLER');\n      },\n      onPanResponderMove: function onPanResponderMove(evt, gestureState) {\n        console.log('SCROLLER MOVED');\n      }\n    });\n    return _this;\n  }\n  _createClass(ScrollPan, [{\n    key: \"render\",\n    value: function render() {\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(View, _objectSpread({\n          style: styles.pan_container\n        }, this.wrapperPanResponder.panHandlers)), _jsx(GestureHandlerRootView, {\n          children: _jsx(Swipeable, _objectSpread(_objectSpread({\n            renderRightActions: function renderRightActions() {\n              return _jsx(View, {\n                style: {\n                  ba: ba\n                }\n              });\n            }\n          }, this.scollerPanResponder.panHandlers), {}, {\n            children: _jsx(Text, {\n              style: {\n                fontSize: 96\n              },\n              children: \"Scroll this\"\n            })\n          }))\n        })]\n      });\n    }\n  }]);\n  return ScrollPan;\n}(React.Component);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF'\n  },\n  pan_container: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    backgroundColor: 'blue'\n  }),\n  scroll_view: {\n    backgroundColor: 'teal',\n    maxHeight: 350\n  }\n});\nexport default React.memo(ScrollPan);","map":{"version":3,"names":["React","StyleSheet","Text","View","PanResponder","GestureHandlerRootView","Swipeable","jsx","_jsx","jsxs","_jsxs","ScrollPan","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","wrapperPanResponder","create","onStartShouldSetPanResponder","e","g","onPanResponderGrant","console","log","onPanResponderMove","evt","gestureState","scollerPanResponder","_createClass","key","value","render","style","styles","container","children","_objectSpread","pan_container","panHandlers","renderRightActions","ba","fontSize","Component","flex","justifyContent","alignItems","backgroundColor","absoluteFillObject","scroll_view","maxHeight","memo"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/ChatList/Test.tsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  AppRegistry,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  ScrollView,\r\n  PanResponder,\r\n  GestureResponderEvent,\r\n  PanResponderGestureState,\r\n} from 'react-native';\r\nimport { GestureHandlerRootView, Swipeable } from 'react-native-gesture-handler';\r\n\r\n\r\nclass ScrollPan extends React.Component {\r\n  private wrapperPanResponder: any;\r\n  private scollerPanResponder: any;\r\n\r\n  constructor() {\r\n    super(0)\r\n\r\n    this.wrapperPanResponder = PanResponder.create({\r\n      onStartShouldSetPanResponder: (e: GestureResponderEvent, g: PanResponderGestureState) => true,\r\n      onPanResponderGrant: () => {\r\n        console.log('GRANTED TO WRAPPER');\r\n      },\r\n      onPanResponderMove: (evt: GestureResponderEvent, gestureState: PanResponderGestureState) => {\r\n        console.log('WRAPPER MOVED');\r\n      },\r\n    });\r\n\r\n    this.scollerPanResponder = PanResponder.create({\r\n      onStartShouldSetPanResponder: (e: GestureResponderEvent, g: PanResponderGestureState) => true,\r\n      onPanResponderGrant: () => {\r\n        console.log('GRANTED TO SCROLLER');\r\n      },\r\n      onPanResponderMove: (evt: GestureResponderEvent, gestureState: PanResponderGestureState) => {\r\n        console.log('SCROLLER MOVED');\r\n      },\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <View style={styles.pan_container} {...this.wrapperPanResponder.panHandlers} />\r\n        <GestureHandlerRootView>\r\n            <Swipeable renderRightActions={()=>{return (<View style={{ba}}></View>)}}{...this.scollerPanResponder.panHandlers}>\r\n          <Text style={{ fontSize: 96 }}>Scroll this</Text>\r\n            </Swipeable>\r\n        </GestureHandlerRootView>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#F5FCFF',\r\n  },\r\n  pan_container: {\r\n    ...StyleSheet.absoluteFillObject,\r\n    backgroundColor: 'blue',\r\n  },\r\n  scroll_view: {\r\n    backgroundColor: 'teal',\r\n    maxHeight: 350,\r\n  },\r\n});\r\n\r\n\r\nexport default React.memo(ScrollPan)"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}