{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { styles } from \"./Styles\";\nimport { user } from \"../../SemiComponents/DBUser\";\nimport * as Clipboard from \"expo-clipboard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar screenHeight = Dimensions.get(\"screen\").height;\nvar screenWidth = Dimensions.get(\"screen\").width;\nvar NumberUsernameAndBio = function NumberUsernameAndBio(props) {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    bioTextHeight = _useState2[0],\n    setBioTextHeight = _useState2[1];\n  var userInfoMainContainerHeight = 0;\n  if (user.phoneNumber) {\n    userInfoMainContainerHeight += 0.05 * screenHeight;\n  }\n  if (user.username) {\n    userInfoMainContainerHeight += 0.05 * screenHeight;\n  }\n  if (user.bio) {\n    userInfoMainContainerHeight += bioTextHeight;\n  }\n  var copyToClipboard = function copyToClipboard(text) {\n    Clipboard.setString(text);\n  };\n  return _jsx(_Fragment, {\n    children: (user.username || user.phoneNumber || user.bio) && _jsxs(_Fragment, {\n      children: [_jsx(View, {\n        style: [styles.infoView, {\n          height: \"100%\",\n          position: \"absolute\",\n          opacity: 0\n        }],\n        children: _jsxs(Text, {\n          style: [styles.infoTitle, {\n            color: \"black\"\n          }],\n          onLayout: function onLayout(event) {\n            setBioTextHeight(Math.max(event.nativeEvent.layout.height * 1.75, 0.05 * screenHeight));\n          },\n          children: [_jsx(Text, {\n            style: styles.infoTitle,\n            children: \"Bio: \"\n          }), user.bio]\n        })\n      }), _jsxs(View, {\n        style: [styles.userInfoMainContainer, {\n          height: userInfoMainContainerHeight\n        }],\n        children: [user.phoneNumber && _jsxs(_Fragment, {\n          children: [_jsxs(TouchableOpacity, {\n            style: styles.infoView,\n            onPress: function onPress() {\n              props.onNumberPress();\n            },\n            children: [_jsx(Text, {\n              style: styles.infoTitle,\n              children: \"Number: \"\n            }), _jsx(Text, {\n              style: [styles.infoTitle, {\n                color: \"black\",\n                fontFamily: null\n              }],\n              children: user.phoneNumber\n            })]\n          }), user.username && _jsx(View, {\n            style: styles.separatingLine\n          })]\n        }), user.username && _jsxs(_Fragment, {\n          children: [_jsxs(TouchableOpacity, {\n            onPress: function onPress() {\n              copyToClipboard(user.username);\n              props.onUsernameAndBioPress(\"Username\");\n            },\n            style: styles.infoView,\n            children: [_jsx(Text, {\n              style: styles.infoTitle,\n              children: \"Username: \"\n            }), _jsx(Text, {\n              style: [styles.infoTitle, {\n                color: \"black\"\n              }],\n              children: user.username\n            })]\n          }), user.bio && _jsx(View, {\n            style: styles.separatingLine\n          })]\n        }), user.bio && _jsx(_Fragment, {\n          children: _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              copyToClipboard(user.bio);\n              props.onUsernameAndBioPress(\"Bio\");\n            },\n            style: [styles.bioInfoView, {\n              height: bioTextHeight\n            }],\n            children: _jsxs(Text, {\n              style: [styles.infoTitle, {\n                color: \"black\"\n              }],\n              children: [_jsx(Text, {\n                style: styles.infoTitle,\n                children: \"Bio: \"\n              }), user.bio]\n            })\n          })\n        })]\n      })]\n    })\n  });\n};\nexport default NumberUsernameAndBio;","map":{"version":3,"names":["React","useState","View","TouchableOpacity","Text","Dimensions","styles","user","Clipboard","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","screenHeight","get","height","screenWidth","width","NumberUsernameAndBio","props","_useState","_useState2","_slicedToArray","bioTextHeight","setBioTextHeight","userInfoMainContainerHeight","phoneNumber","username","bio","copyToClipboard","text","setString","children","style","infoView","position","opacity","infoTitle","color","onLayout","event","Math","max","nativeEvent","layout","userInfoMainContainer","onPress","onNumberPress","fontFamily","separatingLine","onUsernameAndBioPress","bioInfoView"],"sources":["/home/zatibmag/Desktop/Project/Messenger/Messenger/Pages/Profiles/DialogueProfile/AvatarsAndInfoScreen/NumberUsernameAndBio.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React, { useState } from \"react\";\r\nimport { View, TouchableOpacity, Text, Dimensions } from \"react-native\";\r\nimport { styles } from \"./Styles\";\r\nimport { user } from \"../../SemiComponents/DBUser\";\r\nimport * as Clipboard from \"expo-clipboard\";\r\n\r\nconst screenHeight = Dimensions.get(\"screen\").height;\r\nconst screenWidth = Dimensions.get(\"screen\").width;\r\n\r\ninterface NumberUsernameAndBioProps {\r\n  onUsernameAndBioPress: (text: string) => void;\r\n  onNumberPress: () => void;\r\n}\r\n\r\nconst NumberUsernameAndBio: React.FC<NumberUsernameAndBioProps> = (props) => {\r\n  const [bioTextHeight, setBioTextHeight] = useState(0);\r\n\r\n  var userInfoMainContainerHeight: number = 0;\r\n\r\n  if (user.phoneNumber) {\r\n    userInfoMainContainerHeight += 0.05 * screenHeight;\r\n  }\r\n  if (user.username) {\r\n    userInfoMainContainerHeight += 0.05 * screenHeight;\r\n  }\r\n  if (user.bio) {\r\n    userInfoMainContainerHeight += bioTextHeight;\r\n  }\r\n\r\n  const copyToClipboard = (text: string) => {\r\n    Clipboard.setString(text);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {(user.username || user.phoneNumber || user.bio) && (\r\n        <>\r\n          {/* Finding user's bio height */}\r\n          <View\r\n            style={[\r\n              styles.infoView,\r\n              { height: \"100%\", position: \"absolute\", opacity: 0 },\r\n            ]}\r\n          >\r\n            <Text\r\n              style={[styles.infoTitle, { color: \"black\" }]}\r\n              onLayout={(event) => {\r\n                setBioTextHeight(\r\n                  Math.max(\r\n                    event.nativeEvent.layout.height * 1.75,\r\n                    0.05 * screenHeight\r\n                  )\r\n                );\r\n              }}\r\n            >\r\n              <Text style={styles.infoTitle}>Bio: </Text>\r\n              {user.bio}\r\n            </Text>\r\n          </View>\r\n\r\n          <View\r\n            style={[\r\n              styles.userInfoMainContainer,\r\n              { height: userInfoMainContainerHeight },\r\n            ]}\r\n          >\r\n            {user.phoneNumber && (\r\n              <>\r\n                {/* Number */}\r\n                <TouchableOpacity\r\n                  style={styles.infoView}\r\n                  onPress={() => {\r\n                    props.onNumberPress();\r\n                  }}\r\n                >\r\n                  <Text style={styles.infoTitle}>Number: </Text>\r\n                  <Text\r\n                    style={[\r\n                      styles.infoTitle,\r\n                      { color: \"black\", fontFamily: null },\r\n                    ]}\r\n                  >\r\n                    {user.phoneNumber}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n\r\n                {user.username && <View style={styles.separatingLine} />}\r\n              </>\r\n            )}\r\n\r\n            {user.username && (\r\n              <>\r\n                {/* Username */}\r\n                <TouchableOpacity\r\n                  onPress={() => {\r\n                    copyToClipboard(user.username);\r\n                    props.onUsernameAndBioPress(\"Username\");\r\n                  }}\r\n                  style={styles.infoView}\r\n                >\r\n                  <Text style={styles.infoTitle}>Username: </Text>\r\n                  <Text style={[styles.infoTitle, { color: \"black\" }]}>\r\n                    {user.username}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n\r\n                {user.bio && <View style={styles.separatingLine} />}\r\n              </>\r\n            )}\r\n\r\n            {user.bio && (\r\n              <>\r\n                {/* Bio */}\r\n                <TouchableOpacity\r\n                  onPress={() => {\r\n                    copyToClipboard(user.bio);\r\n                    props.onUsernameAndBioPress(\"Bio\");\r\n                  }}\r\n                  style={[styles.bioInfoView, { height: bioTextHeight }]}\r\n                >\r\n                  <Text style={[styles.infoTitle, { color: \"black\" }]}>\r\n                    <Text style={styles.infoTitle}>Bio: </Text>\r\n                    {user.bio}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              </>\r\n            )}\r\n          </View>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NumberUsernameAndBio;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}