{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"styleInterpolator\", \"interpolationIndex\", \"current\", \"gesture\", \"next\", \"layout\", \"insets\", \"overlay\", \"overlayEnabled\", \"shadowEnabled\", \"gestureEnabled\", \"gestureDirection\", \"pageOverflowEnabled\", \"headerDarkContent\", \"children\", \"containerStyle\", \"contentStyle\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport Color from 'color';\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport InteractionManager from \"react-native-web/dist/exports/InteractionManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { forModalPresentationIOS } from \"../../TransitionConfigs/CardStyleInterpolators\";\nimport CardAnimationContext from \"../../utils/CardAnimationContext\";\nimport getDistanceForDirection from \"../../utils/getDistanceForDirection\";\nimport getInvertedMultiplier from \"../../utils/getInvertedMultiplier\";\nimport memoize from \"../../utils/memoize\";\nimport { GestureState, PanGestureHandler } from \"../GestureHandler\";\nimport ModalStatusBarManager from \"../ModalStatusBarManager\";\nimport CardSheet from \"./CardSheet\";\nvar GESTURE_VELOCITY_IMPACT = 0.3;\nvar TRUE = 1;\nvar FALSE = 0;\nvar GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\nvar GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\nvar useNativeDriver = Platform.OS !== 'web';\nvar hasOpacityStyle = function hasOpacityStyle(style) {\n  if (style) {\n    var flattenedStyle = StyleSheet.flatten(style);\n    return flattenedStyle.opacity != null;\n  }\n  return false;\n};\nvar Card = function (_React$Component) {\n  _inherits(Card, _React$Component);\n  var _super = _createSuper(Card);\n  function Card() {\n    var _this;\n    _classCallCheck(this, Card);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.isCurrentlyMounted = false;\n    _this.isClosing = new Animated.Value(FALSE);\n    _this.inverted = new Animated.Value(getInvertedMultiplier(_this.props.gestureDirection));\n    _this.layout = {\n      width: new Animated.Value(_this.props.layout.width),\n      height: new Animated.Value(_this.props.layout.height)\n    };\n    _this.isSwiping = new Animated.Value(FALSE);\n    _this.animate = function (_ref2) {\n      var closing = _ref2.closing,\n        velocity = _ref2.velocity;\n      var _this$props = _this.props,\n        gesture = _this$props.gesture,\n        transitionSpec = _this$props.transitionSpec,\n        onOpen = _this$props.onOpen,\n        onClose = _this$props.onClose,\n        onTransition = _this$props.onTransition;\n      var toValue = _this.getAnimateToValue(_objectSpread(_objectSpread({}, _this.props), {}, {\n        closing: closing\n      }));\n      _this.lastToValue = toValue;\n      _this.isClosing.setValue(closing ? TRUE : FALSE);\n      var spec = closing ? transitionSpec.close : transitionSpec.open;\n      var animation = spec.animation === 'spring' ? Animated.spring : Animated.timing;\n      _this.setPointerEventsEnabled(!closing);\n      _this.handleStartInteraction();\n      clearTimeout(_this.pendingGestureCallback);\n      onTransition === null || onTransition === void 0 ? void 0 : onTransition({\n        closing: closing,\n        gesture: velocity !== undefined\n      });\n      animation(gesture, _objectSpread(_objectSpread({}, spec.config), {}, {\n        velocity: velocity,\n        toValue: toValue,\n        useNativeDriver: useNativeDriver,\n        isInteraction: false\n      })).start(function (_ref3) {\n        var finished = _ref3.finished;\n        _this.handleEndInteraction();\n        clearTimeout(_this.pendingGestureCallback);\n        if (finished) {\n          if (closing) {\n            onClose();\n          } else {\n            onOpen();\n          }\n          if (_this.isCurrentlyMounted) {\n            _this.forceUpdate();\n          }\n        }\n      });\n    };\n    _this.getAnimateToValue = function (_ref4) {\n      var closing = _ref4.closing,\n        layout = _ref4.layout,\n        gestureDirection = _ref4.gestureDirection;\n      if (!closing) {\n        return 0;\n      }\n      return getDistanceForDirection(layout, gestureDirection);\n    };\n    _this.setPointerEventsEnabled = function (enabled) {\n      var _this$ref$current;\n      var pointerEvents = enabled ? 'box-none' : 'none';\n      (_this$ref$current = _this.ref.current) === null || _this$ref$current === void 0 ? void 0 : _this$ref$current.setPointerEvents(pointerEvents);\n    };\n    _this.handleStartInteraction = function () {\n      if (_this.interactionHandle === undefined) {\n        _this.interactionHandle = InteractionManager.createInteractionHandle();\n      }\n    };\n    _this.handleEndInteraction = function () {\n      if (_this.interactionHandle !== undefined) {\n        InteractionManager.clearInteractionHandle(_this.interactionHandle);\n        _this.interactionHandle = undefined;\n      }\n    };\n    _this.handleGestureStateChange = function (_ref5) {\n      var nativeEvent = _ref5.nativeEvent;\n      var _this$props2 = _this.props,\n        layout = _this$props2.layout,\n        onClose = _this$props2.onClose,\n        onGestureBegin = _this$props2.onGestureBegin,\n        onGestureCanceled = _this$props2.onGestureCanceled,\n        onGestureEnd = _this$props2.onGestureEnd,\n        gestureDirection = _this$props2.gestureDirection,\n        gestureVelocityImpact = _this$props2.gestureVelocityImpact;\n      switch (nativeEvent.state) {\n        case GestureState.ACTIVE:\n          _this.isSwiping.setValue(TRUE);\n          _this.handleStartInteraction();\n          onGestureBegin === null || onGestureBegin === void 0 ? void 0 : onGestureBegin();\n          break;\n        case GestureState.CANCELLED:\n          {\n            _this.isSwiping.setValue(FALSE);\n            _this.handleEndInteraction();\n            var velocity = gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? nativeEvent.velocityY : nativeEvent.velocityX;\n            _this.animate({\n              closing: _this.props.closing,\n              velocity: velocity\n            });\n            onGestureCanceled === null || onGestureCanceled === void 0 ? void 0 : onGestureCanceled();\n            break;\n          }\n        case GestureState.END:\n          {\n            _this.isSwiping.setValue(FALSE);\n            var distance;\n            var translation;\n            var _velocity;\n            if (gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted') {\n              distance = layout.height;\n              translation = nativeEvent.translationY;\n              _velocity = nativeEvent.velocityY;\n            } else {\n              distance = layout.width;\n              translation = nativeEvent.translationX;\n              _velocity = nativeEvent.velocityX;\n            }\n            var closing = (translation + _velocity * gestureVelocityImpact) * getInvertedMultiplier(gestureDirection) > distance / 2 ? _velocity !== 0 || translation !== 0 : _this.props.closing;\n            _this.animate({\n              closing: closing,\n              velocity: _velocity\n            });\n            if (closing) {\n              _this.pendingGestureCallback = setTimeout(function () {\n                onClose();\n                _this.forceUpdate();\n              }, 32);\n            }\n            onGestureEnd === null || onGestureEnd === void 0 ? void 0 : onGestureEnd();\n            break;\n          }\n      }\n    };\n    _this.getInterpolatedStyle = memoize(function (styleInterpolator, animation) {\n      return styleInterpolator(animation);\n    });\n    _this.getCardAnimation = memoize(function (interpolationIndex, current, next, layout, insetTop, insetRight, insetBottom, insetLeft) {\n      return {\n        index: interpolationIndex,\n        current: {\n          progress: current\n        },\n        next: next && {\n          progress: next\n        },\n        closing: _this.isClosing,\n        swiping: _this.isSwiping,\n        inverted: _this.inverted,\n        layouts: {\n          screen: layout\n        },\n        insets: {\n          top: insetTop,\n          right: insetRight,\n          bottom: insetBottom,\n          left: insetLeft\n        }\n      };\n    });\n    _this.ref = React.createRef();\n    return _this;\n  }\n  _createClass(Card, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.animate({\n        closing: this.props.closing\n      });\n      this.isCurrentlyMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props3 = this.props,\n        layout = _this$props3.layout,\n        gestureDirection = _this$props3.gestureDirection,\n        closing = _this$props3.closing;\n      var width = layout.width,\n        height = layout.height;\n      if (width !== prevProps.layout.width) {\n        this.layout.width.setValue(width);\n      }\n      if (height !== prevProps.layout.height) {\n        this.layout.height.setValue(height);\n      }\n      if (gestureDirection !== prevProps.gestureDirection) {\n        this.inverted.setValue(getInvertedMultiplier(gestureDirection));\n      }\n      var toValue = this.getAnimateToValue(this.props);\n      if (this.getAnimateToValue(prevProps) !== toValue || this.lastToValue !== toValue) {\n        this.animate({\n          closing: closing\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.gesture.stopAnimation();\n      this.isCurrentlyMounted = false;\n      this.handleEndInteraction();\n    }\n  }, {\n    key: \"gestureActivationCriteria\",\n    value: function gestureActivationCriteria() {\n      var _this$props4 = this.props,\n        layout = _this$props4.layout,\n        gestureDirection = _this$props4.gestureDirection,\n        gestureResponseDistance = _this$props4.gestureResponseDistance;\n      var enableTrackpadTwoFingerGesture = true;\n      var distance = gestureResponseDistance !== undefined ? gestureResponseDistance : gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? GESTURE_RESPONSE_DISTANCE_VERTICAL : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n      if (gestureDirection === 'vertical') {\n        return {\n          maxDeltaX: 15,\n          minOffsetY: 5,\n          hitSlop: {\n            bottom: -layout.height + distance\n          },\n          enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n        };\n      } else if (gestureDirection === 'vertical-inverted') {\n        return {\n          maxDeltaX: 15,\n          minOffsetY: -5,\n          hitSlop: {\n            top: -layout.height + distance\n          },\n          enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n        };\n      } else {\n        var hitSlop = -layout.width + distance;\n        var invertedMultiplier = getInvertedMultiplier(gestureDirection);\n        if (invertedMultiplier === 1) {\n          return {\n            minOffsetX: 5,\n            maxDeltaY: 20,\n            hitSlop: {\n              right: hitSlop\n            },\n            enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n          };\n        } else {\n          return {\n            minOffsetX: -5,\n            maxDeltaY: 20,\n            hitSlop: {\n              left: hitSlop\n            },\n            enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n          };\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n        styleInterpolator = _this$props5.styleInterpolator,\n        interpolationIndex = _this$props5.interpolationIndex,\n        current = _this$props5.current,\n        gesture = _this$props5.gesture,\n        next = _this$props5.next,\n        layout = _this$props5.layout,\n        insets = _this$props5.insets,\n        overlay = _this$props5.overlay,\n        overlayEnabled = _this$props5.overlayEnabled,\n        shadowEnabled = _this$props5.shadowEnabled,\n        gestureEnabled = _this$props5.gestureEnabled,\n        gestureDirection = _this$props5.gestureDirection,\n        pageOverflowEnabled = _this$props5.pageOverflowEnabled,\n        headerDarkContent = _this$props5.headerDarkContent,\n        children = _this$props5.children,\n        customContainerStyle = _this$props5.containerStyle,\n        contentStyle = _this$props5.contentStyle,\n        rest = _objectWithoutProperties(_this$props5, _excluded);\n      var interpolationProps = this.getCardAnimation(interpolationIndex, current, next, layout, insets.top, insets.right, insets.bottom, insets.left);\n      var interpolatedStyle = this.getInterpolatedStyle(styleInterpolator, interpolationProps);\n      var containerStyle = interpolatedStyle.containerStyle,\n        cardStyle = interpolatedStyle.cardStyle,\n        overlayStyle = interpolatedStyle.overlayStyle,\n        shadowStyle = interpolatedStyle.shadowStyle;\n      var handleGestureEvent = gestureEnabled ? Animated.event([{\n        nativeEvent: gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? {\n          translationY: gesture\n        } : {\n          translationX: gesture\n        }\n      }], {\n        useNativeDriver: useNativeDriver\n      }) : undefined;\n      var _StyleSheet$flatten = StyleSheet.flatten(contentStyle || {}),\n        backgroundColor = _StyleSheet$flatten.backgroundColor;\n      var isTransparent = typeof backgroundColor === 'string' ? Color(backgroundColor).alpha() === 0 : false;\n      return React.createElement(CardAnimationContext.Provider, {\n        value: interpolationProps\n      }, Platform.OS === 'ios' && overlayEnabled && next && getIsModalPresentation(styleInterpolator) ? React.createElement(ModalStatusBarManager, {\n        dark: headerDarkContent,\n        layout: layout,\n        insets: insets,\n        style: cardStyle\n      }) : null, React.createElement(Animated.View, {\n        style: {\n          opacity: current\n        },\n        collapsable: false\n      }), React.createElement(View, _extends({\n        pointerEvents: \"box-none\"\n      }, rest), overlayEnabled ? React.createElement(View, {\n        pointerEvents: \"box-none\",\n        style: StyleSheet.absoluteFill\n      }, overlay({\n        style: overlayStyle\n      })) : null, React.createElement(Animated.View, {\n        style: [styles.container, containerStyle, customContainerStyle],\n        pointerEvents: \"box-none\"\n      }, React.createElement(PanGestureHandler, _extends({\n        enabled: layout.width !== 0 && gestureEnabled,\n        onGestureEvent: handleGestureEvent,\n        onHandlerStateChange: this.handleGestureStateChange\n      }, this.gestureActivationCriteria()), React.createElement(Animated.View, {\n        needsOffscreenAlphaCompositing: hasOpacityStyle(cardStyle),\n        style: [styles.container, cardStyle]\n      }, shadowEnabled && shadowStyle && !isTransparent ? React.createElement(Animated.View, {\n        style: [styles.shadow, gestureDirection === 'horizontal' ? [styles.shadowHorizontal, styles.shadowLeft] : gestureDirection === 'horizontal-inverted' ? [styles.shadowHorizontal, styles.shadowRight] : gestureDirection === 'vertical' ? [styles.shadowVertical, styles.shadowTop] : [styles.shadowVertical, styles.shadowBottom], {\n          backgroundColor: backgroundColor\n        }, shadowStyle],\n        pointerEvents: \"none\"\n      }) : null, React.createElement(CardSheet, {\n        ref: this.ref,\n        enabled: pageOverflowEnabled,\n        layout: layout,\n        style: contentStyle\n      }, children))))));\n    }\n  }]);\n  return Card;\n}(React.Component);\nCard.defaultProps = {\n  shadowEnabled: false,\n  gestureEnabled: true,\n  gestureVelocityImpact: GESTURE_VELOCITY_IMPACT,\n  overlay: function overlay(_ref) {\n    var style = _ref.style;\n    return style ? React.createElement(Animated.View, {\n      pointerEvents: \"none\",\n      style: [styles.overlay, style]\n    }) : null;\n  }\n};\nexport { Card as default };\nexport var getIsModalPresentation = function getIsModalPresentation(cardStyleInterpolator) {\n  return cardStyleInterpolator === forModalPresentationIOS || cardStyleInterpolator.name === 'forModalPresentationIOS';\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: '#000'\n  },\n  shadow: {\n    position: 'absolute',\n    shadowRadius: 5,\n    shadowColor: '#000',\n    shadowOpacity: 0.3\n  },\n  shadowHorizontal: {\n    top: 0,\n    bottom: 0,\n    width: 3,\n    shadowOffset: {\n      width: -1,\n      height: 1\n    }\n  },\n  shadowLeft: {\n    left: 0\n  },\n  shadowRight: {\n    right: 0\n  },\n  shadowVertical: {\n    left: 0,\n    right: 0,\n    height: 3,\n    shadowOffset: {\n      width: 1,\n      height: -1\n    }\n  },\n  shadowTop: {\n    top: 0\n  },\n  shadowBottom: {\n    bottom: 0\n  }\n});","map":{"version":3,"names":["Color","React","Animated","InteractionManager","Platform","StyleSheet","View","forModalPresentationIOS","CardAnimationContext","getDistanceForDirection","getInvertedMultiplier","memoize","GestureState","PanGestureHandler","ModalStatusBarManager","CardSheet","GESTURE_VELOCITY_IMPACT","TRUE","FALSE","GESTURE_RESPONSE_DISTANCE_HORIZONTAL","GESTURE_RESPONSE_DISTANCE_VERTICAL","useNativeDriver","OS","hasOpacityStyle","style","flattenedStyle","flatten","opacity","Card","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","isCurrentlyMounted","isClosing","Value","inverted","props","gestureDirection","layout","width","height","isSwiping","animate","_ref2","closing","velocity","_this$props","gesture","transitionSpec","onOpen","onClose","onTransition","toValue","getAnimateToValue","_objectSpread","lastToValue","setValue","spec","close","open","animation","spring","timing","setPointerEventsEnabled","handleStartInteraction","clearTimeout","pendingGestureCallback","undefined","config","isInteraction","start","_ref3","finished","handleEndInteraction","forceUpdate","_ref4","enabled","_this$ref$current","pointerEvents","ref","current","setPointerEvents","interactionHandle","createInteractionHandle","clearInteractionHandle","handleGestureStateChange","_ref5","nativeEvent","_this$props2","onGestureBegin","onGestureCanceled","onGestureEnd","gestureVelocityImpact","state","ACTIVE","CANCELLED","velocityY","velocityX","END","distance","translation","translationY","translationX","setTimeout","getInterpolatedStyle","styleInterpolator","getCardAnimation","interpolationIndex","next","insetTop","insetRight","insetBottom","insetLeft","index","progress","swiping","layouts","screen","insets","top","right","bottom","left","createRef","_createClass","key","value","componentDidMount","componentDidUpdate","prevProps","_this$props3","componentWillUnmount","stopAnimation","gestureActivationCriteria","_this$props4","gestureResponseDistance","enableTrackpadTwoFingerGesture","maxDeltaX","minOffsetY","hitSlop","invertedMultiplier","minOffsetX","maxDeltaY","render","_this$props5","overlay","overlayEnabled","shadowEnabled","gestureEnabled","pageOverflowEnabled","headerDarkContent","children","customContainerStyle","containerStyle","contentStyle","rest","_objectWithoutProperties","_excluded","interpolationProps","interpolatedStyle","cardStyle","overlayStyle","shadowStyle","handleGestureEvent","event","_StyleSheet$flatten","backgroundColor","isTransparent","alpha","createElement","Provider","getIsModalPresentation","dark","collapsable","_extends","absoluteFill","styles","container","onGestureEvent","onHandlerStateChange","needsOffscreenAlphaCompositing","shadow","shadowHorizontal","shadowLeft","shadowRight","shadowVertical","shadowTop","shadowBottom","Component","defaultProps","_ref","default","cardStyleInterpolator","name","create","flex","position","shadowRadius","shadowColor","shadowOpacity","shadowOffset"],"sources":["D:\\project\\merge\\Messenger\\Messenger\\node_modules\\@react-navigation\\stack\\src\\views\\Stack\\Card.tsx"],"sourcesContent":["import Color from 'color';\r\nimport * as React from 'react';\r\nimport {\r\n  Animated,\r\n  InteractionManager,\r\n  Platform,\r\n  StyleProp,\r\n  StyleSheet,\r\n  View,\r\n  ViewProps,\r\n  ViewStyle,\r\n} from 'react-native';\r\nimport type { EdgeInsets } from 'react-native-safe-area-context';\r\n\r\nimport { forModalPresentationIOS } from '../../TransitionConfigs/CardStyleInterpolators';\r\nimport type {\r\n  GestureDirection,\r\n  Layout,\r\n  StackCardInterpolationProps,\r\n  StackCardStyleInterpolator,\r\n  TransitionSpec,\r\n} from '../../types';\r\nimport CardAnimationContext from '../../utils/CardAnimationContext';\r\nimport getDistanceForDirection from '../../utils/getDistanceForDirection';\r\nimport getInvertedMultiplier from '../../utils/getInvertedMultiplier';\r\nimport memoize from '../../utils/memoize';\r\nimport {\r\n  GestureState,\r\n  PanGestureHandler,\r\n  PanGestureHandlerGestureEvent,\r\n} from '../GestureHandler';\r\nimport ModalStatusBarManager from '../ModalStatusBarManager';\r\nimport CardSheet, { CardSheetRef } from './CardSheet';\r\n\r\ntype Props = ViewProps & {\r\n  interpolationIndex: number;\r\n  closing: boolean;\r\n  next?: Animated.AnimatedInterpolation<number>;\r\n  current: Animated.AnimatedInterpolation<number>;\r\n  gesture: Animated.Value;\r\n  layout: Layout;\r\n  insets: EdgeInsets;\r\n  headerDarkContent: boolean | undefined;\r\n  pageOverflowEnabled: boolean;\r\n  gestureDirection: GestureDirection;\r\n  onOpen: () => void;\r\n  onClose: () => void;\r\n  onTransition: (props: { closing: boolean; gesture: boolean }) => void;\r\n  onGestureBegin: () => void;\r\n  onGestureCanceled: () => void;\r\n  onGestureEnd: () => void;\r\n  children: React.ReactNode;\r\n  overlay: (props: {\r\n    style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\r\n  }) => React.ReactNode;\r\n  overlayEnabled: boolean;\r\n  shadowEnabled: boolean;\r\n  gestureEnabled: boolean;\r\n  gestureResponseDistance?: number;\r\n  gestureVelocityImpact: number;\r\n  transitionSpec: {\r\n    open: TransitionSpec;\r\n    close: TransitionSpec;\r\n  };\r\n  styleInterpolator: StackCardStyleInterpolator;\r\n  containerStyle?: StyleProp<ViewStyle>;\r\n  contentStyle?: StyleProp<ViewStyle>;\r\n};\r\n\r\nconst GESTURE_VELOCITY_IMPACT = 0.3;\r\n\r\nconst TRUE = 1;\r\nconst FALSE = 0;\r\n\r\n/**\r\n * The distance of touch start from the edge of the screen where the gesture will be recognized\r\n */\r\nconst GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\r\nconst GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\r\n\r\nconst useNativeDriver = Platform.OS !== 'web';\r\n\r\nconst hasOpacityStyle = (style: any) => {\r\n  if (style) {\r\n    const flattenedStyle = StyleSheet.flatten(style);\r\n    return flattenedStyle.opacity != null;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nexport default class Card extends React.Component<Props> {\r\n  static defaultProps = {\r\n    shadowEnabled: false,\r\n    gestureEnabled: true,\r\n    gestureVelocityImpact: GESTURE_VELOCITY_IMPACT,\r\n    overlay: ({\r\n      style,\r\n    }: {\r\n      style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\r\n    }) =>\r\n      style ? (\r\n        <Animated.View pointerEvents=\"none\" style={[styles.overlay, style]} />\r\n      ) : null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.animate({ closing: this.props.closing });\r\n    this.isCurrentlyMounted = true;\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    const { layout, gestureDirection, closing } = this.props;\r\n    const { width, height } = layout;\r\n\r\n    if (width !== prevProps.layout.width) {\r\n      this.layout.width.setValue(width);\r\n    }\r\n\r\n    if (height !== prevProps.layout.height) {\r\n      this.layout.height.setValue(height);\r\n    }\r\n\r\n    if (gestureDirection !== prevProps.gestureDirection) {\r\n      this.inverted.setValue(getInvertedMultiplier(gestureDirection));\r\n    }\r\n\r\n    const toValue = this.getAnimateToValue(this.props);\r\n\r\n    if (\r\n      this.getAnimateToValue(prevProps) !== toValue ||\r\n      this.lastToValue !== toValue\r\n    ) {\r\n      // We need to trigger the animation when route was closed\r\n      // Thr route might have been closed by a `POP` action or by a gesture\r\n      // When route was closed due to a gesture, the animation would've happened already\r\n      // It's still important to trigger the animation so that `onClose` is called\r\n      // If `onClose` is not called, cleanup step won't be performed for gestures\r\n      this.animate({ closing });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.gesture.stopAnimation();\r\n    this.isCurrentlyMounted = false;\r\n    this.handleEndInteraction();\r\n  }\r\n\r\n  private isCurrentlyMounted = false;\r\n\r\n  private isClosing = new Animated.Value(FALSE);\r\n\r\n  private inverted = new Animated.Value(\r\n    getInvertedMultiplier(this.props.gestureDirection)\r\n  );\r\n\r\n  private layout = {\r\n    width: new Animated.Value(this.props.layout.width),\r\n    height: new Animated.Value(this.props.layout.height),\r\n  };\r\n\r\n  private isSwiping = new Animated.Value(FALSE);\r\n\r\n  private interactionHandle: number | undefined;\r\n\r\n  private pendingGestureCallback: number | undefined;\r\n\r\n  private lastToValue: number | undefined;\r\n\r\n  private animate = ({\r\n    closing,\r\n    velocity,\r\n  }: {\r\n    closing: boolean;\r\n    velocity?: number;\r\n  }) => {\r\n    const { gesture, transitionSpec, onOpen, onClose, onTransition } =\r\n      this.props;\r\n\r\n    const toValue = this.getAnimateToValue({\r\n      ...this.props,\r\n      closing,\r\n    });\r\n\r\n    this.lastToValue = toValue;\r\n\r\n    this.isClosing.setValue(closing ? TRUE : FALSE);\r\n\r\n    const spec = closing ? transitionSpec.close : transitionSpec.open;\r\n\r\n    const animation =\r\n      spec.animation === 'spring' ? Animated.spring : Animated.timing;\r\n\r\n    this.setPointerEventsEnabled(!closing);\r\n    this.handleStartInteraction();\r\n\r\n    clearTimeout(this.pendingGestureCallback);\r\n\r\n    onTransition?.({ closing, gesture: velocity !== undefined });\r\n    animation(gesture, {\r\n      ...spec.config,\r\n      velocity,\r\n      toValue,\r\n      useNativeDriver,\r\n      isInteraction: false,\r\n    }).start(({ finished }) => {\r\n      this.handleEndInteraction();\r\n\r\n      clearTimeout(this.pendingGestureCallback);\r\n\r\n      if (finished) {\r\n        if (closing) {\r\n          onClose();\r\n        } else {\r\n          onOpen();\r\n        }\r\n\r\n        if (this.isCurrentlyMounted) {\r\n          // Make sure to re-open screen if it wasn't removed\r\n          this.forceUpdate();\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  private getAnimateToValue = ({\r\n    closing,\r\n    layout,\r\n    gestureDirection,\r\n  }: {\r\n    closing?: boolean;\r\n    layout: Layout;\r\n    gestureDirection: GestureDirection;\r\n  }) => {\r\n    if (!closing) {\r\n      return 0;\r\n    }\r\n\r\n    return getDistanceForDirection(layout, gestureDirection);\r\n  };\r\n\r\n  private setPointerEventsEnabled = (enabled: boolean) => {\r\n    const pointerEvents = enabled ? 'box-none' : 'none';\r\n\r\n    this.ref.current?.setPointerEvents(pointerEvents);\r\n  };\r\n\r\n  private handleStartInteraction = () => {\r\n    if (this.interactionHandle === undefined) {\r\n      this.interactionHandle = InteractionManager.createInteractionHandle();\r\n    }\r\n  };\r\n\r\n  private handleEndInteraction = () => {\r\n    if (this.interactionHandle !== undefined) {\r\n      InteractionManager.clearInteractionHandle(this.interactionHandle);\r\n      this.interactionHandle = undefined;\r\n    }\r\n  };\r\n\r\n  private handleGestureStateChange = ({\r\n    nativeEvent,\r\n  }: PanGestureHandlerGestureEvent) => {\r\n    const {\r\n      layout,\r\n      onClose,\r\n      onGestureBegin,\r\n      onGestureCanceled,\r\n      onGestureEnd,\r\n      gestureDirection,\r\n      gestureVelocityImpact,\r\n    } = this.props;\r\n\r\n    switch (nativeEvent.state) {\r\n      case GestureState.ACTIVE:\r\n        this.isSwiping.setValue(TRUE);\r\n        this.handleStartInteraction();\r\n        onGestureBegin?.();\r\n        break;\r\n      case GestureState.CANCELLED: {\r\n        this.isSwiping.setValue(FALSE);\r\n        this.handleEndInteraction();\r\n\r\n        const velocity =\r\n          gestureDirection === 'vertical' ||\r\n          gestureDirection === 'vertical-inverted'\r\n            ? nativeEvent.velocityY\r\n            : nativeEvent.velocityX;\r\n\r\n        this.animate({ closing: this.props.closing, velocity });\r\n\r\n        onGestureCanceled?.();\r\n        break;\r\n      }\r\n      case GestureState.END: {\r\n        this.isSwiping.setValue(FALSE);\r\n\r\n        let distance;\r\n        let translation;\r\n        let velocity;\r\n\r\n        if (\r\n          gestureDirection === 'vertical' ||\r\n          gestureDirection === 'vertical-inverted'\r\n        ) {\r\n          distance = layout.height;\r\n          translation = nativeEvent.translationY;\r\n          velocity = nativeEvent.velocityY;\r\n        } else {\r\n          distance = layout.width;\r\n          translation = nativeEvent.translationX;\r\n          velocity = nativeEvent.velocityX;\r\n        }\r\n\r\n        const closing =\r\n          (translation + velocity * gestureVelocityImpact) *\r\n            getInvertedMultiplier(gestureDirection) >\r\n          distance / 2\r\n            ? velocity !== 0 || translation !== 0\r\n            : this.props.closing;\r\n\r\n        this.animate({ closing, velocity });\r\n\r\n        if (closing) {\r\n          // We call onClose with a delay to make sure that the animation has already started\r\n          // This will make sure that the state update caused by this doesn't affect start of animation\r\n          this.pendingGestureCallback = setTimeout(() => {\r\n            onClose();\r\n\r\n            // Trigger an update after we dispatch the action to remove the screen\r\n            // This will make sure that we check if the screen didn't get removed so we can cancel the animation\r\n            this.forceUpdate();\r\n          }, 32) as any as number;\r\n        }\r\n\r\n        onGestureEnd?.();\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  // Memoize this to avoid extra work on re-render\r\n  private getInterpolatedStyle = memoize(\r\n    (\r\n      styleInterpolator: StackCardStyleInterpolator,\r\n      animation: StackCardInterpolationProps\r\n    ) => styleInterpolator(animation)\r\n  );\r\n\r\n  // Keep track of the animation context when deps changes.\r\n  private getCardAnimation = memoize(\r\n    (\r\n      interpolationIndex: number,\r\n      current: Animated.AnimatedInterpolation<number>,\r\n      next: Animated.AnimatedInterpolation<number> | undefined,\r\n      layout: Layout,\r\n      insetTop: number,\r\n      insetRight: number,\r\n      insetBottom: number,\r\n      insetLeft: number\r\n    ) => ({\r\n      index: interpolationIndex,\r\n      current: { progress: current },\r\n      next: next && { progress: next },\r\n      closing: this.isClosing,\r\n      swiping: this.isSwiping,\r\n      inverted: this.inverted,\r\n      layouts: {\r\n        screen: layout,\r\n      },\r\n      insets: {\r\n        top: insetTop,\r\n        right: insetRight,\r\n        bottom: insetBottom,\r\n        left: insetLeft,\r\n      },\r\n    })\r\n  );\r\n\r\n  private gestureActivationCriteria() {\r\n    const { layout, gestureDirection, gestureResponseDistance } = this.props;\r\n    const enableTrackpadTwoFingerGesture = true;\r\n\r\n    const distance =\r\n      gestureResponseDistance !== undefined\r\n        ? gestureResponseDistance\r\n        : gestureDirection === 'vertical' ||\r\n          gestureDirection === 'vertical-inverted'\r\n        ? GESTURE_RESPONSE_DISTANCE_VERTICAL\r\n        : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\r\n\r\n    if (gestureDirection === 'vertical') {\r\n      return {\r\n        maxDeltaX: 15,\r\n        minOffsetY: 5,\r\n        hitSlop: { bottom: -layout.height + distance },\r\n        enableTrackpadTwoFingerGesture,\r\n      };\r\n    } else if (gestureDirection === 'vertical-inverted') {\r\n      return {\r\n        maxDeltaX: 15,\r\n        minOffsetY: -5,\r\n        hitSlop: { top: -layout.height + distance },\r\n        enableTrackpadTwoFingerGesture,\r\n      };\r\n    } else {\r\n      const hitSlop = -layout.width + distance;\r\n      const invertedMultiplier = getInvertedMultiplier(gestureDirection);\r\n\r\n      if (invertedMultiplier === 1) {\r\n        return {\r\n          minOffsetX: 5,\r\n          maxDeltaY: 20,\r\n          hitSlop: { right: hitSlop },\r\n          enableTrackpadTwoFingerGesture,\r\n        };\r\n      } else {\r\n        return {\r\n          minOffsetX: -5,\r\n          maxDeltaY: 20,\r\n          hitSlop: { left: hitSlop },\r\n          enableTrackpadTwoFingerGesture,\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  private ref = React.createRef<CardSheetRef>();\r\n\r\n  render() {\r\n    const {\r\n      styleInterpolator,\r\n      interpolationIndex,\r\n      current,\r\n      gesture,\r\n      next,\r\n      layout,\r\n      insets,\r\n      overlay,\r\n      overlayEnabled,\r\n      shadowEnabled,\r\n      gestureEnabled,\r\n      gestureDirection,\r\n      pageOverflowEnabled,\r\n      headerDarkContent,\r\n      children,\r\n      containerStyle: customContainerStyle,\r\n      contentStyle,\r\n      ...rest\r\n    } = this.props;\r\n\r\n    const interpolationProps = this.getCardAnimation(\r\n      interpolationIndex,\r\n      current,\r\n      next,\r\n      layout,\r\n      insets.top,\r\n      insets.right,\r\n      insets.bottom,\r\n      insets.left\r\n    );\r\n\r\n    const interpolatedStyle = this.getInterpolatedStyle(\r\n      styleInterpolator,\r\n      interpolationProps\r\n    );\r\n\r\n    const { containerStyle, cardStyle, overlayStyle, shadowStyle } =\r\n      interpolatedStyle;\r\n\r\n    const handleGestureEvent = gestureEnabled\r\n      ? Animated.event(\r\n          [\r\n            {\r\n              nativeEvent:\r\n                gestureDirection === 'vertical' ||\r\n                gestureDirection === 'vertical-inverted'\r\n                  ? { translationY: gesture }\r\n                  : { translationX: gesture },\r\n            },\r\n          ],\r\n          { useNativeDriver }\r\n        )\r\n      : undefined;\r\n\r\n    const { backgroundColor } = StyleSheet.flatten(contentStyle || {});\r\n    const isTransparent =\r\n      typeof backgroundColor === 'string'\r\n        ? Color(backgroundColor).alpha() === 0\r\n        : false;\r\n\r\n    return (\r\n      <CardAnimationContext.Provider value={interpolationProps}>\r\n        {\r\n          // StatusBar messes with translucent status bar on Android\r\n          // So we should only enable it on iOS\r\n          Platform.OS === 'ios' &&\r\n          overlayEnabled &&\r\n          next &&\r\n          getIsModalPresentation(styleInterpolator) ? (\r\n            <ModalStatusBarManager\r\n              dark={headerDarkContent}\r\n              layout={layout}\r\n              insets={insets}\r\n              style={cardStyle}\r\n            />\r\n          ) : null\r\n        }\r\n        <Animated.View\r\n          style={{\r\n            // This is a dummy style that doesn't actually change anything visually.\r\n            // Animated needs the animated value to be used somewhere, otherwise things don't update properly.\r\n            // If we disable animations and hide header, it could end up making the value unused.\r\n            // So we have this dummy style that will always be used regardless of what else changed.\r\n            opacity: current,\r\n          }}\r\n          // Make sure that this view isn't removed. If this view is removed, our style with animated value won't apply\r\n          collapsable={false}\r\n        />\r\n        <View pointerEvents=\"box-none\" {...rest}>\r\n          {overlayEnabled ? (\r\n            <View pointerEvents=\"box-none\" style={StyleSheet.absoluteFill}>\r\n              {overlay({ style: overlayStyle })}\r\n            </View>\r\n          ) : null}\r\n          <Animated.View\r\n            style={[styles.container, containerStyle, customContainerStyle]}\r\n            pointerEvents=\"box-none\"\r\n          >\r\n            <PanGestureHandler\r\n              enabled={layout.width !== 0 && gestureEnabled}\r\n              onGestureEvent={handleGestureEvent}\r\n              onHandlerStateChange={this.handleGestureStateChange}\r\n              {...this.gestureActivationCriteria()}\r\n            >\r\n              <Animated.View\r\n                needsOffscreenAlphaCompositing={hasOpacityStyle(cardStyle)}\r\n                style={[styles.container, cardStyle]}\r\n              >\r\n                {shadowEnabled && shadowStyle && !isTransparent ? (\r\n                  <Animated.View\r\n                    style={[\r\n                      styles.shadow,\r\n                      gestureDirection === 'horizontal'\r\n                        ? [styles.shadowHorizontal, styles.shadowLeft]\r\n                        : gestureDirection === 'horizontal-inverted'\r\n                        ? [styles.shadowHorizontal, styles.shadowRight]\r\n                        : gestureDirection === 'vertical'\r\n                        ? [styles.shadowVertical, styles.shadowTop]\r\n                        : [styles.shadowVertical, styles.shadowBottom],\r\n                      { backgroundColor },\r\n                      shadowStyle,\r\n                    ]}\r\n                    pointerEvents=\"none\"\r\n                  />\r\n                ) : null}\r\n                <CardSheet\r\n                  ref={this.ref}\r\n                  enabled={pageOverflowEnabled}\r\n                  layout={layout}\r\n                  style={contentStyle}\r\n                >\r\n                  {children}\r\n                </CardSheet>\r\n              </Animated.View>\r\n            </PanGestureHandler>\r\n          </Animated.View>\r\n        </View>\r\n      </CardAnimationContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const getIsModalPresentation = (\r\n  cardStyleInterpolator: StackCardStyleInterpolator\r\n) => {\r\n  return (\r\n    cardStyleInterpolator === forModalPresentationIOS ||\r\n    // Handle custom modal presentation interpolators as well\r\n    cardStyleInterpolator.name === 'forModalPresentationIOS'\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  overlay: {\r\n    flex: 1,\r\n    backgroundColor: '#000',\r\n  },\r\n  shadow: {\r\n    position: 'absolute',\r\n    shadowRadius: 5,\r\n    shadowColor: '#000',\r\n    shadowOpacity: 0.3,\r\n  },\r\n  shadowHorizontal: {\r\n    top: 0,\r\n    bottom: 0,\r\n    width: 3,\r\n    shadowOffset: { width: -1, height: 1 },\r\n  },\r\n  shadowLeft: {\r\n    left: 0,\r\n  },\r\n  shadowRight: {\r\n    right: 0,\r\n  },\r\n  shadowVertical: {\r\n    left: 0,\r\n    right: 0,\r\n    height: 3,\r\n    shadowOffset: { width: 1, height: -1 },\r\n  },\r\n  shadowTop: {\r\n    top: 0,\r\n  },\r\n  shadowBottom: {\r\n    bottom: 0,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}