{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { styles } from \"./Styles\";\nimport { user, PhotoOrVideo } from \"../../SemiComponents/DBUser\";\nimport Photos from \"../../SemiComponents/MainScreen/Multimedia/Photos\";\nimport { tempUser } from \"../../SemiComponents/DBUser\";\nimport Name from \"../../SemiComponents/MainScreen/Name\";\nimport GoBackButton from \"../../SemiComponents/GoBackButton\";\nimport Blur from \"../../SemiComponents/Blur\";\nimport ElseFeaturesIcon from \"../../SemiComponents/MainScreen/Icons/ElseFeaturesIcon\";\nimport AlbumElseFeaturesButtons from \"./AlbumElseFeaturesButtons\";\nimport RemovalApproval from \"../../SemiComponents/MainScreen/RemovalApproval\";\nimport AddingPhotoMenu from \"./AddingPhotoMenu\";\nimport { useIsFocused } from \"@react-navigation/native\";\nimport PhotoElseFeaturesButtons from \"./PhotoElseFeaturesButtons\";\nimport BottomToolBar from \"../../SemiComponents/MainScreen/ButtomToolBar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar AlbumFilling = function AlbumFilling(props) {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    removalApprovalText = _useState2[0],\n    setRemovalApprovalText = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isElseFeaturesVisible = _useState4[0],\n    setIsElseFeaturesVisible = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isAddNewPhotoPressed = _useState6[0],\n    setIsAddNewPhotoPressed = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedPhotosAndVideos = _useState8[0],\n    setSelectedPhotosAndVideos = _useState8[1];\n  var _useState9 = useState(new PhotoOrVideo(\"\")),\n    _useState10 = _slicedToArray(_useState9, 2),\n    pressedPhoto = _useState10[0],\n    setPressedPhoto = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isPhotoSelectionVisible = _useState12[0],\n    setIsPhotoSelectionVisible = _useState12[1];\n  var isFocused = useIsFocused();\n  useEffect(function () {}, [isFocused]);\n  var removalApprovalsTexts = [\"delete an album\", \"delete all photos\", \"delete selected photos\"];\n  var removalApprovalsOnPress = [function () {\n    user.albums.splice(user.albums.indexOf(tempUser.selectedAlbum), 1);\n    setIsPhotoSelectionVisible(false);\n    props.navigation.goBack();\n  }, function () {\n    tempUser.selectedAlbum.photosAndVideos = [];\n    setIsPhotoSelectionVisible(false);\n  }, function () {\n    selectedPhotosAndVideos.forEach(function (photo) {\n      tempUser.selectedAlbum.photosAndVideos.splice(tempUser.selectedAlbum.photosAndVideos.indexOf(photo), 1);\n    });\n    setSelectedPhotosAndVideos(Array());\n    setIsPhotoSelectionVisible(false);\n  }];\n  return _jsxs(View, {\n    style: [styles.mainContainer, {\n      backgroundColor: \"rgb(174, 174, 174)\"\n    }],\n    children: [_jsx(Blur, {\n      visibleWhen: pressedPhoto.url != \"\" || isElseFeaturesVisible || isAddNewPhotoPressed,\n      onPress: function onPress() {\n        setPressedPhoto(new PhotoOrVideo(\"\"));\n        setIsElseFeaturesVisible(false);\n        setIsAddNewPhotoPressed(false);\n      },\n      style: styles.blurEffect\n    }), _jsx(Blur, {\n      visibleWhen: removalApprovalText != \"\",\n      onPress: function onPress() {\n        setRemovalApprovalText(\"\");\n      },\n      style: [styles.blurEffect, {\n        zIndex: 3\n      }]\n    }), removalApprovalsTexts.map(function (item, index) {\n      return _jsx(RemovalApproval, {\n        isVisible: removalApprovalText == item,\n        onAnyPress: function onAnyPress() {\n          setRemovalApprovalText(\"\");\n        },\n        onAgreePress: function onAgreePress() {\n          removalApprovalsOnPress[index]();\n        },\n        text: \"Do you really want to \" + item + \"?\"\n      }, item);\n    }), _jsx(View, {\n      style: styles.topToolBar,\n      children: isPhotoSelectionVisible ? _jsxs(_Fragment, {\n        children: [_jsx(TouchableOpacity, {\n          style: [styles.doneButtonContainer, {\n            left: 0.06 * Dimensions.get(\"screen\").width\n          }],\n          onPress: function onPress() {\n            setRemovalApprovalText(\"delete all photos\");\n          },\n          children: _jsx(Text, {\n            style: [styles.doneButtonTitle, {\n              color: \"red\"\n            }],\n            children: \"Delete all\"\n          })\n        }), _jsx(View, {\n          style: [styles.doneButtonContainer, {\n            left: 0.4 * Dimensions.get(\"screen\").width\n          }],\n          children: _jsxs(Text, {\n            style: styles.doneButtonTitle,\n            children: [\"Select(\", selectedPhotosAndVideos.length, \")\"]\n          })\n        }), _jsx(TouchableOpacity, {\n          style: [styles.doneButtonContainer, {\n            right: -0.075 * Dimensions.get(\"screen\").width\n          }],\n          onPress: function onPress() {\n            setSelectedPhotosAndVideos([]);\n            setIsPhotoSelectionVisible(false);\n          },\n          children: _jsx(Text, {\n            style: styles.doneButtonTitle,\n            children: \"Cancel\"\n          })\n        })]\n      }) : _jsxs(_Fragment, {\n        children: [_jsx(Name, {\n          primaryTitle: tempUser.selectedAlbum.name,\n          style: styles.headerTitle\n        }), _jsx(GoBackButton, {\n          onPress: function onPress() {\n            return props.navigation.goBack();\n          }\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            setIsElseFeaturesVisible(true);\n          },\n          style: styles.elseFeaturesButton,\n          children: _jsx(ElseFeaturesIcon, {})\n        })]\n      })\n    }), _jsx(AlbumElseFeaturesButtons, {\n      isVisible: isElseFeaturesVisible,\n      onForwardPress: function onForwardPress() {\n        alert(\"Forward album...\");\n      },\n      onAddPhotoPress: function onAddPhotoPress() {\n        setIsAddNewPhotoPressed(true);\n        setIsElseFeaturesVisible(false);\n      },\n      onDeleteAlbumPress: function onDeleteAlbumPress() {\n        setRemovalApprovalText(\"delete an album\");\n      },\n      onSortPress: function onSortPress() {\n        alert(\"Sorting...\");\n      }\n    }), pressedPhoto.url != \"\" && _jsx(Image, {\n      style: styles.zoomedPhoto,\n      source: {\n        uri: pressedPhoto.url\n      }\n    }), _jsx(PhotoElseFeaturesButtons, {\n      isVisible: pressedPhoto.url != \"\",\n      setIsNotVisible: function setIsNotVisible() {\n        setPressedPhoto(new PhotoOrVideo(\"\"));\n      },\n      onCopyPress: function onCopyPress() {\n        alert(\"copy\");\n      },\n      onDeletePress: function onDeletePress() {\n        tempUser.selectedAlbum.photosAndVideos.splice(tempUser.selectedAlbum.photosAndVideos.indexOf(pressedPhoto), 1);\n      },\n      onForwardPress: function onForwardPress() {\n        alert(\"forward\");\n      },\n      onMakeMainPhotoPress: function onMakeMainPhotoPress() {\n        tempUser.selectedAlbum.mainPhoto = pressedPhoto;\n      },\n      onSelectPress: function onSelectPress() {\n        setIsPhotoSelectionVisible(true);\n        setSelectedPhotosAndVideos(selectedPhotosAndVideos == null ? void 0 : selectedPhotosAndVideos.concat([pressedPhoto]));\n      }\n    }), _jsx(ScrollView, {\n      style: {\n        flex: 1\n      },\n      contentContainerStyle: {\n        top: -0.085 * Dimensions.get(\"screen\").height\n      },\n      overScrollMode: \"never\",\n      showsVerticalScrollIndicator: false,\n      children: _jsx(Photos, {\n        selectedPhotosAndVideos: selectedPhotosAndVideos,\n        isPhotoSelectionVisible: isPhotoSelectionVisible,\n        data: tempUser.selectedAlbum.photosAndVideos,\n        onPress: function onPress(photo) {\n          if (isPhotoSelectionVisible) {\n            if (!(selectedPhotosAndVideos != null && selectedPhotosAndVideos.includes(photo))) {\n              setSelectedPhotosAndVideos(selectedPhotosAndVideos == null ? void 0 : selectedPhotosAndVideos.concat([photo]));\n            } else {\n              setSelectedPhotosAndVideos(selectedPhotosAndVideos == null ? void 0 : selectedPhotosAndVideos.filter(function (photoOrVideo) {\n                return photoOrVideo !== photo;\n              }));\n            }\n          } else {\n            setPressedPhoto(photo);\n          }\n        },\n        hasAddNewPhotoFeature: true,\n        onAddNewPhotoPress: function onAddNewPhotoPress() {\n          setIsAddNewPhotoPressed(true);\n          setIsElseFeaturesVisible(false);\n        }\n      })\n    }), _jsx(BottomToolBar, {\n      isVisible: isPhotoSelectionVisible,\n      onDeletePress: function onDeletePress() {\n        setRemovalApprovalText(\"delete selected photos\");\n      },\n      onForwardPress: function onForwardPress() {\n        alert(\"Forward photos...\");\n      }\n    }), _jsx(AddingPhotoMenu, {\n      isVisible: isAddNewPhotoPressed,\n      setIsVisible: function setIsVisible(value) {\n        setIsAddNewPhotoPressed(value);\n      },\n      onPhotoPress: function onPhotoPress(value) {\n        tempUser.selectedAlbum.photosAndVideos.push(value);\n        setIsAddNewPhotoPressed(false);\n      },\n      onGalleryButtonPress: function onGalleryButtonPress() {\n        props.navigation.navigate(\"GalleryWhileAddingNewPhoto\");\n      }\n    })]\n  });\n};\nexport default AlbumFilling;","map":{"version":3,"names":["React","useState","useEffect","View","TouchableOpacity","Text","Dimensions","ScrollView","Image","styles","user","PhotoOrVideo","Photos","tempUser","Name","GoBackButton","Blur","ElseFeaturesIcon","AlbumElseFeaturesButtons","RemovalApproval","AddingPhotoMenu","useIsFocused","PhotoElseFeaturesButtons","BottomToolBar","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AlbumFilling","props","_useState","_useState2","_slicedToArray","removalApprovalText","setRemovalApprovalText","_useState3","_useState4","isElseFeaturesVisible","setIsElseFeaturesVisible","_useState5","_useState6","isAddNewPhotoPressed","setIsAddNewPhotoPressed","_useState7","_useState8","selectedPhotosAndVideos","setSelectedPhotosAndVideos","_useState9","_useState10","pressedPhoto","setPressedPhoto","_useState11","_useState12","isPhotoSelectionVisible","setIsPhotoSelectionVisible","isFocused","removalApprovalsTexts","removalApprovalsOnPress","albums","splice","indexOf","selectedAlbum","navigation","goBack","photosAndVideos","forEach","photo","Array","style","mainContainer","backgroundColor","children","visibleWhen","url","onPress","blurEffect","zIndex","map","item","index","isVisible","onAnyPress","onAgreePress","text","topToolBar","doneButtonContainer","left","get","width","doneButtonTitle","color","length","right","primaryTitle","name","headerTitle","elseFeaturesButton","onForwardPress","alert","onAddPhotoPress","onDeleteAlbumPress","onSortPress","zoomedPhoto","source","uri","setIsNotVisible","onCopyPress","onDeletePress","onMakeMainPhotoPress","mainPhoto","onSelectPress","concat","flex","contentContainerStyle","top","height","overScrollMode","showsVerticalScrollIndicator","data","includes","filter","photoOrVideo","hasAddNewPhotoFeature","onAddNewPhotoPress","setIsVisible","value","onPhotoPress","push","onGalleryButtonPress","navigate"],"sources":["/home/zatibmag/Desktop/Project/Messenger/Messenger/Pages/Profiles/DialogueProfile/Album/Album.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  TouchableOpacity,\r\n  Text,\r\n  Dimensions,\r\n  ScrollView,\r\n  Image,\r\n} from \"react-native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport { styles } from \"./Styles\";\r\nimport { user, PhotoOrVideo } from \"../../SemiComponents/DBUser\";\r\nimport Photos from \"../../SemiComponents/MainScreen/Multimedia/Photos\";\r\nimport { tempUser } from \"../../SemiComponents/DBUser\";\r\nimport Name from \"../../SemiComponents/MainScreen/Name\";\r\nimport GoBackButton from \"../../SemiComponents/GoBackButton\";\r\nimport Blur from \"../../SemiComponents/Blur\";\r\nimport ElseFeaturesIcon from \"../../SemiComponents/MainScreen/Icons/ElseFeaturesIcon\";\r\nimport AlbumElseFeaturesButtons from \"./AlbumElseFeaturesButtons\";\r\nimport RemovalApproval from \"../../SemiComponents/MainScreen/RemovalApproval\";\r\nimport AddingPhotoMenu from \"./AddingPhotoMenu\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport PhotoElseFeaturesButtons from \"./PhotoElseFeaturesButtons\";\r\nimport BottomToolBar from \"../../SemiComponents/MainScreen/ButtomToolBar\";\r\n\r\ninterface AlbumFillingProps {\r\n  navigation: StackNavigationProp<{}>;\r\n}\r\n\r\nconst AlbumFilling: React.FC<AlbumFillingProps> = (props) => {\r\n  const [removalApprovalText, setRemovalApprovalText] = useState(\"\");\r\n  const [isElseFeaturesVisible, setIsElseFeaturesVisible] = useState(false);\r\n  const [isAddNewPhotoPressed, setIsAddNewPhotoPressed] = useState(false);\r\n  const [selectedPhotosAndVideos, setSelectedPhotosAndVideos] = useState<\r\n    Array<PhotoOrVideo>\r\n  >([]);\r\n  const [pressedPhoto, setPressedPhoto] = useState(new PhotoOrVideo(\"\"));\r\n  const [isPhotoSelectionVisible, setIsPhotoSelectionVisible] = useState(false);\r\n\r\n  const isFocused = useIsFocused();\r\n\r\n  useEffect(() => {}, [isFocused]);\r\n  //2, 4, 5\r\n\r\n  const removalApprovalsTexts: string[] = [\r\n    \"delete an album\",\r\n    \"delete all photos\",\r\n    \"delete selected photos\",\r\n  ];\r\n  const removalApprovalsOnPress: (() => void)[] = [\r\n    () => {\r\n      user.albums.splice(user.albums.indexOf(tempUser.selectedAlbum), 1);\r\n      setIsPhotoSelectionVisible(false);\r\n      props.navigation.goBack();\r\n    },\r\n    () => {\r\n      tempUser.selectedAlbum.photosAndVideos = [];\r\n      setIsPhotoSelectionVisible(false);\r\n    },\r\n    () => {\r\n      selectedPhotosAndVideos.forEach((photo) => {\r\n        tempUser.selectedAlbum.photosAndVideos.splice(\r\n          tempUser.selectedAlbum.photosAndVideos.indexOf(photo),\r\n          1\r\n        );\r\n      });\r\n      setSelectedPhotosAndVideos(Array<PhotoOrVideo>());\r\n      setIsPhotoSelectionVisible(false);\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <View\r\n      style={[styles.mainContainer, { backgroundColor: \"rgb(174, 174, 174)\" }]}\r\n    >\r\n      {/* General blur with zIndex 1 */}\r\n      <Blur\r\n        visibleWhen={\r\n          pressedPhoto.url != \"\" ||\r\n          isElseFeaturesVisible ||\r\n          isAddNewPhotoPressed\r\n        }\r\n        onPress={() => {\r\n          setPressedPhoto(new PhotoOrVideo(\"\"));\r\n          setIsElseFeaturesVisible(false);\r\n          setIsAddNewPhotoPressed(false);\r\n        }}\r\n        style={styles.blurEffect}\r\n      />\r\n\r\n      {/* Blur over blur with zIndex 3 */}\r\n      <Blur\r\n        visibleWhen={removalApprovalText != \"\"}\r\n        onPress={() => {\r\n          setRemovalApprovalText(\"\");\r\n        }}\r\n        style={[\r\n          styles.blurEffect,\r\n          {\r\n            zIndex: 3,\r\n          },\r\n        ]}\r\n      />\r\n\r\n      {removalApprovalsTexts.map((item, index) => {\r\n        return (\r\n          <RemovalApproval\r\n            key={item}\r\n            isVisible={removalApprovalText == item}\r\n            onAnyPress={() => {\r\n              setRemovalApprovalText(\"\");\r\n            }}\r\n            onAgreePress={() => {\r\n              removalApprovalsOnPress[index]();\r\n            }}\r\n            text={\"Do you really want to \" + item + \"?\"}\r\n          />\r\n        );\r\n      })}\r\n\r\n      <View style={styles.topToolBar}>\r\n        {isPhotoSelectionVisible ? (\r\n          <>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.doneButtonContainer,\r\n                { left: 0.06 * Dimensions.get(\"screen\").width },\r\n              ]}\r\n              onPress={() => {\r\n                setRemovalApprovalText(\"delete all photos\");\r\n              }}\r\n            >\r\n              <Text style={[styles.doneButtonTitle, { color: \"red\" }]}>\r\n                Delete all\r\n              </Text>\r\n            </TouchableOpacity>\r\n\r\n            {/* Number of selected albums */}\r\n            <View\r\n              style={[\r\n                styles.doneButtonContainer,\r\n                { left: 0.4 * Dimensions.get(\"screen\").width },\r\n              ]}\r\n            >\r\n              <Text style={styles.doneButtonTitle}>\r\n                Select({selectedPhotosAndVideos.length})\r\n              </Text>\r\n            </View>\r\n\r\n            {/* Cancel button */}\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.doneButtonContainer,\r\n                { right: -0.075 * Dimensions.get(\"screen\").width },\r\n              ]}\r\n              onPress={() => {\r\n                setSelectedPhotosAndVideos([]);\r\n                setIsPhotoSelectionVisible(false);\r\n              }}\r\n            >\r\n              <Text style={styles.doneButtonTitle}>Cancel</Text>\r\n            </TouchableOpacity>\r\n          </>\r\n        ) : (\r\n          <>\r\n            {/* Main name */}\r\n            <Name\r\n              primaryTitle={tempUser.selectedAlbum.name}\r\n              style={styles.headerTitle}\r\n            />\r\n\r\n            {/* Going back button */}\r\n            <GoBackButton onPress={() => props.navigation.goBack()} />\r\n\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setIsElseFeaturesVisible(true);\r\n              }}\r\n              style={styles.elseFeaturesButton}\r\n            >\r\n              <ElseFeaturesIcon />\r\n            </TouchableOpacity>\r\n          </>\r\n        )}\r\n      </View>\r\n\r\n      <AlbumElseFeaturesButtons\r\n        isVisible={isElseFeaturesVisible}\r\n        onForwardPress={() => {\r\n          alert(\"Forward album...\");\r\n        }}\r\n        onAddPhotoPress={() => {\r\n          setIsAddNewPhotoPressed(true);\r\n          setIsElseFeaturesVisible(false);\r\n        }}\r\n        onDeleteAlbumPress={() => {\r\n          setRemovalApprovalText(\"delete an album\");\r\n        }}\r\n        onSortPress={() => {\r\n          alert(\"Sorting...\");\r\n        }}\r\n      />\r\n\r\n      {pressedPhoto.url != \"\" && (\r\n        <Image style={styles.zoomedPhoto} source={{ uri: pressedPhoto.url }} />\r\n      )}\r\n\r\n      <PhotoElseFeaturesButtons\r\n        isVisible={pressedPhoto.url != \"\"}\r\n        setIsNotVisible={() => {\r\n          setPressedPhoto(new PhotoOrVideo(\"\"));\r\n        }}\r\n        onCopyPress={() => {\r\n          alert(\"copy\");\r\n        }}\r\n        onDeletePress={() => {\r\n          tempUser.selectedAlbum.photosAndVideos.splice(\r\n            tempUser.selectedAlbum.photosAndVideos.indexOf(pressedPhoto),\r\n            1\r\n          );\r\n        }}\r\n        onForwardPress={() => {\r\n          alert(\"forward\");\r\n        }}\r\n        onMakeMainPhotoPress={() => {\r\n          tempUser.selectedAlbum.mainPhoto = pressedPhoto;\r\n        }}\r\n        onSelectPress={() => {\r\n          setIsPhotoSelectionVisible(true);\r\n          setSelectedPhotosAndVideos(\r\n            selectedPhotosAndVideos?.concat([pressedPhoto])\r\n          );\r\n        }}\r\n      />\r\n\r\n      <ScrollView\r\n        style={{\r\n          flex: 1,\r\n        }}\r\n        contentContainerStyle={{\r\n          top: -0.085 * Dimensions.get(\"screen\").height,\r\n        }}\r\n        overScrollMode=\"never\"\r\n        showsVerticalScrollIndicator={false}\r\n      >\r\n        <Photos\r\n          selectedPhotosAndVideos={selectedPhotosAndVideos}\r\n          isPhotoSelectionVisible={isPhotoSelectionVisible}\r\n          data={tempUser.selectedAlbum.photosAndVideos}\r\n          onPress={(photo: PhotoOrVideo) => {\r\n            if (isPhotoSelectionVisible) {\r\n              if (!selectedPhotosAndVideos?.includes(photo)) {\r\n                setSelectedPhotosAndVideos(\r\n                  selectedPhotosAndVideos?.concat([photo])\r\n                );\r\n              } else {\r\n                setSelectedPhotosAndVideos(\r\n                  selectedPhotosAndVideos?.filter(\r\n                    (photoOrVideo) => photoOrVideo !== photo\r\n                  )\r\n                );\r\n              }\r\n            } else {\r\n              setPressedPhoto(photo);\r\n            }\r\n          }}\r\n          hasAddNewPhotoFeature={true}\r\n          onAddNewPhotoPress={() => {\r\n            setIsAddNewPhotoPressed(true);\r\n            setIsElseFeaturesVisible(false);\r\n          }}\r\n        />\r\n      </ScrollView>\r\n\r\n      <BottomToolBar\r\n        isVisible={isPhotoSelectionVisible}\r\n        onDeletePress={() => {\r\n          setRemovalApprovalText(\"delete selected photos\");\r\n        }}\r\n        onForwardPress={() => {\r\n          alert(\"Forward photos...\");\r\n        }}\r\n      />\r\n\r\n      <AddingPhotoMenu\r\n        isVisible={isAddNewPhotoPressed}\r\n        setIsVisible={(value: boolean) => {\r\n          setIsAddNewPhotoPressed(value);\r\n        }}\r\n        onPhotoPress={(value: PhotoOrVideo) => {\r\n          tempUser.selectedAlbum.photosAndVideos.push(value);\r\n          setIsAddNewPhotoPressed(false);\r\n        }}\r\n        onGalleryButtonPress={() => {\r\n          props.navigation.navigate(\"GalleryWhileAddingNewPhoto\" as never);\r\n        }}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default AlbumFilling;\r\n"],"mappings":";AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAUnD,SAASC,MAAM;AACf,SAASC,IAAI,EAAEC,YAAY;AAC3B,OAAOC,MAAM;AACb,SAASC,QAAQ;AACjB,OAAOC,IAAI;AACX,OAAOC,YAAY;AACnB,OAAOC,IAAI;AACX,OAAOC,gBAAgB;AACvB,OAAOC,wBAAwB;AAC/B,OAAOC,eAAe;AACtB,OAAOC,eAAe;AACtB,SAASC,YAAY,QAAQ,0BAA0B;AACvD,OAAOC,wBAAwB;AAC/B,OAAOC,aAAa;AAAsD,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAM1E,IAAMC,YAAyC,GAAG,SAA5CA,YAAyCA,CAAIC,KAAK,EAAK;EAC3D,IAAAC,SAAA,GAAsD/B,QAAQ,CAAC,EAAE,CAAC;IAAAgC,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3DG,mBAAmB,GAAAF,UAAA;IAAEG,sBAAsB,GAAAH,UAAA;EAClD,IAAAI,UAAA,GAA0DpC,QAAQ,CAAC,KAAK,CAAC;IAAAqC,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAlEE,qBAAqB,GAAAD,UAAA;IAAEE,wBAAwB,GAAAF,UAAA;EACtD,IAAAG,UAAA,GAAwDxC,QAAQ,CAAC,KAAK,CAAC;IAAAyC,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAhEE,oBAAoB,GAAAD,UAAA;IAAEE,uBAAuB,GAAAF,UAAA;EACpD,IAAAG,UAAA,GAA8D5C,QAAQ,CAEpE,EAAE,CAAC;IAAA6C,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAFEE,uBAAuB,GAAAD,UAAA;IAAEE,0BAA0B,GAAAF,UAAA;EAG1D,IAAAG,UAAA,GAAwChD,QAAQ,CAAC,IAAIU,YAAY,CAAC,EAAE,CAAC,CAAC;IAAAuC,WAAA,GAAAhB,cAAA,CAAAe,UAAA;IAA/DE,YAAY,GAAAD,WAAA;IAAEE,eAAe,GAAAF,WAAA;EACpC,IAAAG,WAAA,GAA8DpD,QAAQ,CAAC,KAAK,CAAC;IAAAqD,WAAA,GAAApB,cAAA,CAAAmB,WAAA;IAAtEE,uBAAuB,GAAAD,WAAA;IAAEE,0BAA0B,GAAAF,WAAA;EAE1D,IAAMG,SAAS,GAAGpC,YAAY,CAAC,CAAC;EAEhCnB,SAAS,CAAC,YAAM,CAAC,CAAC,EAAE,CAACuD,SAAS,CAAC,CAAC;EAGhC,IAAMC,qBAA+B,GAAG,CACtC,iBAAiB,EACjB,mBAAmB,EACnB,wBAAwB,CACzB;EACD,IAAMC,uBAAuC,GAAG,CAC9C,YAAM;IACJjD,IAAI,CAACkD,MAAM,CAACC,MAAM,CAACnD,IAAI,CAACkD,MAAM,CAACE,OAAO,CAACjD,QAAQ,CAACkD,aAAa,CAAC,EAAE,CAAC,CAAC;IAClEP,0BAA0B,CAAC,KAAK,CAAC;IACjCzB,KAAK,CAACiC,UAAU,CAACC,MAAM,CAAC,CAAC;EAC3B,CAAC,EACD,YAAM;IACJpD,QAAQ,CAACkD,aAAa,CAACG,eAAe,GAAG,EAAE;IAC3CV,0BAA0B,CAAC,KAAK,CAAC;EACnC,CAAC,EACD,YAAM;IACJT,uBAAuB,CAACoB,OAAO,CAAC,UAACC,KAAK,EAAK;MACzCvD,QAAQ,CAACkD,aAAa,CAACG,eAAe,CAACL,MAAM,CAC3ChD,QAAQ,CAACkD,aAAa,CAACG,eAAe,CAACJ,OAAO,CAACM,KAAK,CAAC,EACrD,CACF,CAAC;IACH,CAAC,CAAC;IACFpB,0BAA0B,CAACqB,KAAK,CAAe,CAAC,CAAC;IACjDb,0BAA0B,CAAC,KAAK,CAAC;EACnC,CAAC,CACF;EAED,OACE7B,KAAA,CAACxB,IAAI;IACHmE,KAAK,EAAE,CAAC7D,MAAM,CAAC8D,aAAa,EAAE;MAAEC,eAAe,EAAE;IAAqB,CAAC,CAAE;IAAAC,QAAA,GAGzEhD,IAAA,CAACT,IAAI;MACH0D,WAAW,EACTvB,YAAY,CAACwB,GAAG,IAAI,EAAE,IACtBpC,qBAAqB,IACrBI,oBACD;MACDiC,OAAO,EAAE,SAAAA,QAAA,EAAM;QACbxB,eAAe,CAAC,IAAIzC,YAAY,CAAC,EAAE,CAAC,CAAC;QACrC6B,wBAAwB,CAAC,KAAK,CAAC;QAC/BI,uBAAuB,CAAC,KAAK,CAAC;MAChC,CAAE;MACF0B,KAAK,EAAE7D,MAAM,CAACoE;IAAW,CAC1B,CAAC,EAGFpD,IAAA,CAACT,IAAI;MACH0D,WAAW,EAAEvC,mBAAmB,IAAI,EAAG;MACvCyC,OAAO,EAAE,SAAAA,QAAA,EAAM;QACbxC,sBAAsB,CAAC,EAAE,CAAC;MAC5B,CAAE;MACFkC,KAAK,EAAE,CACL7D,MAAM,CAACoE,UAAU,EACjB;QACEC,MAAM,EAAE;MACV,CAAC;IACD,CACH,CAAC,EAEDpB,qBAAqB,CAACqB,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK,EAAK;MAC1C,OACExD,IAAA,CAACN,eAAe;QAEd+D,SAAS,EAAE/C,mBAAmB,IAAI6C,IAAK;QACvCG,UAAU,EAAE,SAAAA,WAAA,EAAM;UAChB/C,sBAAsB,CAAC,EAAE,CAAC;QAC5B,CAAE;QACFgD,YAAY,EAAE,SAAAA,aAAA,EAAM;UAClBzB,uBAAuB,CAACsB,KAAK,CAAC,CAAC,CAAC;QAClC,CAAE;QACFI,IAAI,EAAE,wBAAwB,GAAGL,IAAI,GAAG;MAAI,GARvCA,IASN,CAAC;IAEN,CAAC,CAAC,EAEFvD,IAAA,CAACtB,IAAI;MAACmE,KAAK,EAAE7D,MAAM,CAAC6E,UAAW;MAAAb,QAAA,EAC5BlB,uBAAuB,GACtB5B,KAAA,CAAAE,SAAA;QAAA4C,QAAA,GACEhD,IAAA,CAACrB,gBAAgB;UACfkE,KAAK,EAAE,CACL7D,MAAM,CAAC8E,mBAAmB,EAC1B;YAAEC,IAAI,EAAE,IAAI,GAAGlF,UAAU,CAACmF,GAAG,CAAC,QAAQ,CAAC,CAACC;UAAM,CAAC,CAC/C;UACFd,OAAO,EAAE,SAAAA,QAAA,EAAM;YACbxC,sBAAsB,CAAC,mBAAmB,CAAC;UAC7C,CAAE;UAAAqC,QAAA,EAEFhD,IAAA,CAACpB,IAAI;YAACiE,KAAK,EAAE,CAAC7D,MAAM,CAACkF,eAAe,EAAE;cAAEC,KAAK,EAAE;YAAM,CAAC,CAAE;YAAAnB,QAAA,EAAC;UAEzD,CAAM;QAAC,CACS,CAAC,EAGnBhD,IAAA,CAACtB,IAAI;UACHmE,KAAK,EAAE,CACL7D,MAAM,CAAC8E,mBAAmB,EAC1B;YAAEC,IAAI,EAAE,GAAG,GAAGlF,UAAU,CAACmF,GAAG,CAAC,QAAQ,CAAC,CAACC;UAAM,CAAC,CAC9C;UAAAjB,QAAA,EAEF9C,KAAA,CAACtB,IAAI;YAACiE,KAAK,EAAE7D,MAAM,CAACkF,eAAgB;YAAAlB,QAAA,GAAC,SAC5B,EAAC1B,uBAAuB,CAAC8C,MAAM,EAAC,GACzC;UAAA,CAAM;QAAC,CACH,CAAC,EAGPpE,IAAA,CAACrB,gBAAgB;UACfkE,KAAK,EAAE,CACL7D,MAAM,CAAC8E,mBAAmB,EAC1B;YAAEO,KAAK,EAAE,CAAC,KAAK,GAAGxF,UAAU,CAACmF,GAAG,CAAC,QAAQ,CAAC,CAACC;UAAM,CAAC,CAClD;UACFd,OAAO,EAAE,SAAAA,QAAA,EAAM;YACb5B,0BAA0B,CAAC,EAAE,CAAC;YAC9BQ,0BAA0B,CAAC,KAAK,CAAC;UACnC,CAAE;UAAAiB,QAAA,EAEFhD,IAAA,CAACpB,IAAI;YAACiE,KAAK,EAAE7D,MAAM,CAACkF,eAAgB;YAAAlB,QAAA,EAAC;UAAM,CAAM;QAAC,CAClC,CAAC;MAAA,CACnB,CAAC,GAEH9C,KAAA,CAAAE,SAAA;QAAA4C,QAAA,GAEEhD,IAAA,CAACX,IAAI;UACHiF,YAAY,EAAElF,QAAQ,CAACkD,aAAa,CAACiC,IAAK;UAC1C1B,KAAK,EAAE7D,MAAM,CAACwF;QAAY,CAC3B,CAAC,EAGFxE,IAAA,CAACV,YAAY;UAAC6D,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAM7C,KAAK,CAACiC,UAAU,CAACC,MAAM,CAAC,CAAC;UAAA;QAAC,CAAE,CAAC,EAE1DxC,IAAA,CAACrB,gBAAgB;UACfwE,OAAO,EAAE,SAAAA,QAAA,EAAM;YACbpC,wBAAwB,CAAC,IAAI,CAAC;UAChC,CAAE;UACF8B,KAAK,EAAE7D,MAAM,CAACyF,kBAAmB;UAAAzB,QAAA,EAEjChD,IAAA,CAACR,gBAAgB,IAAE;QAAC,CACJ,CAAC;MAAA,CACnB;IACH,CACG,CAAC,EAEPQ,IAAA,CAACP,wBAAwB;MACvBgE,SAAS,EAAE3C,qBAAsB;MACjC4D,cAAc,EAAE,SAAAA,eAAA,EAAM;QACpBC,KAAK,CAAC,kBAAkB,CAAC;MAC3B,CAAE;MACFC,eAAe,EAAE,SAAAA,gBAAA,EAAM;QACrBzD,uBAAuB,CAAC,IAAI,CAAC;QAC7BJ,wBAAwB,CAAC,KAAK,CAAC;MACjC,CAAE;MACF8D,kBAAkB,EAAE,SAAAA,mBAAA,EAAM;QACxBlE,sBAAsB,CAAC,iBAAiB,CAAC;MAC3C,CAAE;MACFmE,WAAW,EAAE,SAAAA,YAAA,EAAM;QACjBH,KAAK,CAAC,YAAY,CAAC;MACrB;IAAE,CACH,CAAC,EAEDjD,YAAY,CAACwB,GAAG,IAAI,EAAE,IACrBlD,IAAA,CAACjB,KAAK;MAAC8D,KAAK,EAAE7D,MAAM,CAAC+F,WAAY;MAACC,MAAM,EAAE;QAAEC,GAAG,EAAEvD,YAAY,CAACwB;MAAI;IAAE,CAAE,CACvE,EAEDlD,IAAA,CAACH,wBAAwB;MACvB4D,SAAS,EAAE/B,YAAY,CAACwB,GAAG,IAAI,EAAG;MAClCgC,eAAe,EAAE,SAAAA,gBAAA,EAAM;QACrBvD,eAAe,CAAC,IAAIzC,YAAY,CAAC,EAAE,CAAC,CAAC;MACvC,CAAE;MACFiG,WAAW,EAAE,SAAAA,YAAA,EAAM;QACjBR,KAAK,CAAC,MAAM,CAAC;MACf,CAAE;MACFS,aAAa,EAAE,SAAAA,cAAA,EAAM;QACnBhG,QAAQ,CAACkD,aAAa,CAACG,eAAe,CAACL,MAAM,CAC3ChD,QAAQ,CAACkD,aAAa,CAACG,eAAe,CAACJ,OAAO,CAACX,YAAY,CAAC,EAC5D,CACF,CAAC;MACH,CAAE;MACFgD,cAAc,EAAE,SAAAA,eAAA,EAAM;QACpBC,KAAK,CAAC,SAAS,CAAC;MAClB,CAAE;MACFU,oBAAoB,EAAE,SAAAA,qBAAA,EAAM;QAC1BjG,QAAQ,CAACkD,aAAa,CAACgD,SAAS,GAAG5D,YAAY;MACjD,CAAE;MACF6D,aAAa,EAAE,SAAAA,cAAA,EAAM;QACnBxD,0BAA0B,CAAC,IAAI,CAAC;QAChCR,0BAA0B,CACxBD,uBAAuB,oBAAvBA,uBAAuB,CAAEkE,MAAM,CAAC,CAAC9D,YAAY,CAAC,CAChD,CAAC;MACH;IAAE,CACH,CAAC,EAEF1B,IAAA,CAAClB,UAAU;MACT+D,KAAK,EAAE;QACL4C,IAAI,EAAE;MACR,CAAE;MACFC,qBAAqB,EAAE;QACrBC,GAAG,EAAE,CAAC,KAAK,GAAG9G,UAAU,CAACmF,GAAG,CAAC,QAAQ,CAAC,CAAC4B;MACzC,CAAE;MACFC,cAAc,EAAC,OAAO;MACtBC,4BAA4B,EAAE,KAAM;MAAA9C,QAAA,EAEpChD,IAAA,CAACb,MAAM;QACLmC,uBAAuB,EAAEA,uBAAwB;QACjDQ,uBAAuB,EAAEA,uBAAwB;QACjDiE,IAAI,EAAE3G,QAAQ,CAACkD,aAAa,CAACG,eAAgB;QAC7CU,OAAO,EAAE,SAAAA,QAACR,KAAmB,EAAK;UAChC,IAAIb,uBAAuB,EAAE;YAC3B,IAAI,EAACR,uBAAuB,YAAvBA,uBAAuB,CAAE0E,QAAQ,CAACrD,KAAK,CAAC,GAAE;cAC7CpB,0BAA0B,CACxBD,uBAAuB,oBAAvBA,uBAAuB,CAAEkE,MAAM,CAAC,CAAC7C,KAAK,CAAC,CACzC,CAAC;YACH,CAAC,MAAM;cACLpB,0BAA0B,CACxBD,uBAAuB,oBAAvBA,uBAAuB,CAAE2E,MAAM,CAC7B,UAACC,YAAY;gBAAA,OAAKA,YAAY,KAAKvD,KAAK;cAAA,CAC1C,CACF,CAAC;YACH;UACF,CAAC,MAAM;YACLhB,eAAe,CAACgB,KAAK,CAAC;UACxB;QACF,CAAE;QACFwD,qBAAqB,EAAE,IAAK;QAC5BC,kBAAkB,EAAE,SAAAA,mBAAA,EAAM;UACxBjF,uBAAuB,CAAC,IAAI,CAAC;UAC7BJ,wBAAwB,CAAC,KAAK,CAAC;QACjC;MAAE,CACH;IAAC,CACQ,CAAC,EAEbf,IAAA,CAACF,aAAa;MACZ2D,SAAS,EAAE3B,uBAAwB;MACnCsD,aAAa,EAAE,SAAAA,cAAA,EAAM;QACnBzE,sBAAsB,CAAC,wBAAwB,CAAC;MAClD,CAAE;MACF+D,cAAc,EAAE,SAAAA,eAAA,EAAM;QACpBC,KAAK,CAAC,mBAAmB,CAAC;MAC5B;IAAE,CACH,CAAC,EAEF3E,IAAA,CAACL,eAAe;MACd8D,SAAS,EAAEvC,oBAAqB;MAChCmF,YAAY,EAAE,SAAAA,aAACC,KAAc,EAAK;QAChCnF,uBAAuB,CAACmF,KAAK,CAAC;MAChC,CAAE;MACFC,YAAY,EAAE,SAAAA,aAACD,KAAmB,EAAK;QACrClH,QAAQ,CAACkD,aAAa,CAACG,eAAe,CAAC+D,IAAI,CAACF,KAAK,CAAC;QAClDnF,uBAAuB,CAAC,KAAK,CAAC;MAChC,CAAE;MACFsF,oBAAoB,EAAE,SAAAA,qBAAA,EAAM;QAC1BnG,KAAK,CAACiC,UAAU,CAACmE,QAAQ,CAAC,4BAAqC,CAAC;MAClE;IAAE,CACH,CAAC;EAAA,CACE,CAAC;AAEX,CAAC;AAED,eAAerG,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}