{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { styles } from \"./Styles\";\nimport { useIsFocused } from \"@react-navigation/native\";\nimport Multimedia from \"../../SemiComponents/MainScreen/Multimedia/Multimedia\";\nimport Blur from \"../../SemiComponents/MainScreen/Blur\";\nimport RemovalApproval from \"../../SemiComponents/MainScreen/RemovalApproval\";\nimport { tempUser, user } from \"../../SemiComponents/DBUser\";\nimport AlbumLongPressedMenu from \"../../SemiComponents/MainScreen/Multimedia/AlbumLongPressedMenu\";\nimport BottomToolBar from \"../../SemiComponents/MainScreen/ButtomToolBar\";\nimport AvatarsNameAndGoBackButton from \"./AvatarsNameAndGoBackButton\";\nimport TopMenuWhenSelection from \"../../SemiComponents/TopMenuWhenSelection\";\nimport NumberUsernameAndBio from \"./NumberUsernameAndBio\";\nimport CurrentAvatarBar from \"./CurrentAvatarBar\";\nimport AnimatedMessageAboutCopying from \"./AnimatedMessageAboutCopying\";\nimport CallingMenu from \"./CallingMenu\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar screenHeight = Dimensions.get(\"screen\").height;\nvar AvatarsAndInfoScreen = function AvatarsAndInfoScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    removalApprovalText = _useState2[0],\n    setRemovalApprovalText = _useState2[1];\n  var _useState3 = useState(\"Photos\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    pressedMultimediaButton = _useState4[0],\n    _setPressedMultimediaButton = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isPhotoAlbumSelectionVisible = _useState6[0],\n    _setIsPhotoAlbumSelectionVisible = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    longPressedAlbum = _useState8[0],\n    setLongPressedAlbum = _useState8[1];\n  var _useState9 = useState(0),\n    _useState10 = _slicedToArray(_useState9, 2),\n    positionYOfLongPressedAlbum = _useState10[0],\n    setPositionYOfLongPressedAlbum = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isAlbumSelectionVisible = _useState12[0],\n    setIsAlbumSelectionVisible = _useState12[1];\n  var _useState13 = useState([]),\n    _useState14 = _slicedToArray(_useState13, 2),\n    selectedAlbums = _useState14[0],\n    setSelectedAlbums = _useState14[1];\n  var _useState15 = useState(user.avatars[0]),\n    _useState16 = _slicedToArray(_useState15, 2),\n    currentAvatar = _useState16[0],\n    setCurrentAvatar = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    isAnyTextCopied = _useState18[0],\n    setIsAnyTextCopied = _useState18[1];\n  var _useState19 = useState(\"\"),\n    _useState20 = _slicedToArray(_useState19, 2),\n    phoneUsernameOrBioCopied = _useState20[0],\n    setPhoneUsernameOrBioCopied = _useState20[1];\n  var _useState21 = useState(false),\n    _useState22 = _slicedToArray(_useState21, 2),\n    isNumberPressed = _useState22[0],\n    setIsNumberPressed = _useState22[1];\n  var isFocused = useIsFocused();\n  useEffect(function () {}, [isFocused]);\n  useEffect(function () {\n    console.log(isAnyTextCopied);\n  });\n  var removalApprovalsTexts = [\"delete an album\", \"delete all albums\", \"delete selected albums\"];\n  var removalApprovalsOnPress = [function () {\n    user.albums.splice(user.albums.indexOf(longPressedAlbum), 1);\n    setLongPressedAlbum(null);\n  }, function () {\n    user.albums = Array();\n    setIsAlbumSelectionVisible(false);\n  }, function () {\n    selectedAlbums.forEach(function (album) {\n      user.albums.splice(user.albums.indexOf(album), 1);\n    });\n    setSelectedAlbums(Array());\n    setIsAlbumSelectionVisible(false);\n  }];\n  return _jsxs(View, {\n    style: styles.mainContainer,\n    children: [_jsx(Blur, {\n      visibleWhen: isPhotoAlbumSelectionVisible || longPressedAlbum != null || isNumberPressed,\n      onPress: function onPress() {\n        _setIsPhotoAlbumSelectionVisible(false);\n        setLongPressedAlbum(null);\n        setIsNumberPressed(false);\n      },\n      style: styles.blurEffect\n    }), _jsx(Blur, {\n      visibleWhen: removalApprovalText != \"\",\n      onPress: function onPress() {\n        setRemovalApprovalText(\"\");\n      },\n      style: [styles.blurEffect, {\n        zIndex: 3\n      }]\n    }), removalApprovalsTexts.map(function (item, index) {\n      return _jsx(RemovalApproval, {\n        isVisible: removalApprovalText == item,\n        onAnyPress: function onAnyPress() {\n          setRemovalApprovalText(\"\");\n        },\n        onAgreePress: function onAgreePress() {\n          removalApprovalsOnPress[index]();\n        },\n        text: \"Do you really want to \" + item + \"?\"\n      }, item);\n    }), _jsx(TopMenuWhenSelection, {\n      isVisible: isAlbumSelectionVisible,\n      quantityOfSelectedItems: selectedAlbums.length,\n      onCancelPress: function onCancelPress() {\n        setSelectedAlbums([]);\n        setIsAlbumSelectionVisible(false);\n      },\n      onDeleteAllPress: function onDeleteAllPress() {\n        setRemovalApprovalText(\"delete all albums\");\n      }\n    }), _jsx(AlbumLongPressedMenu, {\n      isVisible: longPressedAlbum != null,\n      longPressedAlbum: longPressedAlbum,\n      positionYOfLongPressedAlbum: positionYOfLongPressedAlbum,\n      onDeleteAlbumPress: function onDeleteAlbumPress() {\n        setRemovalApprovalText(\"delete an album\");\n      },\n      onSelectAlbumPress: function onSelectAlbumPress() {\n        setIsAlbumSelectionVisible(true);\n        setSelectedAlbums(selectedAlbums == null ? void 0 : selectedAlbums.concat([longPressedAlbum]));\n        setLongPressedAlbum(null);\n      }\n    }), _jsx(BottomToolBar, {\n      isVisible: isAlbumSelectionVisible,\n      onDeletePress: function onDeletePress() {\n        setRemovalApprovalText(\"delete selected albums\");\n      },\n      onForwardPress: function onForwardPress() {\n        alert(\"Forward album...\");\n      }\n    }), _jsx(CallingMenu, {\n      isVisible: isNumberPressed,\n      onCopyPress: function onCopyPress() {\n        setIsAnyTextCopied(true);\n        setPhoneUsernameOrBioCopied(\"Number\");\n      },\n      onCancelPress: function onCancelPress() {\n        setIsNumberPressed(false);\n      }\n    }), _jsxs(ScrollView, {\n      style: {\n        flex: 1,\n        zIndex: isPhotoAlbumSelectionVisible ? 2 : 0\n      },\n      contentContainerStyle: {\n        zIndex: isPhotoAlbumSelectionVisible ? 2 : 0\n      },\n      overScrollMode: \"never\",\n      showsVerticalScrollIndicator: false,\n      onScroll: function onScroll() {\n        _setIsPhotoAlbumSelectionVisible(false);\n      },\n      children: [_jsx(Blur, {\n        visibleWhen: isPhotoAlbumSelectionVisible,\n        onPress: function onPress() {\n          _setIsPhotoAlbumSelectionVisible(false);\n        },\n        style: [styles.blurEffect, {\n          zIndex: 3\n        }]\n      }), _jsx(AvatarsNameAndGoBackButton, {\n        onGoBackPress: function onGoBackPress() {\n          navigation.goBack();\n        },\n        currentAvatar: currentAvatar,\n        onRightPress: function onRightPress() {\n          setCurrentAvatar(user.avatars[(user.avatars.indexOf(currentAvatar) + 1) % user.avatars.length]);\n        },\n        onLeftPress: function onLeftPress() {\n          setCurrentAvatar(user.avatars[user.avatars.indexOf(currentAvatar) - 1 > -1 ? user.avatars.indexOf(currentAvatar) - 1 : user.avatars.length - 1]);\n        }\n      }), _jsx(CurrentAvatarBar, {\n        currentAvatar: currentAvatar\n      }), _jsx(NumberUsernameAndBio, {\n        onUsernameAndBioPress: function onUsernameAndBioPress(text) {\n          setIsAnyTextCopied(true);\n          setPhoneUsernameOrBioCopied(text);\n        },\n        onNumberPress: function onNumberPress() {\n          return setIsNumberPressed(true);\n        }\n      }), _jsx(Multimedia, {\n        isPhotoAlbumSelectionVisible: isPhotoAlbumSelectionVisible,\n        setIsPhotoAlbumSelectionVisible: function setIsPhotoAlbumSelectionVisible(value) {\n          return _setIsPhotoAlbumSelectionVisible(value);\n        },\n        pressedMultimediaButton: pressedMultimediaButton,\n        setPressedMultimediaButton: function setPressedMultimediaButton(value) {\n          _setPressedMultimediaButton(value);\n        },\n        onPhotoPress: function onPhotoPress(photo) {\n          tempUser.selectedPhoto = photo;\n          navigation.navigate(\"PhotoScreen\");\n        },\n        onAlbumPress: function onAlbumPress(item) {\n          if (isAlbumSelectionVisible) {\n            if (!selectedAlbums.includes(item)) {\n              setSelectedAlbums(selectedAlbums.concat([item]));\n            } else {\n              setSelectedAlbums(selectedAlbums.filter(function (photoOrVideo) {\n                return photoOrVideo !== item;\n              }));\n            }\n          } else {\n            tempUser.selectedAlbum = item;\n            navigation.navigate(\"Album\");\n          }\n        },\n        onNewAlbumPress: function onNewAlbumPress() {\n          navigation.navigate(\"NewAlbumScreen\");\n        },\n        isAlbumSelectionVisible: isAlbumSelectionVisible,\n        onAlbumLongPress: function onAlbumLongPress(value, event) {\n          setLongPressedAlbum(value);\n          if (!isAlbumSelectionVisible) {\n            setLongPressedAlbum(value);\n            setPositionYOfLongPressedAlbum(event.nativeEvent.pageY + 0.05 * screenHeight);\n          } else {\n            if (!selectedAlbums.includes(value)) {\n              setSelectedAlbums(selectedAlbums.concat([value]));\n            } else {\n              setSelectedAlbums(selectedAlbums.filter(function (photoOrVideo) {\n                return photoOrVideo !== value;\n              }));\n            }\n          }\n        },\n        isAlbumCheckMarkVisible: function isAlbumCheckMarkVisible(value) {\n          return selectedAlbums.includes(value);\n        }\n      })]\n    }), _jsx(AnimatedMessageAboutCopying, {\n      isVisible: isAnyTextCopied,\n      onEnd: function onEnd() {\n        setIsAnyTextCopied(false);\n      },\n      text: phoneUsernameOrBioCopied + \" is copied\"\n    })]\n  });\n};\nexport default AvatarsAndInfoScreen;","map":{"version":3,"names":["React","useState","useEffect","View","ScrollView","Dimensions","styles","useIsFocused","Multimedia","Blur","RemovalApproval","tempUser","user","AlbumLongPressedMenu","BottomToolBar","AvatarsNameAndGoBackButton","TopMenuWhenSelection","NumberUsernameAndBio","CurrentAvatarBar","AnimatedMessageAboutCopying","CallingMenu","jsx","_jsx","jsxs","_jsxs","screenHeight","get","height","AvatarsAndInfoScreen","_ref","navigation","_useState","_useState2","_slicedToArray","removalApprovalText","setRemovalApprovalText","_useState3","_useState4","pressedMultimediaButton","setPressedMultimediaButton","_useState5","_useState6","isPhotoAlbumSelectionVisible","setIsPhotoAlbumSelectionVisible","_useState7","_useState8","longPressedAlbum","setLongPressedAlbum","_useState9","_useState10","positionYOfLongPressedAlbum","setPositionYOfLongPressedAlbum","_useState11","_useState12","isAlbumSelectionVisible","setIsAlbumSelectionVisible","_useState13","_useState14","selectedAlbums","setSelectedAlbums","_useState15","avatars","_useState16","currentAvatar","setCurrentAvatar","_useState17","_useState18","isAnyTextCopied","setIsAnyTextCopied","_useState19","_useState20","phoneUsernameOrBioCopied","setPhoneUsernameOrBioCopied","_useState21","_useState22","isNumberPressed","setIsNumberPressed","isFocused","console","log","removalApprovalsTexts","removalApprovalsOnPress","albums","splice","indexOf","Array","forEach","album","style","mainContainer","children","visibleWhen","onPress","blurEffect","zIndex","map","item","index","isVisible","onAnyPress","onAgreePress","text","quantityOfSelectedItems","length","onCancelPress","onDeleteAllPress","onDeleteAlbumPress","onSelectAlbumPress","concat","onDeletePress","onForwardPress","alert","onCopyPress","flex","contentContainerStyle","overScrollMode","showsVerticalScrollIndicator","onScroll","onGoBackPress","goBack","onRightPress","onLeftPress","onUsernameAndBioPress","onNumberPress","value","onPhotoPress","photo","selectedPhoto","navigate","onAlbumPress","includes","filter","photoOrVideo","selectedAlbum","onNewAlbumPress","onAlbumLongPress","event","nativeEvent","pageY","isAlbumCheckMarkVisible","onEnd"],"sources":["/home/zatibmag/Desktop/Project/Messenger/Messenger/Pages/Profiles/DialogueProfile/AvatarsAndInfoScreen/AvatarsAndInfoScreen.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { View, ScrollView, Dimensions } from \"react-native\";\r\nimport { styles } from \"./Styles\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport Multimedia from \"../../SemiComponents/MainScreen/Multimedia/Multimedia\";\r\nimport Blur from \"../../SemiComponents/MainScreen/Blur\";\r\nimport RemovalApproval from \"../../SemiComponents/MainScreen/RemovalApproval\";\r\nimport {\r\n  Album,\r\n  PhotoOrVideo,\r\n  tempUser,\r\n  user,\r\n} from \"../../SemiComponents/DBUser\";\r\nimport AlbumLongPressedMenu from \"../../SemiComponents/MainScreen/Multimedia/AlbumLongPressedMenu\";\r\nimport BottomToolBar from \"../../SemiComponents/MainScreen/ButtomToolBar\";\r\nimport AvatarsNameAndGoBackButton from \"./AvatarsNameAndGoBackButton\";\r\nimport TopMenuWhenSelection from \"../../SemiComponents/TopMenuWhenSelection\";\r\nimport NumberUsernameAndBio from \"./NumberUsernameAndBio\";\r\nimport CurrentAvatarBar from \"./CurrentAvatarBar\";\r\nimport AnimatedMessageAboutCopying from \"./AnimatedMessageAboutCopying\";\r\nimport CallingMenu from \"./CallingMenu\";\r\nimport { GestureResponderEvent } from \"react-native-modal\";\r\n\r\nconst screenHeight = Dimensions.get(\"screen\").height;\r\n\r\ntype AvatarsAndInfoScreenProps = {\r\n  navigation: StackNavigationProp<{}>; // Встановіть правильний тип для navigation\r\n};\r\n\r\nconst AvatarsAndInfoScreen: React.FC<AvatarsAndInfoScreenProps> = ({\r\n  navigation,\r\n}) => {\r\n  const [removalApprovalText, setRemovalApprovalText] = useState(\"\");\r\n  const [pressedMultimediaButton, setPressedMultimediaButton] =\r\n    useState(\"Photos\");\r\n  const [isPhotoAlbumSelectionVisible, setIsPhotoAlbumSelectionVisible] =\r\n    useState(false);\r\n  const [longPressedAlbum, setLongPressedAlbum] = useState(null);\r\n  const [positionYOfLongPressedAlbum, setPositionYOfLongPressedAlbum] =\r\n    useState(0);\r\n  const [isAlbumSelectionVisible, setIsAlbumSelectionVisible] = useState(false);\r\n  const [selectedAlbums, setSelectedAlbums] = useState<Array<Album>>([]);\r\n  const [currentAvatar, setCurrentAvatar] = useState(user.avatars[0]);\r\n  const [isAnyTextCopied, setIsAnyTextCopied] = useState(false);\r\n  const [phoneUsernameOrBioCopied, setPhoneUsernameOrBioCopied] = useState(\"\");\r\n  const [isNumberPressed, setIsNumberPressed] = useState(false);\r\n\r\n  const isFocused = useIsFocused();\r\n\r\n  useEffect(() => {}, [isFocused]);\r\n\r\n  useEffect(() => {\r\n    console.log(isAnyTextCopied);\r\n  });\r\n\r\n  const removalApprovalsTexts: string[] = [\r\n    \"delete an album\",\r\n    \"delete all albums\",\r\n    \"delete selected albums\",\r\n  ];\r\n  const removalApprovalsOnPress: (() => void)[] = [\r\n    () => {\r\n      user.albums.splice(user.albums.indexOf(longPressedAlbum), 1);\r\n      setLongPressedAlbum(null);\r\n    },\r\n    () => {\r\n      user.albums = Array<Album>();\r\n      setIsAlbumSelectionVisible(false);\r\n    },\r\n    () => {\r\n      selectedAlbums.forEach((album) => {\r\n        user.albums.splice(user.albums.indexOf(album), 1);\r\n      });\r\n      setSelectedAlbums(Array<Album>());\r\n      setIsAlbumSelectionVisible(false);\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <View style={styles.mainContainer}>\r\n      {/* General blur with zIndex 1 */}\r\n      <Blur\r\n        visibleWhen={\r\n          isPhotoAlbumSelectionVisible ||\r\n          longPressedAlbum != null ||\r\n          isNumberPressed\r\n        }\r\n        onPress={() => {\r\n          setIsPhotoAlbumSelectionVisible(false);\r\n          setLongPressedAlbum(null);\r\n          setIsNumberPressed(false);\r\n        }}\r\n        style={styles.blurEffect}\r\n      />\r\n\r\n      {/* Blur over blur with zIndex 3 */}\r\n      <Blur\r\n        visibleWhen={removalApprovalText != \"\"}\r\n        onPress={() => {\r\n          setRemovalApprovalText(\"\");\r\n        }}\r\n        style={[\r\n          styles.blurEffect,\r\n          {\r\n            zIndex: 3,\r\n          },\r\n        ]}\r\n      />\r\n\r\n      {removalApprovalsTexts.map((item, index) => {\r\n        return (\r\n          <RemovalApproval\r\n            key={item}\r\n            isVisible={removalApprovalText == item}\r\n            onAnyPress={() => {\r\n              setRemovalApprovalText(\"\");\r\n            }}\r\n            onAgreePress={() => {\r\n              removalApprovalsOnPress[index]();\r\n            }}\r\n            text={\"Do you really want to \" + item + \"?\"}\r\n          />\r\n        );\r\n      })}\r\n\r\n      <TopMenuWhenSelection\r\n        isVisible={isAlbumSelectionVisible}\r\n        quantityOfSelectedItems={selectedAlbums.length}\r\n        onCancelPress={() => {\r\n          setSelectedAlbums([]);\r\n          setIsAlbumSelectionVisible(false);\r\n        }}\r\n        onDeleteAllPress={() => {\r\n          setRemovalApprovalText(\"delete all albums\");\r\n        }}\r\n      />\r\n\r\n      <AlbumLongPressedMenu\r\n        isVisible={longPressedAlbum != null}\r\n        longPressedAlbum={longPressedAlbum}\r\n        positionYOfLongPressedAlbum={positionYOfLongPressedAlbum}\r\n        onDeleteAlbumPress={() => {\r\n          setRemovalApprovalText(\"delete an album\");\r\n        }}\r\n        onSelectAlbumPress={() => {\r\n          setIsAlbumSelectionVisible(true);\r\n          setSelectedAlbums(selectedAlbums?.concat([longPressedAlbum]));\r\n          setLongPressedAlbum(null);\r\n        }}\r\n      />\r\n\r\n      <BottomToolBar\r\n        isVisible={isAlbumSelectionVisible}\r\n        onDeletePress={() => {\r\n          setRemovalApprovalText(\"delete selected albums\");\r\n        }}\r\n        onForwardPress={() => {\r\n          alert(\"Forward album...\");\r\n        }}\r\n      />\r\n\r\n      <CallingMenu\r\n        isVisible={isNumberPressed}\r\n        onCopyPress={() => {\r\n          setIsAnyTextCopied(true);\r\n          setPhoneUsernameOrBioCopied(\"Number\");\r\n        }}\r\n        onCancelPress={() => {\r\n          setIsNumberPressed(false);\r\n        }}\r\n      />\r\n\r\n      <ScrollView\r\n        style={{\r\n          flex: 1,\r\n          zIndex: isPhotoAlbumSelectionVisible ? 2 : 0,\r\n        }}\r\n        contentContainerStyle={{\r\n          zIndex: isPhotoAlbumSelectionVisible ? 2 : 0,\r\n        }}\r\n        overScrollMode=\"never\"\r\n        showsVerticalScrollIndicator={false}\r\n        onScroll={() => {\r\n          setIsPhotoAlbumSelectionVisible(false);\r\n        }}\r\n      >\r\n        <Blur\r\n          visibleWhen={isPhotoAlbumSelectionVisible}\r\n          onPress={() => {\r\n            setIsPhotoAlbumSelectionVisible(false);\r\n          }}\r\n          style={[styles.blurEffect, { zIndex: 3 }]}\r\n        />\r\n\r\n        <AvatarsNameAndGoBackButton\r\n          onGoBackPress={() => {\r\n            navigation.goBack();\r\n          }}\r\n          currentAvatar={currentAvatar}\r\n          onRightPress={() => {\r\n            setCurrentAvatar(\r\n              user.avatars[\r\n                (user.avatars.indexOf(currentAvatar) + 1) % user.avatars.length\r\n              ]\r\n            );\r\n          }}\r\n          onLeftPress={() => {\r\n            setCurrentAvatar(\r\n              user.avatars[\r\n                user.avatars.indexOf(currentAvatar) - 1 > -1\r\n                  ? user.avatars.indexOf(currentAvatar) - 1\r\n                  : user.avatars.length - 1\r\n              ]\r\n            );\r\n          }}\r\n        />\r\n\r\n        <CurrentAvatarBar currentAvatar={currentAvatar} />\r\n\r\n        <NumberUsernameAndBio\r\n          onUsernameAndBioPress={(text: string) => {\r\n            setIsAnyTextCopied(true);\r\n            setPhoneUsernameOrBioCopied(text);\r\n          }}\r\n          onNumberPress={() => setIsNumberPressed(true)}\r\n        />\r\n\r\n        {/* Multimedia bar with photo/albums, files, voice, links buttons*/}\r\n        <Multimedia\r\n          isPhotoAlbumSelectionVisible={isPhotoAlbumSelectionVisible}\r\n          setIsPhotoAlbumSelectionVisible={(value: boolean) =>\r\n            setIsPhotoAlbumSelectionVisible(value)\r\n          }\r\n          pressedMultimediaButton={pressedMultimediaButton}\r\n          setPressedMultimediaButton={(value: string) => {\r\n            setPressedMultimediaButton(value);\r\n          }}\r\n          onPhotoPress={(photo: PhotoOrVideo) => {\r\n            tempUser.selectedPhoto = photo;\r\n            navigation.navigate(\"PhotoScreen\" as never);\r\n          }}\r\n          onAlbumPress={(item: Album) => {\r\n            if (isAlbumSelectionVisible) {\r\n              if (!selectedAlbums.includes(item)) {\r\n                setSelectedAlbums(selectedAlbums.concat([item]));\r\n              } else {\r\n                setSelectedAlbums(\r\n                  selectedAlbums.filter((photoOrVideo) => photoOrVideo !== item)\r\n                );\r\n              }\r\n            } else {\r\n              tempUser.selectedAlbum = item;\r\n              navigation.navigate(\"Album\" as never);\r\n            }\r\n          }}\r\n          onNewAlbumPress={() => {\r\n            navigation.navigate(\"NewAlbumScreen\" as never);\r\n          }}\r\n          isAlbumSelectionVisible={isAlbumSelectionVisible}\r\n          onAlbumLongPress={(value: Album, event: GestureResponderEvent) => {\r\n            setLongPressedAlbum(value);\r\n            if (!isAlbumSelectionVisible) {\r\n              setLongPressedAlbum(value);\r\n              setPositionYOfLongPressedAlbum(\r\n                event.nativeEvent.pageY + 0.05 * screenHeight\r\n              );\r\n            } else {\r\n              if (!selectedAlbums.includes(value)) {\r\n                setSelectedAlbums(selectedAlbums.concat([value]));\r\n              } else {\r\n                setSelectedAlbums(\r\n                  selectedAlbums.filter(\r\n                    (photoOrVideo) => photoOrVideo !== value\r\n                  )\r\n                );\r\n              }\r\n            }\r\n          }}\r\n          isAlbumCheckMarkVisible={(value: Album) => {\r\n            return selectedAlbums.includes(value);\r\n          }}\r\n        />\r\n      </ScrollView>\r\n\r\n      <AnimatedMessageAboutCopying\r\n        isVisible={isAnyTextCopied}\r\n        onEnd={() => {\r\n          setIsAnyTextCopied(false);\r\n        }}\r\n        text={phoneUsernameOrBioCopied + \" is copied\"}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default AvatarsAndInfoScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}