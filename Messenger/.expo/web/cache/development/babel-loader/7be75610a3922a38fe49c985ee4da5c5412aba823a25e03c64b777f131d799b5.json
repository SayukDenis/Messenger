{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from \"react\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport { headerstyles } from \"../Styles/HeaderStyle\";\nimport MagnifyingGlass from \"./Headers containers/MagnifyingGlass\";\nimport ModeOfEmployment from \"./Headers containers/ModeOfEmployment\";\nimport Line from \"./Headers containers/Line\";\nimport ContactsSvg from \"./SVG/ContactsSvg\";\nimport AddFolderSvg from \"./SVG/AddFolderSvg\";\nimport WriteMessageSvg from \"./SVG/WriteMessageSvg\";\nimport UserIconSvg from \"./SVG/UserIconSvg\";\nimport { connect } from \"react-redux\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  screenWidth = _Dimensions$get.width,\n  screenHeight = _Dimensions$get.height;\nfunction Header(_ref) {\n  var mySelfUser = _ref.mySelfUser,\n    isTouchableHeader = _ref.isTouchableHeader,\n    onPress = _ref.onPress;\n  var timeForLineAnimation = 150 * 10;\n  var rotateGradusOfLines = 45;\n  var kefOfTransform = 0.6;\n  var kefOfTransformHeight = 0.8;\n  var kefForSizeOfSvg = 0.073;\n  var topLineValue = useState(new Animated.Value(0))[0];\n  var middleLineValue = useState(new Animated.Value(1))[0];\n  var bottomLineValue = useState(new Animated.Value(0))[0];\n  var scrollX = useState(new Animated.Value(0))[0];\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isButtonEnabled = _useState2[0],\n    setIsButtonEnabled = _useState2[1];\n  var _useState3 = useState(1),\n    _useState4 = _slicedToArray(_useState3, 2),\n    state = _useState4[0],\n    setState = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    stateForWidth = _useState6[0],\n    setStateForWidth = _useState6[1];\n  var topLineRotation = topLineValue.interpolate({\n    inputRange: [0, 1, 2, 3],\n    outputRange: [\"0deg\", `-${rotateGradusOfLines}deg`, `-${90 + rotateGradusOfLines}deg`, `-${180}deg`]\n  });\n  var bottomLineRotation = bottomLineValue.interpolate({\n    inputRange: [0, 1, 2, 3],\n    outputRange: [\"0deg\", `${rotateGradusOfLines}deg`, `${90 + rotateGradusOfLines}deg`, `${180}deg`]\n  });\n  var positionXOfTopLine = topLineValue.interpolate({\n    inputRange: [0, 1, 2, 3],\n    outputRange: [0, (screenWidth + screenHeight) * 0.015, (screenWidth + screenHeight) * 0.015, 0]\n  });\n  var scrollXPosition = scrollX.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, -screenWidth * 0.8]\n  });\n  useEffect(function () {\n    if (!isTouchableHeader && state == 0) {\n      hamburgerAnimation(null);\n    }\n  });\n  var hamburgerAnimation = function hamburgerAnimation(e) {\n    if (!isTouchableHeader && state == 0) {} else {\n      onPress();\n    }\n    setIsButtonEnabled(false);\n    setState(state == 0 ? 1 : 0);\n    lineTransformation(e);\n  };\n  var lineTransformation = function lineTransformation(e) {\n    var firstAnimatedTopLine = Animated.timing(topLineValue, {\n      toValue: state == 0 ? 2 : 1,\n      duration: timeForLineAnimation * 0.7,\n      useNativeDriver: true\n    });\n    var firstAnimatedBottomLine = Animated.timing(bottomLineValue, {\n      toValue: state == 0 ? 2 : 1,\n      duration: timeForLineAnimation * 0.7,\n      useNativeDriver: true\n    });\n    var secondAnimatedTopLine = Animated.timing(topLineValue, {\n      toValue: state == 1 ? 2 : 3,\n      duration: timeForLineAnimation,\n      useNativeDriver: true\n    });\n    var secondAnimatedBottomLine = Animated.timing(bottomLineValue, {\n      toValue: state == 1 ? 2 : 3,\n      duration: timeForLineAnimation,\n      useNativeDriver: true\n    });\n    var animateForMiddleLine = Animated.timing(middleLineValue, {\n      toValue: state == 0 ? 1 : 0,\n      duration: state == 1 ? 10 : timeForLineAnimation,\n      useNativeDriver: true\n    });\n    Animated.timing(scrollX, {\n      toValue: state,\n      duration: timeForLineAnimation * 1.3,\n      useNativeDriver: true,\n      easing: Easing.bezier(0, 0, 0, 0)\n    }).start();\n    state == 1 ? animateForMiddleLine.start() : null;\n    firstAnimatedTopLine.start(function () {\n      if (state == 0) {\n        setStateForWidth(0);\n      }\n      animateForMiddleLine.start(function () {});\n      secondAnimatedTopLine.start(function () {});\n    });\n    firstAnimatedBottomLine.start(function () {\n      secondAnimatedBottomLine.start(function () {\n        setIsButtonEnabled(true);\n        if (state == 0) {\n          Animated.timing(topLineValue, {\n            toValue: 0,\n            duration: 0,\n            useNativeDriver: true\n          }).start();\n          Animated.timing(bottomLineValue, {\n            toValue: 0,\n            duration: 0,\n            useNativeDriver: true\n          }).start();\n          setIsButtonEnabled(true);\n        }\n      });\n    });\n    state == 1 ? setStateForWidth(1) : null;\n  };\n  return _jsxs(View, {\n    style: {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      right: 0,\n      zIndex: 5\n    },\n    children: [_jsx(View, {\n      style: headerstyles.gapContainer\n    }), _jsx(View, {\n      style: headerstyles.container,\n      children: _jsxs(View, {\n        style: [headerstyles.header],\n        children: [_jsxs(Animated.View, {\n          style: [{\n            justifyContent: \"space-between\",\n            flexDirection: \"row\",\n            width: screenWidth * 0.96\n          }, {\n            transform: [{\n              translateX: scrollXPosition\n            }]\n          }],\n          children: [_jsx(MagnifyingGlass, {\n            style: headerstyles.magnifyingglass\n          }), _jsx(ModeOfEmployment, {}), _jsx(TouchableOpacity, {\n            onPress: hamburgerAnimation,\n            disabled: !isButtonEnabled,\n            style: {\n              flexDirection: \"row\"\n            },\n            children: _jsxs(View, {\n              style: [headerstyles.hamburgerview, {\n                paddingRight: screenWidth * 0.01\n              }],\n              children: [_jsx(Animated.View, {\n                style: {\n                  transform: [{\n                    rotate: topLineRotation\n                  }, {\n                    translateX: positionXOfTopLine\n                  }]\n                },\n                children: _jsx(Line, {\n                  screenWidth: stateForWidth == 0 ? screenWidth : screenWidth * kefOfTransform,\n                  screenHeight: stateForWidth == 0 ? screenHeight : screenHeight * kefOfTransformHeight\n                })\n              }), _jsx(Animated.View, {\n                style: {\n                  opacity: middleLineValue\n                },\n                children: _jsx(Line, {\n                  screenWidth: screenWidth,\n                  screenHeight: screenHeight\n                })\n              }), _jsx(Animated.View, {\n                style: {\n                  transform: [{\n                    rotate: bottomLineRotation\n                  }, {\n                    translateX: positionXOfTopLine\n                  }]\n                },\n                children: _jsx(Line, {\n                  screenWidth: stateForWidth == 0 ? screenWidth : screenWidth * kefOfTransform,\n                  screenHeight: stateForWidth == 0 ? screenHeight : screenHeight * kefOfTransformHeight\n                })\n              })]\n            })\n          })]\n        }), _jsxs(Animated.View, {\n          style: [{\n            width: screenWidth * 0.765,\n            flexDirection: \"row\",\n            justifyContent: \"space-between\"\n          }, {\n            transform: [{\n              translateX: scrollXPosition\n            }]\n          }],\n          children: [_jsxs(View, {\n            style: {\n              flexDirection: \"row\",\n              justifyContent: \"center\"\n            },\n            children: [_jsx(View, {\n              style: {\n                alignSelf: \"center\",\n                marginLeft: screenWidth * 0.025\n              },\n              children: _jsx(ContactsSvg, {\n                width: screenWidth * kefForSizeOfSvg,\n                height: screenHeight * kefForSizeOfSvg\n              })\n            }), _jsx(View, {\n              style: {\n                alignSelf: \"center\",\n                marginLeft: screenWidth * 0.05\n              },\n              children: _jsx(AddFolderSvg, {\n                width: screenWidth * kefForSizeOfSvg,\n                height: screenHeight * kefForSizeOfSvg\n              })\n            }), _jsx(View, {\n              style: {\n                alignSelf: \"center\",\n                marginLeft: screenWidth * 0.05\n              },\n              children: _jsx(WriteMessageSvg, {\n                width: screenWidth * kefForSizeOfSvg,\n                height: screenHeight * kefForSizeOfSvg\n              })\n            })]\n          }), _jsx(View, {\n            style: {\n              alignSelf: \"center\"\n            },\n            children: _jsx(UserIconSvg, {\n              width: screenWidth * kefForSizeOfSvg,\n              height: screenHeight * kefForSizeOfSvg\n            })\n          })]\n        })]\n      })\n    })]\n  });\n}\nexport default connect(null)(Header);","map":{"version":3,"names":["useEffect","useState","React","View","TouchableOpacity","Animated","Dimensions","Easing","headerstyles","MagnifyingGlass","ModeOfEmployment","Line","ContactsSvg","AddFolderSvg","WriteMessageSvg","UserIconSvg","connect","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","screenWidth","width","screenHeight","height","Header","_ref","mySelfUser","isTouchableHeader","onPress","timeForLineAnimation","rotateGradusOfLines","kefOfTransform","kefOfTransformHeight","kefForSizeOfSvg","topLineValue","Value","middleLineValue","bottomLineValue","scrollX","_useState","_useState2","_slicedToArray","isButtonEnabled","setIsButtonEnabled","_useState3","_useState4","state","setState","_useState5","_useState6","stateForWidth","setStateForWidth","topLineRotation","interpolate","inputRange","outputRange","bottomLineRotation","positionXOfTopLine","scrollXPosition","hamburgerAnimation","e","lineTransformation","firstAnimatedTopLine","timing","toValue","duration","useNativeDriver","firstAnimatedBottomLine","secondAnimatedTopLine","secondAnimatedBottomLine","animateForMiddleLine","easing","bezier","start","style","position","top","left","right","zIndex","children","gapContainer","container","header","justifyContent","flexDirection","transform","translateX","magnifyingglass","disabled","hamburgerview","paddingRight","rotate","opacity","alignSelf","marginLeft"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/ChatList/Components/Header.tsx"],"sourcesContent":["import { createRef, useDebugValue, useEffect, useState } from \"react\";\r\nimport React from \"react\";\r\nimport {\r\n  View,\r\n  Image,\r\n  TouchableOpacity,\r\n  GestureResponderEvent,\r\n  Animated,\r\n  Dimensions,\r\n  ScrollView,\r\n  Easing,\r\n} from \"react-native\";\r\nimport { headerstyles } from \"../Styles/HeaderStyle\";\r\nimport MagnifyingGlass from \"./Headers containers/MagnifyingGlass\";\r\nimport ModeOfEmployment from \"./Headers containers/ModeOfEmployment\";\r\nimport Line from \"./Headers containers/Line\";\r\nimport MySelfUser from \"../1HelpFullFolder/MySelfUser\";\r\nimport ContactsSvg from \"./SVG/ContactsSvg\";\r\nimport AddFolderSvg from \"./SVG/AddFolderSvg\";\r\nimport WriteMessageSvg from \"./SVG/WriteMessageSvg\";\r\nimport UserIconSvg from \"./SVG/UserIconSvg\";\r\nimport { connect } from \"react-redux\";\r\nconst { width: screenWidth, height: screenHeight } = Dimensions.get(\"window\");\r\nfunction Header({ mySelfUser,isTouchableHeader,onPress }: { mySelfUser: MySelfUser,isTouchableHeader:boolean,onPress:()=>void}) {\r\n  const timeForLineAnimation: number = 150 * 10;\r\n  const rotateGradusOfLines: number = 45;\r\n  const kefOfTransform: number = 0.6;\r\n  const kefOfTransformHeight: number = 0.8;\r\n  const kefForSizeOfSvg: number = 0.073;\r\n  const topLineValue = useState(new Animated.Value(0))[0];\r\n  const middleLineValue = useState(new Animated.Value(1))[0];\r\n  const bottomLineValue = useState(new Animated.Value(0))[0];\r\n  const scrollX = useState(new Animated.Value(0))[0];\r\n  const [isButtonEnabled, setIsButtonEnabled] = useState(true);\r\n  const [state, setState] = useState(1);\r\n  const [stateForWidth, setStateForWidth] = useState(0);\r\n  const topLineRotation = topLineValue.interpolate({\r\n    inputRange: [0, 1, 2, 3],\r\n    outputRange: [\r\n      \"0deg\",\r\n      `-${rotateGradusOfLines}deg`,\r\n      `-${90 + rotateGradusOfLines}deg`,\r\n      `-${180}deg`,\r\n    ],\r\n  });\r\n  const bottomLineRotation = bottomLineValue.interpolate({\r\n    inputRange: [0, 1, 2, 3],\r\n    outputRange: [\r\n      \"0deg\",\r\n      `${rotateGradusOfLines}deg`,\r\n      `${90 + rotateGradusOfLines}deg`,\r\n      `${180}deg`,\r\n    ],\r\n  });\r\n  const positionXOfTopLine = topLineValue.interpolate({\r\n    inputRange: [0, 1, 2, 3],\r\n    outputRange: [0, (screenWidth+screenHeight) * 0.015, (screenWidth+screenHeight) * 0.015, 0],\r\n  });\r\n  const scrollXPosition = scrollX.interpolate({\r\n    inputRange: [0, 1],\r\n    outputRange: [0, -screenWidth * 0.8],\r\n  });\r\n  useEffect(()=>{\r\n    if(!isTouchableHeader&&state==0){\r\n      hamburgerAnimation(null);\r\n      \r\n    }\r\n  })\r\n  const hamburgerAnimation = (e: GestureResponderEvent) => {\r\n    if(!isTouchableHeader&&state==0){\r\n    }\r\n    else\r\n    {\r\n      onPress()\r\n    }\r\n    setIsButtonEnabled(false);\r\n    setState(state == 0 ? 1 : 0);\r\n    lineTransformation(e);\r\n  };\r\n  const lineTransformation = (e: GestureResponderEvent) => {\r\n    const firstAnimatedTopLine = Animated.timing(topLineValue, {\r\n      toValue: state == 0 ? 2 : 1,\r\n      duration: timeForLineAnimation * 0.7,\r\n      useNativeDriver: true,\r\n    });\r\n    const firstAnimatedBottomLine = Animated.timing(bottomLineValue, {\r\n      toValue: state == 0 ? 2 : 1,\r\n      duration: timeForLineAnimation * 0.7,\r\n      useNativeDriver: true,\r\n    });\r\n    const secondAnimatedTopLine = Animated.timing(topLineValue, {\r\n      toValue: state == 1 ? 2 : 3,\r\n      duration: timeForLineAnimation,\r\n      useNativeDriver: true,\r\n    });\r\n    const secondAnimatedBottomLine = Animated.timing(bottomLineValue, {\r\n      toValue: state == 1 ? 2 : 3,\r\n      duration: timeForLineAnimation,\r\n      useNativeDriver: true,\r\n    });\r\n    const animateForMiddleLine = Animated.timing(middleLineValue, {\r\n      toValue: state == 0 ? 1 : 0,\r\n      duration: state == 1 ? 10 : timeForLineAnimation,\r\n      useNativeDriver: true,\r\n    });\r\n    Animated.timing(scrollX, {\r\n      toValue: state,\r\n      duration: timeForLineAnimation * 1.3,\r\n      useNativeDriver: true,\r\n      easing: Easing.bezier(0, 0, 0, 0),\r\n    }).start();\r\n    state == 1 ? animateForMiddleLine.start() : null;\r\n    firstAnimatedTopLine.start(() => {\r\n      if (state == 0) {\r\n        setStateForWidth(0);\r\n      }\r\n      animateForMiddleLine.start(() => {});\r\n      secondAnimatedTopLine.start(() => {});\r\n    });\r\n    firstAnimatedBottomLine.start(() => {\r\n      secondAnimatedBottomLine.start(() => {\r\n        setIsButtonEnabled(true);\r\n        if (state == 0) {\r\n          Animated.timing(topLineValue, {\r\n            toValue: 0,\r\n            duration: 0,\r\n            useNativeDriver: true,\r\n          }).start();\r\n          Animated.timing(bottomLineValue, {\r\n            toValue: 0,\r\n            duration: 0,\r\n            useNativeDriver: true,\r\n          }).start();\r\n          setIsButtonEnabled(true);\r\n        }\r\n      });\r\n    });\r\n    state == 1 ? setStateForWidth(1) : null;\r\n  };\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        zIndex: 5,\r\n      }}\r\n    >\r\n      <View style={headerstyles.gapContainer} />\r\n      <View style={headerstyles.container}>\r\n        <View style={[headerstyles.header]}>\r\n          <Animated.View\r\n            style={[\r\n              {\r\n                justifyContent: \"space-between\",\r\n                flexDirection: \"row\",\r\n                width: screenWidth * 0.96,\r\n                // backgroundColor:\"blue\",\r\n              },\r\n              { transform: [{ translateX: scrollXPosition }] },\r\n            ]}\r\n          >\r\n            <MagnifyingGlass style={headerstyles.magnifyingglass} />\r\n            <ModeOfEmployment />\r\n            <TouchableOpacity\r\n              onPress={hamburgerAnimation}\r\n              disabled={!isButtonEnabled}\r\n              style={{ flexDirection: \"row\" }}\r\n            >\r\n              <View\r\n                style={[\r\n                  headerstyles.hamburgerview,\r\n                  { paddingRight: screenWidth * 0.01 },\r\n                ]}\r\n              >\r\n                <Animated.View\r\n                  style={{\r\n                    transform: [\r\n                      { rotate: topLineRotation },\r\n                      { translateX: positionXOfTopLine },\r\n                    ],\r\n                  }}\r\n                >\r\n                  <Line\r\n                    screenWidth={\r\n                      stateForWidth == 0\r\n                        ? screenWidth\r\n                        : screenWidth * kefOfTransform\r\n                    }\r\n                    screenHeight={\r\n                      stateForWidth == 0\r\n                        ? screenHeight\r\n                        : screenHeight * kefOfTransformHeight\r\n                    }\r\n                  />\r\n                </Animated.View>\r\n                <Animated.View style={{ opacity: middleLineValue }}>\r\n                  <Line screenWidth={screenWidth} screenHeight={screenHeight} />\r\n                </Animated.View>\r\n                <Animated.View\r\n                  style={{\r\n                    transform: [\r\n                      { rotate: bottomLineRotation },\r\n                      { translateX: positionXOfTopLine },\r\n                    ],\r\n                  }}\r\n                >\r\n                  <Line\r\n                    screenWidth={\r\n                      stateForWidth == 0\r\n                        ? screenWidth\r\n                        : screenWidth * kefOfTransform\r\n                    }\r\n                    screenHeight={\r\n                      stateForWidth == 0\r\n                        ? screenHeight\r\n                        : screenHeight * kefOfTransformHeight\r\n                    }\r\n                  />\r\n                </Animated.View>\r\n              </View>\r\n            </TouchableOpacity>\r\n          </Animated.View>\r\n          <Animated.View\r\n            style={[\r\n              {\r\n                width: screenWidth * 0.765,\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n              },\r\n              { transform: [{ translateX: scrollXPosition }] },\r\n            ]}\r\n          >\r\n            <View\r\n              style={{\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <View style={{ alignSelf: \"center\",marginLeft: screenWidth * 0.025 }}>\r\n                <ContactsSvg\r\n                  width={screenWidth * kefForSizeOfSvg}\r\n                  height={screenHeight * kefForSizeOfSvg}\r\n                />\r\n              </View>\r\n              <View\r\n                style={{ alignSelf: \"center\", marginLeft: screenWidth * 0.05 }}\r\n              >\r\n                <AddFolderSvg\r\n                  width={screenWidth * kefForSizeOfSvg}\r\n                  height={screenHeight * kefForSizeOfSvg}\r\n                />\r\n              </View>\r\n              <View\r\n                style={{ alignSelf: \"center\", marginLeft: screenWidth * 0.05 }}\r\n              >\r\n                <WriteMessageSvg\r\n                  width={screenWidth * kefForSizeOfSvg}\r\n                  height={screenHeight * kefForSizeOfSvg}\r\n                />\r\n              </View>\r\n            </View>\r\n            <View\r\n              style={{\r\n                alignSelf: \"center\",\r\n              }}\r\n            >\r\n              <UserIconSvg\r\n                width={screenWidth * kefForSizeOfSvg}\r\n                height={screenHeight * kefForSizeOfSvg}\r\n              />\r\n            </View>\r\n          </Animated.View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\nexport default connect(null)(Header)"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}