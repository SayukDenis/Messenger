{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { combineReducers } from \"redux\";\nvar counterOfSelectedMessagesInitialState = {\n  counterOfSelectedMessages: 0\n};\nvar counterOfSelectedMessagesReducer = function counterOfSelectedMessagesReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : counterOfSelectedMessagesInitialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'INCREMENT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        counterOfSelectedMessages: state.counterOfSelectedMessages + 1\n      });\n    case 'DECREMENT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        counterOfSelectedMessages: state.counterOfSelectedMessages - 1\n      });\n    case 'RESET':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        counterOfSelectedMessages: 0\n      });\n    default:\n      return state;\n  }\n};\nvar scrollToPinnedMessageInitialState = {\n  scroll: false,\n  id: -1\n};\nvar scrollToPinnedMessageReducer = function scrollToPinnedMessageReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : scrollToPinnedMessageInitialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'SCROLL_TO_PINNED_MESSAGE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        scroll: action.scroll,\n        id: action.id\n      });\n    default:\n      return state;\n  }\n};\nvar animationOfBackgroundForScrolledMessagesInitialState = {\n  id: -1\n};\nvar activateAnimationOfBackgroundForScrolledMessageReducer = function activateAnimationOfBackgroundForScrolledMessageReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : animationOfBackgroundForScrolledMessagesInitialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'SET_ANIMATION_OF_BACKGROUND_FOR_SCROOLED_MESSAGE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        id: action.id\n      });\n    default:\n      return state;\n  }\n};\nvar selectedMessageHandlerInitialState = {\n  listOfId: []\n};\nvar selectedMessageHandlerReducer = function selectedMessageHandlerReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : selectedMessageHandlerInitialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'ADD_SELECTED_MESSAGE':\n      var newListOfId1 = [].concat(_toConsumableArray(state.listOfId), [action.id]);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        listOfId: _toConsumableArray(newListOfId1)\n      });\n    case 'REMOVE_SELECTED_MESSAGE':\n      var newListOfId2 = state.listOfId.filter(function (id) {\n        return id !== action.id;\n      });\n      return _objectSpread(_objectSpread({}, state), {}, {\n        listOfId: _toConsumableArray(newListOfId2)\n      });\n    case 'RESET_SELECTED_MESSAGE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        listOfId: []\n      });\n    default:\n      return state;\n  }\n};\nvar setCoordinationsOfMessage = {\n  messagesWithCoords: []\n};\nvar setCoordinationsOfMessageReducer = function setCoordinationsOfMessageReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : setCoordinationsOfMessage;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'ADD_COORDINATIONS_OF_MESSAGE':\n      var addToMessagesWithCoords = state.messagesWithCoords;\n      if (addToMessagesWithCoords.length > 0 && action.id < addToMessagesWithCoords[addToMessagesWithCoords.length - 1].id) {\n        addToMessagesWithCoords.unshift({\n          id: action.id,\n          coords: 0,\n          height: action.height\n        });\n      } else {\n        addToMessagesWithCoords.push({\n          id: action.id,\n          coords: 0,\n          height: action.height\n        });\n      }\n      for (var i = addToMessagesWithCoords.length - 2; i >= 0; i--) {\n        addToMessagesWithCoords[i].coords = addToMessagesWithCoords[i + 1].height + addToMessagesWithCoords[i + 1].coords;\n      }\n      return _objectSpread(_objectSpread({}, state), {}, {\n        messagesWithCoords: _toConsumableArray(addToMessagesWithCoords)\n      });\n    case 'UPDATE_COORDINATIONS_OF_MESSAGE':\n      var updatedMessagesWithCoords = state.messagesWithCoords;\n      updatedMessagesWithCoords[action.id].height = action.height;\n      for (var _i = action.id - 1; _i >= 0; _i--) {\n        updatedMessagesWithCoords[_i].coords = updatedMessagesWithCoords[_i + 1].height + updatedMessagesWithCoords[_i + 1].coords;\n      }\n      return _objectSpread(_objectSpread({}, state), {}, {\n        messagesWithCoords: _toConsumableArray(updatedMessagesWithCoords)\n      });\n    case 'REMOVE_COORDINATIONS_OF_MESSAGE':\n      var removeFromMessagesWithCoords = state.messagesWithCoords;\n      var n1 = removeFromMessagesWithCoords.length;\n      if (removeFromMessagesWithCoords[n1 - 1].id === action.id) {\n        removeFromMessagesWithCoords[n1 - 1].height = 0;\n      }\n      for (var _i2 = n1 - 2; _i2 >= 0; _i2--) {\n        if (removeFromMessagesWithCoords[_i2].id === action.id) {\n          removeFromMessagesWithCoords[_i2].height = 0;\n        }\n        removeFromMessagesWithCoords[_i2].coords = removeFromMessagesWithCoords[_i2 + 1].height + removeFromMessagesWithCoords[_i2 + 1].coords;\n      }\n      return _objectSpread(_objectSpread({}, state), {}, {\n        messagesWithCoords: _toConsumableArray(removeFromMessagesWithCoords)\n      });\n    case 'REMOVE_COORDINATIONS_OF_SELECTED_MESSAGES':\n      var newMessagesWithCoords = state.messagesWithCoords;\n      var idx = 0;\n      var n2 = newMessagesWithCoords.length;\n      if (newMessagesWithCoords[n2 - 1].id === action.listOfId[idx]) {\n        newMessagesWithCoords[n2 - 1].height = 0;\n        idx++;\n      }\n      for (var _i3 = newMessagesWithCoords.length - 2; _i3 >= 0; _i3--) {\n        if (newMessagesWithCoords[_i3].id === action.listOfId[idx]) {\n          newMessagesWithCoords[_i3].height = 0;\n          idx++;\n        }\n        newMessagesWithCoords[_i3].coords = newMessagesWithCoords[_i3 + 1].height + newMessagesWithCoords[_i3 + 1].coords;\n      }\n      return _objectSpread(_objectSpread({}, state), {}, {\n        messagesWithCoords: _toConsumableArray(newMessagesWithCoords)\n      });\n    case 'REMOVE_COORDINATIONS_OF_ALL_MESSAGES':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        messagesWithCoords: []\n      });\n    default:\n      return state;\n  }\n};\nvar handleKeyboardAppearing = {\n  show: false\n};\nvar handleKeyboardAppearingReducer = function handleKeyboardAppearingReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : handleKeyboardAppearing;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'HANDLE_KEYBOARD_APPEARING':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        show: !state.show\n      });\n    default:\n      return state;\n  }\n};\nvar ChatReducer = combineReducers({\n  counterForSelectedMessages: counterOfSelectedMessagesReducer,\n  scrollToPinnedMessage: scrollToPinnedMessageReducer,\n  activateAnimationOfBackgroundForScrolledMessage: activateAnimationOfBackgroundForScrolledMessageReducer,\n  selectedMessageHandler: selectedMessageHandlerReducer,\n  setCoordinationsOfMessage: setCoordinationsOfMessageReducer,\n  handleKeyboardAppearing: handleKeyboardAppearingReducer\n});\nexport default ChatReducer;","map":{"version":3,"names":["combineReducers","counterOfSelectedMessagesInitialState","counterOfSelectedMessages","counterOfSelectedMessagesReducer","state","arguments","length","undefined","action","type","_objectSpread","scrollToPinnedMessageInitialState","scroll","id","scrollToPinnedMessageReducer","animationOfBackgroundForScrolledMessagesInitialState","activateAnimationOfBackgroundForScrolledMessageReducer","selectedMessageHandlerInitialState","listOfId","selectedMessageHandlerReducer","newListOfId1","concat","_toConsumableArray","newListOfId2","filter","setCoordinationsOfMessage","messagesWithCoords","setCoordinationsOfMessageReducer","addToMessagesWithCoords","unshift","coords","height","push","i","updatedMessagesWithCoords","removeFromMessagesWithCoords","n1","newMessagesWithCoords","idx","n2","handleKeyboardAppearing","show","handleKeyboardAppearingReducer","ChatReducer","counterForSelectedMessages","scrollToPinnedMessage","activateAnimationOfBackgroundForScrolledMessage","selectedMessageHandler"],"sources":["C:/Users/T480/source/repos/Messenger/Messenger/ReducersAndActions/Reducers/ChatReducers/ChatsReducers.tsx"],"sourcesContent":["import { combineReducers } from \"redux\";\r\n\r\nconst counterOfSelectedMessagesInitialState = {\r\n  counterOfSelectedMessages: 0,\r\n};\r\n\r\nconst counterOfSelectedMessagesReducer = (state = counterOfSelectedMessagesInitialState, action:any) => {\r\n  switch (action.type) {\r\n    case 'INCREMENT':\r\n      return { ...state, counterOfSelectedMessages: state.counterOfSelectedMessages + 1 };\r\n    case 'DECREMENT':\r\n      return { ...state, counterOfSelectedMessages: state.counterOfSelectedMessages - 1 };\r\n    case 'RESET':\r\n      return { ...state, counterOfSelectedMessages: 0 }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst scrollToPinnedMessageInitialState = {\r\n  scroll: false,\r\n  id: -1\r\n}\r\nconst scrollToPinnedMessageReducer = (state = scrollToPinnedMessageInitialState, action:any) => {\r\n  switch(action.type) {\r\n    case 'SCROLL_TO_PINNED_MESSAGE':\r\n      return { ...state, scroll: action.scroll, id: action.id };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst animationOfBackgroundForScrolledMessagesInitialState = {\r\n  id: -1,\r\n}\r\nconst activateAnimationOfBackgroundForScrolledMessageReducer = (state = animationOfBackgroundForScrolledMessagesInitialState, action:any) => {\r\n  switch(action.type) {\r\n    case 'SET_ANIMATION_OF_BACKGROUND_FOR_SCROOLED_MESSAGE':\r\n      return { ...state, id: action.id }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst selectedMessageHandlerInitialState = {\r\n  listOfId: []\r\n}\r\nconst selectedMessageHandlerReducer = (state = selectedMessageHandlerInitialState, action:any) => {\r\n  switch(action.type) {\r\n    case 'ADD_SELECTED_MESSAGE':\r\n      const newListOfId1 = [...state.listOfId, action.id];\r\n      return { ...state, listOfId: [...newListOfId1] };\r\n    case 'REMOVE_SELECTED_MESSAGE':\r\n      const newListOfId2 = state.listOfId.filter(id => id !== action.id);\r\n      return { ...state, listOfId: [...newListOfId2] };\r\n    case 'RESET_SELECTED_MESSAGE':\r\n      return { ...state, listOfId: [] };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport interface CoordinationsOfMessage {\r\n  id: number;\r\n  coords: number;\r\n  height: number;\r\n}\r\nconst setCoordinationsOfMessage = {\r\n  messagesWithCoords: [] as CoordinationsOfMessage[]\r\n}\r\nconst setCoordinationsOfMessageReducer = (state = setCoordinationsOfMessage, action:any) => {\r\n  switch(action.type) {\r\n    case 'ADD_COORDINATIONS_OF_MESSAGE':\r\n      const addToMessagesWithCoords = state.messagesWithCoords;\r\n\r\n      if(addToMessagesWithCoords.length > 0 && action.id < addToMessagesWithCoords[addToMessagesWithCoords.length - 1].id) {\r\n        addToMessagesWithCoords.unshift({\r\n          id: action.id, \r\n          coords: 0,\r\n          height: action.height\r\n        });\r\n      } else {\r\n        addToMessagesWithCoords.push({\r\n          id: action.id, \r\n          coords: 0,\r\n          height: action.height\r\n        });\r\n      }\r\n\r\n      for(let i = addToMessagesWithCoords.length - 2; i >= 0; i--) {\r\n        addToMessagesWithCoords[i].coords = addToMessagesWithCoords[i + 1].height + addToMessagesWithCoords[i + 1].coords;\r\n      }\r\n\r\n      return { ...state, messagesWithCoords: [...addToMessagesWithCoords] };\r\n    case 'UPDATE_COORDINATIONS_OF_MESSAGE':\r\n      const updatedMessagesWithCoords = state.messagesWithCoords;\r\n\r\n      updatedMessagesWithCoords[action.id].height = action.height;\r\n\r\n      for(let i = action.id - 1; i >= 0; i--) {\r\n        updatedMessagesWithCoords[i].coords = updatedMessagesWithCoords[i + 1].height + updatedMessagesWithCoords[i + 1].coords;\r\n      }\r\n\r\n      return { ...state, messagesWithCoords: [...updatedMessagesWithCoords] };\r\n    case 'REMOVE_COORDINATIONS_OF_MESSAGE':\r\n      const removeFromMessagesWithCoords = state.messagesWithCoords;\r\n      const n1 = removeFromMessagesWithCoords.length;\r\n\r\n      if(removeFromMessagesWithCoords[n1 - 1].id === action.id) {\r\n        removeFromMessagesWithCoords[n1 - 1].height = 0;\r\n      }\r\n\r\n      for(let i = n1 - 2; i >= 0; i--) {\r\n        if(removeFromMessagesWithCoords[i].id === action.id) {\r\n          removeFromMessagesWithCoords[i].height = 0;\r\n        }\r\n        removeFromMessagesWithCoords[i].coords = removeFromMessagesWithCoords[i + 1].height + removeFromMessagesWithCoords[i + 1].coords;\r\n      }\r\n\r\n      return { ...state, messagesWithCoords: [...removeFromMessagesWithCoords] };\r\n    case 'REMOVE_COORDINATIONS_OF_SELECTED_MESSAGES':\r\n      const newMessagesWithCoords = state.messagesWithCoords;\r\n      let idx = 0;\r\n      const n2 = newMessagesWithCoords.length;\r\n\r\n      if(newMessagesWithCoords[n2 - 1].id === action.listOfId[idx]) {\r\n        newMessagesWithCoords[n2 - 1].height = 0;\r\n        idx++;\r\n      }\r\n\r\n      for(let i = newMessagesWithCoords.length - 2; i >= 0; i--) {\r\n        if(newMessagesWithCoords[i].id === action.listOfId[idx]) {\r\n          newMessagesWithCoords[i].height = 0;\r\n          idx++;\r\n        }\r\n        newMessagesWithCoords[i].coords = newMessagesWithCoords[i + 1].height + newMessagesWithCoords[i + 1].coords;\r\n      }\r\n\r\n      return { ...state, messagesWithCoords: [...newMessagesWithCoords] };\r\n    case 'REMOVE_COORDINATIONS_OF_ALL_MESSAGES':\r\n      return { ...state, messagesWithCoords: [] };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst handleKeyboardAppearing = {\r\n  show: false\r\n}\r\nconst handleKeyboardAppearingReducer = (state = handleKeyboardAppearing, action:any) => {\r\n  switch(action.type) {\r\n    case 'HANDLE_KEYBOARD_APPEARING':\r\n      return { ...state, show: !state.show }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst ChatReducer = combineReducers({\r\n  counterForSelectedMessages: counterOfSelectedMessagesReducer,\r\n  scrollToPinnedMessage: scrollToPinnedMessageReducer,\r\n  activateAnimationOfBackgroundForScrolledMessage: activateAnimationOfBackgroundForScrolledMessageReducer,\r\n  selectedMessageHandler: selectedMessageHandlerReducer,\r\n  setCoordinationsOfMessage: setCoordinationsOfMessageReducer,\r\n  handleKeyboardAppearing: handleKeyboardAppearingReducer,\r\n});\r\n\r\nexport default ChatReducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}