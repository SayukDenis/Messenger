{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { user } from \"../DBUser.tsx\";\nimport styles from \"./Styles.tsx\";\nimport CrossIcon from \"./Icons/CrossIcon.tsx\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar screenHeight = Dimensions.get(\"screen\").height;\nvar screenWidth = Dimensions.get(\"screen\").width;\nvar Albums = function Albums(props) {\n  return _jsxs(View, {\n    style: styles.mediaContainer,\n    children: [_jsx(FlatList, {\n      data: user.albums,\n      keyExtractor: function keyExtractor(item) {\n        return user.albums.indexOf(item).toString();\n      },\n      horizontal: false,\n      numColumns: 2,\n      contentContainerStyle: styles.allAlbumsContainer,\n      scrollEnabled: false,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            alert(\"Pressed\");\n          },\n          style: [styles.albumContainer],\n          children: [_jsx(Image, {\n            style: styles.albumMainPhoto,\n            source: {\n              uri: item.mainPhoto.url\n            }\n          }), _jsxs(View, {\n            style: styles.albumInfoContainer,\n            children: [_jsx(Text, {\n              numberOfLines: 1,\n              style: styles.albumNameText,\n              children: item.name\n            }), _jsx(Text, {\n              numberOfLines: 1,\n              style: styles.albumPhotosAndVideosQuantityText,\n              children: item.photosAndVideos.length\n            })]\n          })]\n        });\n      }\n    }), _jsxs(TouchableOpacity, {\n      onPress: function onPress() {\n        alert(\"Pressed\");\n      },\n      style: [styles.albumContainer, {\n        position: \"absolute\",\n        top: user.albums.length % 2 == 0 ? 0.02 * screenHeight + Math.ceil(user.albums.length / 2) * 0.205 * screenHeight : 0.02 * screenHeight + (Math.ceil(user.albums.length / 2) - 1) * 0.205 * screenHeight,\n        left: user.albums.length % 2 == 0 ? 0.075 * screenWidth : 0.575 * screenWidth\n      }],\n      children: [_jsx(View, {\n        style: [styles.albumMainPhoto, {\n          backgroundColor: \"rgb(32, 32, 32)\"\n        }],\n        children: _jsx(CrossIcon, {\n          style: styles.plusAlbumIcon\n        })\n      }), _jsx(View, {\n        style: styles.albumInfoContainer,\n        children: _jsx(Text, {\n          numberOfLines: 1,\n          style: styles.albumNameText,\n          children: \"New albums\"\n        })\n      })]\n    })]\n  });\n};\nexport default Albums;","map":{"version":3,"names":["React","View","FlatList","TouchableOpacity","Image","Dimensions","Text","user","styles","CrossIcon","jsx","_jsx","jsxs","_jsxs","screenHeight","get","height","screenWidth","width","Albums","props","style","mediaContainer","children","data","albums","keyExtractor","item","indexOf","toString","horizontal","numColumns","contentContainerStyle","allAlbumsContainer","scrollEnabled","renderItem","_ref","onPress","alert","albumContainer","albumMainPhoto","source","uri","mainPhoto","url","albumInfoContainer","numberOfLines","albumNameText","name","albumPhotosAndVideosQuantityText","photosAndVideos","length","position","top","Math","ceil","left","backgroundColor","plusAlbumIcon"],"sources":["/home/zatibmag/Desktop/Project/Messenger/Messenger/Pages/Profiles/SemiComponents/MainScreen/Albums.tsx"],"sourcesContent":["// Oleksii Kovalenko telegram - @traewe\r\n\r\nimport React from \"react\";\r\nimport {\r\n  View,\r\n  FlatList,\r\n  TouchableOpacity,\r\n  Image,\r\n  Dimensions,\r\n  Text,\r\n} from \"react-native\";\r\nimport { user } from \"../DBUser.tsx\";\r\nimport styles from \"./Styles.tsx\";\r\nimport CrossIcon from \"./Icons/CrossIcon.tsx\";\r\n\r\ninterface AlbumsProps {}\r\n\r\nconst screenHeight: number = Dimensions.get(\"screen\").height;\r\nconst screenWidth: number = Dimensions.get(\"screen\").width;\r\n\r\nconst Albums: React.FC<AlbumsProps> = (props) => {\r\n  return (\r\n    <View style={styles.mediaContainer}>\r\n      <FlatList\r\n        data={user.albums}\r\n        keyExtractor={(item) => user.albums.indexOf(item).toString()}\r\n        horizontal={false}\r\n        numColumns={2}\r\n        contentContainerStyle={styles.allAlbumsContainer}\r\n        scrollEnabled={false}\r\n        renderItem={({ item }) => {\r\n          return (\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                alert(\"Pressed\");\r\n              }}\r\n              style={[styles.albumContainer]}\r\n            >\r\n              <Image\r\n                style={styles.albumMainPhoto}\r\n                source={{ uri: item.mainPhoto.url }}\r\n              />\r\n              <View style={styles.albumInfoContainer}>\r\n                <Text numberOfLines={1} style={styles.albumNameText}>\r\n                  {item.name}\r\n                </Text>\r\n                <Text\r\n                  numberOfLines={1}\r\n                  style={styles.albumPhotosAndVideosQuantityText}\r\n                >\r\n                  {item.photosAndVideos.length}\r\n                </Text>\r\n              </View>\r\n            </TouchableOpacity>\r\n          );\r\n        }}\r\n      />\r\n      <TouchableOpacity\r\n        onPress={() => {\r\n          alert(\"Pressed\");\r\n        }}\r\n        style={[\r\n          styles.albumContainer,\r\n          {\r\n            position: \"absolute\",\r\n            top:\r\n              user.albums.length % 2 == 0\r\n                ? 0.02 * screenHeight +\r\n                  Math.ceil(user.albums.length / 2) * 0.205 * screenHeight\r\n                : 0.02 * screenHeight +\r\n                  (Math.ceil(user.albums.length / 2) - 1) *\r\n                    0.205 *\r\n                    screenHeight,\r\n            left:\r\n              user.albums.length % 2 == 0\r\n                ? 0.075 * screenWidth\r\n                : 0.575 * screenWidth,\r\n          },\r\n        ]}\r\n      >\r\n        <View\r\n          style={[\r\n            styles.albumMainPhoto,\r\n            { backgroundColor: \"rgb(32, 32, 32)\" },\r\n          ]}\r\n        >\r\n          <CrossIcon style={styles.plusAlbumIcon} />\r\n        </View>\r\n        <View style={styles.albumInfoContainer}>\r\n          <Text numberOfLines={1} style={styles.albumNameText}>\r\n            New albums\r\n          </Text>\r\n        </View>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Albums;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}