{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport { footerstyles } from \"../Styles/FooterStyle\";\nimport ListOfFolder from \"./ListOfFolder\";\nimport Folder from \"./Footer containers/Folder\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  screenWidth = _Dimensions$get.width,\n  screenHeight = _Dimensions$get.height;\nvar Footer = function Footer(_ref) {\n  var user = _ref.user;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedFolder = _useState2[0],\n    setSelectedFolder = _useState2[1];\n  var scrollX = useRef(new Animated.Value(0)).current;\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentPosition = _useState4[0],\n    setCurrentPosition = _useState4[1];\n  var handleFolderPress = function handleFolderPress(index) {\n    if (selectedFolder === index) {\n      return;\n    }\n    setSelectedFolder(index);\n    scrollToFolder(index);\n  };\n  var updateSelectedFolder = function updateSelectedFolder() {\n    var newSelectedFolder = Math.floor(currentPosition / screenWidth);\n    setSelectedFolder(newSelectedFolder);\n  };\n  var handleHorizontalScroll = function handleHorizontalScroll(event) {\n    var newHorizontalPosition = event.nativeEvent.contentOffset.x;\n    setCurrentPosition(newHorizontalPosition);\n  };\n  var handleMomentumScrollEnd = function handleMomentumScrollEnd() {\n    updateSelectedFolder();\n  };\n  var scrollToFolder = function scrollToFolder(folderId) {\n    var _scrollViewRef$curren;\n    (_scrollViewRef$curren = scrollViewRef.current) == null ? void 0 : _scrollViewRef$curren.scrollTo({\n      x: folderId * screenWidth\n    });\n    var offsetX = folderId * screenWidth;\n    var animation = Animated.timing(scrollX, {\n      toValue: offsetX,\n      duration: 10,\n      easing: Easing.inOut(Easing.ease),\n      useNativeDriver: false\n    });\n    animation.start();\n  };\n  useEffect(function () {\n    scrollX.addListener(function (_ref2) {\n      var value = _ref2.value;\n      setCurrentPosition(value);\n    });\n    return function () {\n      scrollX.removeAllListeners();\n    };\n  }, []);\n  var scrollViewRef = useRef(null);\n  return _jsxs(_Fragment, {\n    children: [_jsx(ScrollView, {\n      horizontal: true,\n      scrollEventThrottle: 100,\n      showsHorizontalScrollIndicator: false,\n      ref: scrollViewRef,\n      pagingEnabled: true,\n      onScroll: handleHorizontalScroll,\n      onMomentumScrollEnd: handleMomentumScrollEnd,\n      nestedScrollEnabled: true,\n      children: user.folders.map(function (folder, index) {\n        return _jsx(ListOfFolder, {\n          user: user,\n          selectedFolder: index\n        }, index);\n      })\n    }), _jsx(View, {\n      style: footerstyles.container,\n      children: _jsx(ScrollView, {\n        showsHorizontalScrollIndicator: false,\n        horizontal: true,\n        style: footerstyles.scrollView,\n        scrollEventThrottle: 100,\n        children: user.folders.map(function (folder, index) {\n          return _jsx(Folder, {\n            text: folder.name,\n            containerStyle: footerstyles.folderContainer,\n            textStyle: footerstyles.folder,\n            isSelected: selectedFolder === index,\n            onPress: function onPress() {\n              return handleFolderPress(index);\n            }\n          }, index);\n        })\n      })\n    })]\n  });\n};\nexport default Footer;","map":{"version":3,"names":["React","useRef","useState","useEffect","View","ScrollView","Dimensions","Animated","Easing","footerstyles","ListOfFolder","Folder","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","_Dimensions$get","get","screenWidth","width","screenHeight","height","Footer","_ref","user","_useState","_useState2","_slicedToArray","selectedFolder","setSelectedFolder","scrollX","Value","current","_useState3","_useState4","currentPosition","setCurrentPosition","handleFolderPress","index","scrollToFolder","updateSelectedFolder","newSelectedFolder","Math","floor","handleHorizontalScroll","event","newHorizontalPosition","nativeEvent","contentOffset","x","handleMomentumScrollEnd","folderId","_scrollViewRef$curren","scrollViewRef","scrollTo","offsetX","animation","timing","toValue","duration","easing","inOut","ease","useNativeDriver","start","addListener","_ref2","value","removeAllListeners","children","horizontal","scrollEventThrottle","showsHorizontalScrollIndicator","ref","pagingEnabled","onScroll","onMomentumScrollEnd","nestedScrollEnabled","folders","map","folder","style","container","scrollView","text","name","containerStyle","folderContainer","textStyle","isSelected","onPress"],"sources":["C:/Users/Admin/Project/Project/Messenger/Messenger/Pages/ChatList/Components/Footer.tsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport { View, ScrollView, StyleSheet, Text, Dimensions, Animated, TouchableOpacity, Easing } from 'react-native';\r\nimport MySelfUser from '../1HelpFullFolder/MySelfUser';\r\nimport { footerstyles } from '../Styles/FooterStyle';\r\nimport ListOfFolder from './ListOfFolder';\r\nimport Folder from './Footer containers/Folder';\r\n\r\ninterface FooterProps {\r\n  user: MySelfUser;\r\n}\r\n\r\nconst { width: screenWidth, height: screenHeight } = Dimensions.get('window');\r\n\r\nconst Footer: React.FC<FooterProps> = ({ user }) => {\r\n  const [selectedFolder, setSelectedFolder] = useState<number>(0);\r\n  const scrollX = useRef(new Animated.Value(0)).current;\r\n  const [currentPosition, setCurrentPosition] = useState(0);\r\n\r\n  const handleFolderPress = (index: number) => {\r\n    if (selectedFolder === index) {\r\n      return;\r\n    }\r\n    setSelectedFolder(index);\r\n    scrollToFolder(index);\r\n  };\r\n\r\n  const updateSelectedFolder = () => {\r\n    const newSelectedFolder = Math.floor(currentPosition / screenWidth);\r\n    setSelectedFolder(newSelectedFolder);\r\n  };\r\n\r\n  const handleHorizontalScroll = (event: any) => {\r\n    const newHorizontalPosition = event.nativeEvent.contentOffset.x;\r\n    setCurrentPosition(newHorizontalPosition);\r\n  };\r\n\r\n  const handleMomentumScrollEnd = () => {\r\n    updateSelectedFolder();\r\n  };\r\n  \r\n  const scrollToFolder = (folderId: number) => {\r\n   scrollViewRef.current?.scrollTo({ x: folderId * screenWidth,});\r\n  \r\n   const offsetX = folderId * screenWidth;\r\n\r\n   // Створення анімаційного блоку\r\n   const animation = Animated.timing(scrollX, {\r\n     toValue: offsetX,\r\n     duration: 10, // Тривалість анімації (в мілісекундах)\r\n     easing: Easing.inOut(Easing.ease), // Тип ефекту (можете вибрати інший)\r\n     useNativeDriver: false, // useNativeDriver: true працює тільки з translateX, translateY\r\n   });\r\n \r\n   animation.start(); // Запуск анімації\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollX.addListener(({ value }) => {\r\n      setCurrentPosition(value);\r\n    });\r\n\r\n    return () => {\r\n      scrollX.removeAllListeners();\r\n    };\r\n  }, []);\r\n\r\n  const scrollViewRef = useRef<ScrollView | null>(null);\r\n\r\n  return (<>\r\n    <ScrollView\r\n      horizontal\r\n      scrollEventThrottle={100}\r\n      showsHorizontalScrollIndicator={false}\r\n      ref={scrollViewRef}\r\n      pagingEnabled\r\n      onScroll={handleHorizontalScroll}\r\n      onMomentumScrollEnd={handleMomentumScrollEnd}\r\n      nestedScrollEnabled={true}\r\n    >\r\n      {user.folders.map((folder, index) => (\r\n        <ListOfFolder key={index} user={user} selectedFolder={index} />\r\n      ))}\r\n    </ScrollView>\r\n    <View style={footerstyles.container}>\r\n      <ScrollView\r\n        showsHorizontalScrollIndicator={false}\r\n        horizontal\r\n        style={footerstyles.scrollView}\r\n        scrollEventThrottle={100}\r\n      >\r\n        {user.folders.map((folder, index) => (\r\n          <Folder\r\n            key={index}\r\n            text={folder.name}\r\n            containerStyle={footerstyles.folderContainer}\r\n            textStyle={footerstyles.folder}\r\n            isSelected={selectedFolder === index}\r\n            onPress={() => handleFolderPress(index)}\r\n          />\r\n        ))}\r\n      </ScrollView>\r\n    </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}