{"ast":null,"code":"import React, { useEffect, useRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { footerstyles } from \"../../Styles/FooterStyle\";\nimport { connect, useSelector } from \"react-redux\";\nimport { booleanForLogging } from \"../../ChatList\";\nimport CountOfUnreadMessageOnFolderComponent from \"./CountOfUnreadMessageOnFolderComponent\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar FolderContainer = React.memo(function (_ref) {\n  var folder = _ref.folder,\n    isSelected = _ref.isSelected,\n    onPress = _ref.onPress,\n    handleLongPress = _ref.handleLongPress,\n    index = _ref.index;\n  useEffect(function () {\n    if (booleanForLogging) {\n      console.log(\"RERENDER FOLDER CONTAINER IN FOOTER \" + folder.folderName);\n    }\n  });\n  var OnPressRef = useRef(function (event) {\n    onPress.current(event, index);\n  });\n  var isSelectedThere = useSelector(function (state) {\n    return state.chatListReducer.folderSelectedArray.folderSelectedArray[index];\n  });\n  var OnLongPressRef = useRef(function (event) {\n    handleLongPress.current(event, index);\n  });\n  return _jsxs(TouchableOpacity, {\n    activeOpacity: 1,\n    onPress: OnPressRef.current,\n    onLongPress: OnLongPressRef.current,\n    style: {\n      flexDirection: \"row\"\n    },\n    children: [_jsx(View, {\n      style: [],\n      children: _jsx(Text, {\n        style: [footerstyles.textPosition, isSelected && isSelectedThere ? footerstyles.selectedText : null],\n        children: folder.folderName\n      })\n    }), _jsx(View, {\n      style: {\n        flexDirection: \"row\",\n        marginRight: 5\n      },\n      children: _jsx(CountOfUnreadMessageOnFolderComponent, {\n        folder: folder,\n        isSelected: isSelected && isSelectedThere\n      })\n    })]\n  });\n});\nexport default connect(null)(FolderContainer);","map":{"version":3,"names":["React","useEffect","useRef","View","Text","TouchableOpacity","footerstyles","connect","useSelector","booleanForLogging","CountOfUnreadMessageOnFolderComponent","jsx","_jsx","jsxs","_jsxs","FolderContainer","memo","_ref","folder","isSelected","onPress","handleLongPress","index","console","log","folderName","OnPressRef","event","current","isSelectedThere","state","chatListReducer","folderSelectedArray","OnLongPressRef","activeOpacity","onLongPress","style","flexDirection","children","textPosition","selectedText","marginRight"],"sources":["D:/project/1project/Messenger/Messenger/Pages/ChatList/Components/Footer containers/FolderContainer.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleProp,\r\n  ViewStyle,\r\n  TextStyle,\r\n  TouchableOpacity,\r\n  GestureResponderEvent,\r\n} from \"react-native\";\r\nimport { footerstyles } from \"../../Styles/FooterStyle\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport Folder from \"../../../../dao/Models/Folder\";\r\nimport { booleanForLogging } from \"../../ChatList\";\r\nimport CountOfUnreadMessageOnFolderComponent from \"./CountOfUnreadMessageOnFolderComponent\";\r\n\r\ninterface FolderProps {\r\n  folder: Folder;\r\n  isSelected: boolean;\r\n  onPress: any;\r\n  handleLongPress: any;\r\n  index: number;\r\n}\r\n\r\nconst FolderContainer: React.FC<FolderProps> = React.memo(\r\n  ({ folder, isSelected, onPress, handleLongPress, index }) => {\r\n    useEffect(() => {\r\n      if (booleanForLogging) {\r\n        console.log(\"RERENDER FOLDER CONTAINER IN FOOTER \" + folder.folderName);\r\n      }\r\n    });\r\n    const OnPressRef = useRef((event: any) => {\r\n      onPress.current(event, index);\r\n    });\r\n    const isSelectedThere = useSelector((state: any) => {\r\n      return state.chatListReducer.folderSelectedArray.folderSelectedArray[\r\n        index\r\n      ];\r\n    });\r\n    const OnLongPressRef = useRef((event: any) => {\r\n      handleLongPress.current(event, index);\r\n    });\r\n\r\n    return (\r\n      <TouchableOpacity\r\n        activeOpacity={1}\r\n        onPress={OnPressRef.current}\r\n        onLongPress={OnLongPressRef.current}\r\n        style={{ flexDirection: \"row\" }}\r\n      >\r\n        <View style={[]}>\r\n          <Text\r\n            style={[\r\n              footerstyles.textPosition,\r\n              isSelected && isSelectedThere ? footerstyles.selectedText : null,\r\n            ]}\r\n          >\r\n            {folder.folderName}\r\n          </Text>\r\n        </View>\r\n        <View style={{flexDirection:\"row\",marginRight:5}}>\r\n          <CountOfUnreadMessageOnFolderComponent\r\n            folder={folder}\r\n            isSelected={isSelected && isSelectedThere}\r\n          />\r\n        </View>\r\n      </TouchableOpacity>\r\n    );\r\n  }\r\n);\r\n\r\nexport default connect(null)(FolderContainer);\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAkB,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAU3D,SAASC,YAAY;AACrB,SAASC,OAAO,EAAEC,WAAW,QAAQ,aAAa;AAElD,SAASC,iBAAiB;AAC1B,OAAOC,qCAAqC;AAAgD,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAU5F,IAAMC,eAAsC,GAAGf,KAAK,CAACgB,IAAI,CACvD,UAAAC,IAAA,EAA6D;EAAA,IAA1DC,MAAM,GAAAD,IAAA,CAANC,MAAM;IAAEC,UAAU,GAAAF,IAAA,CAAVE,UAAU;IAAEC,OAAO,GAAAH,IAAA,CAAPG,OAAO;IAAEC,eAAe,GAAAJ,IAAA,CAAfI,eAAe;IAAEC,KAAK,GAAAL,IAAA,CAALK,KAAK;EACpDrB,SAAS,CAAC,YAAM;IACd,IAAIQ,iBAAiB,EAAE;MACrBc,OAAO,CAACC,GAAG,CAAC,sCAAsC,GAAGN,MAAM,CAACO,UAAU,CAAC;IACzE;EACF,CAAC,CAAC;EACF,IAAMC,UAAU,GAAGxB,MAAM,CAAC,UAACyB,KAAU,EAAK;IACxCP,OAAO,CAACQ,OAAO,CAACD,KAAK,EAAEL,KAAK,CAAC;EAC/B,CAAC,CAAC;EACF,IAAMO,eAAe,GAAGrB,WAAW,CAAC,UAACsB,KAAU,EAAK;IAClD,OAAOA,KAAK,CAACC,eAAe,CAACC,mBAAmB,CAACA,mBAAmB,CAClEV,KAAK,CACN;EACH,CAAC,CAAC;EACF,IAAMW,cAAc,GAAG/B,MAAM,CAAC,UAACyB,KAAU,EAAK;IAC5CN,eAAe,CAACO,OAAO,CAACD,KAAK,EAAEL,KAAK,CAAC;EACvC,CAAC,CAAC;EAEF,OACER,KAAA,CAACT,gBAAgB;IACf6B,aAAa,EAAE,CAAE;IACjBd,OAAO,EAAEM,UAAU,CAACE,OAAQ;IAC5BO,WAAW,EAAEF,cAAc,CAACL,OAAQ;IACpCQ,KAAK,EAAE;MAAEC,aAAa,EAAE;IAAM,CAAE;IAAAC,QAAA,GAEhC1B,IAAA,CAACT,IAAI;MAACiC,KAAK,EAAE,EAAG;MAAAE,QAAA,EACd1B,IAAA,CAACR,IAAI;QACHgC,KAAK,EAAE,CACL9B,YAAY,CAACiC,YAAY,EACzBpB,UAAU,IAAIU,eAAe,GAAGvB,YAAY,CAACkC,YAAY,GAAG,IAAI,CAChE;QAAAF,QAAA,EAEDpB,MAAM,CAACO;MAAU,CACd;IAAC,CACH,CAAC,EACPb,IAAA,CAACT,IAAI;MAACiC,KAAK,EAAE;QAACC,aAAa,EAAC,KAAK;QAACI,WAAW,EAAC;MAAC,CAAE;MAAAH,QAAA,EAC/C1B,IAAA,CAACF,qCAAqC;QACpCQ,MAAM,EAAEA,MAAO;QACfC,UAAU,EAAEA,UAAU,IAAIU;MAAgB,CAC3C;IAAC,CACE,CAAC;EAAA,CACS,CAAC;AAEvB,CACF,CAAC;AAED,eAAetB,OAAO,CAAC,IAAI,CAAC,CAACQ,eAAe,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}