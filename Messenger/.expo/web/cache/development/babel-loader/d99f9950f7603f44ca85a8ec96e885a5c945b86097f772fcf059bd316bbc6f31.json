{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { __awaiter, __rest } from \"tslib\";\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar RNTextInputMask = NativeModules.RNTextInputMask;\nif (!RNTextInputMask) {\n  throw new Error(`NativeModule: RNTextInputMask is null.\nTo fix this issue try these steps:\n  • Rebuild and restart the app.\n  • Run the packager with \\`--clearCache\\` flag.\n  • If happening on iOS, run \\`pod install\\` in the \\`ios\\` directory and then rebuild and re-run the app.\n  • If this happens while testing with Jest, make sure to follow instructions in https://github.com/react-native-text-input-mask/react-native-text-input-mask#testing\n`);\n}\nvar mask = RNTextInputMask.mask,\n  unmask = RNTextInputMask.unmask,\n  setMask = RNTextInputMask.setMask;\nexport { mask, unmask, setMask };\nvar TextInputMask = forwardRef(function (_a, ref) {\n  var primaryFormat = _a.mask,\n    defaultValue = _a.defaultValue,\n    value = _a.value,\n    multiline = _a.multiline,\n    _onChangeText = _a.onChangeText,\n    affineFormats = _a.affineFormats,\n    customNotations = _a.customNotations,\n    affinityCalculationStrategy = _a.affinityCalculationStrategy,\n    _a$autocomplete = _a.autocomplete,\n    autocomplete = _a$autocomplete === void 0 ? true : _a$autocomplete,\n    _a$autoskip = _a.autoskip,\n    autoskip = _a$autoskip === void 0 ? true : _a$autoskip,\n    rightToLeft = _a.rightToLeft,\n    rest = __rest(_a, [\"mask\", \"defaultValue\", \"value\", \"multiline\", \"onChangeText\", \"affineFormats\", \"customNotations\", \"affinityCalculationStrategy\", \"autocomplete\", \"autoskip\", \"rightToLeft\"]);\n  var input = useRef(null);\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    maskedValue = _useState2[0],\n    setMaskedValue = _useState2[1];\n  useEffectAsync(function () {\n    return __awaiter(void 0, void 0, void 0, function* () {\n      var initialValue = value !== null && value !== void 0 ? value : defaultValue;\n      if (!initialValue) return;\n      if (primaryFormat) {\n        var masked = yield mask(primaryFormat, initialValue, false);\n        setMaskedValue(masked);\n      } else {\n        setMaskedValue(initialValue);\n      }\n    });\n  }, []);\n  useEffectAsync(function () {\n    return __awaiter(void 0, void 0, void 0, function* () {\n      if (value === maskedValue) return;\n      if (primaryFormat && value) {\n        var masked = yield mask(primaryFormat, value, false);\n        setMaskedValue(masked);\n      } else {\n        setMaskedValue(value);\n      }\n    });\n  }, [value]);\n  useEffect(function () {\n    var nodeId = findNodeHandle(input.current);\n    if (primaryFormat && nodeId) {\n      setMask(nodeId, primaryFormat, {\n        affineFormats: affineFormats,\n        affinityCalculationStrategy: affinityCalculationStrategy,\n        customNotations: customNotations,\n        autocomplete: autocomplete,\n        autoskip: autoskip,\n        rightToLeft: rightToLeft\n      });\n    }\n  }, [primaryFormat]);\n  useImperativeHandle(ref, function () {\n    return {\n      focus: function focus() {\n        var _a;\n        (_a = input.current) === null || _a === void 0 ? void 0 : _a.focus();\n      },\n      blur: function blur() {\n        var _a;\n        (_a = input.current) === null || _a === void 0 ? void 0 : _a.blur();\n      }\n    };\n  });\n  return _jsx(TextInput, _objectSpread(_objectSpread({}, rest), {}, {\n    ref: input,\n    value: maskedValue,\n    multiline: primaryFormat && Platform.OS === 'ios' ? false : multiline,\n    onChangeText: function onChangeText(masked) {\n      return __awaiter(void 0, void 0, void 0, function* () {\n        setMaskedValue(masked);\n        if (primaryFormat) {\n          var unmasked = yield unmask(primaryFormat, masked, true);\n          _onChangeText === null || _onChangeText === void 0 ? void 0 : _onChangeText(masked, unmasked);\n        } else {\n          _onChangeText === null || _onChangeText === void 0 ? void 0 : _onChangeText(masked);\n        }\n      });\n    }\n  }));\n});\nexport var useEffectAsync = function useEffectAsync(operation, deps) {\n  useEffect(function () {\n    operation().then();\n  }, deps);\n};\nexport default TextInputMask;","map":{"version":3,"names":["__awaiter","__rest","React","forwardRef","useEffect","useImperativeHandle","useRef","useState","findNodeHandle","NativeModules","Platform","TextInput","jsx","_jsx","RNTextInputMask","Error","mask","unmask","setMask","TextInputMask","_a","ref","primaryFormat","defaultValue","value","multiline","onChangeText","affineFormats","customNotations","affinityCalculationStrategy","_a$autocomplete","autocomplete","_a$autoskip","autoskip","rightToLeft","rest","input","_useState","_useState2","_slicedToArray","maskedValue","setMaskedValue","useEffectAsync","initialValue","masked","nodeId","current","focus","blur","_objectSpread","OS","unmasked","operation","deps","then"],"sources":["D:/repo/Messenger/Messenger/node_modules/react-native-text-input-mask/dist/index.js"],"sourcesContent":["import { __awaiter, __rest } from \"tslib\";\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { findNodeHandle, NativeModules, Platform, TextInput } from 'react-native';\nconst { RNTextInputMask } = NativeModules;\nif (!RNTextInputMask) {\n    throw new Error(`NativeModule: RNTextInputMask is null.\nTo fix this issue try these steps:\n  • Rebuild and restart the app.\n  • Run the packager with \\`--clearCache\\` flag.\n  • If happening on iOS, run \\`pod install\\` in the \\`ios\\` directory and then rebuild and re-run the app.\n  • If this happens while testing with Jest, make sure to follow instructions in https://github.com/react-native-text-input-mask/react-native-text-input-mask#testing\n`);\n}\nexport const { mask, unmask, setMask } = RNTextInputMask;\nconst TextInputMask = forwardRef((_a, ref) => {\n    var { mask: primaryFormat, defaultValue, value, multiline, onChangeText, affineFormats, customNotations, affinityCalculationStrategy, autocomplete = true, autoskip = true, rightToLeft } = _a, rest = __rest(_a, [\"mask\", \"defaultValue\", \"value\", \"multiline\", \"onChangeText\", \"affineFormats\", \"customNotations\", \"affinityCalculationStrategy\", \"autocomplete\", \"autoskip\", \"rightToLeft\"]);\n    const input = useRef(null);\n    const [maskedValue, setMaskedValue] = useState();\n    useEffectAsync(() => __awaiter(void 0, void 0, void 0, function* () {\n        const initialValue = value !== null && value !== void 0 ? value : defaultValue;\n        if (!initialValue)\n            return;\n        if (primaryFormat) {\n            const masked = yield mask(primaryFormat, initialValue, false);\n            setMaskedValue(masked);\n        }\n        else {\n            setMaskedValue(initialValue);\n        }\n    }), []);\n    useEffectAsync(() => __awaiter(void 0, void 0, void 0, function* () {\n        if (value === maskedValue)\n            return;\n        if (primaryFormat && value) {\n            const masked = yield mask(primaryFormat, value, false);\n            setMaskedValue(masked);\n        }\n        else {\n            setMaskedValue(value);\n        }\n    }), [value]);\n    useEffect(() => {\n        const nodeId = findNodeHandle(input.current);\n        if (primaryFormat && nodeId) {\n            setMask(nodeId, primaryFormat, { affineFormats, affinityCalculationStrategy, customNotations, autocomplete, autoskip, rightToLeft });\n        }\n    }, [primaryFormat]);\n    useImperativeHandle(ref, () => ({\n        focus: () => {\n            var _a;\n            (_a = input.current) === null || _a === void 0 ? void 0 : _a.focus();\n        },\n        blur: () => {\n            var _a;\n            (_a = input.current) === null || _a === void 0 ? void 0 : _a.blur();\n        }\n    }));\n    return (<TextInput {...rest} ref={input} value={maskedValue} multiline={primaryFormat && Platform.OS === 'ios' ? false : multiline} onChangeText={(masked) => __awaiter(void 0, void 0, void 0, function* () {\n            setMaskedValue(masked);\n            if (primaryFormat) {\n                const unmasked = yield unmask(primaryFormat, masked, true);\n                onChangeText === null || onChangeText === void 0 ? void 0 : onChangeText(masked, unmasked);\n            }\n            else {\n                onChangeText === null || onChangeText === void 0 ? void 0 : onChangeText(masked);\n            }\n        })}/>);\n});\nexport const useEffectAsync = (operation, deps) => {\n    useEffect(() => {\n        operation().then();\n    }, deps);\n};\nexport default TextInputMask;\n//# sourceMappingURL=index.js.map"],"mappings":";;;;AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,OAAOC,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,mBAAmB,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,cAAA;AAAA,OAAAC,aAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,SAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAE5F,IAAQC,eAAe,GAAKL,aAAa,CAAjCK,eAAe;AACvB,IAAI,CAACA,eAAe,EAAE;EAClB,MAAM,IAAIC,KAAK,CAAE;AACrB;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC;AACF;AACO,IAAQC,IAAI,GAAsBF,eAAe,CAAzCE,IAAI;EAAEC,MAAM,GAAcH,eAAe,CAAnCG,MAAM;EAAEC,OAAO,GAAKJ,eAAe,CAA3BI,OAAO;AAAqB,SAAAF,IAAA,EAAAC,MAAA,EAAAC,OAAA;AACzD,IAAMC,aAAa,GAAGhB,UAAU,CAAC,UAACiB,EAAE,EAAEC,GAAG,EAAK;EAC1C,IAAYC,aAAa,GAAmKF,EAAE,CAAxLJ,IAAI;IAAiBO,YAAY,GAAqJH,EAAE,CAAnKG,YAAY;IAAEC,KAAK,GAA8IJ,EAAE,CAArJI,KAAK;IAAEC,SAAS,GAAmIL,EAAE,CAA9IK,SAAS;IAAEC,aAAY,GAAqHN,EAAE,CAAnIM,YAAY;IAAEC,aAAa,GAAsGP,EAAE,CAArHO,aAAa;IAAEC,eAAe,GAAqFR,EAAE,CAAtGQ,eAAe;IAAEC,2BAA2B,GAAwDT,EAAE,CAArFS,2BAA2B;IAAAC,eAAA,GAAwDV,EAAE,CAAxDW,YAAY;IAAZA,YAAY,GAAAD,eAAA,cAAG,IAAI,GAAAA,eAAA;IAAAE,WAAA,GAAmCZ,EAAE,CAAnCa,QAAQ;IAARA,QAAQ,GAAAD,WAAA,cAAG,IAAI,GAAAA,WAAA;IAAEE,WAAW,GAAKd,EAAE,CAAlBc,WAAW;IAASC,IAAI,GAAGlC,MAAM,CAACmB,EAAE,EAAE,CAAC,MAAM,EAAE,cAAc,EAAE,OAAO,EAAE,WAAW,EAAE,cAAc,EAAE,eAAe,EAAE,iBAAiB,EAAE,6BAA6B,EAAE,cAAc,EAAE,UAAU,EAAE,aAAa,CAAC,CAAC;EAC/X,IAAMgB,KAAK,GAAG9B,MAAM,CAAC,IAAI,CAAC;EAC1B,IAAA+B,SAAA,GAAsC9B,QAAQ,CAAC,CAAC;IAAA+B,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzCG,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAClCI,cAAc,CAAC;IAAA,OAAM1C,SAAS,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChE,IAAM2C,YAAY,GAAGnB,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK,CAAC,GAAGA,KAAK,GAAGD,YAAY;MAC9E,IAAI,CAACoB,YAAY,EACb;MACJ,IAAIrB,aAAa,EAAE;QACf,IAAMsB,MAAM,GAAG,MAAM5B,IAAI,CAACM,aAAa,EAAEqB,YAAY,EAAE,KAAK,CAAC;QAC7DF,cAAc,CAACG,MAAM,CAAC;MAC1B,CAAC,MACI;QACDH,cAAc,CAACE,YAAY,CAAC;MAChC;IACJ,CAAC,CAAC;EAAA,GAAE,EAAE,CAAC;EACPD,cAAc,CAAC;IAAA,OAAM1C,SAAS,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAChE,IAAIwB,KAAK,KAAKgB,WAAW,EACrB;MACJ,IAAIlB,aAAa,IAAIE,KAAK,EAAE;QACxB,IAAMoB,MAAM,GAAG,MAAM5B,IAAI,CAACM,aAAa,EAAEE,KAAK,EAAE,KAAK,CAAC;QACtDiB,cAAc,CAACG,MAAM,CAAC;MAC1B,CAAC,MACI;QACDH,cAAc,CAACjB,KAAK,CAAC;MACzB;IACJ,CAAC,CAAC;EAAA,GAAE,CAACA,KAAK,CAAC,CAAC;EACZpB,SAAS,CAAC,YAAM;IACZ,IAAMyC,MAAM,GAAGrC,cAAc,CAAC4B,KAAK,CAACU,OAAO,CAAC;IAC5C,IAAIxB,aAAa,IAAIuB,MAAM,EAAE;MACzB3B,OAAO,CAAC2B,MAAM,EAAEvB,aAAa,EAAE;QAAEK,aAAa,EAAbA,aAAa;QAAEE,2BAA2B,EAA3BA,2BAA2B;QAAED,eAAe,EAAfA,eAAe;QAAEG,YAAY,EAAZA,YAAY;QAAEE,QAAQ,EAARA,QAAQ;QAAEC,WAAW,EAAXA;MAAY,CAAC,CAAC;IACxI;EACJ,CAAC,EAAE,CAACZ,aAAa,CAAC,CAAC;EACnBjB,mBAAmB,CAACgB,GAAG,EAAE;IAAA,OAAO;MAC5B0B,KAAK,EAAE,SAAAA,MAAA,EAAM;QACT,IAAI3B,EAAE;QACN,CAACA,EAAE,GAAGgB,KAAK,CAACU,OAAO,MAAM,IAAI,IAAI1B,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC2B,KAAK,CAAC,CAAC;MACxE,CAAC;MACDC,IAAI,EAAE,SAAAA,KAAA,EAAM;QACR,IAAI5B,EAAE;QACN,CAACA,EAAE,GAAGgB,KAAK,CAACU,OAAO,MAAM,IAAI,IAAI1B,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC4B,IAAI,CAAC,CAAC;MACvE;IACJ,CAAC;EAAA,CAAC,CAAC;EACH,OAAQnC,IAAA,CAACF,SAAS,EAAAsC,aAAA,CAAAA,aAAA,KAAKd,IAAI;IAAEd,GAAG,EAAEe,KAAM;IAACZ,KAAK,EAAEgB,WAAY;IAACf,SAAS,EAAEH,aAAa,IAAIZ,QAAQ,CAACwC,EAAE,KAAK,KAAK,GAAG,KAAK,GAAGzB,SAAU;IAACC,YAAY,EAAE,SAAAA,aAACkB,MAAM;MAAA,OAAK5C,SAAS,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;QACrMyC,cAAc,CAACG,MAAM,CAAC;QACtB,IAAItB,aAAa,EAAE;UACf,IAAM6B,QAAQ,GAAG,MAAMlC,MAAM,CAACK,aAAa,EAAEsB,MAAM,EAAE,IAAI,CAAC;UAC1DlB,aAAY,KAAK,IAAI,IAAIA,aAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,aAAY,CAACkB,MAAM,EAAEO,QAAQ,CAAC;QAC9F,CAAC,MACI;UACDzB,aAAY,KAAK,IAAI,IAAIA,aAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,aAAY,CAACkB,MAAM,CAAC;QACpF;MACJ,CAAC,CAAC;IAAA;EAAC,EAAC,CAAC;AACb,CAAC,CAAC;AACF,OAAO,IAAMF,cAAc,GAAG,SAAjBA,cAAcA,CAAIU,SAAS,EAAEC,IAAI,EAAK;EAC/CjD,SAAS,CAAC,YAAM;IACZgD,SAAS,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC;EACtB,CAAC,EAAED,IAAI,CAAC;AACZ,CAAC;AACD,eAAelC,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}