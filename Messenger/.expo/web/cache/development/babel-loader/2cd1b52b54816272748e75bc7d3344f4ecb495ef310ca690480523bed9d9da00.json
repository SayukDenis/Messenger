{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport StylePassCentre from \"./StylePasswordCenter\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PasswordCenter = function PasswordCenter() {\n  var array = [{\n    Text: 'off lock code',\n    value: false\n  }, {\n    Text: 'Unlock to Face or Touch id',\n    value: false\n  }];\n  var _useState = useState(array),\n    _useState2 = _slicedToArray(_useState, 2),\n    switches = _useState2[0],\n    setSwitches = _useState2[1];\n  var toggleSwitch = function toggleSwitch(Text) {\n    setSwitches(function (prevSwitches) {\n      return prevSwitches.map(function (sw) {\n        return sw.Text === Text ? _objectSpread(_objectSpread({}, sw), {}, {\n          value: !sw.value\n        }) : sw;\n      });\n    });\n  };\n  return _jsxs(View, {\n    style: StylePassCentre.passConteiner,\n    children: [_jsxs(TouchableOpacity, {\n      style: StylePassCentre.funcOn,\n      children: [_jsx(Text, {\n        style: StylePassCentre.styleText,\n        children: \"Off lock code\"\n      }), _jsx(Switch, {\n        trackColor: {\n          false: '#767577',\n          true: '#81b0ff'\n        },\n        thumbColor: IsEnable ? '#f5dd4b' : '#f4f3f4',\n        ios_backgroundColor: \"#3e3e3e\",\n        onValueChange: toggleSwitch,\n        value: IsEnable\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: StylePassCentre.funcOn,\n      children: _jsx(Text, {\n        style: StylePassCentre.styleText,\n        children: \"Edit lock code\"\n      })\n    }), _jsxs(TouchableOpacity, {\n      style: StylePassCentre.funcOn,\n      children: [_jsx(Text, {\n        style: StylePassCentre.styleText,\n        children: \"Unlock to Face or Touch id\"\n      }), _jsx(Switch, {\n        trackColor: {\n          false: '#767577',\n          true: '#81b0ff'\n        },\n        thumbColor: IsEnable ? '#f5dd4b' : '#f4f3f4',\n        ios_backgroundColor: \"#3e3e3e\",\n        onValueChange: toggleSwitch,\n        value: IsEnable\n      })]\n    })]\n  });\n};\nexport default PasswordCenter;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","Switch","StylePassCentre","jsx","_jsx","jsxs","_jsxs","PasswordCenter","array","value","_useState","_useState2","_slicedToArray","switches","setSwitches","toggleSwitch","prevSwitches","map","sw","_objectSpread","style","passConteiner","children","funcOn","styleText","trackColor","false","true","thumbColor","IsEnable","ios_backgroundColor","onValueChange"],"sources":["D:/project/try1/Messenger/Messenger/Pages/Settings/ConfidentialityPage/Password/PasswordCenter/PasswondCenter.tsx"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport { View, Text, TouchableOpacity, Switch } from \"react-native\";\r\nimport StylePassCentre from \"./StylePasswordCenter\";\r\n\r\nconst PasswordCenter =()=>{\r\n\r\n    let array =[{Text:'off lock code',value:false},{Text:'Unlock to Face or Touch id',value:false}];\r\n    const [switches, setSwitches] = useState(array);\r\n    \r\n    const toggleSwitch = (Text) => {\r\n        setSwitches((prevSwitches) =>\r\n          prevSwitches.map((sw) =>\r\n            sw.Text === Text ? { ...sw, value: !sw.value } : sw\r\n          )\r\n        );\r\n      };\r\n\r\n    return<View style={StylePassCentre.passConteiner}>\r\n        <TouchableOpacity style={StylePassCentre.funcOn} ><Text style={StylePassCentre.styleText} >Off lock code</Text>         \r\n        <Switch\r\n        trackColor={{false: '#767577', true: '#81b0ff'}}\r\n        thumbColor={IsEnable ? '#f5dd4b' : '#f4f3f4'}\r\n        ios_backgroundColor=\"#3e3e3e\"\r\n        onValueChange={toggleSwitch}\r\n        value={IsEnable}\r\n      /></TouchableOpacity>\r\n        <TouchableOpacity style={StylePassCentre.funcOn} ><Text style={StylePassCentre.styleText} >Edit lock code</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={StylePassCentre.funcOn} ><Text style={StylePassCentre.styleText} >Unlock to Face or Touch id</Text>\r\n        <Switch\r\n        trackColor={{false: '#767577', true: '#81b0ff'}}\r\n        thumbColor={IsEnable ? '#f5dd4b' : '#f4f3f4'}\r\n        ios_backgroundColor=\"#3e3e3e\"\r\n        onValueChange={toggleSwitch}\r\n        value={IsEnable}\r\n      /></TouchableOpacity>\r\n    </View>\r\n}\r\n\r\nexport default PasswordCenter;"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,MAAA;AAEtC,OAAOC,eAAe;AAA8B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpD,IAAMC,cAAc,GAAE,SAAhBA,cAAcA,CAAA,EAAM;EAEtB,IAAIC,KAAK,GAAE,CAAC;IAACT,IAAI,EAAC,eAAe;IAACU,KAAK,EAAC;EAAK,CAAC,EAAC;IAACV,IAAI,EAAC,4BAA4B;IAACU,KAAK,EAAC;EAAK,CAAC,CAAC;EAC/F,IAAAC,SAAA,GAAgCb,QAAQ,CAACW,KAAK,CAAC;IAAAG,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAxCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAE5B,IAAMI,YAAY,GAAG,SAAfA,YAAYA,CAAIhB,IAAI,EAAK;IAC3Be,WAAW,CAAC,UAACE,YAAY;MAAA,OACvBA,YAAY,CAACC,GAAG,CAAC,UAACC,EAAE;QAAA,OAClBA,EAAE,CAACnB,IAAI,KAAKA,IAAI,GAAAoB,aAAA,CAAAA,aAAA,KAAQD,EAAE;UAAET,KAAK,EAAE,CAACS,EAAE,CAACT;QAAK,KAAKS,EAAE;MAAA,CACrD,CAAC;IAAA,CACH,CAAC;EACH,CAAC;EAEH,OAAMZ,KAAA,CAACR,IAAI;IAACsB,KAAK,EAAElB,eAAe,CAACmB,aAAc;IAAAC,QAAA,GAC7ChB,KAAA,CAACN,gBAAgB;MAACoB,KAAK,EAAElB,eAAe,CAACqB,MAAO;MAAAD,QAAA,GAAElB,IAAA,CAACL,IAAI;QAACqB,KAAK,EAAElB,eAAe,CAACsB,SAAU;QAAAF,QAAA,EAAE;MAAa,CAAM,CAAC,EAC/GlB,IAAA,CAACH,MAAM;QACPwB,UAAU,EAAE;UAACC,KAAK,EAAE,SAAS;UAAEC,IAAI,EAAE;QAAS,CAAE;QAChDC,UAAU,EAAEC,QAAQ,GAAG,SAAS,GAAG,SAAU;QAC7CC,mBAAmB,EAAC,SAAS;QAC7BC,aAAa,EAAEhB,YAAa;QAC5BN,KAAK,EAAEoB;MAAS,CACjB,CAAC;IAAA,CAAkB,CAAC,EACnBzB,IAAA,CAACJ,gBAAgB;MAACoB,KAAK,EAAElB,eAAe,CAACqB,MAAO;MAAAD,QAAA,EAAElB,IAAA,CAACL,IAAI;QAACqB,KAAK,EAAElB,eAAe,CAACsB,SAAU;QAAAF,QAAA,EAAE;MAAc,CAAM;IAAC,CAC9F,CAAC,EACnBhB,KAAA,CAACN,gBAAgB;MAACoB,KAAK,EAAElB,eAAe,CAACqB,MAAO;MAAAD,QAAA,GAAElB,IAAA,CAACL,IAAI;QAACqB,KAAK,EAAElB,eAAe,CAACsB,SAAU;QAAAF,QAAA,EAAE;MAA0B,CAAM,CAAC,EAC5HlB,IAAA,CAACH,MAAM;QACPwB,UAAU,EAAE;UAACC,KAAK,EAAE,SAAS;UAAEC,IAAI,EAAE;QAAS,CAAE;QAChDC,UAAU,EAAEC,QAAQ,GAAG,SAAS,GAAG,SAAU;QAC7CC,mBAAmB,EAAC,SAAS;QAC7BC,aAAa,EAAEhB,YAAa;QAC5BN,KAAK,EAAEoB;MAAS,CACjB,CAAC;IAAA,CAAkB,CAAC;EAAA,CACjB,CAAC;AACX,CAAC;AAED,eAAetB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}